{"version":3,"sources":["webpack:///static/js/33.50bd1450bf6222045b19.js","webpack:///./~/tinymce/plugins/contextmenu/plugin.js","webpack:///./~/tinymce/plugins/contextmenu/index.js"],"names":["webpackJsonp","Wlyy","module","exports","Plugin","Cell","initial","value","get","set","v","clone","global","tinymce","util","Tools","resolve","visibleState","isContextMenuVisible","Api","shouldNeverUseNative","editor","settings","contextmenu_never_use_native","getContextMenu","getParam","Settings","global$1","getUiContainer","DOM","select","ui_container","nu","x","y","transpose","pos","dx","dy","fromPageXY","e","pageX","pageY","fromClientXY","clientX","clientY","transposeUiContainer","element","getStyle","containerPos","getPos","scrollLeft","scrollTop","transposeContentAreaContainer","inline","iframePos","getContentAreaContainer","Coords","global$2","global$3","renderMenu","menu","contextmenu","items","each","split","name","item","menuItems","text","shortcut","push","i","length","splice","create","context","classes","uiContainer","renderTo","on","control","this","remove","show","moveTo","ContextMenu","isNativeOverrideKeyEvent","ctrlKey","setup","preventDefault","Bind","add","q/hF","__webpack_require__"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,ICHxB,YACmB,WACf,YA+JA,SAASC,MA7JT,GAAIC,GAAO,SAAUC,GACnB,GAAIC,GAAQD,EACRE,EAAM,WACR,MAAOD,GAQT,QACEC,IAAKA,EACLC,IARQ,SAAUC,GAClBH,EAAQG,GAQRC,MANU,WACV,MAAON,GAAKG,QASZI,EAASC,QAAQC,KAAKC,MAAMC,QAAQ,yBAEpCR,EAAM,SAAUS,GAIlB,OAASC,qBAHkB,WACzB,MAAOD,GAAaT,SAIpBW,GAAQX,IAAKA,GAEbY,EAAuB,SAAUC,GACnC,MAAOA,GAAOC,SAASC,8BAErBC,EAAiB,SAAUH,GAC7B,MAAOA,GAAOI,SAAS,cAAe,kEAEpCC,GACFN,qBAAsBA,EACtBI,eAAgBA,GAGdG,EAAWd,QAAQC,KAAKC,MAAMC,QAAQ,wBAEtCY,EAAiB,SAAUP,GAC7B,MAAOM,GAASE,IAAIC,OAAOT,EAAOC,SAASS,cAAc,IAGvDC,EAAK,SAAUC,EAAGC,GACpB,OACED,EAAGA,EACHC,EAAGA,IAGHC,EAAY,SAAUC,EAAKC,EAAIC,GACjC,MAAON,GAAGI,EAAIH,EAAII,EAAID,EAAIF,EAAII,IAE5BC,EAAa,SAAUC,GACzB,MAAOR,GAAGQ,EAAEC,MAAOD,EAAEE,QAEnBC,EAAe,SAAUH,GAC3B,MAAOR,GAAGQ,EAAEI,QAASJ,EAAEK,UAErBC,EAAuB,SAAUC,EAASX,GAC5C,GAAIW,GAAgE,WAArDpB,EAASE,IAAImB,SAASD,EAAS,YAAY,GAAoB,CAC5E,GAAIE,GAAetB,EAASE,IAAIqB,OAAOH,GACnCV,EAAKY,EAAahB,EAAIc,EAAQI,WAC9Bb,EAAKW,EAAaf,EAAIa,EAAQK,SAClC,OAAOjB,GAAUC,GAAMC,GAAKC,GAE5B,MAAOH,GAAUC,EAAK,EAAG,IAGzBiB,EAAgC,SAAUN,EAASX,GACrD,GAAIa,GAAetB,EAASE,IAAIqB,OAAOH,EACvC,OAAOZ,GAAUC,EAAKa,EAAahB,EAAGgB,EAAaf,IAEjDgB,EAAS,SAAU7B,EAAQmB,GAC7B,GAAInB,EAAOiC,OACT,MAAOR,GAAqBlB,EAAeP,GAASkB,EAAWC,GAE/D,IAAIe,GAAYF,EAA8BhC,EAAOmC,0BAA2Bb,EAAaH,GAC7F,OAAOM,GAAqBlB,EAAeP,GAASkC,IAGpDE,GAAWP,OAAQA,GAEnBQ,EAAW7C,QAAQC,KAAKC,MAAMC,QAAQ,sBAEtC2C,EAAW9C,QAAQC,KAAKC,MAAMC,QAAQ,sBAEtC4C,EAAa,SAAUvC,EAAQJ,GACjC,GAAI4C,GAAMC,EACNC,IACJD,GAAcpC,EAASF,eAAeH,GACtCsC,EAASK,KAAKF,EAAYG,MAAM,QAAS,SAAUC,GACjD,GAAIC,GAAO9C,EAAO+C,UAAUF,EACf,OAATA,IACFC,GAASE,KAAMH,IAEbC,IACFA,EAAKG,SAAW,GAChBP,EAAMQ,KAAKJ,KAGf,KAAK,GAAIK,GAAI,EAAGA,EAAIT,EAAMU,OAAQD,IACV,MAAlBT,EAAMS,GAAGH,OACD,IAANG,GAAWA,IAAMT,EAAMU,OAAS,GAClCV,EAAMW,OAAOF,EAAG,GAoBtB,OAhBAX,GAAOH,EAASiB,OAAO,QACrBZ,MAAOA,EACPa,QAAS,cACTC,QAAS,gBAEXhB,EAAKiB,YAAclD,EAAeP,GAClCwC,EAAKkB,SAASnD,EAAeP,IAC7BwC,EAAKmB,GAAG,OAAQ,SAAUxC,GACpBA,EAAEyC,UAAYC,MAChBjE,EAAaR,KAAI,KAGrBY,EAAO2D,GAAG,SAAU,WAClBnB,EAAKsB,SACLtB,EAAO,OAEFA,GAELuB,EAAO,SAAU/D,EAAQe,EAAKnB,EAAc4C,GAC3B,OAAfA,EAAKrD,MACPqD,EAAKpD,IAAImD,EAAWvC,EAAQJ,IAE5B4C,EAAKrD,MAAM4E,OAEbvB,EAAKrD,MAAM6E,OAAOjD,EAAIH,EAAGG,EAAIF,GAC7BjB,EAAaR,KAAI,IAEf6E,GAAgBF,KAAMA,GAEtBG,EAA2B,SAAUlE,EAAQmB,GAC/C,MAAOA,GAAEgD,UAAY9D,EAASN,qBAAqBC,IAEjDoE,EAAQ,SAAUpE,EAAQJ,EAAc4C,GAC1CxC,EAAO2D,GAAG,cAAe,SAAUxC,GAC7B+C,EAAyBlE,EAAQmB,KAGrCA,EAAEkD,iBACFJ,EAAYF,KAAK/D,EAAQoC,EAAOP,OAAO7B,EAAQmB,GAAIvB,EAAc4C,OAGjE8B,GAASF,MAAOA,EAEpB7E,GAAOgF,IAAI,cAAe,SAAUvE,GAClC,GAAIwC,GAAOxD,EAAK,MAAOY,EAAeZ,GAAK,EAE3C,OADAsF,GAAKF,MAAMpE,EAAQJ,EAAc4C,GAC1B1C,EAAIX,IAAIS,YDkBf4E,OACA,SAAU3F,EAAQC,EAAS2F,GE5KjC,EAAQ","file":"static/js/33.50bd1450bf6222045b19.js","sourcesContent":["webpackJsonp([33],{\n\n/***/ \"Wlyy\":\n/***/ (function(module, exports) {\n\n(function () {\nvar contextmenu = (function () {\n    'use strict';\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      var clone = function () {\n        return Cell(get());\n      };\n      return {\n        get: get,\n        set: set,\n        clone: clone\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var get = function (visibleState) {\n      var isContextMenuVisible = function () {\n        return visibleState.get();\n      };\n      return { isContextMenuVisible: isContextMenuVisible };\n    };\n    var Api = { get: get };\n\n    var shouldNeverUseNative = function (editor) {\n      return editor.settings.contextmenu_never_use_native;\n    };\n    var getContextMenu = function (editor) {\n      return editor.getParam('contextmenu', 'link openlink image inserttable | cell row column deletetable');\n    };\n    var Settings = {\n      shouldNeverUseNative: shouldNeverUseNative,\n      getContextMenu: getContextMenu\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var getUiContainer = function (editor) {\n      return global$1.DOM.select(editor.settings.ui_container)[0];\n    };\n\n    var nu = function (x, y) {\n      return {\n        x: x,\n        y: y\n      };\n    };\n    var transpose = function (pos, dx, dy) {\n      return nu(pos.x + dx, pos.y + dy);\n    };\n    var fromPageXY = function (e) {\n      return nu(e.pageX, e.pageY);\n    };\n    var fromClientXY = function (e) {\n      return nu(e.clientX, e.clientY);\n    };\n    var transposeUiContainer = function (element, pos) {\n      if (element && global$1.DOM.getStyle(element, 'position', true) !== 'static') {\n        var containerPos = global$1.DOM.getPos(element);\n        var dx = containerPos.x - element.scrollLeft;\n        var dy = containerPos.y - element.scrollTop;\n        return transpose(pos, -dx, -dy);\n      } else {\n        return transpose(pos, 0, 0);\n      }\n    };\n    var transposeContentAreaContainer = function (element, pos) {\n      var containerPos = global$1.DOM.getPos(element);\n      return transpose(pos, containerPos.x, containerPos.y);\n    };\n    var getPos = function (editor, e) {\n      if (editor.inline) {\n        return transposeUiContainer(getUiContainer(editor), fromPageXY(e));\n      } else {\n        var iframePos = transposeContentAreaContainer(editor.getContentAreaContainer(), fromClientXY(e));\n        return transposeUiContainer(getUiContainer(editor), iframePos);\n      }\n    };\n    var Coords = { getPos: getPos };\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.ui.Factory');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var renderMenu = function (editor, visibleState) {\n      var menu, contextmenu;\n      var items = [];\n      contextmenu = Settings.getContextMenu(editor);\n      global$3.each(contextmenu.split(/[ ,]/), function (name) {\n        var item = editor.menuItems[name];\n        if (name === '|') {\n          item = { text: name };\n        }\n        if (item) {\n          item.shortcut = '';\n          items.push(item);\n        }\n      });\n      for (var i = 0; i < items.length; i++) {\n        if (items[i].text === '|') {\n          if (i === 0 || i === items.length - 1) {\n            items.splice(i, 1);\n          }\n        }\n      }\n      menu = global$2.create('menu', {\n        items: items,\n        context: 'contextmenu',\n        classes: 'contextmenu'\n      });\n      menu.uiContainer = getUiContainer(editor);\n      menu.renderTo(getUiContainer(editor));\n      menu.on('hide', function (e) {\n        if (e.control === this) {\n          visibleState.set(false);\n        }\n      });\n      editor.on('remove', function () {\n        menu.remove();\n        menu = null;\n      });\n      return menu;\n    };\n    var show = function (editor, pos, visibleState, menu) {\n      if (menu.get() === null) {\n        menu.set(renderMenu(editor, visibleState));\n      } else {\n        menu.get().show();\n      }\n      menu.get().moveTo(pos.x, pos.y);\n      visibleState.set(true);\n    };\n    var ContextMenu = { show: show };\n\n    var isNativeOverrideKeyEvent = function (editor, e) {\n      return e.ctrlKey && !Settings.shouldNeverUseNative(editor);\n    };\n    var setup = function (editor, visibleState, menu) {\n      editor.on('contextmenu', function (e) {\n        if (isNativeOverrideKeyEvent(editor, e)) {\n          return;\n        }\n        e.preventDefault();\n        ContextMenu.show(editor, Coords.getPos(editor, e), visibleState, menu);\n      });\n    };\n    var Bind = { setup: setup };\n\n    global.add('contextmenu', function (editor) {\n      var menu = Cell(null), visibleState = Cell(false);\n      Bind.setup(editor, visibleState, menu);\n      return Api.get(visibleState);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}());\n})();\n\n\n/***/ }),\n\n/***/ \"q/hF\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// Exports the \"contextmenu\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/contextmenu')\n//   ES2015:\n//     import 'tinymce/plugins/contextmenu'\n__webpack_require__(\"Wlyy\");\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/33.50bd1450bf6222045b19.js","(function () {\nvar contextmenu = (function () {\n    'use strict';\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      var clone = function () {\n        return Cell(get());\n      };\n      return {\n        get: get,\n        set: set,\n        clone: clone\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var get = function (visibleState) {\n      var isContextMenuVisible = function () {\n        return visibleState.get();\n      };\n      return { isContextMenuVisible: isContextMenuVisible };\n    };\n    var Api = { get: get };\n\n    var shouldNeverUseNative = function (editor) {\n      return editor.settings.contextmenu_never_use_native;\n    };\n    var getContextMenu = function (editor) {\n      return editor.getParam('contextmenu', 'link openlink image inserttable | cell row column deletetable');\n    };\n    var Settings = {\n      shouldNeverUseNative: shouldNeverUseNative,\n      getContextMenu: getContextMenu\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var getUiContainer = function (editor) {\n      return global$1.DOM.select(editor.settings.ui_container)[0];\n    };\n\n    var nu = function (x, y) {\n      return {\n        x: x,\n        y: y\n      };\n    };\n    var transpose = function (pos, dx, dy) {\n      return nu(pos.x + dx, pos.y + dy);\n    };\n    var fromPageXY = function (e) {\n      return nu(e.pageX, e.pageY);\n    };\n    var fromClientXY = function (e) {\n      return nu(e.clientX, e.clientY);\n    };\n    var transposeUiContainer = function (element, pos) {\n      if (element && global$1.DOM.getStyle(element, 'position', true) !== 'static') {\n        var containerPos = global$1.DOM.getPos(element);\n        var dx = containerPos.x - element.scrollLeft;\n        var dy = containerPos.y - element.scrollTop;\n        return transpose(pos, -dx, -dy);\n      } else {\n        return transpose(pos, 0, 0);\n      }\n    };\n    var transposeContentAreaContainer = function (element, pos) {\n      var containerPos = global$1.DOM.getPos(element);\n      return transpose(pos, containerPos.x, containerPos.y);\n    };\n    var getPos = function (editor, e) {\n      if (editor.inline) {\n        return transposeUiContainer(getUiContainer(editor), fromPageXY(e));\n      } else {\n        var iframePos = transposeContentAreaContainer(editor.getContentAreaContainer(), fromClientXY(e));\n        return transposeUiContainer(getUiContainer(editor), iframePos);\n      }\n    };\n    var Coords = { getPos: getPos };\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.ui.Factory');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var renderMenu = function (editor, visibleState) {\n      var menu, contextmenu;\n      var items = [];\n      contextmenu = Settings.getContextMenu(editor);\n      global$3.each(contextmenu.split(/[ ,]/), function (name) {\n        var item = editor.menuItems[name];\n        if (name === '|') {\n          item = { text: name };\n        }\n        if (item) {\n          item.shortcut = '';\n          items.push(item);\n        }\n      });\n      for (var i = 0; i < items.length; i++) {\n        if (items[i].text === '|') {\n          if (i === 0 || i === items.length - 1) {\n            items.splice(i, 1);\n          }\n        }\n      }\n      menu = global$2.create('menu', {\n        items: items,\n        context: 'contextmenu',\n        classes: 'contextmenu'\n      });\n      menu.uiContainer = getUiContainer(editor);\n      menu.renderTo(getUiContainer(editor));\n      menu.on('hide', function (e) {\n        if (e.control === this) {\n          visibleState.set(false);\n        }\n      });\n      editor.on('remove', function () {\n        menu.remove();\n        menu = null;\n      });\n      return menu;\n    };\n    var show = function (editor, pos, visibleState, menu) {\n      if (menu.get() === null) {\n        menu.set(renderMenu(editor, visibleState));\n      } else {\n        menu.get().show();\n      }\n      menu.get().moveTo(pos.x, pos.y);\n      visibleState.set(true);\n    };\n    var ContextMenu = { show: show };\n\n    var isNativeOverrideKeyEvent = function (editor, e) {\n      return e.ctrlKey && !Settings.shouldNeverUseNative(editor);\n    };\n    var setup = function (editor, visibleState, menu) {\n      editor.on('contextmenu', function (e) {\n        if (isNativeOverrideKeyEvent(editor, e)) {\n          return;\n        }\n        e.preventDefault();\n        ContextMenu.show(editor, Coords.getPos(editor, e), visibleState, menu);\n      });\n    };\n    var Bind = { setup: setup };\n\n    global.add('contextmenu', function (editor) {\n      var menu = Cell(null), visibleState = Cell(false);\n      Bind.setup(editor, visibleState, menu);\n      return Api.get(visibleState);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}());\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tinymce/plugins/contextmenu/plugin.js\n// module id = Wlyy\n// module chunks = 33","// Exports the \"contextmenu\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/contextmenu')\n//   ES2015:\n//     import 'tinymce/plugins/contextmenu'\nrequire('./plugin.js');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tinymce/plugins/contextmenu/index.js\n// module id = q/hF\n// module chunks = 33"],"sourceRoot":""}