{"version":3,"sources":["webpack:///static/js/8.72581677443679e133ec.js","webpack:///./~/tinymce/plugins/table/plugin.js","webpack:///./~/tinymce/plugins/table/index.js"],"names":["webpackJsonp","BzBW","module","exports","domGlobals","curry","fn","initialArgs","_i","arguments","length","restArgs","all","concat","apply","ClosestOrAncestor","is","ancestor","scope","a","isRoot","Option","some","isFunction","none","DomUniverse","clone$1","element","Element","fromDom","dom","cloneNode","document","ownerDocument","isBoundary","isElement","name","contains","TagBoundaries","isEmptyTag","comparePosition","other","compareDocumentPosition","copyAttributesTo","source","destination","as","clone","setAll","up","constant","selector","ancestor$1","closest","closest$1","predicate","parents","down","descendants$1","descendants","styles","get","get$1","getRaw","set","set$1","remove","remove$1","attrs","copyTo","insert","before","after","afterAll","after$1","append","appendAll","append$1","prepend","wrap","unwrap","remove$2","create","nu","fromTag","text","fromText","query","prevSibling","nextSibling","property","children","parent","isText","isComment","getText","get$2","setText","set$2","eq","is$1","Dimension","getOffset","h","isNumber","match","Error","isSupported","style","r","css","parseFloat","getOuter","aggregate","properties","foldl","acc","val","value","undefined","parseInt","isNaN","max","cumulativeInclusions","TableDirection","directionAt","auto","table","isRtl","ResizeDirection","rtl","ltr","delta","amount","positions","cols","edge","cell","styleFieldHasFocus","e","control","rootControl","find","getEl","isEqualNode","activeElement","onSubmitRowForm","editor","rows","oldData","evt","setAttrib","elm","setStyle","hasAdvancedRowTab","Helpers","syncAdvancedStyleFields","data","toJSON","undoManager","transact","global$1","each","rowElm","class","addSizeSuffix","height","type","parentNode","nodeName","toLowerCase","switchRowType","align","Styles$1","unApplyAlign","applyAlign","focus","styleTDTH","tagName","i","InDrag","previous","reset","update","mode","result","map","old","compare","onEvent","event","extract","d","events","trigger","move","Events","Event","registry","NoDrag","noop","Movement","noDragState","inDragState","dragState","on","off","isOn","MouseSelection","bridge","container","annotations","cursor","clearState","mousedown","clear","findCell","target","mouseover","start","finish","CellSelection","identify","cellSel","boxes","getOr","selectRange","selectContents","mouseup","_event","CellSelection$1","lazyResize","handlerStruct","MixedBag","handlers","SelectionAnnotation","byAttr","Ephemera","win","getWin","body","getBody$1","getIsRoot","syncSelection","sel","selection","getStart","end","getEnd","DomParent","sharedOne","TableLookup","fold","mouseHandlers","InputHandlers","mouse","keyHandlers","keyboard","hasShiftKey","raw","shiftKey","handleResponse","response","kill","ns","relative","Selection","rng","asLtrRange","setRng","keyup","wrappedEvent","wrapEvent","SelectionKeys","isNavigation","which","getRng","startContainer","endContainer","startOffset","endOffset","keydown","resize","hideBars","direction","Direction","showBars","isMouseEvent","hasOwnProperty","stop","stopPropagation","prevent","preventDefault","compose","x","y","isLeftMouse","button","isLeftButtonPressed","buttons","global$2","ie","mouseDown","hasInternalTarget","mouseOver","mouseUp","destroy","Plugin","resizeHandler","ResizeHandler","cellSelection","actions","TableActions","lazyWire","selections","Selections","clipboardRows","Cell","Commands","registerCommands","Clipboard","registerEvents","MenuItems","addMenuItems","Buttons","addButtons","addToolbars","serializer","addTempAttr","firstSelected","lastSelected","hasTabNavigation","TabContext","handle","getApi","Plugin$1","global","tinymce","util","Tools","resolve","fa","fb","args","identity","not","f","die","msg","never","always","NONE","o","isNone","call","thunk","id","n","me","s","isSome","getOrThunk","getOrDie","getOrNull","getOrUndefined","or","orThunk","bind","exists","forall","filter","equals","equals_","toArray","toString","Object","freeze","constant_a","self","v","elementEq","b","from","typeOf","t","Array","prototype","isPrototypeOf","constructor","String","isType","isString","isArray","isBoolean","nativeSlice","slice","nativeIndexOf","indexOf","nativePush","push","rawIndexOf","ts","xs","pred","len","eachr","foldr","findIndex","flatten","output","reverse","last","keys","each$1","obj","props","k","map$1","tupleMap","tuple","Immutable","fields","values","struct","sort","arr","reqMessage","required","join","unsuppMessage","unsupported","validateStrArr","label","array","invalidTypeMessage","incorrect","checkDupes","everything","sorted","optional","keys$1","req","key","opt","COMMENT","Node","ATTRIBUTE_NODE","CDATA_SECTION_NODE","COMMENT_NODE","DOCUMENT","DOCUMENT_NODE","ELEMENT","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","ELEMENT_NODE","TEXT","TEXT_NODE","Global","PROCESSING_INSTRUCTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","NOTATION_NODE","window","Function","path","parts","p","split","unsafe","actual","Global$1","nodeType","isType$1","rawSet","console","error","setAttribute","getAttribute","has","hasAttribute","removeAttribute","attributes","attr","checkRange","str","substr","contains$1","endsWith","suffix","trim","replace","getPropertyValue","cached","called","fromHtml","html","doc","div","createElement","innerHTML","hasChildNodes","childNodes","tag","node","createTextNode","fromPoint","docElm","elementFromPoint","inBody","getBody","internalSet","setProperty","internalRemove","removeProperty","setAll$1","getComputedStyle","getUnsafeProperty","copy","sourceDom","targetDom","cssText","documentPositionPreceding","DOCUMENT_POSITION_PRECEDING","documentPositionContainedBy","DOCUMENT_POSITION_CONTAINED_BY","firstMatch","regexes","test","find$1","agent","major","minor","group","Number","detect","versionRegexes","cleanedAgent","unknown","Version","isBrowser","current","unknown$1","nu$1","version","info","isEdge","isChrome","isIE","isOpera","isFirefox","isSafari","Browser","chrome","opera","firefox","safari","isOS","unknown$2","nu$2","isWindows","isiOS","isAndroid","isOSX","isLinux","isSolaris","isFreeBSD","OperatingSystem","windows","ios","android","linux","osx","solaris","freebsd","DeviceType","os","browser","userAgent","isiPad","isiPhone","isAndroid3","isAndroid4","isTablet","isTouch","isPhone","iOSwebview","isWebView","detect$1","candidates","candidate","search","detectBrowser","browsers","detectOs","oses","UaString","normalVersionRegex","checkContains","uastring","PlatformInfo","detect$2","deviceType","PlatformDetection","detect$3","navigator","PlatformDetection$1","ELEMENT$1","DOCUMENT$1","elem","matches","msMatchesSelector","webkitMatchesSelector","mozMatchesSelector","bypassSelector","childElementCount","base","querySelectorAll","one","querySelector","e1","e2","regularContains","d1","d2","ieContains","contains$2","owner","defaultView","ret","rawParent","previousSibling","child","index","cs","firstChild","marker","insertBefore","appendChild","wrapper","before$1","elements","empty","textContent","rogue","removeChild","children$1","grid","address","detail","detailnew","extended","rowdata","elementnew","rowdatanew","rowcells","rowdetails","bounds","ancestors","ancestors$1","children$2","el","child$1","descendant","descend","child_1","res","child$2","descendant$1","firstLayer","filterFirstLayer","LayerSelector","lookup","tags","isRootOrUpperTable","cells","notCell","neighbours","neighbourCells","neighbourRows","firstCell","row","grid$1","rowProp","colProp","rowsCount","fromTable","parent$1","parentSection","parentName","rowspan","colspan","fromPastedRows","example","section","DetailsList","column","getAt","warehouse","access","findItem","item","comparator","filtered","filterItems","generate","list","maxRows","maxColumns","details","currentRow","j","cr","cc","newpos","Math","justCells","w","Warehouse","statsStruct","findSelectedStats","house","isSelected","totalColumns","columns","totalRows","minRow","minCol","maxRow","maxCol","startRow","endRow","startCol","endCol","makeCell","seenSelected","rowIndex","td","fillInGaps","stats","needCell","clean","emptyRows","selectedSelector","unselectedCells","CopySelected","api","getOption","nodeValue","isTextNodeWithCursorPosition","elementsWithCursorPosition","isCursorPosition","first","last$1","descendantRtl","original","isDeep","shallow","deep","shallowAs","copy$1","cloneChildren","createCell","replica","pasteReplace","newRow","cloneFormats","oldCell","newCell","formats","firstText","formatSelector","clonedFormat","cellOperations","mutate","formatsToClone","prev","docu","lastNode","gap","paste","TableFill","fromHtml$1","inSelection","leftEdge","rightEdge","topEdge","bottomEdge","finishCol","finishRow","isWithin","isRectangular","isRect","detailIsWithin","CellBounds","getBounds","detailA","detailB","min","getAnyBox","startCell","finishCell","startCoords","finishCoords","sc","fc","getBox","CellGroup","moveBy","intercepts","inside","parentCell","innerCell","isContainedBy","c1","c2","CellFinder","moveBy$1","deltaRow","deltaColumn","getWarehouse","intercepts$1","nestedIntercepts","firstTable","lastTable","optStartCell","optLastCell","lastCell","getBox$1","TablePositions","leftRight","brokenPath","bisect","universe","ind","breakToRight","second","breakToLeft","prior","breakPath","isTop","breaker","next","splits","fallback","breakage","extra","left","right","nextChild","all$1","look","oneAll","unsafeOne","head","tail","commonElement","eq$1","unsafeSubset","common","ps1","ps2","finder","ps","topDown","startIndex","endIndex","sIndex","eIndex","ancestors$2","prune","pruned1","pruned2","shared","firstpath","secondpath","subset","ancs","SubsetFn","subset$1","ancestors$3","breakToLeft$1","breakToRight$1","breakPath$1","Parent","sharedOne$1","_universe","subset$2","ancestors$4","breakToLeft$2","breakToRight$2","breakPath$2","u","c","Identified","lookupTable","rootTable","startTable","finishTable","ancestorCells","lca","lcaTable","finishAncestorCells","startAncestorCells","retrieve","sels","getLast","lastSelectedSelector","box","getEdges","firstSelectedSelector","tbl","expandTo","identified","shiftSelection","retrieve$1","retrieveBox","edges","firstAncestor","lastAncestor","fA","lA","TableSelection","selected","attributeSelector","generate$1","cases","constructors","adt","acase","count","argLength","branches","branchKeys","reqKey","log","params","Adt","type$1","multiple","single","cata","subject","onNone","onMultiple","onSingle","SelectionTypes","unmergable","hasSpan","mergable","_env","CellOperations","noMenu","forMenu","notCell$1","paste$1","pasteRows","clipboard","generators","TableTargets","extractSelected","serializeElements","serialize","getTextContent","innerText","multiCellContext","content","format","getParent","domCell","getDoc","targets","pasteCells","api$1","getBoundingClientRect","offsetHeight","get$3","api$2","offsetWidth","get$4","getOuter$1","platform","needManualCalc","toNumber","px","num","getProp","getCalculatedHeight","paddingTop","paddingBottom","borderTop","borderBottom","boxSizing","borders","getWidth","getHeight","RuntimeSize","genericSizeRegex","percentageBasedSizeRegex","pixelBasedSizeRegex","setPixelWidth","setPercentageWidth","setHeight","getHeightValue","convert","number","getter","setter","newSize","total","floor","normalizePixelSize","getTotalHeight","get$5","getSpan","getRawWidth","width","normalizePercentageWidth","cellWidth","tableSize","pixelWidth","choosePercentageSize","percentMatch","exec","intWidth","getPercentageWidth","normalizePixelWidth","choosePixelSize","pixelMatch","floatWidth","getPixelWidth","getHeight$1","getGenericWidth","unit","setGenericWidth","Sizes","halve","main","newWidth","CellMutations","top","translate","Position","boxPosition","firstDefinedOrZero","absolute","documentElement","scrollTop","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","viewport","offsetLeft","offsetTop","rowInfo","colInfo","rtlEdge","ltrEdge","getLeftEdge","getRightEdge","getTop","getTopEdge","getBottomEdge","findPositions","getInnerEdge","getOuterEdge","lines","cellOption","lastLine","negate","step","optElements","BarPositions","getGridSize","input","TableGridSize","__assign","assign","this","cat","findMap","setIfNot","ignore","render","newRows","newCells","renderSection","gridSection","sectionName","tb","isNew","tr","removeSection","renderOrRemoveSection","headSection","bodySection","footSection","copy$2","clonedCell","Redraw","read","add","remove$3","supports","classList","get$6","add$1","clazz","remove$4","add$2","cleanClass","remove$5","has$1","repeat","repititions","range","deduce","rest","aa","extras","abs","rowsArr","col","decide","getBlock","isSingle","getFallback","inBlock","rows$1","Blocks","namespace","dashNamespace","Styles","blocker","position","row$1","Bar","resizeBar","resizeRowBar","resizeColBar","wire","drawBar","origin","cpOption","cp","bar","refreshCol","colPositions","tableHeight","colBar","refreshRow","rowPositions","tableWidth","rowBar","refreshGrid","hdirection","vdirection","refresh","each$2","bars","hide","show","isRowBar","isColBar","Bars","addCell","gridRow","setCells","mutateCell","mapCells","getCell","getCellElement","cellLength","GridRow","getColumn","getRow","findDiff","comp","subgrid","restOfRow","endColIndex","restOfColumn","endRowIndex","TableGrid","toDetails","seen","ri","ci","updateSeen","toGrid","rowCells","Transitions","fromWarehouse","deriveRows","rendered","findRow","toDetailList","findInWarehouse","run","operation","adjustment","postAction","genWrappers","model","out","newElements","onCell","onPaste","onPasteRows","lc","onMergable","_warehouse","onUnmergable","onCells","mapError","_","onValue","toOption","isValue","isError","message","onError","fromOption","err","Result","measure","startAddress","gridA","gridB","rowRemainder","colRemainder","colRequired","rowRequired","rowDelta","colDelta","measureWidth","colLengthA","colLengthB","fill","generator","rowFill","_row","colFill","tailor","fillCols","Fitment","merge","substitution","unmerge","isToReplace","uniqueCells","currentCell","splitRows","rowPrevCells","replacement","sub","MergingOperations","isSpanning","matching","mergeTables","mergeHeight","mergeWidth","merge$1","fittedGrid","fittedNewGrid","secondDelta","fittedOldGrid","TableMerge","insertRowAt","between","ex","insertColumnAt","withinSpan","splitCellIntoColumns","exampleRow","exampleCol","isTargetCell","splitCellIntoRows","deleteColumnsAt","deleteRowsAt","ModificationOperations","replaceIn","isTarget","notStartRow","colIndex","notStartColumn","replaceColumn","replaceRow","targetRow","TransformOperations","only","middle","ColumnContext","neighbours$1","determine","context","zero","onOnly","singleColumnWidth","onChange","newNext","minCellWidth","newThis","diffx","onLeft","onMiddle","_prev","onRight","size","Deltas","getSpan$1","hasColspan","hasRowspan","getInt","CellUtils","minWidth","minHeight","getRaw$1","getRawW","getRawH","getWidthFrom","backups","deduced","getDeduced","getRawWidths","getPercentageWidths","getPixelWidths","getHeightFrom","getPixelHeights","getRawHeights","ColumnSizes","measures","recalculateWidth","widths","recalculateHeight","heights","matchRowHeight","Recalculations","percentageSize","getCellDelta","_delta","setTableWidth","_newWidths","ratio","change","getWidths","setElementWidth","pixelSize","newWidths","chooseSize","fallbackWidth","getTableSize","TableSize","getWarehouse$1","sumUp","getTableWarehouse","adjustWidth","deltas","dx","newSizes","adjustHeight","newHeights","dy","newCellSizes","newRowSizes","adjustWidthTo","Adjustments","initial","handleUnsupported","baseWith","validate","invalidKeys","handleExact","exactly","verifyGenerators","elementToData","modification","toData","nuFrom","recent","getOrInit","transform","makeNew","replaceOrInit","merging","combine","Generators","blockList","isList","isBlock","isFormatting","isHeading","isContainer","isFrame","isInline","Structure","universe$1","isBlock$1","isList$1","isFormatting$1","isHeading$1","isContainer$1","isEmptyTag$1","isFrame$1","isInline$1","DomStructure","merge$2","isBr","advancedBr","isListItem","siblingIsBlock","rightSibling","markCell","rightSiblingIsBlock","contents","TableContent","outcome","elementFromGrid","findIn","bundle","uniqueRows","currentDetail","uniqueColumns","insertRowBefore","targetIndex","newGrid","insertRowsBefore","newG","insertRowAfter","insertRowsAfter","insertColumnBefore","insertColumnsBefore","insertColumnAfter","insertColumnsAfter","makeRowHeader","makeColumnHeader","unmakeRowHeader","unmakeColumnHeader","splitCellIntoColumns$1","splitCellIntoRows$1","eraseColumns","_comparator","_genWrappers","eraseRows","mergeCells","unmergeCells","pasteDetails","wh","nuGrid","gridifyRows","pasteRowsBefore","mergedGrid","pasteRowsAfter","TableOperations","getPixelWidth$1","getPixelHeight","removePxSuffix","removeDataStyle","dataStyleCells","getDirection","ltr$1","rtl$1","defaultTableToolbar","defaultStyles","defaultAttributes","border","getDefaultAttributes","getParam","getDefaultStyles","hasTableResizeBars","hasAdvancedCellTab","hasAdvancedTableTab","hasAppearanceOptions","hasTableGrid","shouldStyleWithCss","getCellClassList","getRowClassList","getTableClassList","getColorPickerCallback","isPixelsForced","getCloneElements","cloneElements","hasObjectResizing","objectResizing","getToolbar","toolbar","fireNewRow","fire","fireNewCell","fireObjectResizeStart","fireObjectResized","isTableBody","lastRowGuard","lastColumnGuard","execute","guard","createRng","setStart","setEnd","deleteRow","deleteColumn","copyRows","selectedCells","slicedGrid","slicedDetails","CopyRows","getTDTHOverallStyle","firstChildStyle","select","elms","currentStyle","getStyle","formatter","applyVAlign","unApplyVAlign","buildListItems","inputList","itemCallback","startItems","appendItems","menuItem","title","menu","updateAdvancedFields","updateStyleField","parseStyle","borderStyle","borderColor","backgroundColor","serializeStyle","extractAdvancedStyles","getAttrib","createStyleForm","createColorPickAction","colorPickerCallback","defaults","onchange","items","padding","formItemDefaults","layout","alignH","onselect","onaction","updateStyles","dataset","mceStyle","extractDataFromElement","valign","matchNode","extend","onSubmitCellForm","cellElm","rename","open","classListCtrl","textStyle","getCssText","block","classes","generalCellForm","labelGapCalc","maxWidth","windowManager","bodyType","onsubmit","CellDialog","extractDataFromElement$1","toType","tableElm","oldParentElm","parentElm","insertAfter","open$1","generalRowForm","RowDialog","DefaultRenderOptions","percentages","makeTable","tableBody","tableRow","tableHeaderCell","tableCell","render$1","rowHeaders","columnHeaders","renderOpts","tbody","trs","get$7","getOuter$2","placeCaretInCell","collapse","selectFirstCellInTable","fireEvents","isPercentage","insert$1","options","insertContent","InsertTable","extractDataFromElement$2","cellspacing","cellpadding","caption","applyDataToElement","setAttribs","onSubmitTableForm","captionElm","addVisual","open$2","isProps","colsCtrl","rowsCtrl","generalTableForm","TableDialog","each$3","eraseTable","getSelectionStartCell","getSelectionStartCaption","cellOrCaption","getSelectionStartFromSelector","getTableFromCell","getSize","resizeChange","oldSize","actOnSelection","beforeSize","copyRowSelection","pasteOnSelection","clonedRows","mceTableSplitCells","mceTableMergeCells","mceTableInsertRowBefore","mceTableInsertRowAfter","mceTableInsertColBefore","mceTableInsertColAfter","mceTableDeleteCol","mceTableDeleteRow","mceTableCutRow","mceTableCopyRow","mceTablePasteRowBefore","mceTablePasteRowAfter","mceTableDelete","func","addCommand","mceInsertTable","mceTableProps","mceTableRowProps","mceTableCellProps","ui","view","detached","editable","body$1","ResizeWire","handler","unbind","create$1","typeDefs","mkEvent","rawEvent","clientX","clientY","binder","useCapture","wrapped","addEventListener","bind$1","removeEventListener","filter$1","bind$2","shallow$1","merge$3","merger","objects","curObject","styles$1","Styles$2","Blocker","settings","layerClass","DragMode","DragSink","DragApi","extract$1","mutation","sink","dragApi","mdown","forceDrop","mup","drop","mmove","mout","delayDrop","MouseDrag","last$2","rate","timer","cancel","clearTimeout","throttle","setTimeout","setup","active","movement","throttledDrop","go","mousemove","runIfActive","Dragging","transform$1","Dragger","Mutation","drag","BarMutation","delegate","xDelta","yDelta","isContentEditableTrue","findClosestContentEditable","resizeBarDragging","BarManager","resizing","hoverTable","getResizer","_dataRow","_dataCol","currentCol","getDelta","dir","startAdjust","findClosestEditableTable","create$2","manager","beforeResize","afterResize","startDrag","TableResize","createContainer","margin","get$8","inline","remove$6","TableWire","startW","startRawW","selectionRng","isTable","sz","rawWire","rawTable","targetElm","percentW","targetPercentW","newCellSizes_1","newCellSize","adt$1","none$1","CellLocation","detect$4","CellNavigation","create$3","SimRange","adt$2","cata$1","onBefore","onOn","onAfter","situ","before$2","after$2","Situ","adt$3","domRange","exact","exactFromRange","simRange","soffset","foffset","getStart$1","startSitu","finishSitu","range$1","selectNodeContents","createRange","selectNodeContentsUsing","setStartBefore","setStartAfter","setFinish","setEndBefore","setEndAfter","relativeToNative","exactToNative","toRect","rect","bottom","getFirstRect","rects","getClientRects","adt$4","fromRange","getRanges","doDiagnose","ranges","collapsed","rev","diagnose","searchForPoint","rectForOffset","maxX","curDeltaX","inRect","locateOffset","textnode","rangeForOffset","offset","locate","selectNode","searchInChildren","nodes","locateNode","locate$1","boundedX","boundedY","getCollapseDirection","createCollapsedNode","collapseDirection","locateInElement","cursorRange","locateInEmpty","caretPositionFromPoint","pos","offsetNode","caretRangeFromPoint","searchTextNodes","searchFromPoint","availableSearch","fromPoint$1","beforeSpecial","name$1","preprocessRelative","preprocessExact","preprocess","makeRange","after$3","same","doSetNativeRange","getSelection","removeAllRanges","addRange","doSetRange","setLegacyRtlRange","setRangeFromRelative","setBaseAndExtent","setExact","setRelative","toNative","getDomRange","readRange","rangeCount","firstRng","getRangeAt","lastRng","doGetExact","anchor","anchorNode","focusNode","anchorOffset","focusOffset","setToElement","getExact","get$9","getFirstRect$1","getAtPoint","global$3","forward","backward","getCellFirstCursorPosition","getNewRowCursorPosition","rootElements","handle$1","keyCode","TAB","body_1","isRoot_1","create$4","Response","create$5","Situs","convertToRange","makeSitus","Util","sync","detect$5","updateSelection","newSels","KeySelection","traverse","backtrack","_direction","transition","sidestep","advance","sibling","successors","go$1","rules","succ","rule","Walkers","hone","left$1","right$1","isLeaf","before$3","seekLeft","after$4","seekRight","universe$2","before$4","after$5","seekLeft$1","seekRight$1","ancestor$2","point","adt$5","success","failedUp","failedDown","isOverlapping","beforeBounds","getRect","afterBounds","isRow","verify","beforeOffset","afterOffset","failure","afterCell","beforeCell","_sharedRow","cata$2","onSuccess","onFailedUp","onFailedDown","BeforeAfter","inParent","indexInParent","gatherer","cand","gather","handleBr","findBr","handleParent","br","adjacent","tryBr","tgt","process","analysis","BrTags","nu$3","moveDown","caret","moveUp","moveBottomTo","moveTopTo","getTop$1","getBottom","Carets","getPartialBox","getRangedRect","toCaret","getElemBox","getBoxAt","getEntireBox","Rectangles","adt$6","retry","isOutside","inOutsideBlock","adjustDown","guessBox","lowerCaret","adjustUp","higherCaret","upMovement","adjuster","downMovement","isAtTable","adjustForTable","numRetries","adjustTil","situsFromPoint","guess","newCaret","ieTryDown","ieTryUp","checkScroll","adjusted","getInnerHeight","moved","scrollBy","Retries","tryUp","tryDown","getJumpSize","platform$1","findSpot","brNeighbour","fromSitus","scan","tryCursor","situs","tryAgain","tryAt","otherRetry","ieRetry","handle$2","spot","TableKeys","detection","inSameTable","simulate","navigate","precheck","firstUpCheck","lastOffset","lastDownCheck","VerticalMovement","KeyDirection","isKey","keycode","isUp","isDown","isBackward","isForward","toRaw","sr","Rect","get$a","_DOC","by","WindowBridge","exactAdt","clearSelection","setSelection","setRelativeSelection","innerHeight","getScrollY","rc","clearToNavigate","realEvent","attempts","remove$7","addClass","removeClasses","byClass","ephemera","addSelectionClass","removeSelectionClasses","removeSelectionAttributes","addSelectionAttribute","each$4","cmd","command","execCommand","menuItems","addButton","onclick","icon","addContextToolbar","tableCtrls","cellCtrls","mergeCtrls","unmergeCtrls","noTargetDisable","ctrl","disabled","ctrlEnable","pushTable","pushCell","pushMerge","pushUnmerge","setDisabledCtrls","mergeCtrl","unmergeCtrl","cellOpt","cellDom","selectGrid","tx","ty","focusCell","getElementsByTagName","rel","toggleClass","insertTable","ariaHideMenu","aria","hideAll","stopImmediatePropagation","onshow","onhide","removeClass","onPostRender","lastX","lastY","onmousemove","toUpperCase","tableProperties","deleteTable","separator","addMenuItem","getClipboardRows","setClipboardRows","sugarRows","Q/P+","__webpack_require__"],"mappings":"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","file":"static/js/8.72581677443679e133ec.js","sourcesContent":["webpackJsonp([8],{\n\n/***/ \"BzBW\":\n/***/ (function(module, exports) {\n\n(function () {\nvar table = (function (domGlobals) {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var noop = function () {\n    };\n    var compose = function (fa, fb) {\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        return fa(fb.apply(null, args));\n      };\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var identity = function (x) {\n      return x;\n    };\n    function curry(fn) {\n      var initialArgs = [];\n      for (var _i = 1; _i < arguments.length; _i++) {\n        initialArgs[_i - 1] = arguments[_i];\n      }\n      return function () {\n        var restArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          restArgs[_i] = arguments[_i];\n        }\n        var all = initialArgs.concat(restArgs);\n        return fn.apply(null, all);\n      };\n    }\n    var not = function (f) {\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        return !f.apply(null, args);\n      };\n    };\n    var die = function (msg) {\n      return function () {\n        throw new Error(msg);\n      };\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var none = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var eq = function (o) {\n        return o.isNone();\n      };\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = function (n) {\n        return n;\n      };\n      var me = {\n        fold: function (n, s) {\n          return n();\n        },\n        is: never,\n        isSome: never,\n        isNone: always,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: constant(null),\n        getOrUndefined: constant(undefined),\n        or: id,\n        orThunk: call,\n        map: none,\n        each: noop,\n        bind: none,\n        exists: never,\n        forall: always,\n        filter: none,\n        equals: eq,\n        equals_: eq,\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      if (Object.freeze) {\n        Object.freeze(me);\n      }\n      return me;\n    }();\n    var some = function (a) {\n      var constant_a = constant(a);\n      var self = function () {\n        return me;\n      };\n      var bind = function (f) {\n        return f(a);\n      };\n      var me = {\n        fold: function (n, s) {\n          return s(a);\n        },\n        is: function (v) {\n          return a === v;\n        },\n        isSome: always,\n        isNone: never,\n        getOr: constant_a,\n        getOrThunk: constant_a,\n        getOrDie: constant_a,\n        getOrNull: constant_a,\n        getOrUndefined: constant_a,\n        or: self,\n        orThunk: self,\n        map: function (f) {\n          return some(f(a));\n        },\n        each: function (f) {\n          f(a);\n        },\n        bind: bind,\n        exists: bind,\n        forall: bind,\n        filter: function (f) {\n          return f(a) ? me : NONE;\n        },\n        toArray: function () {\n          return [a];\n        },\n        toString: function () {\n          return 'some(' + a + ')';\n        },\n        equals: function (o) {\n          return o.is(a);\n        },\n        equals_: function (o, elementEq) {\n          return o.fold(never, function (b) {\n            return elementEq(a, b);\n          });\n        }\n      };\n      return me;\n    };\n    var from = function (value) {\n      return value === null || value === undefined ? NONE : some(value);\n    };\n    var Option = {\n      some: some,\n      none: none,\n      from: from\n    };\n\n    var typeOf = function (x) {\n      if (x === null) {\n        return 'null';\n      }\n      var t = typeof x;\n      if (t === 'object' && (Array.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'Array')) {\n        return 'array';\n      }\n      if (t === 'object' && (String.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'String')) {\n        return 'string';\n      }\n      return t;\n    };\n    var isType = function (type) {\n      return function (value) {\n        return typeOf(value) === type;\n      };\n    };\n    var isString = isType('string');\n    var isArray = isType('array');\n    var isBoolean = isType('boolean');\n    var isFunction = isType('function');\n    var isNumber = isType('number');\n\n    var nativeSlice = Array.prototype.slice;\n    var nativeIndexOf = Array.prototype.indexOf;\n    var nativePush = Array.prototype.push;\n    var rawIndexOf = function (ts, t) {\n      return nativeIndexOf.call(ts, t);\n    };\n    var contains = function (xs, x) {\n      return rawIndexOf(xs, x) > -1;\n    };\n    var exists = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    var map = function (xs, f) {\n      var len = xs.length;\n      var r = new Array(len);\n      for (var i = 0; i < len; i++) {\n        var x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    var each = function (xs, f) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        f(x, i);\n      }\n    };\n    var eachr = function (xs, f) {\n      for (var i = xs.length - 1; i >= 0; i--) {\n        var x = xs[i];\n        f(x, i);\n      }\n    };\n    var filter = function (xs, pred) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          r.push(x);\n        }\n      }\n      return r;\n    };\n    var foldr = function (xs, f, acc) {\n      eachr(xs, function (x) {\n        acc = f(acc, x);\n      });\n      return acc;\n    };\n    var foldl = function (xs, f, acc) {\n      each(xs, function (x) {\n        acc = f(acc, x);\n      });\n      return acc;\n    };\n    var find = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          return Option.some(x);\n        }\n      }\n      return Option.none();\n    };\n    var findIndex = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          return Option.some(i);\n        }\n      }\n      return Option.none();\n    };\n    var flatten = function (xs) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; ++i) {\n        if (!isArray(xs[i])) {\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        }\n        nativePush.apply(r, xs[i]);\n      }\n      return r;\n    };\n    var bind = function (xs, f) {\n      var output = map(xs, f);\n      return flatten(output);\n    };\n    var forall = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; ++i) {\n        var x = xs[i];\n        if (pred(x, i) !== true) {\n          return false;\n        }\n      }\n      return true;\n    };\n    var reverse = function (xs) {\n      var r = nativeSlice.call(xs, 0);\n      r.reverse();\n      return r;\n    };\n    var last = function (xs) {\n      return xs.length === 0 ? Option.none() : Option.some(xs[xs.length - 1]);\n    };\n    var from$1 = isFunction(Array.from) ? Array.from : function (x) {\n      return nativeSlice.call(x);\n    };\n\n    var keys = Object.keys;\n    var each$1 = function (obj, f) {\n      var props = keys(obj);\n      for (var k = 0, len = props.length; k < len; k++) {\n        var i = props[k];\n        var x = obj[i];\n        f(x, i);\n      }\n    };\n    var map$1 = function (obj, f) {\n      return tupleMap(obj, function (x, i) {\n        return {\n          k: i,\n          v: f(x, i)\n        };\n      });\n    };\n    var tupleMap = function (obj, f) {\n      var r = {};\n      each$1(obj, function (x, i) {\n        var tuple = f(x, i);\n        r[tuple.k] = tuple.v;\n      });\n      return r;\n    };\n\n    var Immutable = function () {\n      var fields = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        fields[_i] = arguments[_i];\n      }\n      return function () {\n        var values = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          values[_i] = arguments[_i];\n        }\n        if (fields.length !== values.length) {\n          throw new Error('Wrong number of arguments to struct. Expected \"[' + fields.length + ']\", got ' + values.length + ' arguments');\n        }\n        var struct = {};\n        each(fields, function (name, i) {\n          struct[name] = constant(values[i]);\n        });\n        return struct;\n      };\n    };\n\n    var sort = function (arr) {\n      return arr.slice(0).sort();\n    };\n    var reqMessage = function (required, keys) {\n      throw new Error('All required keys (' + sort(required).join(', ') + ') were not specified. Specified keys were: ' + sort(keys).join(', ') + '.');\n    };\n    var unsuppMessage = function (unsupported) {\n      throw new Error('Unsupported keys for object: ' + sort(unsupported).join(', '));\n    };\n    var validateStrArr = function (label, array) {\n      if (!isArray(array)) {\n        throw new Error('The ' + label + ' fields must be an array. Was: ' + array + '.');\n      }\n      each(array, function (a) {\n        if (!isString(a)) {\n          throw new Error('The value ' + a + ' in the ' + label + ' fields was not a string.');\n        }\n      });\n    };\n    var invalidTypeMessage = function (incorrect, type) {\n      throw new Error('All values need to be of type: ' + type + '. Keys (' + sort(incorrect).join(', ') + ') were not.');\n    };\n    var checkDupes = function (everything) {\n      var sorted = sort(everything);\n      var dupe = find(sorted, function (s, i) {\n        return i < sorted.length - 1 && s === sorted[i + 1];\n      });\n      dupe.each(function (d) {\n        throw new Error('The field: ' + d + ' occurs more than once in the combined fields: [' + sorted.join(', ') + '].');\n      });\n    };\n\n    var MixedBag = function (required, optional) {\n      var everything = required.concat(optional);\n      if (everything.length === 0) {\n        throw new Error('You must specify at least one required or optional field.');\n      }\n      validateStrArr('required', required);\n      validateStrArr('optional', optional);\n      checkDupes(everything);\n      return function (obj) {\n        var keys$1 = keys(obj);\n        var allReqd = forall(required, function (req) {\n          return contains(keys$1, req);\n        });\n        if (!allReqd) {\n          reqMessage(required, keys$1);\n        }\n        var unsupported = filter(keys$1, function (key) {\n          return !contains(everything, key);\n        });\n        if (unsupported.length > 0) {\n          unsuppMessage(unsupported);\n        }\n        var r = {};\n        each(required, function (req) {\n          r[req] = constant(obj[req]);\n        });\n        each(optional, function (opt) {\n          r[opt] = constant(Object.prototype.hasOwnProperty.call(obj, opt) ? Option.some(obj[opt]) : Option.none());\n        });\n        return r;\n      };\n    };\n\n    var ATTRIBUTE = domGlobals.Node.ATTRIBUTE_NODE;\n    var CDATA_SECTION = domGlobals.Node.CDATA_SECTION_NODE;\n    var COMMENT = domGlobals.Node.COMMENT_NODE;\n    var DOCUMENT = domGlobals.Node.DOCUMENT_NODE;\n    var DOCUMENT_TYPE = domGlobals.Node.DOCUMENT_TYPE_NODE;\n    var DOCUMENT_FRAGMENT = domGlobals.Node.DOCUMENT_FRAGMENT_NODE;\n    var ELEMENT = domGlobals.Node.ELEMENT_NODE;\n    var TEXT = domGlobals.Node.TEXT_NODE;\n    var PROCESSING_INSTRUCTION = domGlobals.Node.PROCESSING_INSTRUCTION_NODE;\n    var ENTITY_REFERENCE = domGlobals.Node.ENTITY_REFERENCE_NODE;\n    var ENTITY = domGlobals.Node.ENTITY_NODE;\n    var NOTATION = domGlobals.Node.NOTATION_NODE;\n\n    var Global = typeof domGlobals.window !== 'undefined' ? domGlobals.window : Function('return this;')();\n\n    var path = function (parts, scope) {\n      var o = scope !== undefined && scope !== null ? scope : Global;\n      for (var i = 0; i < parts.length && o !== undefined && o !== null; ++i) {\n        o = o[parts[i]];\n      }\n      return o;\n    };\n    var resolve = function (p, scope) {\n      var parts = p.split('.');\n      return path(parts, scope);\n    };\n\n    var unsafe = function (name, scope) {\n      return resolve(name, scope);\n    };\n    var getOrDie = function (name, scope) {\n      var actual = unsafe(name, scope);\n      if (actual === undefined || actual === null) {\n        throw new Error(name + ' not available on this browser');\n      }\n      return actual;\n    };\n    var Global$1 = { getOrDie: getOrDie };\n\n    var name = function (element) {\n      var r = element.dom().nodeName;\n      return r.toLowerCase();\n    };\n    var type = function (element) {\n      return element.dom().nodeType;\n    };\n    var isType$1 = function (t) {\n      return function (element) {\n        return type(element) === t;\n      };\n    };\n    var isComment = function (element) {\n      return type(element) === COMMENT || name(element) === '#comment';\n    };\n    var isElement = isType$1(ELEMENT);\n    var isText = isType$1(TEXT);\n\n    var rawSet = function (dom, key, value) {\n      if (isString(value) || isBoolean(value) || isNumber(value)) {\n        dom.setAttribute(key, value + '');\n      } else {\n        domGlobals.console.error('Invalid call to Attr.set. Key ', key, ':: Value ', value, ':: Element ', dom);\n        throw new Error('Attribute value was not simple');\n      }\n    };\n    var set = function (element, key, value) {\n      rawSet(element.dom(), key, value);\n    };\n    var setAll = function (element, attrs) {\n      var dom = element.dom();\n      each$1(attrs, function (v, k) {\n        rawSet(dom, k, v);\n      });\n    };\n    var get = function (element, key) {\n      var v = element.dom().getAttribute(key);\n      return v === null ? undefined : v;\n    };\n    var has = function (element, key) {\n      var dom = element.dom();\n      return dom && dom.hasAttribute ? dom.hasAttribute(key) : false;\n    };\n    var remove = function (element, key) {\n      element.dom().removeAttribute(key);\n    };\n    var clone = function (element) {\n      return foldl(element.dom().attributes, function (acc, attr) {\n        acc[attr.name] = attr.value;\n        return acc;\n      }, {});\n    };\n\n    var checkRange = function (str, substr, start) {\n      if (substr === '') {\n        return true;\n      }\n      if (str.length < substr.length) {\n        return false;\n      }\n      var x = str.substr(start, start + substr.length);\n      return x === substr;\n    };\n    var contains$1 = function (str, substr) {\n      return str.indexOf(substr) !== -1;\n    };\n    var endsWith = function (str, suffix) {\n      return checkRange(str, suffix, str.length - suffix.length);\n    };\n    var trim = function (str) {\n      return str.replace(/^\\s+|\\s+$/g, '');\n    };\n\n    var isSupported = function (dom) {\n      return dom.style !== undefined && isFunction(dom.style.getPropertyValue);\n    };\n\n    var cached = function (f) {\n      var called = false;\n      var r;\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        if (!called) {\n          called = true;\n          r = f.apply(null, args);\n        }\n        return r;\n      };\n    };\n\n    var fromHtml = function (html, scope) {\n      var doc = scope || domGlobals.document;\n      var div = doc.createElement('div');\n      div.innerHTML = html;\n      if (!div.hasChildNodes() || div.childNodes.length > 1) {\n        domGlobals.console.error('HTML does not have a single root node', html);\n        throw new Error('HTML must have a single root node');\n      }\n      return fromDom(div.childNodes[0]);\n    };\n    var fromTag = function (tag, scope) {\n      var doc = scope || domGlobals.document;\n      var node = doc.createElement(tag);\n      return fromDom(node);\n    };\n    var fromText = function (text, scope) {\n      var doc = scope || domGlobals.document;\n      var node = doc.createTextNode(text);\n      return fromDom(node);\n    };\n    var fromDom = function (node) {\n      if (node === null || node === undefined) {\n        throw new Error('Node cannot be null or undefined');\n      }\n      return { dom: constant(node) };\n    };\n    var fromPoint = function (docElm, x, y) {\n      var doc = docElm.dom();\n      return Option.from(doc.elementFromPoint(x, y)).map(fromDom);\n    };\n    var Element = {\n      fromHtml: fromHtml,\n      fromTag: fromTag,\n      fromText: fromText,\n      fromDom: fromDom,\n      fromPoint: fromPoint\n    };\n\n    var inBody = function (element) {\n      var dom = isText(element) ? element.dom().parentNode : element.dom();\n      return dom !== undefined && dom !== null && dom.ownerDocument.body.contains(dom);\n    };\n    var body = cached(function () {\n      return getBody(Element.fromDom(domGlobals.document));\n    });\n    var getBody = function (doc) {\n      var b = doc.dom().body;\n      if (b === null || b === undefined) {\n        throw new Error('Body is not available yet');\n      }\n      return Element.fromDom(b);\n    };\n\n    var internalSet = function (dom, property, value) {\n      if (!isString(value)) {\n        domGlobals.console.error('Invalid call to CSS.set. Property ', property, ':: Value ', value, ':: Element ', dom);\n        throw new Error('CSS value must be a string: ' + value);\n      }\n      if (isSupported(dom)) {\n        dom.style.setProperty(property, value);\n      }\n    };\n    var internalRemove = function (dom, property) {\n      if (isSupported(dom)) {\n        dom.style.removeProperty(property);\n      }\n    };\n    var set$1 = function (element, property, value) {\n      var dom = element.dom();\n      internalSet(dom, property, value);\n    };\n    var setAll$1 = function (element, css) {\n      var dom = element.dom();\n      each$1(css, function (v, k) {\n        internalSet(dom, k, v);\n      });\n    };\n    var get$1 = function (element, property) {\n      var dom = element.dom();\n      var styles = domGlobals.window.getComputedStyle(dom);\n      var r = styles.getPropertyValue(property);\n      var v = r === '' && !inBody(element) ? getUnsafeProperty(dom, property) : r;\n      return v === null ? undefined : v;\n    };\n    var getUnsafeProperty = function (dom, property) {\n      return isSupported(dom) ? dom.style.getPropertyValue(property) : '';\n    };\n    var getRaw = function (element, property) {\n      var dom = element.dom();\n      var raw = getUnsafeProperty(dom, property);\n      return Option.from(raw).filter(function (r) {\n        return r.length > 0;\n      });\n    };\n    var remove$1 = function (element, property) {\n      var dom = element.dom();\n      internalRemove(dom, property);\n      if (has(element, 'style') && trim(get(element, 'style')) === '') {\n        remove(element, 'style');\n      }\n    };\n    var copy = function (source, target) {\n      var sourceDom = source.dom();\n      var targetDom = target.dom();\n      if (isSupported(sourceDom) && isSupported(targetDom)) {\n        targetDom.style.cssText = sourceDom.style.cssText;\n      }\n    };\n\n    var node = function () {\n      var f = Global$1.getOrDie('Node');\n      return f;\n    };\n    var compareDocumentPosition = function (a, b, match) {\n      return (a.compareDocumentPosition(b) & match) !== 0;\n    };\n    var documentPositionPreceding = function (a, b) {\n      return compareDocumentPosition(a, b, node().DOCUMENT_POSITION_PRECEDING);\n    };\n    var documentPositionContainedBy = function (a, b) {\n      return compareDocumentPosition(a, b, node().DOCUMENT_POSITION_CONTAINED_BY);\n    };\n    var Node = {\n      documentPositionPreceding: documentPositionPreceding,\n      documentPositionContainedBy: documentPositionContainedBy\n    };\n\n    var firstMatch = function (regexes, s) {\n      for (var i = 0; i < regexes.length; i++) {\n        var x = regexes[i];\n        if (x.test(s)) {\n          return x;\n        }\n      }\n      return undefined;\n    };\n    var find$1 = function (regexes, agent) {\n      var r = firstMatch(regexes, agent);\n      if (!r) {\n        return {\n          major: 0,\n          minor: 0\n        };\n      }\n      var group = function (i) {\n        return Number(agent.replace(r, '$' + i));\n      };\n      return nu(group(1), group(2));\n    };\n    var detect = function (versionRegexes, agent) {\n      var cleanedAgent = String(agent).toLowerCase();\n      if (versionRegexes.length === 0) {\n        return unknown();\n      }\n      return find$1(versionRegexes, cleanedAgent);\n    };\n    var unknown = function () {\n      return nu(0, 0);\n    };\n    var nu = function (major, minor) {\n      return {\n        major: major,\n        minor: minor\n      };\n    };\n    var Version = {\n      nu: nu,\n      detect: detect,\n      unknown: unknown\n    };\n\n    var edge = 'Edge';\n    var chrome = 'Chrome';\n    var ie = 'IE';\n    var opera = 'Opera';\n    var firefox = 'Firefox';\n    var safari = 'Safari';\n    var isBrowser = function (name, current) {\n      return function () {\n        return current === name;\n      };\n    };\n    var unknown$1 = function () {\n      return nu$1({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    var nu$1 = function (info) {\n      var current = info.current;\n      var version = info.version;\n      return {\n        current: current,\n        version: version,\n        isEdge: isBrowser(edge, current),\n        isChrome: isBrowser(chrome, current),\n        isIE: isBrowser(ie, current),\n        isOpera: isBrowser(opera, current),\n        isFirefox: isBrowser(firefox, current),\n        isSafari: isBrowser(safari, current)\n      };\n    };\n    var Browser = {\n      unknown: unknown$1,\n      nu: nu$1,\n      edge: constant(edge),\n      chrome: constant(chrome),\n      ie: constant(ie),\n      opera: constant(opera),\n      firefox: constant(firefox),\n      safari: constant(safari)\n    };\n\n    var windows = 'Windows';\n    var ios = 'iOS';\n    var android = 'Android';\n    var linux = 'Linux';\n    var osx = 'OSX';\n    var solaris = 'Solaris';\n    var freebsd = 'FreeBSD';\n    var isOS = function (name, current) {\n      return function () {\n        return current === name;\n      };\n    };\n    var unknown$2 = function () {\n      return nu$2({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    var nu$2 = function (info) {\n      var current = info.current;\n      var version = info.version;\n      return {\n        current: current,\n        version: version,\n        isWindows: isOS(windows, current),\n        isiOS: isOS(ios, current),\n        isAndroid: isOS(android, current),\n        isOSX: isOS(osx, current),\n        isLinux: isOS(linux, current),\n        isSolaris: isOS(solaris, current),\n        isFreeBSD: isOS(freebsd, current)\n      };\n    };\n    var OperatingSystem = {\n      unknown: unknown$2,\n      nu: nu$2,\n      windows: constant(windows),\n      ios: constant(ios),\n      android: constant(android),\n      linux: constant(linux),\n      osx: constant(osx),\n      solaris: constant(solaris),\n      freebsd: constant(freebsd)\n    };\n\n    var DeviceType = function (os, browser, userAgent) {\n      var isiPad = os.isiOS() && /ipad/i.test(userAgent) === true;\n      var isiPhone = os.isiOS() && !isiPad;\n      var isAndroid3 = os.isAndroid() && os.version.major === 3;\n      var isAndroid4 = os.isAndroid() && os.version.major === 4;\n      var isTablet = isiPad || isAndroid3 || isAndroid4 && /mobile/i.test(userAgent) === true;\n      var isTouch = os.isiOS() || os.isAndroid();\n      var isPhone = isTouch && !isTablet;\n      var iOSwebview = browser.isSafari() && os.isiOS() && /safari/i.test(userAgent) === false;\n      return {\n        isiPad: constant(isiPad),\n        isiPhone: constant(isiPhone),\n        isTablet: constant(isTablet),\n        isPhone: constant(isPhone),\n        isTouch: constant(isTouch),\n        isAndroid: os.isAndroid,\n        isiOS: os.isiOS,\n        isWebView: constant(iOSwebview)\n      };\n    };\n\n    var detect$1 = function (candidates, userAgent) {\n      var agent = String(userAgent).toLowerCase();\n      return find(candidates, function (candidate) {\n        return candidate.search(agent);\n      });\n    };\n    var detectBrowser = function (browsers, userAgent) {\n      return detect$1(browsers, userAgent).map(function (browser) {\n        var version = Version.detect(browser.versionRegexes, userAgent);\n        return {\n          current: browser.name,\n          version: version\n        };\n      });\n    };\n    var detectOs = function (oses, userAgent) {\n      return detect$1(oses, userAgent).map(function (os) {\n        var version = Version.detect(os.versionRegexes, userAgent);\n        return {\n          current: os.name,\n          version: version\n        };\n      });\n    };\n    var UaString = {\n      detectBrowser: detectBrowser,\n      detectOs: detectOs\n    };\n\n    var normalVersionRegex = /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/;\n    var checkContains = function (target) {\n      return function (uastring) {\n        return contains$1(uastring, target);\n      };\n    };\n    var browsers = [\n      {\n        name: 'Edge',\n        versionRegexes: [/.*?edge\\/ ?([0-9]+)\\.([0-9]+)$/],\n        search: function (uastring) {\n          return contains$1(uastring, 'edge/') && contains$1(uastring, 'chrome') && contains$1(uastring, 'safari') && contains$1(uastring, 'applewebkit');\n        }\n      },\n      {\n        name: 'Chrome',\n        versionRegexes: [\n          /.*?chrome\\/([0-9]+)\\.([0-9]+).*/,\n          normalVersionRegex\n        ],\n        search: function (uastring) {\n          return contains$1(uastring, 'chrome') && !contains$1(uastring, 'chromeframe');\n        }\n      },\n      {\n        name: 'IE',\n        versionRegexes: [\n          /.*?msie\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*?rv:([0-9]+)\\.([0-9]+).*/\n        ],\n        search: function (uastring) {\n          return contains$1(uastring, 'msie') || contains$1(uastring, 'trident');\n        }\n      },\n      {\n        name: 'Opera',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?opera\\/([0-9]+)\\.([0-9]+).*/\n        ],\n        search: checkContains('opera')\n      },\n      {\n        name: 'Firefox',\n        versionRegexes: [/.*?firefox\\/\\ ?([0-9]+)\\.([0-9]+).*/],\n        search: checkContains('firefox')\n      },\n      {\n        name: 'Safari',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?cpu os ([0-9]+)_([0-9]+).*/\n        ],\n        search: function (uastring) {\n          return (contains$1(uastring, 'safari') || contains$1(uastring, 'mobile/')) && contains$1(uastring, 'applewebkit');\n        }\n      }\n    ];\n    var oses = [\n      {\n        name: 'Windows',\n        search: checkContains('win'),\n        versionRegexes: [/.*?windows\\ nt\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'iOS',\n        search: function (uastring) {\n          return contains$1(uastring, 'iphone') || contains$1(uastring, 'ipad');\n        },\n        versionRegexes: [\n          /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*cpu os ([0-9]+)_([0-9]+).*/,\n          /.*cpu iphone os ([0-9]+)_([0-9]+).*/\n        ]\n      },\n      {\n        name: 'Android',\n        search: checkContains('android'),\n        versionRegexes: [/.*?android\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'OSX',\n        search: checkContains('os x'),\n        versionRegexes: [/.*?os\\ x\\ ?([0-9]+)_([0-9]+).*/]\n      },\n      {\n        name: 'Linux',\n        search: checkContains('linux'),\n        versionRegexes: []\n      },\n      {\n        name: 'Solaris',\n        search: checkContains('sunos'),\n        versionRegexes: []\n      },\n      {\n        name: 'FreeBSD',\n        search: checkContains('freebsd'),\n        versionRegexes: []\n      }\n    ];\n    var PlatformInfo = {\n      browsers: constant(browsers),\n      oses: constant(oses)\n    };\n\n    var detect$2 = function (userAgent) {\n      var browsers = PlatformInfo.browsers();\n      var oses = PlatformInfo.oses();\n      var browser = UaString.detectBrowser(browsers, userAgent).fold(Browser.unknown, Browser.nu);\n      var os = UaString.detectOs(oses, userAgent).fold(OperatingSystem.unknown, OperatingSystem.nu);\n      var deviceType = DeviceType(os, browser, userAgent);\n      return {\n        browser: browser,\n        os: os,\n        deviceType: deviceType\n      };\n    };\n    var PlatformDetection = { detect: detect$2 };\n\n    var detect$3 = cached(function () {\n      var userAgent = domGlobals.navigator.userAgent;\n      return PlatformDetection.detect(userAgent);\n    });\n    var PlatformDetection$1 = { detect: detect$3 };\n\n    var ELEMENT$1 = ELEMENT;\n    var DOCUMENT$1 = DOCUMENT;\n    var is = function (element, selector) {\n      var dom = element.dom();\n      if (dom.nodeType !== ELEMENT$1) {\n        return false;\n      } else {\n        var elem = dom;\n        if (elem.matches !== undefined) {\n          return elem.matches(selector);\n        } else if (elem.msMatchesSelector !== undefined) {\n          return elem.msMatchesSelector(selector);\n        } else if (elem.webkitMatchesSelector !== undefined) {\n          return elem.webkitMatchesSelector(selector);\n        } else if (elem.mozMatchesSelector !== undefined) {\n          return elem.mozMatchesSelector(selector);\n        } else {\n          throw new Error('Browser lacks native selectors');\n        }\n      }\n    };\n    var bypassSelector = function (dom) {\n      return dom.nodeType !== ELEMENT$1 && dom.nodeType !== DOCUMENT$1 || dom.childElementCount === 0;\n    };\n    var all = function (selector, scope) {\n      var base = scope === undefined ? domGlobals.document : scope.dom();\n      return bypassSelector(base) ? [] : map(base.querySelectorAll(selector), Element.fromDom);\n    };\n    var one = function (selector, scope) {\n      var base = scope === undefined ? domGlobals.document : scope.dom();\n      return bypassSelector(base) ? Option.none() : Option.from(base.querySelector(selector)).map(Element.fromDom);\n    };\n\n    var eq = function (e1, e2) {\n      return e1.dom() === e2.dom();\n    };\n    var regularContains = function (e1, e2) {\n      var d1 = e1.dom();\n      var d2 = e2.dom();\n      return d1 === d2 ? false : d1.contains(d2);\n    };\n    var ieContains = function (e1, e2) {\n      return Node.documentPositionContainedBy(e1.dom(), e2.dom());\n    };\n    var browser = PlatformDetection$1.detect().browser;\n    var contains$2 = browser.isIE() ? ieContains : regularContains;\n    var is$1 = is;\n\n    var owner = function (element) {\n      return Element.fromDom(element.dom().ownerDocument);\n    };\n    var defaultView = function (element) {\n      return Element.fromDom(element.dom().ownerDocument.defaultView);\n    };\n    var parent = function (element) {\n      return Option.from(element.dom().parentNode).map(Element.fromDom);\n    };\n    var parents = function (element, isRoot) {\n      var stop = isFunction(isRoot) ? isRoot : never;\n      var dom = element.dom();\n      var ret = [];\n      while (dom.parentNode !== null && dom.parentNode !== undefined) {\n        var rawParent = dom.parentNode;\n        var p = Element.fromDom(rawParent);\n        ret.push(p);\n        if (stop(p) === true) {\n          break;\n        } else {\n          dom = rawParent;\n        }\n      }\n      return ret;\n    };\n    var prevSibling = function (element) {\n      return Option.from(element.dom().previousSibling).map(Element.fromDom);\n    };\n    var nextSibling = function (element) {\n      return Option.from(element.dom().nextSibling).map(Element.fromDom);\n    };\n    var children = function (element) {\n      return map(element.dom().childNodes, Element.fromDom);\n    };\n    var child = function (element, index) {\n      var cs = element.dom().childNodes;\n      return Option.from(cs[index]).map(Element.fromDom);\n    };\n    var firstChild = function (element) {\n      return child(element, 0);\n    };\n    var spot = Immutable('element', 'offset');\n\n    var before = function (marker, element) {\n      var parent$1 = parent(marker);\n      parent$1.each(function (v) {\n        v.dom().insertBefore(element.dom(), marker.dom());\n      });\n    };\n    var after = function (marker, element) {\n      var sibling = nextSibling(marker);\n      sibling.fold(function () {\n        var parent$1 = parent(marker);\n        parent$1.each(function (v) {\n          append(v, element);\n        });\n      }, function (v) {\n        before(v, element);\n      });\n    };\n    var prepend = function (parent, element) {\n      var firstChild$1 = firstChild(parent);\n      firstChild$1.fold(function () {\n        append(parent, element);\n      }, function (v) {\n        parent.dom().insertBefore(element.dom(), v.dom());\n      });\n    };\n    var append = function (parent, element) {\n      parent.dom().appendChild(element.dom());\n    };\n    var wrap = function (element, wrapper) {\n      before(element, wrapper);\n      append(wrapper, element);\n    };\n\n    var before$1 = function (marker, elements) {\n      each(elements, function (x) {\n        before(marker, x);\n      });\n    };\n    var after$1 = function (marker, elements) {\n      each(elements, function (x, i) {\n        var e = i === 0 ? marker : elements[i - 1];\n        after(e, x);\n      });\n    };\n    var append$1 = function (parent, elements) {\n      each(elements, function (x) {\n        append(parent, x);\n      });\n    };\n\n    var empty = function (element) {\n      element.dom().textContent = '';\n      each(children(element), function (rogue) {\n        remove$2(rogue);\n      });\n    };\n    var remove$2 = function (element) {\n      var dom = element.dom();\n      if (dom.parentNode !== null) {\n        dom.parentNode.removeChild(dom);\n      }\n    };\n    var unwrap = function (wrapper) {\n      var children$1 = children(wrapper);\n      if (children$1.length > 0) {\n        before$1(wrapper, children$1);\n      }\n      remove$2(wrapper);\n    };\n\n    var dimension = Immutable('width', 'height');\n    var dimensions = Immutable('width', 'height');\n    var grid = Immutable('rows', 'columns');\n    var address = Immutable('row', 'column');\n    var coords = Immutable('x', 'y');\n    var detail = Immutable('element', 'rowspan', 'colspan');\n    var detailnew = Immutable('element', 'rowspan', 'colspan', 'isNew');\n    var extended = Immutable('element', 'rowspan', 'colspan', 'row', 'column');\n    var rowdata = Immutable('element', 'cells', 'section');\n    var elementnew = Immutable('element', 'isNew');\n    var rowdatanew = Immutable('element', 'cells', 'section', 'isNew');\n    var rowcells = Immutable('cells', 'section');\n    var rowdetails = Immutable('details', 'section');\n    var bounds = Immutable('startRow', 'startCol', 'finishRow', 'finishCol');\n\n    var ancestors = function (scope, predicate, isRoot) {\n      return filter(parents(scope, isRoot), predicate);\n    };\n    var children$1 = function (scope, predicate) {\n      return filter(children(scope), predicate);\n    };\n    var descendants = function (scope, predicate) {\n      var result = [];\n      each(children(scope), function (x) {\n        if (predicate(x)) {\n          result = result.concat([x]);\n        }\n        result = result.concat(descendants(x, predicate));\n      });\n      return result;\n    };\n\n    var ancestors$1 = function (scope, selector, isRoot) {\n      return ancestors(scope, function (e) {\n        return is(e, selector);\n      }, isRoot);\n    };\n    var children$2 = function (scope, selector) {\n      return children$1(scope, function (e) {\n        return is(e, selector);\n      });\n    };\n    var descendants$1 = function (scope, selector) {\n      return all(selector, scope);\n    };\n\n    function ClosestOrAncestor (is, ancestor, scope, a, isRoot) {\n      return is(scope, a) ? Option.some(scope) : isFunction(isRoot) && isRoot(scope) ? Option.none() : ancestor(scope, a, isRoot);\n    }\n\n    var ancestor = function (scope, predicate, isRoot) {\n      var element = scope.dom();\n      var stop = isFunction(isRoot) ? isRoot : constant(false);\n      while (element.parentNode) {\n        element = element.parentNode;\n        var el = Element.fromDom(element);\n        if (predicate(el)) {\n          return Option.some(el);\n        } else if (stop(el)) {\n          break;\n        }\n      }\n      return Option.none();\n    };\n    var closest = function (scope, predicate, isRoot) {\n      var is = function (s, test) {\n        return test(s);\n      };\n      return ClosestOrAncestor(is, ancestor, scope, predicate, isRoot);\n    };\n    var child$1 = function (scope, predicate) {\n      var pred = function (node) {\n        return predicate(Element.fromDom(node));\n      };\n      var result = find(scope.dom().childNodes, pred);\n      return result.map(Element.fromDom);\n    };\n    var descendant = function (scope, predicate) {\n      var descend = function (node) {\n        for (var i = 0; i < node.childNodes.length; i++) {\n          var child_1 = Element.fromDom(node.childNodes[i]);\n          if (predicate(child_1)) {\n            return Option.some(child_1);\n          }\n          var res = descend(node.childNodes[i]);\n          if (res.isSome()) {\n            return res;\n          }\n        }\n        return Option.none();\n      };\n      return descend(scope.dom());\n    };\n\n    var ancestor$1 = function (scope, selector, isRoot) {\n      return ancestor(scope, function (e) {\n        return is(e, selector);\n      }, isRoot);\n    };\n    var child$2 = function (scope, selector) {\n      return child$1(scope, function (e) {\n        return is(e, selector);\n      });\n    };\n    var descendant$1 = function (scope, selector) {\n      return one(selector, scope);\n    };\n    var closest$1 = function (scope, selector, isRoot) {\n      return ClosestOrAncestor(is, ancestor$1, scope, selector, isRoot);\n    };\n\n    var firstLayer = function (scope, selector) {\n      return filterFirstLayer(scope, selector, constant(true));\n    };\n    var filterFirstLayer = function (scope, selector, predicate) {\n      return bind(children(scope), function (x) {\n        return is(x, selector) ? predicate(x) ? [x] : [] : filterFirstLayer(x, selector, predicate);\n      });\n    };\n    var LayerSelector = {\n      firstLayer: firstLayer,\n      filterFirstLayer: filterFirstLayer\n    };\n\n    var lookup = function (tags, element, isRoot) {\n      if (isRoot === void 0) {\n        isRoot = never;\n      }\n      if (isRoot(element)) {\n        return Option.none();\n      }\n      if (contains(tags, name(element))) {\n        return Option.some(element);\n      }\n      var isRootOrUpperTable = function (elm) {\n        return is(elm, 'table') || isRoot(elm);\n      };\n      return ancestor$1(element, tags.join(','), isRootOrUpperTable);\n    };\n    var cell = function (element, isRoot) {\n      return lookup([\n        'td',\n        'th'\n      ], element, isRoot);\n    };\n    var cells = function (ancestor) {\n      return LayerSelector.firstLayer(ancestor, 'th,td');\n    };\n    var notCell = function (element, isRoot) {\n      return lookup([\n        'caption',\n        'tr',\n        'tbody',\n        'tfoot',\n        'thead'\n      ], element, isRoot);\n    };\n    var neighbours = function (selector, element) {\n      return parent(element).map(function (parent) {\n        return children$2(parent, selector);\n      });\n    };\n    var neighbourCells = curry(neighbours, 'th,td');\n    var neighbourRows = curry(neighbours, 'tr');\n    var firstCell = function (ancestor) {\n      return descendant$1(ancestor, 'th,td');\n    };\n    var table = function (element, isRoot) {\n      return closest$1(element, 'table', isRoot);\n    };\n    var row = function (element, isRoot) {\n      return lookup(['tr'], element, isRoot);\n    };\n    var rows = function (ancestor) {\n      return LayerSelector.firstLayer(ancestor, 'tr');\n    };\n    var attr = function (element, property) {\n      return parseInt(get(element, property), 10);\n    };\n    var grid$1 = function (element, rowProp, colProp) {\n      var rowsCount = attr(element, rowProp);\n      var cols = attr(element, colProp);\n      return grid(rowsCount, cols);\n    };\n    var TableLookup = {\n      cell: cell,\n      firstCell: firstCell,\n      cells: cells,\n      neighbourCells: neighbourCells,\n      table: table,\n      row: row,\n      rows: rows,\n      notCell: notCell,\n      neighbourRows: neighbourRows,\n      attr: attr,\n      grid: grid$1\n    };\n\n    var fromTable = function (table) {\n      var rows = TableLookup.rows(table);\n      return map(rows, function (row) {\n        var element = row;\n        var parent$1 = parent(element);\n        var parentSection = parent$1.map(function (p) {\n          var parentName = name(p);\n          return parentName === 'tfoot' || parentName === 'thead' || parentName === 'tbody' ? parentName : 'tbody';\n        }).getOr('tbody');\n        var cells = map(TableLookup.cells(row), function (cell) {\n          var rowspan = has(cell, 'rowspan') ? parseInt(get(cell, 'rowspan'), 10) : 1;\n          var colspan = has(cell, 'colspan') ? parseInt(get(cell, 'colspan'), 10) : 1;\n          return detail(cell, rowspan, colspan);\n        });\n        return rowdata(element, cells, parentSection);\n      });\n    };\n    var fromPastedRows = function (rows, example) {\n      return map(rows, function (row) {\n        var cells = map(TableLookup.cells(row), function (cell) {\n          var rowspan = has(cell, 'rowspan') ? parseInt(get(cell, 'rowspan'), 10) : 1;\n          var colspan = has(cell, 'colspan') ? parseInt(get(cell, 'colspan'), 10) : 1;\n          return detail(cell, rowspan, colspan);\n        });\n        return rowdata(row, cells, example.section());\n      });\n    };\n    var DetailsList = {\n      fromTable: fromTable,\n      fromPastedRows: fromPastedRows\n    };\n\n    var key = function (row, column) {\n      return row + ',' + column;\n    };\n    var getAt = function (warehouse, row, column) {\n      var raw = warehouse.access()[key(row, column)];\n      return raw !== undefined ? Option.some(raw) : Option.none();\n    };\n    var findItem = function (warehouse, item, comparator) {\n      var filtered = filterItems(warehouse, function (detail) {\n        return comparator(item, detail.element());\n      });\n      return filtered.length > 0 ? Option.some(filtered[0]) : Option.none();\n    };\n    var filterItems = function (warehouse, predicate) {\n      var all = bind(warehouse.all(), function (r) {\n        return r.cells();\n      });\n      return filter(all, predicate);\n    };\n    var generate = function (list) {\n      var access = {};\n      var cells = [];\n      var maxRows = list.length;\n      var maxColumns = 0;\n      each(list, function (details, r) {\n        var currentRow = [];\n        each(details.cells(), function (detail) {\n          var start = 0;\n          while (access[key(r, start)] !== undefined) {\n            start++;\n          }\n          var current = extended(detail.element(), detail.rowspan(), detail.colspan(), r, start);\n          for (var i = 0; i < detail.colspan(); i++) {\n            for (var j = 0; j < detail.rowspan(); j++) {\n              var cr = r + j;\n              var cc = start + i;\n              var newpos = key(cr, cc);\n              access[newpos] = current;\n              maxColumns = Math.max(maxColumns, cc + 1);\n            }\n          }\n          currentRow.push(current);\n        });\n        cells.push(rowdata(details.element(), currentRow, details.section()));\n      });\n      var grid$1 = grid(maxRows, maxColumns);\n      return {\n        grid: constant(grid$1),\n        access: constant(access),\n        all: constant(cells)\n      };\n    };\n    var justCells = function (warehouse) {\n      var rows = map(warehouse.all(), function (w) {\n        return w.cells();\n      });\n      return flatten(rows);\n    };\n    var Warehouse = {\n      generate: generate,\n      getAt: getAt,\n      findItem: findItem,\n      filterItems: filterItems,\n      justCells: justCells\n    };\n\n    var statsStruct = Immutable('minRow', 'minCol', 'maxRow', 'maxCol');\n    var findSelectedStats = function (house, isSelected) {\n      var totalColumns = house.grid().columns();\n      var totalRows = house.grid().rows();\n      var minRow = totalRows;\n      var minCol = totalColumns;\n      var maxRow = 0;\n      var maxCol = 0;\n      each$1(house.access(), function (detail) {\n        if (isSelected(detail)) {\n          var startRow = detail.row();\n          var endRow = startRow + detail.rowspan() - 1;\n          var startCol = detail.column();\n          var endCol = startCol + detail.colspan() - 1;\n          if (startRow < minRow) {\n            minRow = startRow;\n          } else if (endRow > maxRow) {\n            maxRow = endRow;\n          }\n          if (startCol < minCol) {\n            minCol = startCol;\n          } else if (endCol > maxCol) {\n            maxCol = endCol;\n          }\n        }\n      });\n      return statsStruct(minRow, minCol, maxRow, maxCol);\n    };\n    var makeCell = function (list, seenSelected, rowIndex) {\n      var row = list[rowIndex].element();\n      var td = Element.fromTag('td');\n      append(td, Element.fromTag('br'));\n      var f = seenSelected ? append : prepend;\n      f(row, td);\n    };\n    var fillInGaps = function (list, house, stats, isSelected) {\n      var totalColumns = house.grid().columns();\n      var totalRows = house.grid().rows();\n      for (var i = 0; i < totalRows; i++) {\n        var seenSelected = false;\n        for (var j = 0; j < totalColumns; j++) {\n          if (!(i < stats.minRow() || i > stats.maxRow() || j < stats.minCol() || j > stats.maxCol())) {\n            var needCell = Warehouse.getAt(house, i, j).filter(isSelected).isNone();\n            if (needCell) {\n              makeCell(list, seenSelected, i);\n            } else {\n              seenSelected = true;\n            }\n          }\n        }\n      }\n    };\n    var clean = function (table, stats) {\n      var emptyRows = filter(LayerSelector.firstLayer(table, 'tr'), function (row) {\n        return row.dom().childElementCount === 0;\n      });\n      each(emptyRows, remove$2);\n      if (stats.minCol() === stats.maxCol() || stats.minRow() === stats.maxRow()) {\n        each(LayerSelector.firstLayer(table, 'th,td'), function (cell) {\n          remove(cell, 'rowspan');\n          remove(cell, 'colspan');\n        });\n      }\n      remove(table, 'width');\n      remove(table, 'height');\n      remove$1(table, 'width');\n      remove$1(table, 'height');\n    };\n    var extract = function (table, selectedSelector) {\n      var isSelected = function (detail) {\n        return is(detail.element(), selectedSelector);\n      };\n      var list = DetailsList.fromTable(table);\n      var house = Warehouse.generate(list);\n      var stats = findSelectedStats(house, isSelected);\n      var selector = 'th:not(' + selectedSelector + ')' + ',td:not(' + selectedSelector + ')';\n      var unselectedCells = LayerSelector.filterFirstLayer(table, 'th,td', function (cell) {\n        return is(cell, selector);\n      });\n      each(unselectedCells, remove$2);\n      fillInGaps(list, house, stats, isSelected);\n      clean(table, stats);\n      return table;\n    };\n    var CopySelected = { extract: extract };\n\n    function NodeValue (is, name) {\n      var get = function (element) {\n        if (!is(element)) {\n          throw new Error('Can only get ' + name + ' value of a ' + name + ' node');\n        }\n        return getOption(element).getOr('');\n      };\n      var getOption = function (element) {\n        return is(element) ? Option.from(element.dom().nodeValue) : Option.none();\n      };\n      var set = function (element, value) {\n        if (!is(element)) {\n          throw new Error('Can only set raw ' + name + ' value of a ' + name + ' node');\n        }\n        element.dom().nodeValue = value;\n      };\n      return {\n        get: get,\n        getOption: getOption,\n        set: set\n      };\n    }\n\n    var api = NodeValue(isText, 'text');\n    var get$2 = function (element) {\n      return api.get(element);\n    };\n    var getOption = function (element) {\n      return api.getOption(element);\n    };\n    var set$2 = function (element, value) {\n      api.set(element, value);\n    };\n\n    var getEnd = function (element) {\n      return name(element) === 'img' ? 1 : getOption(element).fold(function () {\n        return children(element).length;\n      }, function (v) {\n        return v.length;\n      });\n    };\n    var NBSP = '\\xA0';\n    var isTextNodeWithCursorPosition = function (el) {\n      return getOption(el).filter(function (text) {\n        return text.trim().length !== 0 || text.indexOf(NBSP) > -1;\n      }).isSome();\n    };\n    var elementsWithCursorPosition = [\n      'img',\n      'br'\n    ];\n    var isCursorPosition = function (elem) {\n      var hasCursorPosition = isTextNodeWithCursorPosition(elem);\n      return hasCursorPosition || contains(elementsWithCursorPosition, name(elem));\n    };\n\n    var first = function (element) {\n      return descendant(element, isCursorPosition);\n    };\n    var last$1 = function (element) {\n      return descendantRtl(element, isCursorPosition);\n    };\n    var descendantRtl = function (scope, predicate) {\n      var descend = function (element) {\n        var children$1 = children(element);\n        for (var i = children$1.length - 1; i >= 0; i--) {\n          var child = children$1[i];\n          if (predicate(child)) {\n            return Option.some(child);\n          }\n          var res = descend(child);\n          if (res.isSome()) {\n            return res;\n          }\n        }\n        return Option.none();\n      };\n      return descend(scope);\n    };\n\n    var clone$1 = function (original, isDeep) {\n      return Element.fromDom(original.dom().cloneNode(isDeep));\n    };\n    var shallow = function (original) {\n      return clone$1(original, false);\n    };\n    var deep = function (original) {\n      return clone$1(original, true);\n    };\n    var shallowAs = function (original, tag) {\n      var nu = Element.fromTag(tag);\n      var attributes = clone(original);\n      setAll(nu, attributes);\n      return nu;\n    };\n    var copy$1 = function (original, tag) {\n      var nu = shallowAs(original, tag);\n      var cloneChildren = children(deep(original));\n      append$1(nu, cloneChildren);\n      return nu;\n    };\n\n    var createCell = function () {\n      var td = Element.fromTag('td');\n      append(td, Element.fromTag('br'));\n      return td;\n    };\n    var replace = function (cell, tag, attrs) {\n      var replica = copy$1(cell, tag);\n      each$1(attrs, function (v, k) {\n        if (v === null) {\n          remove(replica, k);\n        } else {\n          set(replica, k, v);\n        }\n      });\n      return replica;\n    };\n    var pasteReplace = function (cell) {\n      return cell;\n    };\n    var newRow = function (doc) {\n      return function () {\n        return Element.fromTag('tr', doc.dom());\n      };\n    };\n    var cloneFormats = function (oldCell, newCell, formats) {\n      var first$1 = first(oldCell);\n      return first$1.map(function (firstText) {\n        var formatSelector = formats.join(',');\n        var parents = ancestors$1(firstText, formatSelector, function (element) {\n          return eq(element, oldCell);\n        });\n        return foldr(parents, function (last, parent) {\n          var clonedFormat = shallow(parent);\n          remove(clonedFormat, 'contenteditable');\n          append(last, clonedFormat);\n          return clonedFormat;\n        }, newCell);\n      }).getOr(newCell);\n    };\n    var cellOperations = function (mutate, doc, formatsToClone) {\n      var newCell = function (prev) {\n        var docu = owner(prev.element());\n        var td = Element.fromTag(name(prev.element()), docu.dom());\n        var formats = formatsToClone.getOr([\n          'strong',\n          'em',\n          'b',\n          'i',\n          'span',\n          'font',\n          'h1',\n          'h2',\n          'h3',\n          'h4',\n          'h5',\n          'h6',\n          'p',\n          'div'\n        ]);\n        var lastNode = formats.length > 0 ? cloneFormats(prev.element(), td, formats) : td;\n        append(lastNode, Element.fromTag('br'));\n        copy(prev.element(), td);\n        remove$1(td, 'height');\n        if (prev.colspan() !== 1) {\n          remove$1(prev.element(), 'width');\n        }\n        mutate(prev.element(), td);\n        return td;\n      };\n      return {\n        row: newRow(doc),\n        cell: newCell,\n        replace: replace,\n        gap: createCell\n      };\n    };\n    var paste = function (doc) {\n      return {\n        row: newRow(doc),\n        cell: createCell,\n        replace: pasteReplace,\n        gap: createCell\n      };\n    };\n    var TableFill = {\n      cellOperations: cellOperations,\n      paste: paste\n    };\n\n    var fromHtml$1 = function (html, scope) {\n      var doc = scope || domGlobals.document;\n      var div = doc.createElement('div');\n      div.innerHTML = html;\n      return children(Element.fromDom(div));\n    };\n\n    var inSelection = function (bounds, detail) {\n      var leftEdge = detail.column();\n      var rightEdge = detail.column() + detail.colspan() - 1;\n      var topEdge = detail.row();\n      var bottomEdge = detail.row() + detail.rowspan() - 1;\n      return leftEdge <= bounds.finishCol() && rightEdge >= bounds.startCol() && (topEdge <= bounds.finishRow() && bottomEdge >= bounds.startRow());\n    };\n    var isWithin = function (bounds, detail) {\n      return detail.column() >= bounds.startCol() && detail.column() + detail.colspan() - 1 <= bounds.finishCol() && detail.row() >= bounds.startRow() && detail.row() + detail.rowspan() - 1 <= bounds.finishRow();\n    };\n    var isRectangular = function (warehouse, bounds) {\n      var isRect = true;\n      var detailIsWithin = curry(isWithin, bounds);\n      for (var i = bounds.startRow(); i <= bounds.finishRow(); i++) {\n        for (var j = bounds.startCol(); j <= bounds.finishCol(); j++) {\n          isRect = isRect && Warehouse.getAt(warehouse, i, j).exists(detailIsWithin);\n        }\n      }\n      return isRect ? Option.some(bounds) : Option.none();\n    };\n    var CellBounds = {\n      inSelection: inSelection,\n      isWithin: isWithin,\n      isRectangular: isRectangular\n    };\n\n    var getBounds = function (detailA, detailB) {\n      return bounds(Math.min(detailA.row(), detailB.row()), Math.min(detailA.column(), detailB.column()), Math.max(detailA.row() + detailA.rowspan() - 1, detailB.row() + detailB.rowspan() - 1), Math.max(detailA.column() + detailA.colspan() - 1, detailB.column() + detailB.colspan() - 1));\n    };\n    var getAnyBox = function (warehouse, startCell, finishCell) {\n      var startCoords = Warehouse.findItem(warehouse, startCell, eq);\n      var finishCoords = Warehouse.findItem(warehouse, finishCell, eq);\n      return startCoords.bind(function (sc) {\n        return finishCoords.map(function (fc) {\n          return getBounds(sc, fc);\n        });\n      });\n    };\n    var getBox = function (warehouse, startCell, finishCell) {\n      return getAnyBox(warehouse, startCell, finishCell).bind(function (bounds) {\n        return CellBounds.isRectangular(warehouse, bounds);\n      });\n    };\n    var CellGroup = {\n      getAnyBox: getAnyBox,\n      getBox: getBox\n    };\n\n    var moveBy = function (warehouse, cell, row, column) {\n      return Warehouse.findItem(warehouse, cell, eq).bind(function (detail) {\n        var startRow = row > 0 ? detail.row() + detail.rowspan() - 1 : detail.row();\n        var startCol = column > 0 ? detail.column() + detail.colspan() - 1 : detail.column();\n        var dest = Warehouse.getAt(warehouse, startRow + row, startCol + column);\n        return dest.map(function (d) {\n          return d.element();\n        });\n      });\n    };\n    var intercepts = function (warehouse, start, finish) {\n      return CellGroup.getAnyBox(warehouse, start, finish).map(function (bounds) {\n        var inside = Warehouse.filterItems(warehouse, curry(CellBounds.inSelection, bounds));\n        return map(inside, function (detail) {\n          return detail.element();\n        });\n      });\n    };\n    var parentCell = function (warehouse, innerCell) {\n      var isContainedBy = function (c1, c2) {\n        return contains$2(c2, c1);\n      };\n      return Warehouse.findItem(warehouse, innerCell, isContainedBy).map(function (detail) {\n        return detail.element();\n      });\n    };\n    var CellFinder = {\n      moveBy: moveBy,\n      intercepts: intercepts,\n      parentCell: parentCell\n    };\n\n    var moveBy$1 = function (cell, deltaRow, deltaColumn) {\n      return TableLookup.table(cell).bind(function (table) {\n        var warehouse = getWarehouse(table);\n        return CellFinder.moveBy(warehouse, cell, deltaRow, deltaColumn);\n      });\n    };\n    var intercepts$1 = function (table, first, last) {\n      var warehouse = getWarehouse(table);\n      return CellFinder.intercepts(warehouse, first, last);\n    };\n    var nestedIntercepts = function (table, first, firstTable, last, lastTable) {\n      var warehouse = getWarehouse(table);\n      var optStartCell = eq(table, firstTable) ? Option.some(first) : CellFinder.parentCell(warehouse, first);\n      var optLastCell = eq(table, lastTable) ? Option.some(last) : CellFinder.parentCell(warehouse, last);\n      return optStartCell.bind(function (startCell) {\n        return optLastCell.bind(function (lastCell) {\n          return CellFinder.intercepts(warehouse, startCell, lastCell);\n        });\n      });\n    };\n    var getBox$1 = function (table, first, last) {\n      var warehouse = getWarehouse(table);\n      return CellGroup.getBox(warehouse, first, last);\n    };\n    var getWarehouse = function (table) {\n      var list = DetailsList.fromTable(table);\n      return Warehouse.generate(list);\n    };\n    var TablePositions = {\n      moveBy: moveBy$1,\n      intercepts: intercepts$1,\n      nestedIntercepts: nestedIntercepts,\n      getBox: getBox$1\n    };\n\n    var TagBoundaries = [\n      'body',\n      'p',\n      'div',\n      'article',\n      'aside',\n      'figcaption',\n      'figure',\n      'footer',\n      'header',\n      'nav',\n      'section',\n      'ol',\n      'ul',\n      'li',\n      'table',\n      'thead',\n      'tbody',\n      'tfoot',\n      'caption',\n      'tr',\n      'td',\n      'th',\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n      'blockquote',\n      'pre',\n      'address'\n    ];\n\n    function DomUniverse () {\n      var clone$1 = function (element) {\n        return Element.fromDom(element.dom().cloneNode(false));\n      };\n      var document = function (element) {\n        return element.dom().ownerDocument;\n      };\n      var isBoundary = function (element) {\n        if (!isElement(element)) {\n          return false;\n        }\n        if (name(element) === 'body') {\n          return true;\n        }\n        return contains(TagBoundaries, name(element));\n      };\n      var isEmptyTag = function (element) {\n        if (!isElement(element)) {\n          return false;\n        }\n        return contains([\n          'br',\n          'img',\n          'hr',\n          'input'\n        ], name(element));\n      };\n      var comparePosition = function (element, other) {\n        return element.dom().compareDocumentPosition(other.dom());\n      };\n      var copyAttributesTo = function (source, destination) {\n        var as = clone(source);\n        setAll(destination, as);\n      };\n      return {\n        up: constant({\n          selector: ancestor$1,\n          closest: closest$1,\n          predicate: ancestor,\n          all: parents\n        }),\n        down: constant({\n          selector: descendants$1,\n          predicate: descendants\n        }),\n        styles: constant({\n          get: get$1,\n          getRaw: getRaw,\n          set: set$1,\n          remove: remove$1\n        }),\n        attrs: constant({\n          get: get,\n          set: set,\n          remove: remove,\n          copyTo: copyAttributesTo\n        }),\n        insert: constant({\n          before: before,\n          after: after,\n          afterAll: after$1,\n          append: append,\n          appendAll: append$1,\n          prepend: prepend,\n          wrap: wrap\n        }),\n        remove: constant({\n          unwrap: unwrap,\n          remove: remove$2\n        }),\n        create: constant({\n          nu: Element.fromTag,\n          clone: clone$1,\n          text: Element.fromText\n        }),\n        query: constant({\n          comparePosition: comparePosition,\n          prevSibling: prevSibling,\n          nextSibling: nextSibling\n        }),\n        property: constant({\n          children: children,\n          name: name,\n          parent: parent,\n          document: document,\n          isText: isText,\n          isComment: isComment,\n          isElement: isElement,\n          getText: get$2,\n          setText: set$2,\n          isBoundary: isBoundary,\n          isEmptyTag: isEmptyTag\n        }),\n        eq: eq,\n        is: is$1\n      };\n    }\n\n    var leftRight = Immutable('left', 'right');\n    var brokenPath = Immutable('first', 'second', 'splits');\n    var bisect = function (universe, parent, child) {\n      var children = universe.property().children(parent);\n      var index = findIndex(children, curry(universe.eq, child));\n      return index.map(function (ind) {\n        return {\n          before: constant(children.slice(0, ind)),\n          after: constant(children.slice(ind + 1))\n        };\n      });\n    };\n    var breakToRight = function (universe, parent, child) {\n      return bisect(universe, parent, child).map(function (parts) {\n        var second = universe.create().clone(parent);\n        universe.insert().appendAll(second, parts.after());\n        universe.insert().after(parent, second);\n        return leftRight(parent, second);\n      });\n    };\n    var breakToLeft = function (universe, parent, child) {\n      return bisect(universe, parent, child).map(function (parts) {\n        var prior = universe.create().clone(parent);\n        universe.insert().appendAll(prior, parts.before().concat([child]));\n        universe.insert().appendAll(parent, parts.after());\n        universe.insert().before(parent, prior);\n        return leftRight(prior, parent);\n      });\n    };\n    var breakPath = function (universe, item, isTop, breaker) {\n      var next = function (child, group, splits) {\n        var fallback = brokenPath(child, Option.none(), splits);\n        if (isTop(child)) {\n          return brokenPath(child, group, splits);\n        } else {\n          return universe.property().parent(child).bind(function (parent) {\n            return breaker(universe, parent, child).map(function (breakage) {\n              var extra = [{\n                  first: breakage.left,\n                  second: breakage.right\n                }];\n              var nextChild = isTop(parent) ? parent : breakage.left();\n              return next(nextChild, Option.some(breakage.right()), splits.concat(extra));\n            });\n          }).getOr(fallback);\n        }\n      };\n      return next(item, Option.none(), []);\n    };\n\n    var all$1 = function (universe, look, elements, f) {\n      var head = elements[0];\n      var tail = elements.slice(1);\n      return f(universe, look, head, tail);\n    };\n    var oneAll = function (universe, look, elements) {\n      return elements.length > 0 ? all$1(universe, look, elements, unsafeOne) : Option.none();\n    };\n    var unsafeOne = function (universe, look, head, tail) {\n      var start = look(universe, head);\n      return foldr(tail, function (b, a) {\n        var current = look(universe, a);\n        return commonElement(universe, b, current);\n      }, start);\n    };\n    var commonElement = function (universe, start, end) {\n      return start.bind(function (s) {\n        return end.filter(curry(universe.eq, s));\n      });\n    };\n\n    var eq$1 = function (universe, item) {\n      return curry(universe.eq, item);\n    };\n    var unsafeSubset = function (universe, common, ps1, ps2) {\n      var children = universe.property().children(common);\n      if (universe.eq(common, ps1[0])) {\n        return Option.some([ps1[0]]);\n      }\n      if (universe.eq(common, ps2[0])) {\n        return Option.some([ps2[0]]);\n      }\n      var finder = function (ps) {\n        var topDown = reverse(ps);\n        var index = findIndex(topDown, eq$1(universe, common)).getOr(-1);\n        var item = index < topDown.length - 1 ? topDown[index + 1] : topDown[index];\n        return findIndex(children, eq$1(universe, item));\n      };\n      var startIndex = finder(ps1);\n      var endIndex = finder(ps2);\n      return startIndex.bind(function (sIndex) {\n        return endIndex.map(function (eIndex) {\n          var first = Math.min(sIndex, eIndex);\n          var last = Math.max(sIndex, eIndex);\n          return children.slice(first, last + 1);\n        });\n      });\n    };\n    var ancestors$2 = function (universe, start, end, isRoot) {\n      if (isRoot === void 0) {\n        isRoot = never;\n      }\n      var ps1 = [start].concat(universe.up().all(start));\n      var ps2 = [end].concat(universe.up().all(end));\n      var prune = function (path) {\n        var index = findIndex(path, isRoot);\n        return index.fold(function () {\n          return path;\n        }, function (ind) {\n          return path.slice(0, ind + 1);\n        });\n      };\n      var pruned1 = prune(ps1);\n      var pruned2 = prune(ps2);\n      var shared = find(pruned1, function (x) {\n        return exists(pruned2, eq$1(universe, x));\n      });\n      return {\n        firstpath: constant(pruned1),\n        secondpath: constant(pruned2),\n        shared: constant(shared)\n      };\n    };\n    var subset = function (universe, start, end) {\n      var ancs = ancestors$2(universe, start, end);\n      return ancs.shared().bind(function (shared) {\n        return unsafeSubset(universe, shared, ancs.firstpath(), ancs.secondpath());\n      });\n    };\n    var SubsetFn = {\n      subset: subset,\n      ancestors: ancestors$2\n    };\n\n    var sharedOne = oneAll;\n    var subset$1 = SubsetFn.subset;\n    var ancestors$3 = SubsetFn.ancestors;\n    var breakToLeft$1 = breakToLeft;\n    var breakToRight$1 = breakToRight;\n    var breakPath$1 = breakPath;\n    var Parent = {\n      sharedOne: sharedOne,\n      subset: subset$1,\n      ancestors: ancestors$3,\n      breakToLeft: breakToLeft$1,\n      breakToRight: breakToRight$1,\n      breakPath: breakPath$1\n    };\n\n    var universe = DomUniverse();\n    var sharedOne$1 = function (look, elements) {\n      return Parent.sharedOne(universe, function (_universe, element) {\n        return look(element);\n      }, elements);\n    };\n    var subset$2 = function (start, finish) {\n      return Parent.subset(universe, start, finish);\n    };\n    var ancestors$4 = function (start, finish, isRoot) {\n      return Parent.ancestors(universe, start, finish, isRoot);\n    };\n    var breakToLeft$2 = function (parent, child) {\n      return Parent.breakToLeft(universe, parent, child);\n    };\n    var breakToRight$2 = function (parent, child) {\n      return Parent.breakToRight(universe, parent, child);\n    };\n    var breakPath$2 = function (child, isTop, breaker) {\n      return Parent.breakPath(universe, child, isTop, function (u, p, c) {\n        return breaker(p, c);\n      });\n    };\n    var DomParent = {\n      sharedOne: sharedOne$1,\n      subset: subset$2,\n      ancestors: ancestors$4,\n      breakToLeft: breakToLeft$2,\n      breakToRight: breakToRight$2,\n      breakPath: breakPath$2\n    };\n\n    var create = MixedBag([\n      'boxes',\n      'start',\n      'finish'\n    ], []);\n    var Identified = { create: create };\n\n    var lookupTable = function (container) {\n      return ancestor$1(container, 'table');\n    };\n    var identify = function (start, finish, isRoot) {\n      var getIsRoot = function (rootTable) {\n        return function (element) {\n          return isRoot !== undefined && isRoot(element) || eq(element, rootTable);\n        };\n      };\n      if (eq(start, finish)) {\n        return Option.some(Identified.create({\n          boxes: Option.some([start]),\n          start: start,\n          finish: finish\n        }));\n      } else {\n        return lookupTable(start).bind(function (startTable) {\n          return lookupTable(finish).bind(function (finishTable) {\n            if (eq(startTable, finishTable)) {\n              return Option.some(Identified.create({\n                boxes: TablePositions.intercepts(startTable, start, finish),\n                start: start,\n                finish: finish\n              }));\n            } else if (contains$2(startTable, finishTable)) {\n              var ancestorCells = ancestors$1(finish, 'td,th', getIsRoot(startTable));\n              var finishCell = ancestorCells.length > 0 ? ancestorCells[ancestorCells.length - 1] : finish;\n              return Option.some(Identified.create({\n                boxes: TablePositions.nestedIntercepts(startTable, start, startTable, finish, finishTable),\n                start: start,\n                finish: finishCell\n              }));\n            } else if (contains$2(finishTable, startTable)) {\n              var ancestorCells = ancestors$1(start, 'td,th', getIsRoot(finishTable));\n              var startCell = ancestorCells.length > 0 ? ancestorCells[ancestorCells.length - 1] : start;\n              return Option.some(Identified.create({\n                boxes: TablePositions.nestedIntercepts(finishTable, start, startTable, finish, finishTable),\n                start: start,\n                finish: startCell\n              }));\n            } else {\n              return DomParent.ancestors(start, finish).shared().bind(function (lca) {\n                return closest$1(lca, 'table', isRoot).bind(function (lcaTable) {\n                  var finishAncestorCells = ancestors$1(finish, 'td,th', getIsRoot(lcaTable));\n                  var finishCell = finishAncestorCells.length > 0 ? finishAncestorCells[finishAncestorCells.length - 1] : finish;\n                  var startAncestorCells = ancestors$1(start, 'td,th', getIsRoot(lcaTable));\n                  var startCell = startAncestorCells.length > 0 ? startAncestorCells[startAncestorCells.length - 1] : start;\n                  return Option.some(Identified.create({\n                    boxes: TablePositions.nestedIntercepts(lcaTable, start, startTable, finish, finishTable),\n                    start: startCell,\n                    finish: finishCell\n                  }));\n                });\n              });\n            }\n          });\n        });\n      }\n    };\n    var retrieve = function (container, selector) {\n      var sels = descendants$1(container, selector);\n      return sels.length > 0 ? Option.some(sels) : Option.none();\n    };\n    var getLast = function (boxes, lastSelectedSelector) {\n      return find(boxes, function (box) {\n        return is(box, lastSelectedSelector);\n      });\n    };\n    var getEdges = function (container, firstSelectedSelector, lastSelectedSelector) {\n      return descendant$1(container, firstSelectedSelector).bind(function (first) {\n        return descendant$1(container, lastSelectedSelector).bind(function (last) {\n          return DomParent.sharedOne(lookupTable, [\n            first,\n            last\n          ]).map(function (tbl) {\n            return {\n              first: constant(first),\n              last: constant(last),\n              table: constant(tbl)\n            };\n          });\n        });\n      });\n    };\n    var expandTo = function (finish, firstSelectedSelector) {\n      return ancestor$1(finish, 'table').bind(function (table) {\n        return descendant$1(table, firstSelectedSelector).bind(function (start) {\n          return identify(start, finish).bind(function (identified) {\n            return identified.boxes().map(function (boxes) {\n              return {\n                boxes: constant(boxes),\n                start: constant(identified.start()),\n                finish: constant(identified.finish())\n              };\n            });\n          });\n        });\n      });\n    };\n    var shiftSelection = function (boxes, deltaRow, deltaColumn, firstSelectedSelector, lastSelectedSelector) {\n      return getLast(boxes, lastSelectedSelector).bind(function (last) {\n        return TablePositions.moveBy(last, deltaRow, deltaColumn).bind(function (finish) {\n          return expandTo(finish, firstSelectedSelector);\n        });\n      });\n    };\n    var CellSelection = {\n      identify: identify,\n      retrieve: retrieve,\n      shiftSelection: shiftSelection,\n      getEdges: getEdges\n    };\n\n    var retrieve$1 = function (container, selector) {\n      return CellSelection.retrieve(container, selector);\n    };\n    var retrieveBox = function (container, firstSelectedSelector, lastSelectedSelector) {\n      return CellSelection.getEdges(container, firstSelectedSelector, lastSelectedSelector).bind(function (edges) {\n        var isRoot = function (ancestor) {\n          return eq(container, ancestor);\n        };\n        var firstAncestor = ancestor$1(edges.first(), 'thead,tfoot,tbody,table', isRoot);\n        var lastAncestor = ancestor$1(edges.last(), 'thead,tfoot,tbody,table', isRoot);\n        return firstAncestor.bind(function (fA) {\n          return lastAncestor.bind(function (lA) {\n            return eq(fA, lA) ? TablePositions.getBox(edges.table(), edges.first(), edges.last()) : Option.none();\n          });\n        });\n      });\n    };\n    var TableSelection = {\n      retrieve: retrieve$1,\n      retrieveBox: retrieveBox\n    };\n\n    var selected = 'data-mce-selected';\n    var selectedSelector = 'td[' + selected + '],th[' + selected + ']';\n    var attributeSelector = '[' + selected + ']';\n    var firstSelected = 'data-mce-first-selected';\n    var firstSelectedSelector = 'td[' + firstSelected + '],th[' + firstSelected + ']';\n    var lastSelected = 'data-mce-last-selected';\n    var lastSelectedSelector = 'td[' + lastSelected + '],th[' + lastSelected + ']';\n    var Ephemera = {\n      selected: constant(selected),\n      selectedSelector: constant(selectedSelector),\n      attributeSelector: constant(attributeSelector),\n      firstSelected: constant(firstSelected),\n      firstSelectedSelector: constant(firstSelectedSelector),\n      lastSelected: constant(lastSelected),\n      lastSelectedSelector: constant(lastSelectedSelector)\n    };\n\n    var generate$1 = function (cases) {\n      if (!isArray(cases)) {\n        throw new Error('cases must be an array');\n      }\n      if (cases.length === 0) {\n        throw new Error('there must be at least one case');\n      }\n      var constructors = [];\n      var adt = {};\n      each(cases, function (acase, count) {\n        var keys$1 = keys(acase);\n        if (keys$1.length !== 1) {\n          throw new Error('one and only one name per case');\n        }\n        var key = keys$1[0];\n        var value = acase[key];\n        if (adt[key] !== undefined) {\n          throw new Error('duplicate key detected:' + key);\n        } else if (key === 'cata') {\n          throw new Error('cannot have a case named cata (sorry)');\n        } else if (!isArray(value)) {\n          throw new Error('case arguments must be an array');\n        }\n        constructors.push(key);\n        adt[key] = function () {\n          var argLength = arguments.length;\n          if (argLength !== value.length) {\n            throw new Error('Wrong number of arguments to case ' + key + '. Expected ' + value.length + ' (' + value + '), got ' + argLength);\n          }\n          var args = new Array(argLength);\n          for (var i = 0; i < args.length; i++) {\n            args[i] = arguments[i];\n          }\n          var match = function (branches) {\n            var branchKeys = keys(branches);\n            if (constructors.length !== branchKeys.length) {\n              throw new Error('Wrong number of arguments to match. Expected: ' + constructors.join(',') + '\\nActual: ' + branchKeys.join(','));\n            }\n            var allReqd = forall(constructors, function (reqKey) {\n              return contains(branchKeys, reqKey);\n            });\n            if (!allReqd) {\n              throw new Error('Not all branches were specified when using match. Specified: ' + branchKeys.join(', ') + '\\nRequired: ' + constructors.join(', '));\n            }\n            return branches[key].apply(null, args);\n          };\n          return {\n            fold: function () {\n              if (arguments.length !== cases.length) {\n                throw new Error('Wrong number of arguments to fold. Expected ' + cases.length + ', got ' + arguments.length);\n              }\n              var target = arguments[count];\n              return target.apply(null, args);\n            },\n            match: match,\n            log: function (label) {\n              domGlobals.console.log(label, {\n                constructors: constructors,\n                constructor: key,\n                params: args\n              });\n            }\n          };\n        };\n      });\n      return adt;\n    };\n    var Adt = { generate: generate$1 };\n\n    var type$1 = Adt.generate([\n      { none: [] },\n      { multiple: ['elements'] },\n      { single: ['selection'] }\n    ]);\n    var cata = function (subject, onNone, onMultiple, onSingle) {\n      return subject.fold(onNone, onMultiple, onSingle);\n    };\n    var SelectionTypes = {\n      cata: cata,\n      none: type$1.none,\n      multiple: type$1.multiple,\n      single: type$1.single\n    };\n\n    var selection = function (cell, selections) {\n      return SelectionTypes.cata(selections.get(), constant([]), identity, constant([cell]));\n    };\n    var unmergable = function (cell, selections) {\n      var hasSpan = function (elem) {\n        return has(elem, 'rowspan') && parseInt(get(elem, 'rowspan'), 10) > 1 || has(elem, 'colspan') && parseInt(get(elem, 'colspan'), 10) > 1;\n      };\n      var candidates = selection(cell, selections);\n      return candidates.length > 0 && forall(candidates, hasSpan) ? Option.some(candidates) : Option.none();\n    };\n    var mergable = function (table, selections) {\n      return SelectionTypes.cata(selections.get(), Option.none, function (cells, _env) {\n        if (cells.length === 0) {\n          return Option.none();\n        }\n        return TableSelection.retrieveBox(table, Ephemera.firstSelectedSelector(), Ephemera.lastSelectedSelector()).bind(function (bounds) {\n          return cells.length > 1 ? Option.some({\n            bounds: constant(bounds),\n            cells: constant(cells)\n          }) : Option.none();\n        });\n      }, Option.none);\n    };\n    var CellOperations = {\n      mergable: mergable,\n      unmergable: unmergable,\n      selection: selection\n    };\n\n    var noMenu = function (cell) {\n      return {\n        element: constant(cell),\n        mergable: Option.none,\n        unmergable: Option.none,\n        selection: constant([cell])\n      };\n    };\n    var forMenu = function (selections, table, cell) {\n      return {\n        element: constant(cell),\n        mergable: constant(CellOperations.mergable(table, selections)),\n        unmergable: constant(CellOperations.unmergable(cell, selections)),\n        selection: constant(CellOperations.selection(cell, selections))\n      };\n    };\n    var notCell$1 = function (element) {\n      return noMenu(element);\n    };\n    var paste$1 = Immutable('element', 'clipboard', 'generators');\n    var pasteRows = function (selections, table, cell, clipboard, generators) {\n      return {\n        element: constant(cell),\n        mergable: Option.none,\n        unmergable: Option.none,\n        selection: constant(CellOperations.selection(cell, selections)),\n        clipboard: constant(clipboard),\n        generators: constant(generators)\n      };\n    };\n    var TableTargets = {\n      noMenu: noMenu,\n      forMenu: forMenu,\n      notCell: notCell$1,\n      paste: paste$1,\n      pasteRows: pasteRows\n    };\n\n    var extractSelected = function (cells) {\n      return TableLookup.table(cells[0]).map(deep).map(function (replica) {\n        return [CopySelected.extract(replica, Ephemera.attributeSelector())];\n      });\n    };\n    var serializeElements = function (editor, elements) {\n      return map(elements, function (elm) {\n        return editor.selection.serializer.serialize(elm.dom(), {});\n      }).join('');\n    };\n    var getTextContent = function (elements) {\n      return map(elements, function (element) {\n        return element.dom().innerText;\n      }).join('');\n    };\n    var registerEvents = function (editor, selections, actions, cellSelection) {\n      editor.on('BeforeGetContent', function (e) {\n        var multiCellContext = function (cells) {\n          e.preventDefault();\n          extractSelected(cells).each(function (elements) {\n            e.content = e.format === 'text' ? getTextContent(elements) : serializeElements(editor, elements);\n          });\n        };\n        if (e.selection === true) {\n          SelectionTypes.cata(selections.get(), noop, multiCellContext, noop);\n        }\n      });\n      editor.on('BeforeSetContent', function (e) {\n        if (e.selection === true && e.paste === true) {\n          var cellOpt = Option.from(editor.dom.getParent(editor.selection.getStart(), 'th,td'));\n          cellOpt.each(function (domCell) {\n            var cell = Element.fromDom(domCell);\n            TableLookup.table(cell).each(function (table) {\n              var elements = filter(fromHtml$1(e.content), function (content) {\n                return name(content) !== 'meta';\n              });\n              if (elements.length === 1 && name(elements[0]) === 'table') {\n                e.preventDefault();\n                var doc = Element.fromDom(editor.getDoc());\n                var generators = TableFill.paste(doc);\n                var targets = TableTargets.paste(cell, elements[0], generators);\n                actions.pasteCells(table, targets).each(function (rng) {\n                  editor.selection.setRng(rng);\n                  editor.focus();\n                  cellSelection.clear(table);\n                });\n              }\n            });\n          });\n        }\n      });\n    };\n    var Clipboard = { registerEvents: registerEvents };\n\n    function Dimension (name, getOffset) {\n      var set = function (element, h) {\n        if (!isNumber(h) && !h.match(/^[0-9]+$/)) {\n          throw new Error(name + '.set accepts only positive integer values. Value was ' + h);\n        }\n        var dom = element.dom();\n        if (isSupported(dom)) {\n          dom.style[name] = h + 'px';\n        }\n      };\n      var get = function (element) {\n        var r = getOffset(element);\n        if (r <= 0 || r === null) {\n          var css = get$1(element, name);\n          return parseFloat(css) || 0;\n        }\n        return r;\n      };\n      var getOuter = get;\n      var aggregate = function (element, properties) {\n        return foldl(properties, function (acc, property) {\n          var val = get$1(element, property);\n          var value = val === undefined ? 0 : parseInt(val, 10);\n          return isNaN(value) ? acc : acc + value;\n        }, 0);\n      };\n      var max = function (element, value, properties) {\n        var cumulativeInclusions = aggregate(element, properties);\n        var absoluteMax = value > cumulativeInclusions ? value - cumulativeInclusions : 0;\n        return absoluteMax;\n      };\n      return {\n        set: set,\n        get: get,\n        getOuter: getOuter,\n        aggregate: aggregate,\n        max: max\n      };\n    }\n\n    var api$1 = Dimension('height', function (element) {\n      var dom = element.dom();\n      return inBody(element) ? dom.getBoundingClientRect().height : dom.offsetHeight;\n    });\n    var get$3 = function (element) {\n      return api$1.get(element);\n    };\n    var getOuter = function (element) {\n      return api$1.getOuter(element);\n    };\n\n    var api$2 = Dimension('width', function (element) {\n      return element.dom().offsetWidth;\n    });\n    var get$4 = function (element) {\n      return api$2.get(element);\n    };\n    var getOuter$1 = function (element) {\n      return api$2.getOuter(element);\n    };\n\n    var platform = PlatformDetection$1.detect();\n    var needManualCalc = function () {\n      return platform.browser.isIE() || platform.browser.isEdge();\n    };\n    var toNumber = function (px, fallback) {\n      var num = parseFloat(px);\n      return isNaN(num) ? fallback : num;\n    };\n    var getProp = function (elm, name, fallback) {\n      return toNumber(get$1(elm, name), fallback);\n    };\n    var getCalculatedHeight = function (cell) {\n      var paddingTop = getProp(cell, 'padding-top', 0);\n      var paddingBottom = getProp(cell, 'padding-bottom', 0);\n      var borderTop = getProp(cell, 'border-top-width', 0);\n      var borderBottom = getProp(cell, 'border-bottom-width', 0);\n      var height = cell.dom().getBoundingClientRect().height;\n      var boxSizing = get$1(cell, 'box-sizing');\n      var borders = borderTop + borderBottom;\n      return boxSizing === 'border-box' ? height : height - paddingTop - paddingBottom - borders;\n    };\n    var getWidth = function (cell) {\n      return getProp(cell, 'width', get$4(cell));\n    };\n    var getHeight = function (cell) {\n      return needManualCalc() ? getCalculatedHeight(cell) : getProp(cell, 'height', get$3(cell));\n    };\n    var RuntimeSize = {\n      getWidth: getWidth,\n      getHeight: getHeight\n    };\n\n    var genericSizeRegex = /(\\d+(\\.\\d+)?)(\\w|%)*/;\n    var percentageBasedSizeRegex = /(\\d+(\\.\\d+)?)%/;\n    var pixelBasedSizeRegex = /(\\d+(\\.\\d+)?)px|em/;\n    var setPixelWidth = function (cell, amount) {\n      set$1(cell, 'width', amount + 'px');\n    };\n    var setPercentageWidth = function (cell, amount) {\n      set$1(cell, 'width', amount + '%');\n    };\n    var setHeight = function (cell, amount) {\n      set$1(cell, 'height', amount + 'px');\n    };\n    var getHeightValue = function (cell) {\n      return getRaw(cell, 'height').getOrThunk(function () {\n        return RuntimeSize.getHeight(cell) + 'px';\n      });\n    };\n    var convert = function (cell, number, getter, setter) {\n      var newSize = TableLookup.table(cell).map(function (table) {\n        var total = getter(table);\n        return Math.floor(number / 100 * total);\n      }).getOr(number);\n      setter(cell, newSize);\n      return newSize;\n    };\n    var normalizePixelSize = function (value, cell, getter, setter) {\n      var number = parseInt(value, 10);\n      return endsWith(value, '%') && name(cell) !== 'table' ? convert(cell, number, getter, setter) : number;\n    };\n    var getTotalHeight = function (cell) {\n      var value = getHeightValue(cell);\n      if (!value) {\n        return get$3(cell);\n      }\n      return normalizePixelSize(value, cell, get$3, setHeight);\n    };\n    var get$5 = function (cell, type, f) {\n      var v = f(cell);\n      var span = getSpan(cell, type);\n      return v / span;\n    };\n    var getSpan = function (cell, type) {\n      return has(cell, type) ? parseInt(get(cell, type), 10) : 1;\n    };\n    var getRawWidth = function (element) {\n      var cssWidth = getRaw(element, 'width');\n      return cssWidth.fold(function () {\n        return Option.from(get(element, 'width'));\n      }, function (width) {\n        return Option.some(width);\n      });\n    };\n    var normalizePercentageWidth = function (cellWidth, tableSize) {\n      return cellWidth / tableSize.pixelWidth() * 100;\n    };\n    var choosePercentageSize = function (element, width, tableSize) {\n      var percentMatch = percentageBasedSizeRegex.exec(width);\n      if (percentMatch !== null) {\n        return parseFloat(percentMatch[1]);\n      } else {\n        var intWidth = get$4(element);\n        return normalizePercentageWidth(intWidth, tableSize);\n      }\n    };\n    var getPercentageWidth = function (cell, tableSize) {\n      var width = getRawWidth(cell);\n      return width.fold(function () {\n        var intWidth = get$4(cell);\n        return normalizePercentageWidth(intWidth, tableSize);\n      }, function (w) {\n        return choosePercentageSize(cell, w, tableSize);\n      });\n    };\n    var normalizePixelWidth = function (cellWidth, tableSize) {\n      return cellWidth / 100 * tableSize.pixelWidth();\n    };\n    var choosePixelSize = function (element, width, tableSize) {\n      var pixelMatch = pixelBasedSizeRegex.exec(width);\n      if (pixelMatch !== null) {\n        return parseInt(pixelMatch[1], 10);\n      }\n      var percentMatch = percentageBasedSizeRegex.exec(width);\n      if (percentMatch !== null) {\n        var floatWidth = parseFloat(percentMatch[1]);\n        return normalizePixelWidth(floatWidth, tableSize);\n      }\n      return get$4(element);\n    };\n    var getPixelWidth = function (cell, tableSize) {\n      var width = getRawWidth(cell);\n      return width.fold(function () {\n        return get$4(cell);\n      }, function (w) {\n        return choosePixelSize(cell, w, tableSize);\n      });\n    };\n    var getHeight$1 = function (cell) {\n      return get$5(cell, 'rowspan', getTotalHeight);\n    };\n    var getGenericWidth = function (cell) {\n      var width = getRawWidth(cell);\n      return width.bind(function (w) {\n        var match = genericSizeRegex.exec(w);\n        if (match !== null) {\n          return Option.some({\n            width: constant(parseFloat(match[1])),\n            unit: constant(match[3])\n          });\n        } else {\n          return Option.none();\n        }\n      });\n    };\n    var setGenericWidth = function (cell, amount, unit) {\n      set$1(cell, 'width', amount + unit);\n    };\n    var Sizes = {\n      percentageBasedSizeRegex: constant(percentageBasedSizeRegex),\n      pixelBasedSizeRegex: constant(pixelBasedSizeRegex),\n      setPixelWidth: setPixelWidth,\n      setPercentageWidth: setPercentageWidth,\n      setHeight: setHeight,\n      getPixelWidth: getPixelWidth,\n      getPercentageWidth: getPercentageWidth,\n      getGenericWidth: getGenericWidth,\n      setGenericWidth: setGenericWidth,\n      getHeight: getHeight$1,\n      getRawWidth: getRawWidth\n    };\n\n    var halve = function (main, other) {\n      var width = Sizes.getGenericWidth(main);\n      width.each(function (w) {\n        var newWidth = w.width() / 2;\n        Sizes.setGenericWidth(main, newWidth, w.unit());\n        Sizes.setGenericWidth(other, newWidth, w.unit());\n      });\n    };\n    var CellMutations = { halve: halve };\n\n    var r = function (left, top) {\n      var translate = function (x, y) {\n        return r(left + x, top + y);\n      };\n      return {\n        left: constant(left),\n        top: constant(top),\n        translate: translate\n      };\n    };\n    var Position = r;\n\n    var boxPosition = function (dom) {\n      var box = dom.getBoundingClientRect();\n      return Position(box.left, box.top);\n    };\n    var firstDefinedOrZero = function (a, b) {\n      return a !== undefined ? a : b !== undefined ? b : 0;\n    };\n    var absolute = function (element) {\n      var doc = element.dom().ownerDocument;\n      var body = doc.body;\n      var win = doc.defaultView;\n      var html = doc.documentElement;\n      var scrollTop = firstDefinedOrZero(win.pageYOffset, html.scrollTop);\n      var scrollLeft = firstDefinedOrZero(win.pageXOffset, html.scrollLeft);\n      var clientTop = firstDefinedOrZero(html.clientTop, body.clientTop);\n      var clientLeft = firstDefinedOrZero(html.clientLeft, body.clientLeft);\n      return viewport(element).translate(scrollLeft - clientLeft, scrollTop - clientTop);\n    };\n    var viewport = function (element) {\n      var dom = element.dom();\n      var doc = dom.ownerDocument;\n      var body = doc.body;\n      if (body === dom) {\n        return Position(body.offsetLeft, body.offsetTop);\n      }\n      if (!inBody(element)) {\n        return Position(0, 0);\n      }\n      return boxPosition(dom);\n    };\n\n    var rowInfo = Immutable('row', 'y');\n    var colInfo = Immutable('col', 'x');\n    var rtlEdge = function (cell) {\n      var pos = absolute(cell);\n      return pos.left() + getOuter$1(cell);\n    };\n    var ltrEdge = function (cell) {\n      return absolute(cell).left();\n    };\n    var getLeftEdge = function (index, cell) {\n      return colInfo(index, ltrEdge(cell));\n    };\n    var getRightEdge = function (index, cell) {\n      return colInfo(index, rtlEdge(cell));\n    };\n    var getTop = function (cell) {\n      return absolute(cell).top();\n    };\n    var getTopEdge = function (index, cell) {\n      return rowInfo(index, getTop(cell));\n    };\n    var getBottomEdge = function (index, cell) {\n      return rowInfo(index, getTop(cell) + getOuter(cell));\n    };\n    var findPositions = function (getInnerEdge, getOuterEdge, array) {\n      if (array.length === 0) {\n        return [];\n      }\n      var lines = map(array.slice(1), function (cellOption, index) {\n        return cellOption.map(function (cell) {\n          return getInnerEdge(index, cell);\n        });\n      });\n      var lastLine = array[array.length - 1].map(function (cell) {\n        return getOuterEdge(array.length - 1, cell);\n      });\n      return lines.concat([lastLine]);\n    };\n    var negate = function (step) {\n      return -step;\n    };\n    var height = {\n      delta: identity,\n      positions: function (optElements) {\n        return findPositions(getTopEdge, getBottomEdge, optElements);\n      },\n      edge: getTop\n    };\n    var ltr = {\n      delta: identity,\n      edge: ltrEdge,\n      positions: function (optElements) {\n        return findPositions(getLeftEdge, getRightEdge, optElements);\n      }\n    };\n    var rtl = {\n      delta: negate,\n      edge: rtlEdge,\n      positions: function (optElements) {\n        return findPositions(getRightEdge, getLeftEdge, optElements);\n      }\n    };\n    var BarPositions = {\n      height: height,\n      rtl: rtl,\n      ltr: ltr\n    };\n\n    var ResizeDirection = {\n      ltr: BarPositions.ltr,\n      rtl: BarPositions.rtl\n    };\n\n    function TableDirection (directionAt) {\n      var auto = function (table) {\n        return directionAt(table).isRtl() ? ResizeDirection.rtl : ResizeDirection.ltr;\n      };\n      var delta = function (amount, table) {\n        return auto(table).delta(amount, table);\n      };\n      var positions = function (cols, table) {\n        return auto(table).positions(cols, table);\n      };\n      var edge = function (cell) {\n        return auto(cell).edge(cell);\n      };\n      return {\n        delta: delta,\n        edge: edge,\n        positions: positions\n      };\n    }\n\n    var getGridSize = function (table) {\n      var input = DetailsList.fromTable(table);\n      var warehouse = Warehouse.generate(input);\n      return warehouse.grid();\n    };\n    var TableGridSize = { getGridSize: getGridSize };\n\n    var __assign = function () {\n      __assign = Object.assign || function __assign(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n              t[p] = s[p];\n        }\n        return t;\n      };\n      return __assign.apply(this, arguments);\n    };\n\n    var cat = function (arr) {\n      var r = [];\n      var push = function (x) {\n        r.push(x);\n      };\n      for (var i = 0; i < arr.length; i++) {\n        arr[i].each(push);\n      }\n      return r;\n    };\n    var findMap = function (arr, f) {\n      for (var i = 0; i < arr.length; i++) {\n        var r = f(arr[i], i);\n        if (r.isSome()) {\n          return r;\n        }\n      }\n      return Option.none();\n    };\n\n    var setIfNot = function (element, property, value, ignore) {\n      if (value === ignore) {\n        remove(element, property);\n      } else {\n        set(element, property, value);\n      }\n    };\n    var render = function (table, grid) {\n      var newRows = [];\n      var newCells = [];\n      var renderSection = function (gridSection, sectionName) {\n        var section = child$2(table, sectionName).getOrThunk(function () {\n          var tb = Element.fromTag(sectionName, owner(table).dom());\n          append(table, tb);\n          return tb;\n        });\n        empty(section);\n        var rows = map(gridSection, function (row) {\n          if (row.isNew()) {\n            newRows.push(row.element());\n          }\n          var tr = row.element();\n          empty(tr);\n          each(row.cells(), function (cell) {\n            if (cell.isNew()) {\n              newCells.push(cell.element());\n            }\n            setIfNot(cell.element(), 'colspan', cell.colspan(), 1);\n            setIfNot(cell.element(), 'rowspan', cell.rowspan(), 1);\n            append(tr, cell.element());\n          });\n          return tr;\n        });\n        append$1(section, rows);\n      };\n      var removeSection = function (sectionName) {\n        child$2(table, sectionName).each(remove$2);\n      };\n      var renderOrRemoveSection = function (gridSection, sectionName) {\n        if (gridSection.length > 0) {\n          renderSection(gridSection, sectionName);\n        } else {\n          removeSection(sectionName);\n        }\n      };\n      var headSection = [];\n      var bodySection = [];\n      var footSection = [];\n      each(grid, function (row) {\n        switch (row.section()) {\n        case 'thead':\n          headSection.push(row);\n          break;\n        case 'tbody':\n          bodySection.push(row);\n          break;\n        case 'tfoot':\n          footSection.push(row);\n          break;\n        }\n      });\n      renderOrRemoveSection(headSection, 'thead');\n      renderOrRemoveSection(bodySection, 'tbody');\n      renderOrRemoveSection(footSection, 'tfoot');\n      return {\n        newRows: constant(newRows),\n        newCells: constant(newCells)\n      };\n    };\n    var copy$2 = function (grid) {\n      var rows = map(grid, function (row) {\n        var tr = shallow(row.element());\n        each(row.cells(), function (cell) {\n          var clonedCell = deep(cell.element());\n          setIfNot(clonedCell, 'colspan', cell.colspan(), 1);\n          setIfNot(clonedCell, 'rowspan', cell.rowspan(), 1);\n          append(tr, clonedCell);\n        });\n        return tr;\n      });\n      return rows;\n    };\n    var Redraw = {\n      render: render,\n      copy: copy$2\n    };\n\n    var read = function (element, attr) {\n      var value = get(element, attr);\n      return value === undefined || value === '' ? [] : value.split(' ');\n    };\n    var add = function (element, attr, id) {\n      var old = read(element, attr);\n      var nu = old.concat([id]);\n      set(element, attr, nu.join(' '));\n      return true;\n    };\n    var remove$3 = function (element, attr, id) {\n      var nu = filter(read(element, attr), function (v) {\n        return v !== id;\n      });\n      if (nu.length > 0) {\n        set(element, attr, nu.join(' '));\n      } else {\n        remove(element, attr);\n      }\n      return false;\n    };\n\n    var supports = function (element) {\n      return element.dom().classList !== undefined;\n    };\n    var get$6 = function (element) {\n      return read(element, 'class');\n    };\n    var add$1 = function (element, clazz) {\n      return add(element, 'class', clazz);\n    };\n    var remove$4 = function (element, clazz) {\n      return remove$3(element, 'class', clazz);\n    };\n\n    var add$2 = function (element, clazz) {\n      if (supports(element)) {\n        element.dom().classList.add(clazz);\n      } else {\n        add$1(element, clazz);\n      }\n    };\n    var cleanClass = function (element) {\n      var classList = supports(element) ? element.dom().classList : get$6(element);\n      if (classList.length === 0) {\n        remove(element, 'class');\n      }\n    };\n    var remove$5 = function (element, clazz) {\n      if (supports(element)) {\n        var classList = element.dom().classList;\n        classList.remove(clazz);\n      } else {\n        remove$4(element, clazz);\n      }\n      cleanClass(element);\n    };\n    var has$1 = function (element, clazz) {\n      return supports(element) && element.dom().classList.contains(clazz);\n    };\n\n    var repeat = function (repititions, f) {\n      var r = [];\n      for (var i = 0; i < repititions; i++) {\n        r.push(f(i));\n      }\n      return r;\n    };\n    var range = function (start, end) {\n      var r = [];\n      for (var i = start; i < end; i++) {\n        r.push(i);\n      }\n      return r;\n    };\n    var deduce = function (xs, index) {\n      if (index < 0 || index >= xs.length - 1) {\n        return Option.none();\n      }\n      var current = xs[index].fold(function () {\n        var rest = reverse(xs.slice(0, index));\n        return findMap(rest, function (a, i) {\n          return a.map(function (aa) {\n            return {\n              value: aa,\n              delta: i + 1\n            };\n          });\n        });\n      }, function (c) {\n        return Option.some({\n          value: c,\n          delta: 0\n        });\n      });\n      var next = xs[index + 1].fold(function () {\n        var rest = xs.slice(index + 1);\n        return findMap(rest, function (a, i) {\n          return a.map(function (aa) {\n            return {\n              value: aa,\n              delta: i + 1\n            };\n          });\n        });\n      }, function (n) {\n        return Option.some({\n          value: n,\n          delta: 1\n        });\n      });\n      return current.bind(function (c) {\n        return next.map(function (n) {\n          var extras = n.delta + c.delta;\n          return Math.abs(n.value - c.value) / extras;\n        });\n      });\n    };\n\n    var columns = function (warehouse) {\n      var grid = warehouse.grid();\n      var cols = range(0, grid.columns());\n      var rowsArr = range(0, grid.rows());\n      return map(cols, function (col) {\n        var getBlock = function () {\n          return bind(rowsArr, function (r) {\n            return Warehouse.getAt(warehouse, r, col).filter(function (detail) {\n              return detail.column() === col;\n            }).fold(constant([]), function (detail) {\n              return [detail];\n            });\n          });\n        };\n        var isSingle = function (detail) {\n          return detail.colspan() === 1;\n        };\n        var getFallback = function () {\n          return Warehouse.getAt(warehouse, 0, col);\n        };\n        return decide(getBlock, isSingle, getFallback);\n      });\n    };\n    var decide = function (getBlock, isSingle, getFallback) {\n      var inBlock = getBlock();\n      var singleInBlock = find(inBlock, isSingle);\n      var detailOption = singleInBlock.orThunk(function () {\n        return Option.from(inBlock[0]).orThunk(getFallback);\n      });\n      return detailOption.map(function (detail) {\n        return detail.element();\n      });\n    };\n    var rows$1 = function (warehouse) {\n      var grid = warehouse.grid();\n      var rowsArr = range(0, grid.rows());\n      var cols = range(0, grid.columns());\n      return map(rowsArr, function (row) {\n        var getBlock = function () {\n          return bind(cols, function (c) {\n            return Warehouse.getAt(warehouse, row, c).filter(function (detail) {\n              return detail.row() === row;\n            }).fold(constant([]), function (detail) {\n              return [detail];\n            });\n          });\n        };\n        var isSingle = function (detail) {\n          return detail.rowspan() === 1;\n        };\n        var getFallback = function () {\n          return Warehouse.getAt(warehouse, row, 0);\n        };\n        return decide(getBlock, isSingle, getFallback);\n      });\n    };\n    var Blocks = {\n      columns: columns,\n      rows: rows$1\n    };\n\n    var css = function (namespace) {\n      var dashNamespace = namespace.replace(/\\./g, '-');\n      var resolve = function (str) {\n        return dashNamespace + '-' + str;\n      };\n      return { resolve: resolve };\n    };\n\n    var styles = css('ephox-snooker');\n    var Styles = { resolve: styles.resolve };\n\n    var col = function (column, x, y, w, h) {\n      var blocker = Element.fromTag('div');\n      setAll$1(blocker, {\n        position: 'absolute',\n        left: x - w / 2 + 'px',\n        top: y + 'px',\n        height: h + 'px',\n        width: w + 'px'\n      });\n      setAll(blocker, {\n        'data-column': column,\n        'role': 'presentation'\n      });\n      return blocker;\n    };\n    var row$1 = function (r, x, y, w, h) {\n      var blocker = Element.fromTag('div');\n      setAll$1(blocker, {\n        position: 'absolute',\n        left: x + 'px',\n        top: y - h / 2 + 'px',\n        height: h + 'px',\n        width: w + 'px'\n      });\n      setAll(blocker, {\n        'data-row': r,\n        'role': 'presentation'\n      });\n      return blocker;\n    };\n    var Bar = {\n      col: col,\n      row: row$1\n    };\n\n    var resizeBar = Styles.resolve('resizer-bar');\n    var resizeRowBar = Styles.resolve('resizer-rows');\n    var resizeColBar = Styles.resolve('resizer-cols');\n    var BAR_THICKNESS = 7;\n    var destroy = function (wire) {\n      var previous = descendants$1(wire.parent(), '.' + resizeBar);\n      each(previous, remove$2);\n    };\n    var drawBar = function (wire, positions, create) {\n      var origin = wire.origin();\n      each(positions, function (cpOption, i) {\n        cpOption.each(function (cp) {\n          var bar = create(origin, cp);\n          add$2(bar, resizeBar);\n          append(wire.parent(), bar);\n        });\n      });\n    };\n    var refreshCol = function (wire, colPositions, position, tableHeight) {\n      drawBar(wire, colPositions, function (origin, cp) {\n        var colBar = Bar.col(cp.col(), cp.x() - origin.left(), position.top() - origin.top(), BAR_THICKNESS, tableHeight);\n        add$2(colBar, resizeColBar);\n        return colBar;\n      });\n    };\n    var refreshRow = function (wire, rowPositions, position, tableWidth) {\n      drawBar(wire, rowPositions, function (origin, cp) {\n        var rowBar = Bar.row(cp.row(), position.left() - origin.left(), cp.y() - origin.top(), tableWidth, BAR_THICKNESS);\n        add$2(rowBar, resizeRowBar);\n        return rowBar;\n      });\n    };\n    var refreshGrid = function (wire, table, rows, cols, hdirection, vdirection) {\n      var position = absolute(table);\n      var rowPositions = rows.length > 0 ? hdirection.positions(rows, table) : [];\n      refreshRow(wire, rowPositions, position, getOuter$1(table));\n      var colPositions = cols.length > 0 ? vdirection.positions(cols, table) : [];\n      refreshCol(wire, colPositions, position, getOuter(table));\n    };\n    var refresh = function (wire, table, hdirection, vdirection) {\n      destroy(wire);\n      var list = DetailsList.fromTable(table);\n      var warehouse = Warehouse.generate(list);\n      var rows = Blocks.rows(warehouse);\n      var cols = Blocks.columns(warehouse);\n      refreshGrid(wire, table, rows, cols, hdirection, vdirection);\n    };\n    var each$2 = function (wire, f) {\n      var bars = descendants$1(wire.parent(), '.' + resizeBar);\n      each(bars, f);\n    };\n    var hide = function (wire) {\n      each$2(wire, function (bar) {\n        set$1(bar, 'display', 'none');\n      });\n    };\n    var show = function (wire) {\n      each$2(wire, function (bar) {\n        set$1(bar, 'display', 'block');\n      });\n    };\n    var isRowBar = function (element) {\n      return has$1(element, resizeRowBar);\n    };\n    var isColBar = function (element) {\n      return has$1(element, resizeColBar);\n    };\n    var Bars = {\n      refresh: refresh,\n      hide: hide,\n      show: show,\n      destroy: destroy,\n      isRowBar: isRowBar,\n      isColBar: isColBar\n    };\n\n    var addCell = function (gridRow, index, cell) {\n      var cells = gridRow.cells();\n      var before = cells.slice(0, index);\n      var after = cells.slice(index);\n      var newCells = before.concat([cell]).concat(after);\n      return setCells(gridRow, newCells);\n    };\n    var mutateCell = function (gridRow, index, cell) {\n      var cells = gridRow.cells();\n      cells[index] = cell;\n    };\n    var setCells = function (gridRow, cells) {\n      return rowcells(cells, gridRow.section());\n    };\n    var mapCells = function (gridRow, f) {\n      var cells = gridRow.cells();\n      var r = map(cells, f);\n      return rowcells(r, gridRow.section());\n    };\n    var getCell = function (gridRow, index) {\n      return gridRow.cells()[index];\n    };\n    var getCellElement = function (gridRow, index) {\n      return getCell(gridRow, index).element();\n    };\n    var cellLength = function (gridRow) {\n      return gridRow.cells().length;\n    };\n    var GridRow = {\n      addCell: addCell,\n      setCells: setCells,\n      mutateCell: mutateCell,\n      getCell: getCell,\n      getCellElement: getCellElement,\n      mapCells: mapCells,\n      cellLength: cellLength\n    };\n\n    var getColumn = function (grid, index) {\n      return map(grid, function (row) {\n        return GridRow.getCell(row, index);\n      });\n    };\n    var getRow = function (grid, index) {\n      return grid[index];\n    };\n    var findDiff = function (xs, comp) {\n      if (xs.length === 0) {\n        return 0;\n      }\n      var first = xs[0];\n      var index = findIndex(xs, function (x) {\n        return !comp(first.element(), x.element());\n      });\n      return index.fold(function () {\n        return xs.length;\n      }, function (ind) {\n        return ind;\n      });\n    };\n    var subgrid = function (grid, row, column, comparator) {\n      var restOfRow = getRow(grid, row).cells().slice(column);\n      var endColIndex = findDiff(restOfRow, comparator);\n      var restOfColumn = getColumn(grid, column).slice(row);\n      var endRowIndex = findDiff(restOfColumn, comparator);\n      return {\n        colspan: constant(endColIndex),\n        rowspan: constant(endRowIndex)\n      };\n    };\n    var TableGrid = { subgrid: subgrid };\n\n    var toDetails = function (grid, comparator) {\n      var seen = map(grid, function (row, ri) {\n        return map(row.cells(), function (col, ci) {\n          return false;\n        });\n      });\n      var updateSeen = function (ri, ci, rowspan, colspan) {\n        for (var r = ri; r < ri + rowspan; r++) {\n          for (var c = ci; c < ci + colspan; c++) {\n            seen[r][c] = true;\n          }\n        }\n      };\n      return map(grid, function (row, ri) {\n        var details = bind(row.cells(), function (cell, ci) {\n          if (seen[ri][ci] === false) {\n            var result = TableGrid.subgrid(grid, ri, ci, comparator);\n            updateSeen(ri, ci, result.rowspan(), result.colspan());\n            return [detailnew(cell.element(), result.rowspan(), result.colspan(), cell.isNew())];\n          } else {\n            return [];\n          }\n        });\n        return rowdetails(details, row.section());\n      });\n    };\n    var toGrid = function (warehouse, generators, isNew) {\n      var grid = [];\n      for (var i = 0; i < warehouse.grid().rows(); i++) {\n        var rowCells = [];\n        for (var j = 0; j < warehouse.grid().columns(); j++) {\n          var element = Warehouse.getAt(warehouse, i, j).map(function (item) {\n            return elementnew(item.element(), isNew);\n          }).getOrThunk(function () {\n            return elementnew(generators.gap(), true);\n          });\n          rowCells.push(element);\n        }\n        var row = rowcells(rowCells, warehouse.all()[i].section());\n        grid.push(row);\n      }\n      return grid;\n    };\n    var Transitions = {\n      toDetails: toDetails,\n      toGrid: toGrid\n    };\n\n    var fromWarehouse = function (warehouse, generators) {\n      return Transitions.toGrid(warehouse, generators, false);\n    };\n    var deriveRows = function (rendered, generators) {\n      var findRow = function (details) {\n        var rowOfCells = findMap(details, function (detail) {\n          return parent(detail.element()).map(function (row) {\n            var isNew = parent(row).isNone();\n            return elementnew(row, isNew);\n          });\n        });\n        return rowOfCells.getOrThunk(function () {\n          return elementnew(generators.row(), true);\n        });\n      };\n      return map(rendered, function (details) {\n        var row = findRow(details.details());\n        return rowdatanew(row.element(), details.details(), details.section(), row.isNew());\n      });\n    };\n    var toDetailList = function (grid, generators) {\n      var rendered = Transitions.toDetails(grid, eq);\n      return deriveRows(rendered, generators);\n    };\n    var findInWarehouse = function (warehouse, element) {\n      var all = flatten(map(warehouse.all(), function (r) {\n        return r.cells();\n      }));\n      return find(all, function (e) {\n        return eq(element, e.element());\n      });\n    };\n    var run = function (operation, extract, adjustment, postAction, genWrappers) {\n      return function (wire, table, target, generators, direction) {\n        var input = DetailsList.fromTable(table);\n        var warehouse = Warehouse.generate(input);\n        var output = extract(warehouse, target).map(function (info) {\n          var model = fromWarehouse(warehouse, generators);\n          var result = operation(model, info, eq, genWrappers(generators));\n          var grid = toDetailList(result.grid(), generators);\n          return {\n            grid: constant(grid),\n            cursor: result.cursor\n          };\n        });\n        return output.fold(function () {\n          return Option.none();\n        }, function (out) {\n          var newElements = Redraw.render(table, out.grid());\n          adjustment(table, out.grid(), direction);\n          postAction(table);\n          Bars.refresh(wire, table, BarPositions.height, direction);\n          return Option.some({\n            cursor: out.cursor,\n            newRows: newElements.newRows,\n            newCells: newElements.newCells\n          });\n        });\n      };\n    };\n    var onCell = function (warehouse, target) {\n      return TableLookup.cell(target.element()).bind(function (cell) {\n        return findInWarehouse(warehouse, cell);\n      });\n    };\n    var onPaste = function (warehouse, target) {\n      return TableLookup.cell(target.element()).bind(function (cell) {\n        return findInWarehouse(warehouse, cell).map(function (details) {\n          var value = __assign(__assign({}, details), {\n            generators: target.generators,\n            clipboard: target.clipboard\n          });\n          return value;\n        });\n      });\n    };\n    var onPasteRows = function (warehouse, target) {\n      var details = map(target.selection(), function (cell) {\n        return TableLookup.cell(cell).bind(function (lc) {\n          return findInWarehouse(warehouse, lc);\n        });\n      });\n      var cells = cat(details);\n      return cells.length > 0 ? Option.some({\n        cells: cells,\n        generators: target.generators,\n        clipboard: target.clipboard\n      }) : Option.none();\n    };\n    var onMergable = function (_warehouse, target) {\n      return target.mergable();\n    };\n    var onUnmergable = function (_warehouse, target) {\n      return target.unmergable();\n    };\n    var onCells = function (warehouse, target) {\n      var details = map(target.selection(), function (cell) {\n        return TableLookup.cell(cell).bind(function (lc) {\n          return findInWarehouse(warehouse, lc);\n        });\n      });\n      var cells = cat(details);\n      return cells.length > 0 ? Option.some(cells) : Option.none();\n    };\n\n    var value = function (o) {\n      var is = function (v) {\n        return o === v;\n      };\n      var or = function (opt) {\n        return value(o);\n      };\n      var orThunk = function (f) {\n        return value(o);\n      };\n      var map = function (f) {\n        return value(f(o));\n      };\n      var mapError = function (f) {\n        return value(o);\n      };\n      var each = function (f) {\n        f(o);\n      };\n      var bind = function (f) {\n        return f(o);\n      };\n      var fold = function (_, onValue) {\n        return onValue(o);\n      };\n      var exists = function (f) {\n        return f(o);\n      };\n      var forall = function (f) {\n        return f(o);\n      };\n      var toOption = function () {\n        return Option.some(o);\n      };\n      return {\n        is: is,\n        isValue: always,\n        isError: never,\n        getOr: constant(o),\n        getOrThunk: constant(o),\n        getOrDie: constant(o),\n        or: or,\n        orThunk: orThunk,\n        fold: fold,\n        map: map,\n        mapError: mapError,\n        each: each,\n        bind: bind,\n        exists: exists,\n        forall: forall,\n        toOption: toOption\n      };\n    };\n    var error = function (message) {\n      var getOrThunk = function (f) {\n        return f();\n      };\n      var getOrDie = function () {\n        return die(String(message))();\n      };\n      var or = function (opt) {\n        return opt;\n      };\n      var orThunk = function (f) {\n        return f();\n      };\n      var map = function (f) {\n        return error(message);\n      };\n      var mapError = function (f) {\n        return error(f(message));\n      };\n      var bind = function (f) {\n        return error(message);\n      };\n      var fold = function (onError, _) {\n        return onError(message);\n      };\n      return {\n        is: never,\n        isValue: never,\n        isError: always,\n        getOr: identity,\n        getOrThunk: getOrThunk,\n        getOrDie: getOrDie,\n        or: or,\n        orThunk: orThunk,\n        fold: fold,\n        map: map,\n        mapError: mapError,\n        each: noop,\n        bind: bind,\n        exists: never,\n        forall: always,\n        toOption: Option.none\n      };\n    };\n    var fromOption = function (opt, err) {\n      return opt.fold(function () {\n        return error(err);\n      }, value);\n    };\n    var Result = {\n      value: value,\n      error: error,\n      fromOption: fromOption\n    };\n\n    var measure = function (startAddress, gridA, gridB) {\n      if (startAddress.row() >= gridA.length || startAddress.column() > GridRow.cellLength(gridA[0])) {\n        return Result.error('invalid start address out of table bounds, row: ' + startAddress.row() + ', column: ' + startAddress.column());\n      }\n      var rowRemainder = gridA.slice(startAddress.row());\n      var colRemainder = rowRemainder[0].cells().slice(startAddress.column());\n      var colRequired = GridRow.cellLength(gridB[0]);\n      var rowRequired = gridB.length;\n      return Result.value({\n        rowDelta: constant(rowRemainder.length - rowRequired),\n        colDelta: constant(colRemainder.length - colRequired)\n      });\n    };\n    var measureWidth = function (gridA, gridB) {\n      var colLengthA = GridRow.cellLength(gridA[0]);\n      var colLengthB = GridRow.cellLength(gridB[0]);\n      return {\n        rowDelta: constant(0),\n        colDelta: constant(colLengthA - colLengthB)\n      };\n    };\n    var fill = function (cells, generator) {\n      return map(cells, function () {\n        return elementnew(generator.cell(), true);\n      });\n    };\n    var rowFill = function (grid, amount, generator) {\n      return grid.concat(repeat(amount, function (_row) {\n        return GridRow.setCells(grid[grid.length - 1], fill(grid[grid.length - 1].cells(), generator));\n      }));\n    };\n    var colFill = function (grid, amount, generator) {\n      return map(grid, function (row) {\n        return GridRow.setCells(row, row.cells().concat(fill(range(0, amount), generator)));\n      });\n    };\n    var tailor = function (gridA, delta, generator) {\n      var fillCols = delta.colDelta() < 0 ? colFill : identity;\n      var fillRows = delta.rowDelta() < 0 ? rowFill : identity;\n      var modifiedCols = fillCols(gridA, Math.abs(delta.colDelta()), generator);\n      var tailoredGrid = fillRows(modifiedCols, Math.abs(delta.rowDelta()), generator);\n      return tailoredGrid;\n    };\n    var Fitment = {\n      measure: measure,\n      measureWidth: measureWidth,\n      tailor: tailor\n    };\n\n    var merge = function (grid, bounds, comparator, substitution) {\n      if (grid.length === 0) {\n        return grid;\n      }\n      for (var i = bounds.startRow(); i <= bounds.finishRow(); i++) {\n        for (var j = bounds.startCol(); j <= bounds.finishCol(); j++) {\n          GridRow.mutateCell(grid[i], j, elementnew(substitution(), false));\n        }\n      }\n      return grid;\n    };\n    var unmerge = function (grid, target, comparator, substitution) {\n      var first = true;\n      for (var i = 0; i < grid.length; i++) {\n        for (var j = 0; j < GridRow.cellLength(grid[0]); j++) {\n          var current = GridRow.getCellElement(grid[i], j);\n          var isToReplace = comparator(current, target);\n          if (isToReplace === true && first === false) {\n            GridRow.mutateCell(grid[i], j, elementnew(substitution(), true));\n          } else if (isToReplace === true) {\n            first = false;\n          }\n        }\n      }\n      return grid;\n    };\n    var uniqueCells = function (row, comparator) {\n      return foldl(row, function (rest, cell) {\n        return exists(rest, function (currentCell) {\n          return comparator(currentCell.element(), cell.element());\n        }) ? rest : rest.concat([cell]);\n      }, []);\n    };\n    var splitRows = function (grid, index, comparator, substitution) {\n      if (index > 0 && index < grid.length) {\n        var rowPrevCells = grid[index - 1].cells();\n        var cells = uniqueCells(rowPrevCells, comparator);\n        each(cells, function (cell) {\n          var replacement = Option.none();\n          var _loop_1 = function (i) {\n            var _loop_2 = function (j) {\n              var current = grid[i].cells()[j];\n              var isToReplace = comparator(current.element(), cell.element());\n              if (isToReplace) {\n                if (replacement.isNone()) {\n                  replacement = Option.some(substitution());\n                }\n                replacement.each(function (sub) {\n                  GridRow.mutateCell(grid[i], j, elementnew(sub, true));\n                });\n              }\n            };\n            for (var j = 0; j < GridRow.cellLength(grid[0]); j++) {\n              _loop_2(j);\n            }\n          };\n          for (var i = index; i < grid.length; i++) {\n            _loop_1(i);\n          }\n        });\n      }\n      return grid;\n    };\n    var MergingOperations = {\n      merge: merge,\n      unmerge: unmerge,\n      splitRows: splitRows\n    };\n\n    var isSpanning = function (grid, row, col, comparator) {\n      var candidate = GridRow.getCell(grid[row], col);\n      var matching = curry(comparator, candidate.element());\n      var currentRow = grid[row];\n      return grid.length > 1 && GridRow.cellLength(currentRow) > 1 && (col > 0 && matching(GridRow.getCellElement(currentRow, col - 1)) || col < currentRow.cells().length - 1 && matching(GridRow.getCellElement(currentRow, col + 1)) || row > 0 && matching(GridRow.getCellElement(grid[row - 1], col)) || row < grid.length - 1 && matching(GridRow.getCellElement(grid[row + 1], col)));\n    };\n    var mergeTables = function (startAddress, gridA, gridB, generator, comparator) {\n      var startRow = startAddress.row();\n      var startCol = startAddress.column();\n      var mergeHeight = gridB.length;\n      var mergeWidth = GridRow.cellLength(gridB[0]);\n      var endRow = startRow + mergeHeight;\n      var endCol = startCol + mergeWidth;\n      for (var r = startRow; r < endRow; r++) {\n        for (var c = startCol; c < endCol; c++) {\n          if (isSpanning(gridA, r, c, comparator)) {\n            MergingOperations.unmerge(gridA, GridRow.getCellElement(gridA[r], c), comparator, generator.cell);\n          }\n          var newCell = GridRow.getCellElement(gridB[r - startRow], c - startCol);\n          var replacement = generator.replace(newCell);\n          GridRow.mutateCell(gridA[r], c, elementnew(replacement, true));\n        }\n      }\n      return gridA;\n    };\n    var merge$1 = function (startAddress, gridA, gridB, generator, comparator) {\n      var result = Fitment.measure(startAddress, gridA, gridB);\n      return result.map(function (delta) {\n        var fittedGrid = Fitment.tailor(gridA, delta, generator);\n        return mergeTables(startAddress, fittedGrid, gridB, generator, comparator);\n      });\n    };\n    var insert = function (index, gridA, gridB, generator, comparator) {\n      MergingOperations.splitRows(gridA, index, comparator, generator.cell);\n      var delta = Fitment.measureWidth(gridB, gridA);\n      var fittedNewGrid = Fitment.tailor(gridB, delta, generator);\n      var secondDelta = Fitment.measureWidth(gridA, fittedNewGrid);\n      var fittedOldGrid = Fitment.tailor(gridA, secondDelta, generator);\n      return fittedOldGrid.slice(0, index).concat(fittedNewGrid).concat(fittedOldGrid.slice(index, fittedOldGrid.length));\n    };\n    var TableMerge = {\n      merge: merge$1,\n      insert: insert\n    };\n\n    var insertRowAt = function (grid, index, example, comparator, substitution) {\n      var before = grid.slice(0, index);\n      var after = grid.slice(index);\n      var between = GridRow.mapCells(grid[example], function (ex, c) {\n        var withinSpan = index > 0 && index < grid.length && comparator(GridRow.getCellElement(grid[index - 1], c), GridRow.getCellElement(grid[index], c));\n        var ret = withinSpan ? GridRow.getCell(grid[index], c) : elementnew(substitution(ex.element(), comparator), true);\n        return ret;\n      });\n      return before.concat([between]).concat(after);\n    };\n    var insertColumnAt = function (grid, index, example, comparator, substitution) {\n      return map(grid, function (row) {\n        var withinSpan = index > 0 && index < GridRow.cellLength(row) && comparator(GridRow.getCellElement(row, index - 1), GridRow.getCellElement(row, index));\n        var sub = withinSpan ? GridRow.getCell(row, index) : elementnew(substitution(GridRow.getCellElement(row, example), comparator), true);\n        return GridRow.addCell(row, index, sub);\n      });\n    };\n    var splitCellIntoColumns = function (grid, exampleRow, exampleCol, comparator, substitution) {\n      var index = exampleCol + 1;\n      return map(grid, function (row, i) {\n        var isTargetCell = i === exampleRow;\n        var sub = isTargetCell ? elementnew(substitution(GridRow.getCellElement(row, exampleCol), comparator), true) : GridRow.getCell(row, exampleCol);\n        return GridRow.addCell(row, index, sub);\n      });\n    };\n    var splitCellIntoRows = function (grid, exampleRow, exampleCol, comparator, substitution) {\n      var index = exampleRow + 1;\n      var before = grid.slice(0, index);\n      var after = grid.slice(index);\n      var between = GridRow.mapCells(grid[exampleRow], function (ex, i) {\n        var isTargetCell = i === exampleCol;\n        return isTargetCell ? elementnew(substitution(ex.element(), comparator), true) : ex;\n      });\n      return before.concat([between]).concat(after);\n    };\n    var deleteColumnsAt = function (grid, start, finish) {\n      var rows = map(grid, function (row) {\n        var cells = row.cells().slice(0, start).concat(row.cells().slice(finish + 1));\n        return rowcells(cells, row.section());\n      });\n      return filter(rows, function (row) {\n        return row.cells().length > 0;\n      });\n    };\n    var deleteRowsAt = function (grid, start, finish) {\n      return grid.slice(0, start).concat(grid.slice(finish + 1));\n    };\n    var ModificationOperations = {\n      insertRowAt: insertRowAt,\n      insertColumnAt: insertColumnAt,\n      splitCellIntoColumns: splitCellIntoColumns,\n      splitCellIntoRows: splitCellIntoRows,\n      deleteRowsAt: deleteRowsAt,\n      deleteColumnsAt: deleteColumnsAt\n    };\n\n    var replaceIn = function (grid, targets, comparator, substitution) {\n      var isTarget = function (cell) {\n        return exists(targets, function (target) {\n          return comparator(cell.element(), target.element());\n        });\n      };\n      return map(grid, function (row) {\n        return GridRow.mapCells(row, function (cell) {\n          return isTarget(cell) ? elementnew(substitution(cell.element(), comparator), true) : cell;\n        });\n      });\n    };\n    var notStartRow = function (grid, rowIndex, colIndex, comparator) {\n      return GridRow.getCellElement(grid[rowIndex], colIndex) !== undefined && (rowIndex > 0 && comparator(GridRow.getCellElement(grid[rowIndex - 1], colIndex), GridRow.getCellElement(grid[rowIndex], colIndex)));\n    };\n    var notStartColumn = function (row, index, comparator) {\n      return index > 0 && comparator(GridRow.getCellElement(row, index - 1), GridRow.getCellElement(row, index));\n    };\n    var replaceColumn = function (grid, index, comparator, substitution) {\n      var targets = bind(grid, function (row, i) {\n        var alreadyAdded = notStartRow(grid, i, index, comparator) || notStartColumn(row, index, comparator);\n        return alreadyAdded ? [] : [GridRow.getCell(row, index)];\n      });\n      return replaceIn(grid, targets, comparator, substitution);\n    };\n    var replaceRow = function (grid, index, comparator, substitution) {\n      var targetRow = grid[index];\n      var targets = bind(targetRow.cells(), function (item, i) {\n        var alreadyAdded = notStartRow(grid, index, i, comparator) || notStartColumn(targetRow, i, comparator);\n        return alreadyAdded ? [] : [item];\n      });\n      return replaceIn(grid, targets, comparator, substitution);\n    };\n    var TransformOperations = {\n      replaceColumn: replaceColumn,\n      replaceRow: replaceRow\n    };\n\n    var adt = Adt.generate([\n      { none: [] },\n      { only: ['index'] },\n      {\n        left: [\n          'index',\n          'next'\n        ]\n      },\n      {\n        middle: [\n          'prev',\n          'index',\n          'next'\n        ]\n      },\n      {\n        right: [\n          'prev',\n          'index'\n        ]\n      }\n    ]);\n    var ColumnContext = __assign({}, adt);\n\n    var neighbours$1 = function (input, index) {\n      if (input.length === 0) {\n        return ColumnContext.none();\n      }\n      if (input.length === 1) {\n        return ColumnContext.only(0);\n      }\n      if (index === 0) {\n        return ColumnContext.left(0, 1);\n      }\n      if (index === input.length - 1) {\n        return ColumnContext.right(index - 1, index);\n      }\n      if (index > 0 && index < input.length - 1) {\n        return ColumnContext.middle(index - 1, index, index + 1);\n      }\n      return ColumnContext.none();\n    };\n    var determine = function (input, column, step, tableSize) {\n      var result = input.slice(0);\n      var context = neighbours$1(input, column);\n      var zero = function (array) {\n        return map(array, constant(0));\n      };\n      var onNone = constant(zero(result));\n      var onOnly = function (index) {\n        return tableSize.singleColumnWidth(result[index], step);\n      };\n      var onChange = function (index, next) {\n        if (step >= 0) {\n          var newNext = Math.max(tableSize.minCellWidth(), result[next] - step);\n          return zero(result.slice(0, index)).concat([\n            step,\n            newNext - result[next]\n          ]).concat(zero(result.slice(next + 1)));\n        } else {\n          var newThis = Math.max(tableSize.minCellWidth(), result[index] + step);\n          var diffx = result[index] - newThis;\n          return zero(result.slice(0, index)).concat([\n            newThis - result[index],\n            diffx\n          ]).concat(zero(result.slice(next + 1)));\n        }\n      };\n      var onLeft = onChange;\n      var onMiddle = function (_prev, index, next) {\n        return onChange(index, next);\n      };\n      var onRight = function (_prev, index) {\n        if (step >= 0) {\n          return zero(result.slice(0, index)).concat([step]);\n        } else {\n          var size = Math.max(tableSize.minCellWidth(), result[index] + step);\n          return zero(result.slice(0, index)).concat([size - result[index]]);\n        }\n      };\n      return context.fold(onNone, onOnly, onLeft, onMiddle, onRight);\n    };\n    var Deltas = { determine: determine };\n\n    var getSpan$1 = function (cell, type) {\n      return has(cell, type) && parseInt(get(cell, type), 10) > 1;\n    };\n    var hasColspan = function (cell) {\n      return getSpan$1(cell, 'colspan');\n    };\n    var hasRowspan = function (cell) {\n      return getSpan$1(cell, 'rowspan');\n    };\n    var getInt = function (element, property) {\n      return parseInt(get$1(element, property), 10);\n    };\n    var CellUtils = {\n      hasColspan: hasColspan,\n      hasRowspan: hasRowspan,\n      minWidth: constant(10),\n      minHeight: constant(10),\n      getInt: getInt\n    };\n\n    var getRaw$1 = function (cell, property, getter) {\n      return getRaw(cell, property).fold(function () {\n        return getter(cell) + 'px';\n      }, function (raw) {\n        return raw;\n      });\n    };\n    var getRawW = function (cell, tableSize) {\n      return getRaw$1(cell, 'width', function (e) {\n        return Sizes.getPixelWidth(e, tableSize);\n      });\n    };\n    var getRawH = function (cell) {\n      return getRaw$1(cell, 'height', Sizes.getHeight);\n    };\n    var getWidthFrom = function (warehouse, direction, getWidth, fallback, tableSize) {\n      var columns = Blocks.columns(warehouse);\n      var backups = map(columns, function (cellOption) {\n        return cellOption.map(direction.edge);\n      });\n      return map(columns, function (cellOption, c) {\n        var columnCell = cellOption.filter(not(CellUtils.hasColspan));\n        return columnCell.fold(function () {\n          var deduced = deduce(backups, c);\n          return fallback(deduced);\n        }, function (cell) {\n          return getWidth(cell, tableSize);\n        });\n      });\n    };\n    var getDeduced = function (deduced) {\n      return deduced.map(function (d) {\n        return d + 'px';\n      }).getOr('');\n    };\n    var getRawWidths = function (warehouse, direction, tableSize) {\n      return getWidthFrom(warehouse, direction, getRawW, getDeduced, tableSize);\n    };\n    var getPercentageWidths = function (warehouse, direction, tableSize) {\n      return getWidthFrom(warehouse, direction, Sizes.getPercentageWidth, function (deduced) {\n        return deduced.fold(function () {\n          return tableSize.minCellWidth();\n        }, function (cellWidth) {\n          return cellWidth / tableSize.pixelWidth() * 100;\n        });\n      }, tableSize);\n    };\n    var getPixelWidths = function (warehouse, direction, tableSize) {\n      return getWidthFrom(warehouse, direction, Sizes.getPixelWidth, function (deduced) {\n        return deduced.getOrThunk(tableSize.minCellWidth);\n      }, tableSize);\n    };\n    var getHeightFrom = function (warehouse, direction, getHeight, fallback) {\n      var rows = Blocks.rows(warehouse);\n      var backups = map(rows, function (cellOption) {\n        return cellOption.map(direction.edge);\n      });\n      return map(rows, function (cellOption, c) {\n        var rowCell = cellOption.filter(not(CellUtils.hasRowspan));\n        return rowCell.fold(function () {\n          var deduced = deduce(backups, c);\n          return fallback(deduced);\n        }, function (cell) {\n          return getHeight(cell);\n        });\n      });\n    };\n    var getPixelHeights = function (warehouse, direction) {\n      return getHeightFrom(warehouse, direction, Sizes.getHeight, function (deduced) {\n        return deduced.getOrThunk(CellUtils.minHeight);\n      });\n    };\n    var getRawHeights = function (warehouse, direction) {\n      return getHeightFrom(warehouse, direction, getRawH, getDeduced);\n    };\n    var ColumnSizes = {\n      getRawWidths: getRawWidths,\n      getPixelWidths: getPixelWidths,\n      getPercentageWidths: getPercentageWidths,\n      getPixelHeights: getPixelHeights,\n      getRawHeights: getRawHeights\n    };\n\n    var total = function (start, end, measures) {\n      var r = 0;\n      for (var i = start; i < end; i++) {\n        r += measures[i] !== undefined ? measures[i] : 0;\n      }\n      return r;\n    };\n    var recalculateWidth = function (warehouse, widths) {\n      var all = Warehouse.justCells(warehouse);\n      return map(all, function (cell) {\n        var width = total(cell.column(), cell.column() + cell.colspan(), widths);\n        return {\n          element: cell.element,\n          width: constant(width),\n          colspan: cell.colspan\n        };\n      });\n    };\n    var recalculateHeight = function (warehouse, heights) {\n      var all = Warehouse.justCells(warehouse);\n      return map(all, function (cell) {\n        var height = total(cell.row(), cell.row() + cell.rowspan(), heights);\n        return {\n          element: cell.element,\n          height: constant(height),\n          rowspan: cell.rowspan\n        };\n      });\n    };\n    var matchRowHeight = function (warehouse, heights) {\n      return map(warehouse.all(), function (row, i) {\n        return {\n          element: row.element,\n          height: constant(heights[i])\n        };\n      });\n    };\n    var Recalculations = {\n      recalculateWidth: recalculateWidth,\n      recalculateHeight: recalculateHeight,\n      matchRowHeight: matchRowHeight\n    };\n\n    var percentageSize = function (width, element) {\n      var floatWidth = parseFloat(width);\n      var pixelWidth = get$4(element);\n      var getCellDelta = function (delta) {\n        return delta / pixelWidth * 100;\n      };\n      var singleColumnWidth = function (w, _delta) {\n        return [100 - w];\n      };\n      var minCellWidth = function () {\n        return CellUtils.minWidth() / pixelWidth * 100;\n      };\n      var setTableWidth = function (table, _newWidths, delta) {\n        var ratio = delta / 100;\n        var change = ratio * floatWidth;\n        Sizes.setPercentageWidth(table, floatWidth + change);\n      };\n      return {\n        width: constant(floatWidth),\n        pixelWidth: constant(pixelWidth),\n        getWidths: ColumnSizes.getPercentageWidths,\n        getCellDelta: getCellDelta,\n        singleColumnWidth: singleColumnWidth,\n        minCellWidth: minCellWidth,\n        setElementWidth: Sizes.setPercentageWidth,\n        setTableWidth: setTableWidth\n      };\n    };\n    var pixelSize = function (width) {\n      var getCellDelta = identity;\n      var singleColumnWidth = function (w, delta) {\n        var newNext = Math.max(CellUtils.minWidth(), w + delta);\n        return [newNext - w];\n      };\n      var setTableWidth = function (table, newWidths, _delta) {\n        var total = foldr(newWidths, function (b, a) {\n          return b + a;\n        }, 0);\n        Sizes.setPixelWidth(table, total);\n      };\n      return {\n        width: constant(width),\n        pixelWidth: constant(width),\n        getWidths: ColumnSizes.getPixelWidths,\n        getCellDelta: getCellDelta,\n        singleColumnWidth: singleColumnWidth,\n        minCellWidth: CellUtils.minWidth,\n        setElementWidth: Sizes.setPixelWidth,\n        setTableWidth: setTableWidth\n      };\n    };\n    var chooseSize = function (element, width) {\n      var percentMatch = Sizes.percentageBasedSizeRegex().exec(width);\n      if (percentMatch !== null) {\n        return percentageSize(percentMatch[1], element);\n      }\n      var pixelMatch = Sizes.pixelBasedSizeRegex().exec(width);\n      if (pixelMatch !== null) {\n        var intWidth = parseInt(pixelMatch[1], 10);\n        return pixelSize(intWidth);\n      }\n      var fallbackWidth = get$4(element);\n      return pixelSize(fallbackWidth);\n    };\n    var getTableSize = function (element) {\n      var width = Sizes.getRawWidth(element);\n      return width.fold(function () {\n        var fallbackWidth = get$4(element);\n        return pixelSize(fallbackWidth);\n      }, function (w) {\n        return chooseSize(element, w);\n      });\n    };\n    var TableSize = { getTableSize: getTableSize };\n\n    var getWarehouse$1 = function (list) {\n      return Warehouse.generate(list);\n    };\n    var sumUp = function (newSize) {\n      return foldr(newSize, function (b, a) {\n        return b + a;\n      }, 0);\n    };\n    var getTableWarehouse = function (table) {\n      var list = DetailsList.fromTable(table);\n      return getWarehouse$1(list);\n    };\n    var adjustWidth = function (table, delta, index, direction) {\n      var tableSize = TableSize.getTableSize(table);\n      var step = tableSize.getCellDelta(delta);\n      var warehouse = getTableWarehouse(table);\n      var widths = tableSize.getWidths(warehouse, direction, tableSize);\n      var deltas = Deltas.determine(widths, index, step, tableSize);\n      var newWidths = map(deltas, function (dx, i) {\n        return dx + widths[i];\n      });\n      var newSizes = Recalculations.recalculateWidth(warehouse, newWidths);\n      each(newSizes, function (cell) {\n        tableSize.setElementWidth(cell.element(), cell.width());\n      });\n      if (index === warehouse.grid().columns() - 1) {\n        tableSize.setTableWidth(table, newWidths, step);\n      }\n    };\n    var adjustHeight = function (table, delta, index, direction) {\n      var warehouse = getTableWarehouse(table);\n      var heights = ColumnSizes.getPixelHeights(warehouse, direction);\n      var newHeights = map(heights, function (dy, i) {\n        return index === i ? Math.max(delta + dy, CellUtils.minHeight()) : dy;\n      });\n      var newCellSizes = Recalculations.recalculateHeight(warehouse, newHeights);\n      var newRowSizes = Recalculations.matchRowHeight(warehouse, newHeights);\n      each(newRowSizes, function (row) {\n        Sizes.setHeight(row.element(), row.height());\n      });\n      each(newCellSizes, function (cell) {\n        Sizes.setHeight(cell.element(), cell.height());\n      });\n      var total = sumUp(newHeights);\n      Sizes.setHeight(table, total);\n    };\n    var adjustWidthTo = function (table, list, direction) {\n      var tableSize = TableSize.getTableSize(table);\n      var warehouse = getWarehouse$1(list);\n      var widths = tableSize.getWidths(warehouse, direction, tableSize);\n      var newSizes = Recalculations.recalculateWidth(warehouse, widths);\n      each(newSizes, function (cell) {\n        tableSize.setElementWidth(cell.element(), cell.width());\n      });\n      if (newSizes.length > 0) {\n        tableSize.setTableWidth(table, widths, tableSize.getCellDelta(0));\n      }\n    };\n    var Adjustments = {\n      adjustWidth: adjustWidth,\n      adjustHeight: adjustHeight,\n      adjustWidthTo: adjustWidthTo\n    };\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      var clone = function () {\n        return Cell(get());\n      };\n      return {\n        get: get,\n        set: set,\n        clone: clone\n      };\n    };\n\n    var base = function (handleUnsupported, required) {\n      return baseWith(handleUnsupported, required, {\n        validate: isFunction,\n        label: 'function'\n      });\n    };\n    var baseWith = function (handleUnsupported, required, pred) {\n      if (required.length === 0) {\n        throw new Error('You must specify at least one required field.');\n      }\n      validateStrArr('required', required);\n      checkDupes(required);\n      return function (obj) {\n        var keys$1 = keys(obj);\n        var allReqd = forall(required, function (req) {\n          return contains(keys$1, req);\n        });\n        if (!allReqd) {\n          reqMessage(required, keys$1);\n        }\n        handleUnsupported(required, keys$1);\n        var invalidKeys = filter(required, function (key) {\n          return !pred.validate(obj[key], key);\n        });\n        if (invalidKeys.length > 0) {\n          invalidTypeMessage(invalidKeys, pred.label);\n        }\n        return obj;\n      };\n    };\n    var handleExact = function (required, keys) {\n      var unsupported = filter(keys, function (key) {\n        return !contains(required, key);\n      });\n      if (unsupported.length > 0) {\n        unsuppMessage(unsupported);\n      }\n    };\n    var exactly = function (required) {\n      return base(handleExact, required);\n    };\n\n    var verifyGenerators = exactly([\n      'cell',\n      'row',\n      'replace',\n      'gap'\n    ]);\n    var elementToData = function (element) {\n      var colspan = has(element, 'colspan') ? parseInt(get(element, 'colspan'), 10) : 1;\n      var rowspan = has(element, 'rowspan') ? parseInt(get(element, 'rowspan'), 10) : 1;\n      return {\n        element: constant(element),\n        colspan: constant(colspan),\n        rowspan: constant(rowspan)\n      };\n    };\n    var modification = function (generators, toData) {\n      if (toData === void 0) {\n        toData = elementToData;\n      }\n      verifyGenerators(generators);\n      var position = Cell(Option.none());\n      var nu = function (data) {\n        return generators.cell(data);\n      };\n      var nuFrom = function (element) {\n        var data = toData(element);\n        return nu(data);\n      };\n      var add = function (element) {\n        var replacement = nuFrom(element);\n        if (position.get().isNone()) {\n          position.set(Option.some(replacement));\n        }\n        recent = Option.some({\n          item: element,\n          replacement: replacement\n        });\n        return replacement;\n      };\n      var recent = Option.none();\n      var getOrInit = function (element, comparator) {\n        return recent.fold(function () {\n          return add(element);\n        }, function (p) {\n          return comparator(element, p.item) ? p.replacement : add(element);\n        });\n      };\n      return {\n        getOrInit: getOrInit,\n        cursor: position.get\n      };\n    };\n    var transform = function (scope, tag) {\n      return function (generators) {\n        var position = Cell(Option.none());\n        verifyGenerators(generators);\n        var list = [];\n        var find$1 = function (element, comparator) {\n          return find(list, function (x) {\n            return comparator(x.item, element);\n          });\n        };\n        var makeNew = function (element) {\n          var attrs = { scope: scope };\n          var cell = generators.replace(element, tag, attrs);\n          list.push({\n            item: element,\n            sub: cell\n          });\n          if (position.get().isNone()) {\n            position.set(Option.some(cell));\n          }\n          return cell;\n        };\n        var replaceOrInit = function (element, comparator) {\n          return find$1(element, comparator).fold(function () {\n            return makeNew(element);\n          }, function (p) {\n            return comparator(element, p.item) ? p.sub : makeNew(element);\n          });\n        };\n        return {\n          replaceOrInit: replaceOrInit,\n          cursor: position.get\n        };\n      };\n    };\n    var merging = function (generators) {\n      verifyGenerators(generators);\n      var position = Cell(Option.none());\n      var combine = function (cell) {\n        if (position.get().isNone()) {\n          position.set(Option.some(cell));\n        }\n        return function () {\n          var raw = generators.cell({\n            element: constant(cell),\n            colspan: constant(1),\n            rowspan: constant(1)\n          });\n          remove$1(raw, 'width');\n          remove$1(cell, 'width');\n          return raw;\n        };\n      };\n      return {\n        combine: combine,\n        cursor: position.get\n      };\n    };\n    var Generators = {\n      modification: modification,\n      transform: transform,\n      merging: merging\n    };\n\n    var blockList = [\n      'body',\n      'p',\n      'div',\n      'article',\n      'aside',\n      'figcaption',\n      'figure',\n      'footer',\n      'header',\n      'nav',\n      'section',\n      'ol',\n      'ul',\n      'table',\n      'thead',\n      'tfoot',\n      'tbody',\n      'caption',\n      'tr',\n      'td',\n      'th',\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n      'blockquote',\n      'pre',\n      'address'\n    ];\n    var isList = function (universe, item) {\n      var tagName = universe.property().name(item);\n      return contains([\n        'ol',\n        'ul'\n      ], tagName);\n    };\n    var isBlock = function (universe, item) {\n      var tagName = universe.property().name(item);\n      return contains(blockList, tagName);\n    };\n    var isFormatting = function (universe, item) {\n      var tagName = universe.property().name(item);\n      return contains([\n        'address',\n        'pre',\n        'p',\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6'\n      ], tagName);\n    };\n    var isHeading = function (universe, item) {\n      var tagName = universe.property().name(item);\n      return contains([\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6'\n      ], tagName);\n    };\n    var isContainer = function (universe, item) {\n      return contains([\n        'div',\n        'li',\n        'td',\n        'th',\n        'blockquote',\n        'body',\n        'caption'\n      ], universe.property().name(item));\n    };\n    var isEmptyTag = function (universe, item) {\n      return contains([\n        'br',\n        'img',\n        'hr',\n        'input'\n      ], universe.property().name(item));\n    };\n    var isFrame = function (universe, item) {\n      return universe.property().name(item) === 'iframe';\n    };\n    var isInline = function (universe, item) {\n      return !(isBlock(universe, item) || isEmptyTag(universe, item)) && universe.property().name(item) !== 'li';\n    };\n    var Structure = {\n      isBlock: isBlock,\n      isList: isList,\n      isFormatting: isFormatting,\n      isHeading: isHeading,\n      isContainer: isContainer,\n      isEmptyTag: isEmptyTag,\n      isFrame: isFrame,\n      isInline: isInline\n    };\n\n    var universe$1 = DomUniverse();\n    var isBlock$1 = function (element) {\n      return Structure.isBlock(universe$1, element);\n    };\n    var isList$1 = function (element) {\n      return Structure.isList(universe$1, element);\n    };\n    var isFormatting$1 = function (element) {\n      return Structure.isFormatting(universe$1, element);\n    };\n    var isHeading$1 = function (element) {\n      return Structure.isHeading(universe$1, element);\n    };\n    var isContainer$1 = function (element) {\n      return Structure.isContainer(universe$1, element);\n    };\n    var isEmptyTag$1 = function (element) {\n      return Structure.isEmptyTag(universe$1, element);\n    };\n    var isFrame$1 = function (element) {\n      return Structure.isFrame(universe$1, element);\n    };\n    var isInline$1 = function (element) {\n      return Structure.isInline(universe$1, element);\n    };\n    var DomStructure = {\n      isBlock: isBlock$1,\n      isList: isList$1,\n      isFormatting: isFormatting$1,\n      isHeading: isHeading$1,\n      isContainer: isContainer$1,\n      isEmptyTag: isEmptyTag$1,\n      isFrame: isFrame$1,\n      isInline: isInline$1\n    };\n\n    var merge$2 = function (cells) {\n      var isBr = function (el) {\n        return name(el) === 'br';\n      };\n      var advancedBr = function (children) {\n        return forall(children, function (c) {\n          return isBr(c) || isText(c) && get$2(c).trim().length === 0;\n        });\n      };\n      var isListItem = function (el) {\n        return name(el) === 'li' || ancestor(el, DomStructure.isList).isSome();\n      };\n      var siblingIsBlock = function (el) {\n        return nextSibling(el).map(function (rightSibling) {\n          if (DomStructure.isBlock(rightSibling)) {\n            return true;\n          }\n          if (DomStructure.isEmptyTag(rightSibling)) {\n            return name(rightSibling) === 'img' ? false : true;\n          }\n          return false;\n        }).getOr(false);\n      };\n      var markCell = function (cell) {\n        return last$1(cell).bind(function (rightEdge) {\n          var rightSiblingIsBlock = siblingIsBlock(rightEdge);\n          return parent(rightEdge).map(function (parent) {\n            return rightSiblingIsBlock === true || isListItem(parent) || isBr(rightEdge) || DomStructure.isBlock(parent) && !eq(cell, parent) ? [] : [Element.fromTag('br')];\n          });\n        }).getOr([]);\n      };\n      var markContent = function () {\n        var content = bind(cells, function (cell) {\n          var children$1 = children(cell);\n          return advancedBr(children$1) ? [] : children$1.concat(markCell(cell));\n        });\n        return content.length === 0 ? [Element.fromTag('br')] : content;\n      };\n      var contents = markContent();\n      empty(cells[0]);\n      append$1(cells[0], contents);\n    };\n    var TableContent = { merge: merge$2 };\n\n    var prune = function (table) {\n      var cells = TableLookup.cells(table);\n      if (cells.length === 0) {\n        remove$2(table);\n      }\n    };\n    var outcome = Immutable('grid', 'cursor');\n    var elementFromGrid = function (grid, row, column) {\n      return findIn(grid, row, column).orThunk(function () {\n        return findIn(grid, 0, 0);\n      });\n    };\n    var findIn = function (grid, row, column) {\n      return Option.from(grid[row]).bind(function (r) {\n        return Option.from(r.cells()[column]).bind(function (c) {\n          return Option.from(c.element());\n        });\n      });\n    };\n    var bundle = function (grid, row, column) {\n      return outcome(grid, findIn(grid, row, column));\n    };\n    var uniqueRows = function (details) {\n      return foldl(details, function (rest, detail) {\n        return exists(rest, function (currentDetail) {\n          return currentDetail.row() === detail.row();\n        }) ? rest : rest.concat([detail]);\n      }, []).sort(function (detailA, detailB) {\n        return detailA.row() - detailB.row();\n      });\n    };\n    var uniqueColumns = function (details) {\n      return foldl(details, function (rest, detail) {\n        return exists(rest, function (currentDetail) {\n          return currentDetail.column() === detail.column();\n        }) ? rest : rest.concat([detail]);\n      }, []).sort(function (detailA, detailB) {\n        return detailA.column() - detailB.column();\n      });\n    };\n    var insertRowBefore = function (grid, detail, comparator, genWrappers) {\n      var example = detail.row();\n      var targetIndex = detail.row();\n      var newGrid = ModificationOperations.insertRowAt(grid, targetIndex, example, comparator, genWrappers.getOrInit);\n      return bundle(newGrid, targetIndex, detail.column());\n    };\n    var insertRowsBefore = function (grid, details, comparator, genWrappers) {\n      var example = details[0].row();\n      var targetIndex = details[0].row();\n      var rows = uniqueRows(details);\n      var newGrid = foldl(rows, function (newG, _row) {\n        return ModificationOperations.insertRowAt(newG, targetIndex, example, comparator, genWrappers.getOrInit);\n      }, grid);\n      return bundle(newGrid, targetIndex, details[0].column());\n    };\n    var insertRowAfter = function (grid, detail, comparator, genWrappers) {\n      var example = detail.row();\n      var targetIndex = detail.row() + detail.rowspan();\n      var newGrid = ModificationOperations.insertRowAt(grid, targetIndex, example, comparator, genWrappers.getOrInit);\n      return bundle(newGrid, targetIndex, detail.column());\n    };\n    var insertRowsAfter = function (grid, details, comparator, genWrappers) {\n      var rows = uniqueRows(details);\n      var example = rows[rows.length - 1].row();\n      var targetIndex = rows[rows.length - 1].row() + rows[rows.length - 1].rowspan();\n      var newGrid = foldl(rows, function (newG, _row) {\n        return ModificationOperations.insertRowAt(newG, targetIndex, example, comparator, genWrappers.getOrInit);\n      }, grid);\n      return bundle(newGrid, targetIndex, details[0].column());\n    };\n    var insertColumnBefore = function (grid, detail, comparator, genWrappers) {\n      var example = detail.column();\n      var targetIndex = detail.column();\n      var newGrid = ModificationOperations.insertColumnAt(grid, targetIndex, example, comparator, genWrappers.getOrInit);\n      return bundle(newGrid, detail.row(), targetIndex);\n    };\n    var insertColumnsBefore = function (grid, details, comparator, genWrappers) {\n      var columns = uniqueColumns(details);\n      var example = columns[0].column();\n      var targetIndex = columns[0].column();\n      var newGrid = foldl(columns, function (newG, _row) {\n        return ModificationOperations.insertColumnAt(newG, targetIndex, example, comparator, genWrappers.getOrInit);\n      }, grid);\n      return bundle(newGrid, details[0].row(), targetIndex);\n    };\n    var insertColumnAfter = function (grid, detail, comparator, genWrappers) {\n      var example = detail.column();\n      var targetIndex = detail.column() + detail.colspan();\n      var newGrid = ModificationOperations.insertColumnAt(grid, targetIndex, example, comparator, genWrappers.getOrInit);\n      return bundle(newGrid, detail.row(), targetIndex);\n    };\n    var insertColumnsAfter = function (grid, details, comparator, genWrappers) {\n      var example = details[details.length - 1].column();\n      var targetIndex = details[details.length - 1].column() + details[details.length - 1].colspan();\n      var columns = uniqueColumns(details);\n      var newGrid = foldl(columns, function (newG, _row) {\n        return ModificationOperations.insertColumnAt(newG, targetIndex, example, comparator, genWrappers.getOrInit);\n      }, grid);\n      return bundle(newGrid, details[0].row(), targetIndex);\n    };\n    var makeRowHeader = function (grid, detail, comparator, genWrappers) {\n      var newGrid = TransformOperations.replaceRow(grid, detail.row(), comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var makeColumnHeader = function (grid, detail, comparator, genWrappers) {\n      var newGrid = TransformOperations.replaceColumn(grid, detail.column(), comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var unmakeRowHeader = function (grid, detail, comparator, genWrappers) {\n      var newGrid = TransformOperations.replaceRow(grid, detail.row(), comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var unmakeColumnHeader = function (grid, detail, comparator, genWrappers) {\n      var newGrid = TransformOperations.replaceColumn(grid, detail.column(), comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var splitCellIntoColumns$1 = function (grid, detail, comparator, genWrappers) {\n      var newGrid = ModificationOperations.splitCellIntoColumns(grid, detail.row(), detail.column(), comparator, genWrappers.getOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var splitCellIntoRows$1 = function (grid, detail, comparator, genWrappers) {\n      var newGrid = ModificationOperations.splitCellIntoRows(grid, detail.row(), detail.column(), comparator, genWrappers.getOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var eraseColumns = function (grid, details, _comparator, _genWrappers) {\n      var columns = uniqueColumns(details);\n      var newGrid = ModificationOperations.deleteColumnsAt(grid, columns[0].column(), columns[columns.length - 1].column());\n      var cursor = elementFromGrid(newGrid, details[0].row(), details[0].column());\n      return outcome(newGrid, cursor);\n    };\n    var eraseRows = function (grid, details, _comparator, _genWrappers) {\n      var rows = uniqueRows(details);\n      var newGrid = ModificationOperations.deleteRowsAt(grid, rows[0].row(), rows[rows.length - 1].row());\n      var cursor = elementFromGrid(newGrid, details[0].row(), details[0].column());\n      return outcome(newGrid, cursor);\n    };\n    var mergeCells = function (grid, mergable, comparator, _genWrappers) {\n      var cells = mergable.cells();\n      TableContent.merge(cells);\n      var newGrid = MergingOperations.merge(grid, mergable.bounds(), comparator, constant(cells[0]));\n      return outcome(newGrid, Option.from(cells[0]));\n    };\n    var unmergeCells = function (grid, unmergable, comparator, genWrappers) {\n      var newGrid = foldr(unmergable, function (b, cell) {\n        return MergingOperations.unmerge(b, cell, comparator, genWrappers.combine(cell));\n      }, grid);\n      return outcome(newGrid, Option.from(unmergable[0]));\n    };\n    var pasteCells = function (grid, pasteDetails, comparator, _genWrappers) {\n      var gridify = function (table, generators) {\n        var list = DetailsList.fromTable(table);\n        var wh = Warehouse.generate(list);\n        return Transitions.toGrid(wh, generators, true);\n      };\n      var gridB = gridify(pasteDetails.clipboard(), pasteDetails.generators());\n      var startAddress = address(pasteDetails.row(), pasteDetails.column());\n      var mergedGrid = TableMerge.merge(startAddress, grid, gridB, pasteDetails.generators(), comparator);\n      return mergedGrid.fold(function () {\n        return outcome(grid, Option.some(pasteDetails.element()));\n      }, function (nuGrid) {\n        var cursor = elementFromGrid(nuGrid, pasteDetails.row(), pasteDetails.column());\n        return outcome(nuGrid, cursor);\n      });\n    };\n    var gridifyRows = function (rows, generators, example) {\n      var pasteDetails = DetailsList.fromPastedRows(rows, example);\n      var wh = Warehouse.generate(pasteDetails);\n      return Transitions.toGrid(wh, generators, true);\n    };\n    var pasteRowsBefore = function (grid, pasteDetails, comparator, _genWrappers) {\n      var example = grid[pasteDetails.cells[0].row()];\n      var index = pasteDetails.cells[0].row();\n      var gridB = gridifyRows(pasteDetails.clipboard(), pasteDetails.generators(), example);\n      var mergedGrid = TableMerge.insert(index, grid, gridB, pasteDetails.generators(), comparator);\n      var cursor = elementFromGrid(mergedGrid, pasteDetails.cells[0].row(), pasteDetails.cells[0].column());\n      return outcome(mergedGrid, cursor);\n    };\n    var pasteRowsAfter = function (grid, pasteDetails, comparator, _genWrappers) {\n      var example = grid[pasteDetails.cells[0].row()];\n      var index = pasteDetails.cells[pasteDetails.cells.length - 1].row() + pasteDetails.cells[pasteDetails.cells.length - 1].rowspan();\n      var gridB = gridifyRows(pasteDetails.clipboard(), pasteDetails.generators(), example);\n      var mergedGrid = TableMerge.insert(index, grid, gridB, pasteDetails.generators(), comparator);\n      var cursor = elementFromGrid(mergedGrid, pasteDetails.cells[0].row(), pasteDetails.cells[0].column());\n      return outcome(mergedGrid, cursor);\n    };\n    var resize = Adjustments.adjustWidthTo;\n    var TableOperations = {\n      insertRowBefore: run(insertRowBefore, onCell, noop, noop, Generators.modification),\n      insertRowsBefore: run(insertRowsBefore, onCells, noop, noop, Generators.modification),\n      insertRowAfter: run(insertRowAfter, onCell, noop, noop, Generators.modification),\n      insertRowsAfter: run(insertRowsAfter, onCells, noop, noop, Generators.modification),\n      insertColumnBefore: run(insertColumnBefore, onCell, resize, noop, Generators.modification),\n      insertColumnsBefore: run(insertColumnsBefore, onCells, resize, noop, Generators.modification),\n      insertColumnAfter: run(insertColumnAfter, onCell, resize, noop, Generators.modification),\n      insertColumnsAfter: run(insertColumnsAfter, onCells, resize, noop, Generators.modification),\n      splitCellIntoColumns: run(splitCellIntoColumns$1, onCell, resize, noop, Generators.modification),\n      splitCellIntoRows: run(splitCellIntoRows$1, onCell, noop, noop, Generators.modification),\n      eraseColumns: run(eraseColumns, onCells, resize, prune, Generators.modification),\n      eraseRows: run(eraseRows, onCells, noop, prune, Generators.modification),\n      makeColumnHeader: run(makeColumnHeader, onCell, noop, noop, Generators.transform('row', 'th')),\n      unmakeColumnHeader: run(unmakeColumnHeader, onCell, noop, noop, Generators.transform(null, 'td')),\n      makeRowHeader: run(makeRowHeader, onCell, noop, noop, Generators.transform('col', 'th')),\n      unmakeRowHeader: run(unmakeRowHeader, onCell, noop, noop, Generators.transform(null, 'td')),\n      mergeCells: run(mergeCells, onMergable, noop, noop, Generators.merging),\n      unmergeCells: run(unmergeCells, onUnmergable, resize, noop, Generators.merging),\n      pasteCells: run(pasteCells, onPaste, resize, noop, Generators.modification),\n      pasteRowsBefore: run(pasteRowsBefore, onPasteRows, noop, noop, Generators.modification),\n      pasteRowsAfter: run(pasteRowsAfter, onPasteRows, noop, noop, Generators.modification)\n    };\n\n    var getBody$1 = function (editor) {\n      return Element.fromDom(editor.getBody());\n    };\n    var getPixelWidth$1 = function (elm) {\n      return elm.getBoundingClientRect().width;\n    };\n    var getPixelHeight = function (elm) {\n      return elm.getBoundingClientRect().height;\n    };\n    var getIsRoot = function (editor) {\n      return function (element) {\n        return eq(element, getBody$1(editor));\n      };\n    };\n    var removePxSuffix = function (size) {\n      return size ? size.replace(/px$/, '') : '';\n    };\n    var addSizeSuffix = function (size) {\n      if (/^[0-9]+$/.test(size)) {\n        size += 'px';\n      }\n      return size;\n    };\n    var removeDataStyle = function (table) {\n      var dataStyleCells = descendants$1(table, 'td[data-mce-style],th[data-mce-style]');\n      remove(table, 'data-mce-style');\n      each(dataStyleCells, function (cell) {\n        remove(cell, 'data-mce-style');\n      });\n    };\n\n    var getDirection = function (element) {\n      return get$1(element, 'direction') === 'rtl' ? 'rtl' : 'ltr';\n    };\n\n    var ltr$1 = { isRtl: constant(false) };\n    var rtl$1 = { isRtl: constant(true) };\n    var directionAt = function (element) {\n      var dir = getDirection(element);\n      return dir === 'rtl' ? rtl$1 : ltr$1;\n    };\n    var Direction = { directionAt: directionAt };\n\n    var defaultTableToolbar = [\n      'tableprops',\n      'tabledelete',\n      '|',\n      'tableinsertrowbefore',\n      'tableinsertrowafter',\n      'tabledeleterow',\n      '|',\n      'tableinsertcolbefore',\n      'tableinsertcolafter',\n      'tabledeletecol'\n    ];\n    var defaultStyles = {\n      'border-collapse': 'collapse',\n      'width': '100%'\n    };\n    var defaultAttributes = { border: '1' };\n    var getDefaultAttributes = function (editor) {\n      return editor.getParam('table_default_attributes', defaultAttributes, 'object');\n    };\n    var getDefaultStyles = function (editor) {\n      return editor.getParam('table_default_styles', defaultStyles, 'object');\n    };\n    var hasTableResizeBars = function (editor) {\n      return editor.getParam('table_resize_bars', true, 'boolean');\n    };\n    var hasTabNavigation = function (editor) {\n      return editor.getParam('table_tab_navigation', true, 'boolean');\n    };\n    var hasAdvancedCellTab = function (editor) {\n      return editor.getParam('table_cell_advtab', true, 'boolean');\n    };\n    var hasAdvancedRowTab = function (editor) {\n      return editor.getParam('table_row_advtab', true, 'boolean');\n    };\n    var hasAdvancedTableTab = function (editor) {\n      return editor.getParam('table_advtab', true, 'boolean');\n    };\n    var hasAppearanceOptions = function (editor) {\n      return editor.getParam('table_appearance_options', true, 'boolean');\n    };\n    var hasTableGrid = function (editor) {\n      return editor.getParam('table_grid', true, 'boolean');\n    };\n    var shouldStyleWithCss = function (editor) {\n      return editor.getParam('table_style_by_css', false, 'boolean');\n    };\n    var getCellClassList = function (editor) {\n      return editor.getParam('table_cell_class_list', [], 'array');\n    };\n    var getRowClassList = function (editor) {\n      return editor.getParam('table_row_class_list', [], 'array');\n    };\n    var getTableClassList = function (editor) {\n      return editor.getParam('table_class_list', [], 'array');\n    };\n    var getColorPickerCallback = function (editor) {\n      return editor.getParam('color_picker_callback');\n    };\n    var isPixelsForced = function (editor) {\n      return editor.getParam('table_responsive_width') === false;\n    };\n    var getCloneElements = function (editor) {\n      var cloneElements = editor.getParam('table_clone_elements');\n      if (isString(cloneElements)) {\n        return Option.some(cloneElements.split(/[ ,]/));\n      } else if (Array.isArray(cloneElements)) {\n        return Option.some(cloneElements);\n      } else {\n        return Option.none();\n      }\n    };\n    var hasObjectResizing = function (editor) {\n      var objectResizing = editor.getParam('object_resizing', true);\n      return objectResizing === 'table' || objectResizing;\n    };\n    var getToolbar = function (editor) {\n      var toolbar = editor.getParam('table_toolbar', defaultTableToolbar);\n      if (toolbar === '' || toolbar === false) {\n        return [];\n      } else if (isString(toolbar)) {\n        return toolbar.split(/[ ,]/);\n      } else if (isArray(toolbar)) {\n        return toolbar;\n      } else {\n        return [];\n      }\n    };\n\n    var fireNewRow = function (editor, row) {\n      return editor.fire('newrow', { node: row });\n    };\n    var fireNewCell = function (editor, cell) {\n      return editor.fire('newcell', { node: cell });\n    };\n    var fireObjectResizeStart = function (editor, target, width, height) {\n      editor.fire('ObjectResizeStart', {\n        target: target,\n        width: width,\n        height: height\n      });\n    };\n    var fireObjectResized = function (editor, target, width, height) {\n      editor.fire('ObjectResized', {\n        target: target,\n        width: width,\n        height: height\n      });\n    };\n\n    var TableActions = function (editor, lazyWire) {\n      var isTableBody = function (editor) {\n        return name(getBody$1(editor)) === 'table';\n      };\n      var lastRowGuard = function (table) {\n        var size = TableGridSize.getGridSize(table);\n        return isTableBody(editor) === false || size.rows() > 1;\n      };\n      var lastColumnGuard = function (table) {\n        var size = TableGridSize.getGridSize(table);\n        return isTableBody(editor) === false || size.columns() > 1;\n      };\n      var cloneFormats = getCloneElements(editor);\n      var execute = function (operation, guard, mutate, lazyWire) {\n        return function (table, target) {\n          removeDataStyle(table);\n          var wire = lazyWire();\n          var doc = Element.fromDom(editor.getDoc());\n          var direction = TableDirection(Direction.directionAt);\n          var generators = TableFill.cellOperations(mutate, doc, cloneFormats);\n          return guard(table) ? operation(wire, table, target, generators, direction).bind(function (result) {\n            each(result.newRows(), function (row) {\n              fireNewRow(editor, row.dom());\n            });\n            each(result.newCells(), function (cell) {\n              fireNewCell(editor, cell.dom());\n            });\n            return result.cursor().map(function (cell) {\n              var rng = editor.dom.createRng();\n              rng.setStart(cell.dom(), 0);\n              rng.setEnd(cell.dom(), 0);\n              return rng;\n            });\n          }) : Option.none();\n        };\n      };\n      var deleteRow = execute(TableOperations.eraseRows, lastRowGuard, noop, lazyWire);\n      var deleteColumn = execute(TableOperations.eraseColumns, lastColumnGuard, noop, lazyWire);\n      var insertRowsBefore = execute(TableOperations.insertRowsBefore, always, noop, lazyWire);\n      var insertRowsAfter = execute(TableOperations.insertRowsAfter, always, noop, lazyWire);\n      var insertColumnsBefore = execute(TableOperations.insertColumnsBefore, always, CellMutations.halve, lazyWire);\n      var insertColumnsAfter = execute(TableOperations.insertColumnsAfter, always, CellMutations.halve, lazyWire);\n      var mergeCells = execute(TableOperations.mergeCells, always, noop, lazyWire);\n      var unmergeCells = execute(TableOperations.unmergeCells, always, noop, lazyWire);\n      var pasteRowsBefore = execute(TableOperations.pasteRowsBefore, always, noop, lazyWire);\n      var pasteRowsAfter = execute(TableOperations.pasteRowsAfter, always, noop, lazyWire);\n      var pasteCells = execute(TableOperations.pasteCells, always, noop, lazyWire);\n      return {\n        deleteRow: deleteRow,\n        deleteColumn: deleteColumn,\n        insertRowsBefore: insertRowsBefore,\n        insertRowsAfter: insertRowsAfter,\n        insertColumnsBefore: insertColumnsBefore,\n        insertColumnsAfter: insertColumnsAfter,\n        mergeCells: mergeCells,\n        unmergeCells: unmergeCells,\n        pasteRowsBefore: pasteRowsBefore,\n        pasteRowsAfter: pasteRowsAfter,\n        pasteCells: pasteCells\n      };\n    };\n\n    var copyRows = function (table, target, generators) {\n      var list = DetailsList.fromTable(table);\n      var house = Warehouse.generate(list);\n      var details = onCells(house, target);\n      return details.map(function (selectedCells) {\n        var grid = Transitions.toGrid(house, generators, false);\n        var slicedGrid = grid.slice(selectedCells[0].row(), selectedCells[selectedCells.length - 1].row() + selectedCells[selectedCells.length - 1].rowspan());\n        var slicedDetails = toDetailList(slicedGrid, generators);\n        return Redraw.copy(slicedDetails);\n      });\n    };\n    var CopyRows = { copyRows: copyRows };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var getTDTHOverallStyle = function (dom, elm, name) {\n      var cells = dom.select('td,th', elm);\n      var firstChildStyle;\n      var checkChildren = function (firstChildStyle, elms) {\n        for (var i = 0; i < elms.length; i++) {\n          var currentStyle = dom.getStyle(elms[i], name);\n          if (typeof firstChildStyle === 'undefined') {\n            firstChildStyle = currentStyle;\n          }\n          if (firstChildStyle !== currentStyle) {\n            return '';\n          }\n        }\n        return firstChildStyle;\n      };\n      firstChildStyle = checkChildren(firstChildStyle, cells);\n      return firstChildStyle;\n    };\n    var applyAlign = function (editor, elm, name) {\n      if (name) {\n        editor.formatter.apply('align' + name, {}, elm);\n      }\n    };\n    var applyVAlign = function (editor, elm, name) {\n      if (name) {\n        editor.formatter.apply('valign' + name, {}, elm);\n      }\n    };\n    var unApplyAlign = function (editor, elm) {\n      global$1.each('left center right'.split(' '), function (name) {\n        editor.formatter.remove('align' + name, {}, elm);\n      });\n    };\n    var unApplyVAlign = function (editor, elm) {\n      global$1.each('top middle bottom'.split(' '), function (name) {\n        editor.formatter.remove('valign' + name, {}, elm);\n      });\n    };\n    var Styles$1 = {\n      applyAlign: applyAlign,\n      applyVAlign: applyVAlign,\n      unApplyAlign: unApplyAlign,\n      unApplyVAlign: unApplyVAlign,\n      getTDTHOverallStyle: getTDTHOverallStyle\n    };\n\n    var buildListItems = function (inputList, itemCallback, startItems) {\n      var appendItems = function (values, output) {\n        output = output || [];\n        global$1.each(values, function (item) {\n          var menuItem = { text: item.text || item.title };\n          if (item.menu) {\n            menuItem.menu = appendItems(item.menu);\n          } else {\n            menuItem.value = item.value;\n            if (itemCallback) {\n              itemCallback(menuItem);\n            }\n          }\n          output.push(menuItem);\n        });\n        return output;\n      };\n      return appendItems(inputList, startItems || []);\n    };\n    function styleFieldHasFocus(e) {\n      return e.control.rootControl.find('#style')[0].getEl().isEqualNode(domGlobals.document.activeElement);\n    }\n    var syncAdvancedStyleFields = function (editor, evt) {\n      if (styleFieldHasFocus(evt)) {\n        updateAdvancedFields(editor, evt);\n      } else {\n        updateStyleField(editor, evt);\n      }\n    };\n    var updateStyleField = function (editor, evt) {\n      var dom = editor.dom;\n      var rootControl = evt.control.rootControl;\n      var data = rootControl.toJSON();\n      var css = dom.parseStyle(data.style);\n      css['border-style'] = data.borderStyle;\n      css['border-color'] = data.borderColor;\n      css['background-color'] = data.backgroundColor;\n      css.width = data.width ? addSizeSuffix(data.width) : '';\n      css.height = data.height ? addSizeSuffix(data.height) : '';\n      rootControl.find('#style').value(dom.serializeStyle(dom.parseStyle(dom.serializeStyle(css))));\n    };\n    var updateAdvancedFields = function (editor, evt) {\n      var dom = editor.dom;\n      var rootControl = evt.control.rootControl;\n      var data = rootControl.toJSON();\n      var css = dom.parseStyle(data.style);\n      rootControl.find('#borderStyle').value(css['border-style'] || '');\n      rootControl.find('#borderColor').value(css['border-color'] || '');\n      rootControl.find('#backgroundColor').value(css['background-color'] || '');\n      rootControl.find('#width').value(css.width || '');\n      rootControl.find('#height').value(css.height || '');\n    };\n    var extractAdvancedStyles = function (dom, elm) {\n      var css = dom.parseStyle(dom.getAttrib(elm, 'style'));\n      var data = {};\n      if (css['border-style']) {\n        data.borderStyle = css['border-style'];\n      }\n      if (css['border-color']) {\n        data.borderColor = css['border-color'];\n      }\n      if (css['background-color']) {\n        data.backgroundColor = css['background-color'];\n      }\n      data.style = dom.serializeStyle(css);\n      return data;\n    };\n    var createStyleForm = function (editor) {\n      var createColorPickAction = function () {\n        var colorPickerCallback = getColorPickerCallback(editor);\n        if (colorPickerCallback) {\n          return function (evt) {\n            return colorPickerCallback.call(editor, function (value) {\n              evt.control.value(value).fire('change');\n            }, evt.control.value());\n          };\n        }\n      };\n      return {\n        title: 'Advanced',\n        type: 'form',\n        defaults: { onchange: curry(updateStyleField, editor) },\n        items: [\n          {\n            label: 'Style',\n            name: 'style',\n            type: 'textbox',\n            onchange: curry(updateAdvancedFields, editor)\n          },\n          {\n            type: 'form',\n            padding: 0,\n            formItemDefaults: {\n              layout: 'grid',\n              alignH: [\n                'start',\n                'right'\n              ]\n            },\n            defaults: { size: 7 },\n            items: [\n              {\n                label: 'Border style',\n                type: 'listbox',\n                name: 'borderStyle',\n                width: 90,\n                onselect: curry(updateStyleField, editor),\n                values: [\n                  {\n                    text: 'Select...',\n                    value: ''\n                  },\n                  {\n                    text: 'Solid',\n                    value: 'solid'\n                  },\n                  {\n                    text: 'Dotted',\n                    value: 'dotted'\n                  },\n                  {\n                    text: 'Dashed',\n                    value: 'dashed'\n                  },\n                  {\n                    text: 'Double',\n                    value: 'double'\n                  },\n                  {\n                    text: 'Groove',\n                    value: 'groove'\n                  },\n                  {\n                    text: 'Ridge',\n                    value: 'ridge'\n                  },\n                  {\n                    text: 'Inset',\n                    value: 'inset'\n                  },\n                  {\n                    text: 'Outset',\n                    value: 'outset'\n                  },\n                  {\n                    text: 'None',\n                    value: 'none'\n                  },\n                  {\n                    text: 'Hidden',\n                    value: 'hidden'\n                  }\n                ]\n              },\n              {\n                label: 'Border color',\n                type: 'colorbox',\n                name: 'borderColor',\n                onaction: createColorPickAction()\n              },\n              {\n                label: 'Background color',\n                type: 'colorbox',\n                name: 'backgroundColor',\n                onaction: createColorPickAction()\n              }\n            ]\n          }\n        ]\n      };\n    };\n    var Helpers = {\n      createStyleForm: createStyleForm,\n      buildListItems: buildListItems,\n      updateStyleField: updateStyleField,\n      extractAdvancedStyles: extractAdvancedStyles,\n      updateAdvancedFields: updateAdvancedFields,\n      syncAdvancedStyleFields: syncAdvancedStyleFields\n    };\n\n    var updateStyles = function (elm, cssText) {\n      delete elm.dataset.mceStyle;\n      elm.style.cssText += ';' + cssText;\n    };\n    var extractDataFromElement = function (editor, elm) {\n      var dom = editor.dom;\n      var data = {\n        width: dom.getStyle(elm, 'width') || dom.getAttrib(elm, 'width'),\n        height: dom.getStyle(elm, 'height') || dom.getAttrib(elm, 'height'),\n        scope: dom.getAttrib(elm, 'scope'),\n        class: dom.getAttrib(elm, 'class'),\n        type: elm.nodeName.toLowerCase(),\n        style: '',\n        align: '',\n        valign: ''\n      };\n      global$1.each('left center right'.split(' '), function (name) {\n        if (editor.formatter.matchNode(elm, 'align' + name)) {\n          data.align = name;\n        }\n      });\n      global$1.each('top middle bottom'.split(' '), function (name) {\n        if (editor.formatter.matchNode(elm, 'valign' + name)) {\n          data.valign = name;\n        }\n      });\n      if (hasAdvancedCellTab(editor)) {\n        global$1.extend(data, Helpers.extractAdvancedStyles(dom, elm));\n      }\n      return data;\n    };\n    var onSubmitCellForm = function (editor, cells, evt) {\n      var dom = editor.dom;\n      var data;\n      function setAttrib(elm, name, value) {\n        if (cells.length === 1 || value) {\n          dom.setAttrib(elm, name, value);\n        }\n      }\n      function setStyle(elm, name, value) {\n        if (cells.length === 1 || value) {\n          dom.setStyle(elm, name, value);\n        }\n      }\n      if (hasAdvancedCellTab(editor)) {\n        Helpers.syncAdvancedStyleFields(editor, evt);\n      }\n      data = evt.control.rootControl.toJSON();\n      editor.undoManager.transact(function () {\n        global$1.each(cells, function (cellElm) {\n          setAttrib(cellElm, 'scope', data.scope);\n          if (cells.length === 1) {\n            setAttrib(cellElm, 'style', data.style);\n          } else {\n            updateStyles(cellElm, data.style);\n          }\n          setAttrib(cellElm, 'class', data.class);\n          setStyle(cellElm, 'width', addSizeSuffix(data.width));\n          setStyle(cellElm, 'height', addSizeSuffix(data.height));\n          if (data.type && cellElm.nodeName.toLowerCase() !== data.type) {\n            cellElm = dom.rename(cellElm, data.type);\n          }\n          if (cells.length === 1) {\n            Styles$1.unApplyAlign(editor, cellElm);\n            Styles$1.unApplyVAlign(editor, cellElm);\n          }\n          if (data.align) {\n            Styles$1.applyAlign(editor, cellElm, data.align);\n          }\n          if (data.valign) {\n            Styles$1.applyVAlign(editor, cellElm, data.valign);\n          }\n        });\n        editor.focus();\n      });\n    };\n    var open = function (editor) {\n      var cellElm, data, classListCtrl, cells = [];\n      cells = editor.dom.select('td[data-mce-selected],th[data-mce-selected]');\n      cellElm = editor.dom.getParent(editor.selection.getStart(), 'td,th');\n      if (!cells.length && cellElm) {\n        cells.push(cellElm);\n      }\n      cellElm = cellElm || cells[0];\n      if (!cellElm) {\n        return;\n      }\n      if (cells.length > 1) {\n        data = {\n          width: '',\n          height: '',\n          scope: '',\n          class: '',\n          align: '',\n          valign: '',\n          style: '',\n          type: cellElm.nodeName.toLowerCase()\n        };\n      } else {\n        data = extractDataFromElement(editor, cellElm);\n      }\n      if (getCellClassList(editor).length > 0) {\n        classListCtrl = {\n          name: 'class',\n          type: 'listbox',\n          label: 'Class',\n          values: Helpers.buildListItems(getCellClassList(editor), function (item) {\n            if (item.value) {\n              item.textStyle = function () {\n                return editor.formatter.getCssText({\n                  block: 'td',\n                  classes: [item.value]\n                });\n              };\n            }\n          })\n        };\n      }\n      var generalCellForm = {\n        type: 'form',\n        layout: 'flex',\n        direction: 'column',\n        labelGapCalc: 'children',\n        padding: 0,\n        items: [\n          {\n            type: 'form',\n            layout: 'grid',\n            columns: 2,\n            labelGapCalc: false,\n            padding: 0,\n            defaults: {\n              type: 'textbox',\n              maxWidth: 50\n            },\n            items: [\n              {\n                label: 'Width',\n                name: 'width',\n                onchange: curry(Helpers.updateStyleField, editor)\n              },\n              {\n                label: 'Height',\n                name: 'height',\n                onchange: curry(Helpers.updateStyleField, editor)\n              },\n              {\n                label: 'Cell type',\n                name: 'type',\n                type: 'listbox',\n                text: 'None',\n                minWidth: 90,\n                maxWidth: null,\n                values: [\n                  {\n                    text: 'Cell',\n                    value: 'td'\n                  },\n                  {\n                    text: 'Header cell',\n                    value: 'th'\n                  }\n                ]\n              },\n              {\n                label: 'Scope',\n                name: 'scope',\n                type: 'listbox',\n                text: 'None',\n                minWidth: 90,\n                maxWidth: null,\n                values: [\n                  {\n                    text: 'None',\n                    value: ''\n                  },\n                  {\n                    text: 'Row',\n                    value: 'row'\n                  },\n                  {\n                    text: 'Column',\n                    value: 'col'\n                  },\n                  {\n                    text: 'Row group',\n                    value: 'rowgroup'\n                  },\n                  {\n                    text: 'Column group',\n                    value: 'colgroup'\n                  }\n                ]\n              },\n              {\n                label: 'H Align',\n                name: 'align',\n                type: 'listbox',\n                text: 'None',\n                minWidth: 90,\n                maxWidth: null,\n                values: [\n                  {\n                    text: 'None',\n                    value: ''\n                  },\n                  {\n                    text: 'Left',\n                    value: 'left'\n                  },\n                  {\n                    text: 'Center',\n                    value: 'center'\n                  },\n                  {\n                    text: 'Right',\n                    value: 'right'\n                  }\n                ]\n              },\n              {\n                label: 'V Align',\n                name: 'valign',\n                type: 'listbox',\n                text: 'None',\n                minWidth: 90,\n                maxWidth: null,\n                values: [\n                  {\n                    text: 'None',\n                    value: ''\n                  },\n                  {\n                    text: 'Top',\n                    value: 'top'\n                  },\n                  {\n                    text: 'Middle',\n                    value: 'middle'\n                  },\n                  {\n                    text: 'Bottom',\n                    value: 'bottom'\n                  }\n                ]\n              }\n            ]\n          },\n          classListCtrl\n        ]\n      };\n      if (hasAdvancedCellTab(editor)) {\n        editor.windowManager.open({\n          title: 'Cell properties',\n          bodyType: 'tabpanel',\n          data: data,\n          body: [\n            {\n              title: 'General',\n              type: 'form',\n              items: generalCellForm\n            },\n            Helpers.createStyleForm(editor)\n          ],\n          onsubmit: curry(onSubmitCellForm, editor, cells)\n        });\n      } else {\n        editor.windowManager.open({\n          title: 'Cell properties',\n          data: data,\n          body: generalCellForm,\n          onsubmit: curry(onSubmitCellForm, editor, cells)\n        });\n      }\n    };\n    var CellDialog = { open: open };\n\n    var extractDataFromElement$1 = function (editor, elm) {\n      var dom = editor.dom;\n      var data = {\n        height: dom.getStyle(elm, 'height') || dom.getAttrib(elm, 'height'),\n        scope: dom.getAttrib(elm, 'scope'),\n        class: dom.getAttrib(elm, 'class'),\n        align: '',\n        style: '',\n        type: elm.parentNode.nodeName.toLowerCase()\n      };\n      global$1.each('left center right'.split(' '), function (name) {\n        if (editor.formatter.matchNode(elm, 'align' + name)) {\n          data.align = name;\n        }\n      });\n      if (hasAdvancedRowTab(editor)) {\n        global$1.extend(data, Helpers.extractAdvancedStyles(dom, elm));\n      }\n      return data;\n    };\n    var switchRowType = function (dom, rowElm, toType) {\n      var tableElm = dom.getParent(rowElm, 'table');\n      var oldParentElm = rowElm.parentNode;\n      var parentElm = dom.select(toType, tableElm)[0];\n      if (!parentElm) {\n        parentElm = dom.create(toType);\n        if (tableElm.firstChild) {\n          if (tableElm.firstChild.nodeName === 'CAPTION') {\n            dom.insertAfter(parentElm, tableElm.firstChild);\n          } else {\n            tableElm.insertBefore(parentElm, tableElm.firstChild);\n          }\n        } else {\n          tableElm.appendChild(parentElm);\n        }\n      }\n      parentElm.appendChild(rowElm);\n      if (!oldParentElm.hasChildNodes()) {\n        dom.remove(oldParentElm);\n      }\n    };\n    function onSubmitRowForm(editor, rows, oldData, evt) {\n      var dom = editor.dom;\n      function setAttrib(elm, name, value) {\n        if (rows.length === 1 || value) {\n          dom.setAttrib(elm, name, value);\n        }\n      }\n      function setStyle(elm, name, value) {\n        if (rows.length === 1 || value) {\n          dom.setStyle(elm, name, value);\n        }\n      }\n      if (hasAdvancedRowTab(editor)) {\n        Helpers.syncAdvancedStyleFields(editor, evt);\n      }\n      var data = evt.control.rootControl.toJSON();\n      editor.undoManager.transact(function () {\n        global$1.each(rows, function (rowElm) {\n          setAttrib(rowElm, 'scope', data.scope);\n          setAttrib(rowElm, 'style', data.style);\n          setAttrib(rowElm, 'class', data.class);\n          setStyle(rowElm, 'height', addSizeSuffix(data.height));\n          if (data.type !== rowElm.parentNode.nodeName.toLowerCase()) {\n            switchRowType(editor.dom, rowElm, data.type);\n          }\n          if (data.align !== oldData.align) {\n            Styles$1.unApplyAlign(editor, rowElm);\n            Styles$1.applyAlign(editor, rowElm, data.align);\n          }\n        });\n        editor.focus();\n      });\n    }\n    var open$1 = function (editor) {\n      var dom = editor.dom;\n      var tableElm, cellElm, rowElm, classListCtrl, data;\n      var rows = [];\n      var generalRowForm;\n      tableElm = dom.getParent(editor.selection.getStart(), 'table');\n      cellElm = dom.getParent(editor.selection.getStart(), 'td,th');\n      global$1.each(tableElm.rows, function (row) {\n        global$1.each(row.cells, function (cell) {\n          if (dom.getAttrib(cell, 'data-mce-selected') || cell === cellElm) {\n            rows.push(row);\n            return false;\n          }\n        });\n      });\n      rowElm = rows[0];\n      if (!rowElm) {\n        return;\n      }\n      if (rows.length > 1) {\n        data = {\n          height: '',\n          scope: '',\n          style: '',\n          class: '',\n          align: '',\n          type: rowElm.parentNode.nodeName.toLowerCase()\n        };\n      } else {\n        data = extractDataFromElement$1(editor, rowElm);\n      }\n      if (getRowClassList(editor).length > 0) {\n        classListCtrl = {\n          name: 'class',\n          type: 'listbox',\n          label: 'Class',\n          values: Helpers.buildListItems(getRowClassList(editor), function (item) {\n            if (item.value) {\n              item.textStyle = function () {\n                return editor.formatter.getCssText({\n                  block: 'tr',\n                  classes: [item.value]\n                });\n              };\n            }\n          })\n        };\n      }\n      generalRowForm = {\n        type: 'form',\n        columns: 2,\n        padding: 0,\n        defaults: { type: 'textbox' },\n        items: [\n          {\n            type: 'listbox',\n            name: 'type',\n            label: 'Row type',\n            text: 'Header',\n            maxWidth: null,\n            values: [\n              {\n                text: 'Header',\n                value: 'thead'\n              },\n              {\n                text: 'Body',\n                value: 'tbody'\n              },\n              {\n                text: 'Footer',\n                value: 'tfoot'\n              }\n            ]\n          },\n          {\n            type: 'listbox',\n            name: 'align',\n            label: 'Alignment',\n            text: 'None',\n            maxWidth: null,\n            values: [\n              {\n                text: 'None',\n                value: ''\n              },\n              {\n                text: 'Left',\n                value: 'left'\n              },\n              {\n                text: 'Center',\n                value: 'center'\n              },\n              {\n                text: 'Right',\n                value: 'right'\n              }\n            ]\n          },\n          {\n            label: 'Height',\n            name: 'height'\n          },\n          classListCtrl\n        ]\n      };\n      if (hasAdvancedRowTab(editor)) {\n        editor.windowManager.open({\n          title: 'Row properties',\n          data: data,\n          bodyType: 'tabpanel',\n          body: [\n            {\n              title: 'General',\n              type: 'form',\n              items: generalRowForm\n            },\n            Helpers.createStyleForm(editor)\n          ],\n          onsubmit: curry(onSubmitRowForm, editor, rows, data)\n        });\n      } else {\n        editor.windowManager.open({\n          title: 'Row properties',\n          data: data,\n          body: generalRowForm,\n          onsubmit: curry(onSubmitRowForm, editor, rows, data)\n        });\n      }\n    };\n    var RowDialog = { open: open$1 };\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var DefaultRenderOptions = {\n      styles: {\n        'border-collapse': 'collapse',\n        'width': '100%'\n      },\n      attributes: { border: '1' },\n      percentages: true\n    };\n    var makeTable = function () {\n      return Element.fromTag('table');\n    };\n    var tableBody = function () {\n      return Element.fromTag('tbody');\n    };\n    var tableRow = function () {\n      return Element.fromTag('tr');\n    };\n    var tableHeaderCell = function () {\n      return Element.fromTag('th');\n    };\n    var tableCell = function () {\n      return Element.fromTag('td');\n    };\n    var render$1 = function (rows, columns, rowHeaders, columnHeaders, renderOpts) {\n      if (renderOpts === void 0) {\n        renderOpts = DefaultRenderOptions;\n      }\n      var table = makeTable();\n      setAll$1(table, renderOpts.styles);\n      setAll(table, renderOpts.attributes);\n      var tbody = tableBody();\n      append(table, tbody);\n      var trs = [];\n      for (var i = 0; i < rows; i++) {\n        var tr = tableRow();\n        for (var j = 0; j < columns; j++) {\n          var td = i < rowHeaders || j < columnHeaders ? tableHeaderCell() : tableCell();\n          if (j < columnHeaders) {\n            set(td, 'scope', 'row');\n          }\n          if (i < rowHeaders) {\n            set(td, 'scope', 'col');\n          }\n          append(td, Element.fromTag('br'));\n          if (renderOpts.percentages) {\n            set$1(td, 'width', 100 / columns + '%');\n          }\n          append(tr, td);\n        }\n        trs.push(tr);\n      }\n      append$1(tbody, trs);\n      return table;\n    };\n\n    var get$7 = function (element) {\n      return element.dom().innerHTML;\n    };\n    var getOuter$2 = function (element) {\n      var container = Element.fromTag('div');\n      var clone = Element.fromDom(element.dom().cloneNode(true));\n      append(container, clone);\n      return get$7(container);\n    };\n\n    var placeCaretInCell = function (editor, cell) {\n      editor.selection.select(cell.dom(), true);\n      editor.selection.collapse(true);\n    };\n    var selectFirstCellInTable = function (editor, tableElm) {\n      descendant$1(tableElm, 'td,th').each(curry(placeCaretInCell, editor));\n    };\n    var fireEvents = function (editor, table) {\n      each(descendants$1(table, 'tr'), function (row) {\n        fireNewRow(editor, row.dom());\n        each(descendants$1(row, 'th,td'), function (cell) {\n          fireNewCell(editor, cell.dom());\n        });\n      });\n    };\n    var isPercentage = function (width) {\n      return isString(width) && width.indexOf('%') !== -1;\n    };\n    var insert$1 = function (editor, columns, rows) {\n      var defaultStyles = getDefaultStyles(editor);\n      var options = {\n        styles: defaultStyles,\n        attributes: getDefaultAttributes(editor),\n        percentages: isPercentage(defaultStyles.width) && !isPixelsForced(editor)\n      };\n      var table = render$1(rows, columns, 0, 0, options);\n      set(table, 'data-mce-id', '__mce');\n      var html = getOuter$2(table);\n      editor.insertContent(html);\n      return descendant$1(getBody$1(editor), 'table[data-mce-id=\"__mce\"]').map(function (table) {\n        if (isPixelsForced(editor)) {\n          set$1(table, 'width', get$1(table, 'width'));\n        }\n        remove(table, 'data-mce-id');\n        fireEvents(editor, table);\n        selectFirstCellInTable(editor, table);\n        return table.dom();\n      }).getOr(null);\n    };\n    var InsertTable = { insert: insert$1 };\n\n    function styleTDTH(dom, elm, name, value) {\n      if (elm.tagName === 'TD' || elm.tagName === 'TH') {\n        dom.setStyle(elm, name, value);\n      } else {\n        if (elm.children) {\n          for (var i = 0; i < elm.children.length; i++) {\n            styleTDTH(dom, elm.children[i], name, value);\n          }\n        }\n      }\n    }\n    var extractDataFromElement$2 = function (editor, tableElm) {\n      var dom = editor.dom;\n      var data = {\n        width: dom.getStyle(tableElm, 'width') || dom.getAttrib(tableElm, 'width'),\n        height: dom.getStyle(tableElm, 'height') || dom.getAttrib(tableElm, 'height'),\n        cellspacing: dom.getStyle(tableElm, 'border-spacing') || dom.getAttrib(tableElm, 'cellspacing'),\n        cellpadding: dom.getAttrib(tableElm, 'data-mce-cell-padding') || dom.getAttrib(tableElm, 'cellpadding') || Styles$1.getTDTHOverallStyle(editor.dom, tableElm, 'padding'),\n        border: dom.getAttrib(tableElm, 'data-mce-border') || dom.getAttrib(tableElm, 'border') || Styles$1.getTDTHOverallStyle(editor.dom, tableElm, 'border'),\n        borderColor: dom.getAttrib(tableElm, 'data-mce-border-color'),\n        caption: !!dom.select('caption', tableElm)[0],\n        class: dom.getAttrib(tableElm, 'class')\n      };\n      global$1.each('left center right'.split(' '), function (name) {\n        if (editor.formatter.matchNode(tableElm, 'align' + name)) {\n          data.align = name;\n        }\n      });\n      if (hasAdvancedTableTab(editor)) {\n        global$1.extend(data, Helpers.extractAdvancedStyles(dom, tableElm));\n      }\n      return data;\n    };\n    var applyDataToElement = function (editor, tableElm, data) {\n      var dom = editor.dom;\n      var attrs = {};\n      var styles = {};\n      attrs.class = data.class;\n      styles.height = addSizeSuffix(data.height);\n      if (dom.getAttrib(tableElm, 'width') && !shouldStyleWithCss(editor)) {\n        attrs.width = removePxSuffix(data.width);\n      } else {\n        styles.width = addSizeSuffix(data.width);\n      }\n      if (shouldStyleWithCss(editor)) {\n        styles['border-width'] = addSizeSuffix(data.border);\n        styles['border-spacing'] = addSizeSuffix(data.cellspacing);\n        global$1.extend(attrs, {\n          'data-mce-border-color': data.borderColor,\n          'data-mce-cell-padding': data.cellpadding,\n          'data-mce-border': data.border\n        });\n      } else {\n        global$1.extend(attrs, {\n          border: data.border,\n          cellpadding: data.cellpadding,\n          cellspacing: data.cellspacing\n        });\n      }\n      if (shouldStyleWithCss(editor)) {\n        if (tableElm.children) {\n          for (var i = 0; i < tableElm.children.length; i++) {\n            styleTDTH(dom, tableElm.children[i], {\n              'border-width': addSizeSuffix(data.border),\n              'border-color': data.borderColor,\n              'padding': addSizeSuffix(data.cellpadding)\n            });\n          }\n        }\n      }\n      if (data.style) {\n        global$1.extend(styles, dom.parseStyle(data.style));\n      } else {\n        styles = global$1.extend({}, dom.parseStyle(dom.getAttrib(tableElm, 'style')), styles);\n      }\n      attrs.style = dom.serializeStyle(styles);\n      dom.setAttribs(tableElm, attrs);\n    };\n    var onSubmitTableForm = function (editor, tableElm, evt) {\n      var dom = editor.dom;\n      var captionElm;\n      var data;\n      if (hasAdvancedTableTab(editor)) {\n        Helpers.syncAdvancedStyleFields(editor, evt);\n      }\n      data = evt.control.rootControl.toJSON();\n      if (data.class === false) {\n        delete data.class;\n      }\n      editor.undoManager.transact(function () {\n        if (!tableElm) {\n          tableElm = InsertTable.insert(editor, data.cols || 1, data.rows || 1);\n        }\n        applyDataToElement(editor, tableElm, data);\n        captionElm = dom.select('caption', tableElm)[0];\n        if (captionElm && !data.caption) {\n          dom.remove(captionElm);\n        }\n        if (!captionElm && data.caption) {\n          captionElm = dom.create('caption');\n          captionElm.innerHTML = !global$2.ie ? '<br data-mce-bogus=\"1\"/>' : '\\xA0';\n          tableElm.insertBefore(captionElm, tableElm.firstChild);\n        }\n        Styles$1.unApplyAlign(editor, tableElm);\n        if (data.align) {\n          Styles$1.applyAlign(editor, tableElm, data.align);\n        }\n        editor.focus();\n        editor.addVisual();\n      });\n    };\n    var open$2 = function (editor, isProps) {\n      var dom = editor.dom;\n      var tableElm, colsCtrl, rowsCtrl, classListCtrl, data = {}, generalTableForm;\n      if (isProps === true) {\n        tableElm = dom.getParent(editor.selection.getStart(), 'table');\n        if (tableElm) {\n          data = extractDataFromElement$2(editor, tableElm);\n        }\n      } else {\n        colsCtrl = {\n          label: 'Cols',\n          name: 'cols'\n        };\n        rowsCtrl = {\n          label: 'Rows',\n          name: 'rows'\n        };\n      }\n      if (getTableClassList(editor).length > 0) {\n        if (data.class) {\n          data.class = data.class.replace(/\\s*mce\\-item\\-table\\s*/g, '');\n        }\n        classListCtrl = {\n          name: 'class',\n          type: 'listbox',\n          label: 'Class',\n          values: Helpers.buildListItems(getTableClassList(editor), function (item) {\n            if (item.value) {\n              item.textStyle = function () {\n                return editor.formatter.getCssText({\n                  block: 'table',\n                  classes: [item.value]\n                });\n              };\n            }\n          })\n        };\n      }\n      generalTableForm = {\n        type: 'form',\n        layout: 'flex',\n        direction: 'column',\n        labelGapCalc: 'children',\n        padding: 0,\n        items: [\n          {\n            type: 'form',\n            labelGapCalc: false,\n            padding: 0,\n            layout: 'grid',\n            columns: 2,\n            defaults: {\n              type: 'textbox',\n              maxWidth: 50\n            },\n            items: hasAppearanceOptions(editor) ? [\n              colsCtrl,\n              rowsCtrl,\n              {\n                label: 'Width',\n                name: 'width',\n                onchange: curry(Helpers.updateStyleField, editor)\n              },\n              {\n                label: 'Height',\n                name: 'height',\n                onchange: curry(Helpers.updateStyleField, editor)\n              },\n              {\n                label: 'Cell spacing',\n                name: 'cellspacing'\n              },\n              {\n                label: 'Cell padding',\n                name: 'cellpadding'\n              },\n              {\n                label: 'Border',\n                name: 'border'\n              },\n              {\n                label: 'Caption',\n                name: 'caption',\n                type: 'checkbox'\n              }\n            ] : [\n              colsCtrl,\n              rowsCtrl,\n              {\n                label: 'Width',\n                name: 'width',\n                onchange: curry(Helpers.updateStyleField, editor)\n              },\n              {\n                label: 'Height',\n                name: 'height',\n                onchange: curry(Helpers.updateStyleField, editor)\n              }\n            ]\n          },\n          {\n            label: 'Alignment',\n            name: 'align',\n            type: 'listbox',\n            text: 'None',\n            values: [\n              {\n                text: 'None',\n                value: ''\n              },\n              {\n                text: 'Left',\n                value: 'left'\n              },\n              {\n                text: 'Center',\n                value: 'center'\n              },\n              {\n                text: 'Right',\n                value: 'right'\n              }\n            ]\n          },\n          classListCtrl\n        ]\n      };\n      if (hasAdvancedTableTab(editor)) {\n        editor.windowManager.open({\n          title: 'Table properties',\n          data: data,\n          bodyType: 'tabpanel',\n          body: [\n            {\n              title: 'General',\n              type: 'form',\n              items: generalTableForm\n            },\n            Helpers.createStyleForm(editor)\n          ],\n          onsubmit: curry(onSubmitTableForm, editor, tableElm)\n        });\n      } else {\n        editor.windowManager.open({\n          title: 'Table properties',\n          data: data,\n          body: generalTableForm,\n          onsubmit: curry(onSubmitTableForm, editor, tableElm)\n        });\n      }\n    };\n    var TableDialog = { open: open$2 };\n\n    var each$3 = global$1.each;\n    var registerCommands = function (editor, actions, cellSelection, selections, clipboardRows) {\n      var isRoot = getIsRoot(editor);\n      var eraseTable = function () {\n        getSelectionStartCell().orThunk(getSelectionStartCaption).each(function (cellOrCaption) {\n          var table = TableLookup.table(cellOrCaption, isRoot);\n          table.filter(not(isRoot)).each(function (table) {\n            var cursor = Element.fromText('');\n            after(table, cursor);\n            remove$2(table);\n            var rng = editor.dom.createRng();\n            rng.setStart(cursor.dom(), 0);\n            rng.setEnd(cursor.dom(), 0);\n            editor.selection.setRng(rng);\n          });\n        });\n      };\n      var getSelectionStartFromSelector = function (selector) {\n        return function () {\n          return Option.from(editor.dom.getParent(editor.selection.getStart(), selector)).map(Element.fromDom);\n        };\n      };\n      var getSelectionStartCaption = getSelectionStartFromSelector('caption');\n      var getSelectionStartCell = getSelectionStartFromSelector('th,td');\n      var getTableFromCell = function (cell) {\n        return TableLookup.table(cell, isRoot);\n      };\n      var getSize = function (table) {\n        return {\n          width: getPixelWidth$1(table.dom()),\n          height: getPixelWidth$1(table.dom())\n        };\n      };\n      var resizeChange = function (editor, oldSize, table) {\n        var newSize = getSize(table);\n        if (oldSize.width !== newSize.width || oldSize.height !== newSize.height) {\n          fireObjectResizeStart(editor, table.dom(), oldSize.width, oldSize.height);\n          fireObjectResized(editor, table.dom(), newSize.width, newSize.height);\n        }\n      };\n      var actOnSelection = function (execute) {\n        getSelectionStartCell().each(function (cell) {\n          getTableFromCell(cell).each(function (table) {\n            var targets = TableTargets.forMenu(selections, table, cell);\n            var beforeSize = getSize(table);\n            execute(table, targets).each(function (rng) {\n              resizeChange(editor, beforeSize, table);\n              editor.selection.setRng(rng);\n              editor.focus();\n              cellSelection.clear(table);\n              removeDataStyle(table);\n            });\n          });\n        });\n      };\n      var copyRowSelection = function (execute) {\n        return getSelectionStartCell().bind(function (cell) {\n          return getTableFromCell(cell).bind(function (table) {\n            var doc = Element.fromDom(editor.getDoc());\n            var targets = TableTargets.forMenu(selections, table, cell);\n            var generators = TableFill.cellOperations(noop, doc, Option.none());\n            return CopyRows.copyRows(table, targets, generators);\n          });\n        });\n      };\n      var pasteOnSelection = function (execute) {\n        clipboardRows.get().each(function (rows) {\n          var clonedRows = map(rows, function (row) {\n            return deep(row);\n          });\n          getSelectionStartCell().each(function (cell) {\n            getTableFromCell(cell).each(function (table) {\n              var doc = Element.fromDom(editor.getDoc());\n              var generators = TableFill.paste(doc);\n              var targets = TableTargets.pasteRows(selections, table, cell, clonedRows, generators);\n              execute(table, targets).each(function (rng) {\n                editor.selection.setRng(rng);\n                editor.focus();\n                cellSelection.clear(table);\n              });\n            });\n          });\n        });\n      };\n      each$3({\n        mceTableSplitCells: function () {\n          actOnSelection(actions.unmergeCells);\n        },\n        mceTableMergeCells: function () {\n          actOnSelection(actions.mergeCells);\n        },\n        mceTableInsertRowBefore: function () {\n          actOnSelection(actions.insertRowsBefore);\n        },\n        mceTableInsertRowAfter: function () {\n          actOnSelection(actions.insertRowsAfter);\n        },\n        mceTableInsertColBefore: function () {\n          actOnSelection(actions.insertColumnsBefore);\n        },\n        mceTableInsertColAfter: function () {\n          actOnSelection(actions.insertColumnsAfter);\n        },\n        mceTableDeleteCol: function () {\n          actOnSelection(actions.deleteColumn);\n        },\n        mceTableDeleteRow: function () {\n          actOnSelection(actions.deleteRow);\n        },\n        mceTableCutRow: function (grid) {\n          clipboardRows.set(copyRowSelection());\n          actOnSelection(actions.deleteRow);\n        },\n        mceTableCopyRow: function (grid) {\n          clipboardRows.set(copyRowSelection());\n        },\n        mceTablePasteRowBefore: function (grid) {\n          pasteOnSelection(actions.pasteRowsBefore);\n        },\n        mceTablePasteRowAfter: function (grid) {\n          pasteOnSelection(actions.pasteRowsAfter);\n        },\n        mceTableDelete: eraseTable\n      }, function (func, name) {\n        editor.addCommand(name, func);\n      });\n      each$3({\n        mceInsertTable: curry(TableDialog.open, editor),\n        mceTableProps: curry(TableDialog.open, editor, true),\n        mceTableRowProps: curry(RowDialog.open, editor),\n        mceTableCellProps: curry(CellDialog.open, editor)\n      }, function (func, name) {\n        editor.addCommand(name, function (ui, val) {\n          func(val);\n        });\n      });\n    };\n    var Commands = { registerCommands: registerCommands };\n\n    var only = function (element) {\n      var parent = Option.from(element.dom().documentElement).map(Element.fromDom).getOr(element);\n      return {\n        parent: constant(parent),\n        view: constant(element),\n        origin: constant(Position(0, 0))\n      };\n    };\n    var detached = function (editable, chrome) {\n      var origin = function () {\n        return absolute(chrome);\n      };\n      return {\n        parent: constant(chrome),\n        view: constant(editable),\n        origin: origin\n      };\n    };\n    var body$1 = function (editable, chrome) {\n      return {\n        parent: constant(chrome),\n        view: constant(editable),\n        origin: constant(Position(0, 0))\n      };\n    };\n    var ResizeWire = {\n      only: only,\n      detached: detached,\n      body: body$1\n    };\n\n    var Event = function (fields) {\n      var struct = Immutable.apply(null, fields);\n      var handlers = [];\n      var bind = function (handler) {\n        if (handler === undefined) {\n          throw new Error('Event bind error: undefined handler');\n        }\n        handlers.push(handler);\n      };\n      var unbind = function (handler) {\n        handlers = filter(handlers, function (h) {\n          return h !== handler;\n        });\n      };\n      var trigger = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        var event = struct.apply(null, args);\n        each(handlers, function (handler) {\n          handler(event);\n        });\n      };\n      return {\n        bind: bind,\n        unbind: unbind,\n        trigger: trigger\n      };\n    };\n\n    var create$1 = function (typeDefs) {\n      var registry = map$1(typeDefs, function (event) {\n        return {\n          bind: event.bind,\n          unbind: event.unbind\n        };\n      });\n      var trigger = map$1(typeDefs, function (event) {\n        return event.trigger;\n      });\n      return {\n        registry: registry,\n        trigger: trigger\n      };\n    };\n    var Events = { create: create$1 };\n\n    var mkEvent = function (target, x, y, stop, prevent, kill, raw) {\n      return {\n        target: constant(target),\n        x: constant(x),\n        y: constant(y),\n        stop: stop,\n        prevent: prevent,\n        kill: kill,\n        raw: constant(raw)\n      };\n    };\n    var handle = function (filter, handler) {\n      return function (rawEvent) {\n        if (!filter(rawEvent)) {\n          return;\n        }\n        var target = Element.fromDom(rawEvent.target);\n        var stop = function () {\n          rawEvent.stopPropagation();\n        };\n        var prevent = function () {\n          rawEvent.preventDefault();\n        };\n        var kill = compose(prevent, stop);\n        var evt = mkEvent(target, rawEvent.clientX, rawEvent.clientY, stop, prevent, kill, rawEvent);\n        handler(evt);\n      };\n    };\n    var binder = function (element, event, filter, handler, useCapture) {\n      var wrapped = handle(filter, handler);\n      element.dom().addEventListener(event, wrapped, useCapture);\n      return { unbind: curry(unbind, element, event, wrapped, useCapture) };\n    };\n    var bind$1 = function (element, event, filter, handler) {\n      return binder(element, event, filter, handler, false);\n    };\n    var unbind = function (element, event, handler, useCapture) {\n      element.dom().removeEventListener(event, handler, useCapture);\n    };\n\n    var filter$1 = constant(true);\n    var bind$2 = function (element, event, handler) {\n      return bind$1(element, event, filter$1, handler);\n    };\n\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var shallow$1 = function (old, nu) {\n      return nu;\n    };\n    var baseMerge = function (merger) {\n      return function () {\n        var objects = new Array(arguments.length);\n        for (var i = 0; i < objects.length; i++) {\n          objects[i] = arguments[i];\n        }\n        if (objects.length === 0) {\n          throw new Error('Can\\'t merge zero objects');\n        }\n        var ret = {};\n        for (var j = 0; j < objects.length; j++) {\n          var curObject = objects[j];\n          for (var key in curObject) {\n            if (hasOwnProperty.call(curObject, key)) {\n              ret[key] = merger(ret[key], curObject[key]);\n            }\n          }\n        }\n        return ret;\n      };\n    };\n    var merge$3 = baseMerge(shallow$1);\n\n    var styles$1 = css('ephox-dragster');\n    var Styles$2 = { resolve: styles$1.resolve };\n\n    var Blocker = function (options) {\n      var settings = merge$3({ layerClass: Styles$2.resolve('blocker') }, options);\n      var div = Element.fromTag('div');\n      set(div, 'role', 'presentation');\n      setAll$1(div, {\n        position: 'fixed',\n        left: '0px',\n        top: '0px',\n        width: '100%',\n        height: '100%'\n      });\n      add$2(div, Styles$2.resolve('blocker'));\n      add$2(div, settings.layerClass);\n      var element = function () {\n        return div;\n      };\n      var destroy = function () {\n        remove$2(div);\n      };\n      return {\n        element: element,\n        destroy: destroy\n      };\n    };\n\n    var DragMode = exactly([\n      'compare',\n      'extract',\n      'mutate',\n      'sink'\n    ]);\n    var DragSink = exactly([\n      'element',\n      'start',\n      'stop',\n      'destroy'\n    ]);\n    var DragApi = exactly([\n      'forceDrop',\n      'drop',\n      'move',\n      'delayDrop'\n    ]);\n\n    var compare = function (old, nu) {\n      return Position(nu.left() - old.left(), nu.top() - old.top());\n    };\n    var extract$1 = function (event) {\n      return Option.some(Position(event.x(), event.y()));\n    };\n    var mutate = function (mutation, info) {\n      mutation.mutate(info.left(), info.top());\n    };\n    var sink = function (dragApi, settings) {\n      var blocker = Blocker(settings);\n      var mdown = bind$2(blocker.element(), 'mousedown', dragApi.forceDrop);\n      var mup = bind$2(blocker.element(), 'mouseup', dragApi.drop);\n      var mmove = bind$2(blocker.element(), 'mousemove', dragApi.move);\n      var mout = bind$2(blocker.element(), 'mouseout', dragApi.delayDrop);\n      var destroy = function () {\n        blocker.destroy();\n        mup.unbind();\n        mmove.unbind();\n        mout.unbind();\n        mdown.unbind();\n      };\n      var start = function (parent) {\n        append(parent, blocker.element());\n      };\n      var stop = function () {\n        remove$2(blocker.element());\n      };\n      return DragSink({\n        element: blocker.element,\n        start: start,\n        stop: stop,\n        destroy: destroy\n      });\n    };\n    var MouseDrag = DragMode({\n      compare: compare,\n      extract: extract$1,\n      sink: sink,\n      mutate: mutate\n    });\n\n    var last$2 = function (fn, rate) {\n      var timer = null;\n      var cancel = function () {\n        if (timer !== null) {\n          domGlobals.clearTimeout(timer);\n          timer = null;\n        }\n      };\n      var throttle = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        if (timer !== null) {\n          domGlobals.clearTimeout(timer);\n        }\n        timer = domGlobals.setTimeout(function () {\n          fn.apply(null, args);\n          timer = null;\n        }, rate);\n      };\n      return {\n        cancel: cancel,\n        throttle: throttle\n      };\n    };\n\n    function InDrag () {\n      var previous = Option.none();\n      var reset = function () {\n        previous = Option.none();\n      };\n      var update = function (mode, nu) {\n        var result = previous.map(function (old) {\n          return mode.compare(old, nu);\n        });\n        previous = Option.some(nu);\n        return result;\n      };\n      var onEvent = function (event, mode) {\n        var dataOption = mode.extract(event);\n        dataOption.each(function (data) {\n          var offset = update(mode, data);\n          offset.each(function (d) {\n            events.trigger.move(d);\n          });\n        });\n      };\n      var events = Events.create({ move: Event(['info']) });\n      return {\n        onEvent: onEvent,\n        reset: reset,\n        events: events.registry\n      };\n    }\n\n    function NoDrag () {\n      return {\n        onEvent: noop,\n        reset: noop\n      };\n    }\n\n    function Movement () {\n      var noDragState = NoDrag();\n      var inDragState = InDrag();\n      var dragState = noDragState;\n      var on = function () {\n        dragState.reset();\n        dragState = inDragState;\n      };\n      var off = function () {\n        dragState.reset();\n        dragState = noDragState;\n      };\n      var onEvent = function (event, mode) {\n        dragState.onEvent(event, mode);\n      };\n      var isOn = function () {\n        return dragState === inDragState;\n      };\n      return {\n        on: on,\n        off: off,\n        isOn: isOn,\n        onEvent: onEvent,\n        events: inDragState.events\n      };\n    }\n\n    var setup = function (mutation, mode, settings) {\n      var active = false;\n      var events = Events.create({\n        start: Event([]),\n        stop: Event([])\n      });\n      var movement = Movement();\n      var drop = function () {\n        sink.stop();\n        if (movement.isOn()) {\n          movement.off();\n          events.trigger.stop();\n        }\n      };\n      var throttledDrop = last$2(drop, 200);\n      var go = function (parent) {\n        sink.start(parent);\n        movement.on();\n        events.trigger.start();\n      };\n      var mousemove = function (event) {\n        throttledDrop.cancel();\n        movement.onEvent(event, mode);\n      };\n      movement.events.move.bind(function (event) {\n        mode.mutate(mutation, event.info());\n      });\n      var on = function () {\n        active = true;\n      };\n      var off = function () {\n        active = false;\n      };\n      var runIfActive = function (f) {\n        return function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          if (active) {\n            f.apply(null, args);\n          }\n        };\n      };\n      var sink = mode.sink(DragApi({\n        forceDrop: drop,\n        drop: runIfActive(drop),\n        move: runIfActive(mousemove),\n        delayDrop: runIfActive(throttledDrop.throttle)\n      }), settings);\n      var destroy = function () {\n        sink.destroy();\n      };\n      return {\n        element: sink.element,\n        go: go,\n        on: on,\n        off: off,\n        destroy: destroy,\n        events: events.registry\n      };\n    };\n    var Dragging = { setup: setup };\n\n    var transform$1 = function (mutation, settings) {\n      if (settings === void 0) {\n        settings = {};\n      }\n      var mode = settings.mode !== undefined ? settings.mode : MouseDrag;\n      return Dragging.setup(mutation, mode, settings);\n    };\n    var Dragger = { transform: transform$1 };\n\n    var Mutation = function () {\n      var events = Events.create({\n        drag: Event([\n          'xDelta',\n          'yDelta'\n        ])\n      });\n      var mutate = function (x, y) {\n        events.trigger.drag(x, y);\n      };\n      return {\n        mutate: mutate,\n        events: events.registry\n      };\n    };\n\n    var BarMutation = function () {\n      var events = Events.create({\n        drag: Event([\n          'xDelta',\n          'yDelta',\n          'target'\n        ])\n      });\n      var target = Option.none();\n      var delegate = Mutation();\n      delegate.events.drag.bind(function (event) {\n        target.each(function (t) {\n          events.trigger.drag(event.xDelta(), event.yDelta(), t);\n        });\n      });\n      var assign = function (t) {\n        target = Option.some(t);\n      };\n      var get = function () {\n        return target;\n      };\n      return {\n        assign: assign,\n        get: get,\n        mutate: delegate.mutate,\n        events: events.registry\n      };\n    };\n\n    var isContentEditableTrue = function (elm) {\n      return get(elm, 'contenteditable') === 'true';\n    };\n    var findClosestContentEditable = function (target, isRoot) {\n      return closest$1(target, '[contenteditable]', isRoot);\n    };\n\n    var resizeBarDragging = Styles.resolve('resizer-bar-dragging');\n    var BarManager = function (wire, direction, hdirection) {\n      var mutation = BarMutation();\n      var resizing = Dragger.transform(mutation, {});\n      var hoverTable = Option.none();\n      var getResizer = function (element, type) {\n        return Option.from(get(element, type));\n      };\n      mutation.events.drag.bind(function (event) {\n        getResizer(event.target(), 'data-row').each(function (_dataRow) {\n          var currentRow = CellUtils.getInt(event.target(), 'top');\n          set$1(event.target(), 'top', currentRow + event.yDelta() + 'px');\n        });\n        getResizer(event.target(), 'data-column').each(function (_dataCol) {\n          var currentCol = CellUtils.getInt(event.target(), 'left');\n          set$1(event.target(), 'left', currentCol + event.xDelta() + 'px');\n        });\n      });\n      var getDelta = function (target, dir) {\n        var newX = CellUtils.getInt(target, dir);\n        var oldX = parseInt(get(target, 'data-initial-' + dir), 10);\n        return newX - oldX;\n      };\n      resizing.events.stop.bind(function () {\n        mutation.get().each(function (target) {\n          hoverTable.each(function (table) {\n            getResizer(target, 'data-row').each(function (row) {\n              var delta = getDelta(target, 'top');\n              remove(target, 'data-initial-top');\n              events.trigger.adjustHeight(table, delta, parseInt(row, 10));\n            });\n            getResizer(target, 'data-column').each(function (column) {\n              var delta = getDelta(target, 'left');\n              remove(target, 'data-initial-left');\n              events.trigger.adjustWidth(table, delta, parseInt(column, 10));\n            });\n            Bars.refresh(wire, table, hdirection, direction);\n          });\n        });\n      });\n      var handler = function (target, dir) {\n        events.trigger.startAdjust();\n        mutation.assign(target);\n        set(target, 'data-initial-' + dir, parseInt(get$1(target, dir), 10));\n        add$2(target, resizeBarDragging);\n        set$1(target, 'opacity', '0.2');\n        resizing.go(wire.parent());\n      };\n      var mousedown = bind$2(wire.parent(), 'mousedown', function (event) {\n        if (Bars.isRowBar(event.target())) {\n          handler(event.target(), 'top');\n        }\n        if (Bars.isColBar(event.target())) {\n          handler(event.target(), 'left');\n        }\n      });\n      var isRoot = function (e) {\n        return eq(e, wire.view());\n      };\n      var findClosestEditableTable = function (target) {\n        return closest$1(target, 'table', isRoot).filter(function (table) {\n          return findClosestContentEditable(table, isRoot).exists(isContentEditableTrue);\n        });\n      };\n      var mouseover = bind$2(wire.view(), 'mouseover', function (event) {\n        findClosestEditableTable(event.target()).fold(function () {\n          if (inBody(event.target())) {\n            Bars.destroy(wire);\n          }\n        }, function (table) {\n          hoverTable = Option.some(table);\n          Bars.refresh(wire, table, hdirection, direction);\n        });\n      });\n      var destroy = function () {\n        mousedown.unbind();\n        mouseover.unbind();\n        resizing.destroy();\n        Bars.destroy(wire);\n      };\n      var refresh = function (tbl) {\n        Bars.refresh(wire, tbl, hdirection, direction);\n      };\n      var events = Events.create({\n        adjustHeight: Event([\n          'table',\n          'delta',\n          'row'\n        ]),\n        adjustWidth: Event([\n          'table',\n          'delta',\n          'column'\n        ]),\n        startAdjust: Event([])\n      });\n      return {\n        destroy: destroy,\n        refresh: refresh,\n        on: resizing.on,\n        off: resizing.off,\n        hideBars: curry(Bars.hide, wire),\n        showBars: curry(Bars.show, wire),\n        events: events.registry\n      };\n    };\n\n    var create$2 = function (wire, vdirection) {\n      var hdirection = BarPositions.height;\n      var manager = BarManager(wire, vdirection, hdirection);\n      var events = Events.create({\n        beforeResize: Event(['table']),\n        afterResize: Event(['table']),\n        startDrag: Event([])\n      });\n      manager.events.adjustHeight.bind(function (event) {\n        events.trigger.beforeResize(event.table());\n        var delta = hdirection.delta(event.delta(), event.table());\n        Adjustments.adjustHeight(event.table(), delta, event.row(), hdirection);\n        events.trigger.afterResize(event.table());\n      });\n      manager.events.startAdjust.bind(function (event) {\n        events.trigger.startDrag();\n      });\n      manager.events.adjustWidth.bind(function (event) {\n        events.trigger.beforeResize(event.table());\n        var delta = vdirection.delta(event.delta(), event.table());\n        Adjustments.adjustWidth(event.table(), delta, event.column(), vdirection);\n        events.trigger.afterResize(event.table());\n      });\n      return {\n        on: manager.on,\n        off: manager.off,\n        hideBars: manager.hideBars,\n        showBars: manager.showBars,\n        destroy: manager.destroy,\n        events: events.registry\n      };\n    };\n    var TableResize = { create: create$2 };\n\n    var createContainer = function () {\n      var container = Element.fromTag('div');\n      setAll$1(container, {\n        position: 'static',\n        height: '0',\n        width: '0',\n        padding: '0',\n        margin: '0',\n        border: '0'\n      });\n      append(body(), container);\n      return container;\n    };\n    var get$8 = function (editor, container) {\n      return editor.inline ? ResizeWire.body(getBody$1(editor), createContainer()) : ResizeWire.only(Element.fromDom(editor.getDoc()));\n    };\n    var remove$6 = function (editor, wire) {\n      if (editor.inline) {\n        remove$2(wire.parent());\n      }\n    };\n    var TableWire = {\n      get: get$8,\n      remove: remove$6\n    };\n\n    var ResizeHandler = function (editor) {\n      var selectionRng = Option.none();\n      var resize = Option.none();\n      var wire = Option.none();\n      var percentageBasedSizeRegex = /(\\d+(\\.\\d+)?)%/;\n      var startW, startRawW;\n      var isTable = function (elm) {\n        return elm.nodeName === 'TABLE';\n      };\n      var getRawWidth = function (elm) {\n        return editor.dom.getStyle(elm, 'width') || editor.dom.getAttrib(elm, 'width');\n      };\n      var lazyResize = function () {\n        return resize;\n      };\n      var lazyWire = function () {\n        return wire.getOr(ResizeWire.only(Element.fromDom(editor.getBody())));\n      };\n      var destroy = function () {\n        resize.each(function (sz) {\n          sz.destroy();\n        });\n        wire.each(function (w) {\n          TableWire.remove(editor, w);\n        });\n      };\n      editor.on('init', function () {\n        var direction = TableDirection(Direction.directionAt);\n        var rawWire = TableWire.get(editor);\n        wire = Option.some(rawWire);\n        if (hasObjectResizing(editor) && hasTableResizeBars(editor)) {\n          var sz = TableResize.create(rawWire, direction);\n          sz.on();\n          sz.events.startDrag.bind(function (event) {\n            selectionRng = Option.some(editor.selection.getRng());\n          });\n          sz.events.beforeResize.bind(function (event) {\n            var rawTable = event.table().dom();\n            fireObjectResizeStart(editor, rawTable, getPixelWidth$1(rawTable), getPixelHeight(rawTable));\n          });\n          sz.events.afterResize.bind(function (event) {\n            var table = event.table();\n            var rawTable = table.dom();\n            removeDataStyle(table);\n            selectionRng.each(function (rng) {\n              editor.selection.setRng(rng);\n              editor.focus();\n            });\n            fireObjectResized(editor, rawTable, getPixelWidth$1(rawTable), getPixelHeight(rawTable));\n            editor.undoManager.add();\n          });\n          resize = Option.some(sz);\n        }\n      });\n      editor.on('ObjectResizeStart', function (e) {\n        var targetElm = e.target;\n        if (isTable(targetElm)) {\n          startW = e.width;\n          startRawW = getRawWidth(targetElm);\n        }\n      });\n      editor.on('ObjectResized', function (e) {\n        var targetElm = e.target;\n        if (isTable(targetElm)) {\n          var table = targetElm;\n          if (percentageBasedSizeRegex.test(startRawW)) {\n            var percentW = parseFloat(percentageBasedSizeRegex.exec(startRawW)[1]);\n            var targetPercentW = e.width * percentW / startW;\n            editor.dom.setStyle(table, 'width', targetPercentW + '%');\n          } else {\n            var newCellSizes_1 = [];\n            global$1.each(table.rows, function (row) {\n              global$1.each(row.cells, function (cell) {\n                var width = editor.dom.getStyle(cell, 'width', true);\n                newCellSizes_1.push({\n                  cell: cell,\n                  width: width\n                });\n              });\n            });\n            global$1.each(newCellSizes_1, function (newCellSize) {\n              editor.dom.setStyle(newCellSize.cell, 'width', newCellSize.width);\n              editor.dom.setAttrib(newCellSize.cell, 'width', null);\n            });\n          }\n        }\n      });\n      return {\n        lazyResize: lazyResize,\n        lazyWire: lazyWire,\n        destroy: destroy\n      };\n    };\n\n    var adt$1 = Adt.generate([\n      { none: ['current'] },\n      { first: ['current'] },\n      {\n        middle: [\n          'current',\n          'target'\n        ]\n      },\n      { last: ['current'] }\n    ]);\n    var none$1 = function (current) {\n      if (current === void 0) {\n        current = undefined;\n      }\n      return adt$1.none(current);\n    };\n    var CellLocation = __assign(__assign({}, adt$1), { none: none$1 });\n\n    var detect$4 = function (current, isRoot) {\n      return TableLookup.table(current, isRoot).bind(function (table) {\n        var all = TableLookup.cells(table);\n        var index = findIndex(all, function (x) {\n          return eq(current, x);\n        });\n        return index.map(function (ind) {\n          return {\n            index: constant(ind),\n            all: constant(all)\n          };\n        });\n      });\n    };\n    var next = function (current, isRoot) {\n      var detection = detect$4(current, isRoot);\n      return detection.fold(function () {\n        return CellLocation.none(current);\n      }, function (info) {\n        return info.index() + 1 < info.all().length ? CellLocation.middle(current, info.all()[info.index() + 1]) : CellLocation.last(current);\n      });\n    };\n    var prev = function (current, isRoot) {\n      var detection = detect$4(current, isRoot);\n      return detection.fold(function () {\n        return CellLocation.none();\n      }, function (info) {\n        return info.index() - 1 >= 0 ? CellLocation.middle(current, info.all()[info.index() - 1]) : CellLocation.first(current);\n      });\n    };\n    var CellNavigation = {\n      next: next,\n      prev: prev\n    };\n\n    var create$3 = Immutable('start', 'soffset', 'finish', 'foffset');\n    var SimRange = { create: create$3 };\n\n    var adt$2 = Adt.generate([\n      { before: ['element'] },\n      {\n        on: [\n          'element',\n          'offset'\n        ]\n      },\n      { after: ['element'] }\n    ]);\n    var cata$1 = function (subject, onBefore, onOn, onAfter) {\n      return subject.fold(onBefore, onOn, onAfter);\n    };\n    var getStart = function (situ) {\n      return situ.fold(identity, identity, identity);\n    };\n    var before$2 = adt$2.before;\n    var on = adt$2.on;\n    var after$2 = adt$2.after;\n    var Situ = {\n      before: before$2,\n      on: on,\n      after: after$2,\n      cata: cata$1,\n      getStart: getStart\n    };\n\n    var adt$3 = Adt.generate([\n      { domRange: ['rng'] },\n      {\n        relative: [\n          'startSitu',\n          'finishSitu'\n        ]\n      },\n      {\n        exact: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      }\n    ]);\n    var exactFromRange = function (simRange) {\n      return adt$3.exact(simRange.start(), simRange.soffset(), simRange.finish(), simRange.foffset());\n    };\n    var getStart$1 = function (selection) {\n      return selection.match({\n        domRange: function (rng) {\n          return Element.fromDom(rng.startContainer);\n        },\n        relative: function (startSitu, finishSitu) {\n          return Situ.getStart(startSitu);\n        },\n        exact: function (start, soffset, finish, foffset) {\n          return start;\n        }\n      });\n    };\n    var domRange = adt$3.domRange;\n    var relative = adt$3.relative;\n    var exact = adt$3.exact;\n    var getWin = function (selection) {\n      var start = getStart$1(selection);\n      return defaultView(start);\n    };\n    var range$1 = SimRange.create;\n    var Selection = {\n      domRange: domRange,\n      relative: relative,\n      exact: exact,\n      exactFromRange: exactFromRange,\n      getWin: getWin,\n      range: range$1\n    };\n\n    var selectNodeContents = function (win, element) {\n      var rng = win.document.createRange();\n      selectNodeContentsUsing(rng, element);\n      return rng;\n    };\n    var selectNodeContentsUsing = function (rng, element) {\n      rng.selectNodeContents(element.dom());\n    };\n    var setStart = function (rng, situ) {\n      situ.fold(function (e) {\n        rng.setStartBefore(e.dom());\n      }, function (e, o) {\n        rng.setStart(e.dom(), o);\n      }, function (e) {\n        rng.setStartAfter(e.dom());\n      });\n    };\n    var setFinish = function (rng, situ) {\n      situ.fold(function (e) {\n        rng.setEndBefore(e.dom());\n      }, function (e, o) {\n        rng.setEnd(e.dom(), o);\n      }, function (e) {\n        rng.setEndAfter(e.dom());\n      });\n    };\n    var relativeToNative = function (win, startSitu, finishSitu) {\n      var range = win.document.createRange();\n      setStart(range, startSitu);\n      setFinish(range, finishSitu);\n      return range;\n    };\n    var exactToNative = function (win, start, soffset, finish, foffset) {\n      var rng = win.document.createRange();\n      rng.setStart(start.dom(), soffset);\n      rng.setEnd(finish.dom(), foffset);\n      return rng;\n    };\n    var toRect = function (rect) {\n      return {\n        left: constant(rect.left),\n        top: constant(rect.top),\n        right: constant(rect.right),\n        bottom: constant(rect.bottom),\n        width: constant(rect.width),\n        height: constant(rect.height)\n      };\n    };\n    var getFirstRect = function (rng) {\n      var rects = rng.getClientRects();\n      var rect = rects.length > 0 ? rects[0] : rng.getBoundingClientRect();\n      return rect.width > 0 || rect.height > 0 ? Option.some(rect).map(toRect) : Option.none();\n    };\n\n    var adt$4 = Adt.generate([\n      {\n        ltr: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      },\n      {\n        rtl: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      }\n    ]);\n    var fromRange = function (win, type, range) {\n      return type(Element.fromDom(range.startContainer), range.startOffset, Element.fromDom(range.endContainer), range.endOffset);\n    };\n    var getRanges = function (win, selection) {\n      return selection.match({\n        domRange: function (rng) {\n          return {\n            ltr: constant(rng),\n            rtl: Option.none\n          };\n        },\n        relative: function (startSitu, finishSitu) {\n          return {\n            ltr: cached(function () {\n              return relativeToNative(win, startSitu, finishSitu);\n            }),\n            rtl: cached(function () {\n              return Option.some(relativeToNative(win, finishSitu, startSitu));\n            })\n          };\n        },\n        exact: function (start, soffset, finish, foffset) {\n          return {\n            ltr: cached(function () {\n              return exactToNative(win, start, soffset, finish, foffset);\n            }),\n            rtl: cached(function () {\n              return Option.some(exactToNative(win, finish, foffset, start, soffset));\n            })\n          };\n        }\n      });\n    };\n    var doDiagnose = function (win, ranges) {\n      var rng = ranges.ltr();\n      if (rng.collapsed) {\n        var reversed = ranges.rtl().filter(function (rev) {\n          return rev.collapsed === false;\n        });\n        return reversed.map(function (rev) {\n          return adt$4.rtl(Element.fromDom(rev.endContainer), rev.endOffset, Element.fromDom(rev.startContainer), rev.startOffset);\n        }).getOrThunk(function () {\n          return fromRange(win, adt$4.ltr, rng);\n        });\n      } else {\n        return fromRange(win, adt$4.ltr, rng);\n      }\n    };\n    var diagnose = function (win, selection) {\n      var ranges = getRanges(win, selection);\n      return doDiagnose(win, ranges);\n    };\n    var asLtrRange = function (win, selection) {\n      var diagnosis = diagnose(win, selection);\n      return diagnosis.match({\n        ltr: function (start, soffset, finish, foffset) {\n          var rng = win.document.createRange();\n          rng.setStart(start.dom(), soffset);\n          rng.setEnd(finish.dom(), foffset);\n          return rng;\n        },\n        rtl: function (start, soffset, finish, foffset) {\n          var rng = win.document.createRange();\n          rng.setStart(finish.dom(), foffset);\n          rng.setEnd(start.dom(), soffset);\n          return rng;\n        }\n      });\n    };\n\n    var searchForPoint = function (rectForOffset, x, y, maxX, length) {\n      if (length === 0) {\n        return 0;\n      } else if (x === maxX) {\n        return length - 1;\n      }\n      var xDelta = maxX;\n      for (var i = 1; i < length; i++) {\n        var rect = rectForOffset(i);\n        var curDeltaX = Math.abs(x - rect.left);\n        if (y <= rect.bottom) {\n          if (y < rect.top || curDeltaX > xDelta) {\n            return i - 1;\n          } else {\n            xDelta = curDeltaX;\n          }\n        }\n      }\n      return 0;\n    };\n    var inRect = function (rect, x, y) {\n      return x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom;\n    };\n\n    var locateOffset = function (doc, textnode, x, y, rect) {\n      var rangeForOffset = function (o) {\n        var r = doc.dom().createRange();\n        r.setStart(textnode.dom(), o);\n        r.collapse(true);\n        return r;\n      };\n      var rectForOffset = function (o) {\n        var r = rangeForOffset(o);\n        return r.getBoundingClientRect();\n      };\n      var length = get$2(textnode).length;\n      var offset = searchForPoint(rectForOffset, x, y, rect.right, length);\n      return rangeForOffset(offset);\n    };\n    var locate = function (doc, node, x, y) {\n      var r = doc.dom().createRange();\n      r.selectNode(node.dom());\n      var rects = r.getClientRects();\n      var foundRect = findMap(rects, function (rect) {\n        return inRect(rect, x, y) ? Option.some(rect) : Option.none();\n      });\n      return foundRect.map(function (rect) {\n        return locateOffset(doc, node, x, y, rect);\n      });\n    };\n\n    var searchInChildren = function (doc, node, x, y) {\n      var r = doc.dom().createRange();\n      var nodes = children(node);\n      return findMap(nodes, function (n) {\n        r.selectNode(n.dom());\n        return inRect(r.getBoundingClientRect(), x, y) ? locateNode(doc, n, x, y) : Option.none();\n      });\n    };\n    var locateNode = function (doc, node, x, y) {\n      return isText(node) ? locate(doc, node, x, y) : searchInChildren(doc, node, x, y);\n    };\n    var locate$1 = function (doc, node, x, y) {\n      var r = doc.dom().createRange();\n      r.selectNode(node.dom());\n      var rect = r.getBoundingClientRect();\n      var boundedX = Math.max(rect.left, Math.min(rect.right, x));\n      var boundedY = Math.max(rect.top, Math.min(rect.bottom, y));\n      return locateNode(doc, node, boundedX, boundedY);\n    };\n\n    var COLLAPSE_TO_LEFT = true;\n    var COLLAPSE_TO_RIGHT = false;\n    var getCollapseDirection = function (rect, x) {\n      return x - rect.left < rect.right - x ? COLLAPSE_TO_LEFT : COLLAPSE_TO_RIGHT;\n    };\n    var createCollapsedNode = function (doc, target, collapseDirection) {\n      var r = doc.dom().createRange();\n      r.selectNode(target.dom());\n      r.collapse(collapseDirection);\n      return r;\n    };\n    var locateInElement = function (doc, node, x) {\n      var cursorRange = doc.dom().createRange();\n      cursorRange.selectNode(node.dom());\n      var rect = cursorRange.getBoundingClientRect();\n      var collapseDirection = getCollapseDirection(rect, x);\n      var f = collapseDirection === COLLAPSE_TO_LEFT ? first : last$1;\n      return f(node).map(function (target) {\n        return createCollapsedNode(doc, target, collapseDirection);\n      });\n    };\n    var locateInEmpty = function (doc, node, x) {\n      var rect = node.dom().getBoundingClientRect();\n      var collapseDirection = getCollapseDirection(rect, x);\n      return Option.some(createCollapsedNode(doc, node, collapseDirection));\n    };\n    var search = function (doc, node, x) {\n      var f = children(node).length === 0 ? locateInEmpty : locateInElement;\n      return f(doc, node, x);\n    };\n\n    var caretPositionFromPoint = function (doc, x, y) {\n      return Option.from(doc.dom().caretPositionFromPoint(x, y)).bind(function (pos) {\n        if (pos.offsetNode === null) {\n          return Option.none();\n        }\n        var r = doc.dom().createRange();\n        r.setStart(pos.offsetNode, pos.offset);\n        r.collapse();\n        return Option.some(r);\n      });\n    };\n    var caretRangeFromPoint = function (doc, x, y) {\n      return Option.from(doc.dom().caretRangeFromPoint(x, y));\n    };\n    var searchTextNodes = function (doc, node, x, y) {\n      var r = doc.dom().createRange();\n      r.selectNode(node.dom());\n      var rect = r.getBoundingClientRect();\n      var boundedX = Math.max(rect.left, Math.min(rect.right, x));\n      var boundedY = Math.max(rect.top, Math.min(rect.bottom, y));\n      return locate$1(doc, node, boundedX, boundedY);\n    };\n    var searchFromPoint = function (doc, x, y) {\n      return Element.fromPoint(doc, x, y).bind(function (elem) {\n        var fallback = function () {\n          return search(doc, elem, x);\n        };\n        return children(elem).length === 0 ? fallback() : searchTextNodes(doc, elem, x, y).orThunk(fallback);\n      });\n    };\n    var availableSearch = document.caretPositionFromPoint ? caretPositionFromPoint : document.caretRangeFromPoint ? caretRangeFromPoint : searchFromPoint;\n    var fromPoint$1 = function (win, x, y) {\n      var doc = Element.fromDom(win.document);\n      return availableSearch(doc, x, y).map(function (rng) {\n        return SimRange.create(Element.fromDom(rng.startContainer), rng.startOffset, Element.fromDom(rng.endContainer), rng.endOffset);\n      });\n    };\n\n    var beforeSpecial = function (element, offset) {\n      var name$1 = name(element);\n      if ('input' === name$1) {\n        return Situ.after(element);\n      } else if (!contains([\n          'br',\n          'img'\n        ], name$1)) {\n        return Situ.on(element, offset);\n      } else {\n        return offset === 0 ? Situ.before(element) : Situ.after(element);\n      }\n    };\n    var preprocessRelative = function (startSitu, finishSitu) {\n      var start = startSitu.fold(Situ.before, beforeSpecial, Situ.after);\n      var finish = finishSitu.fold(Situ.before, beforeSpecial, Situ.after);\n      return Selection.relative(start, finish);\n    };\n    var preprocessExact = function (start, soffset, finish, foffset) {\n      var startSitu = beforeSpecial(start, soffset);\n      var finishSitu = beforeSpecial(finish, foffset);\n      return Selection.relative(startSitu, finishSitu);\n    };\n    var preprocess = function (selection) {\n      return selection.match({\n        domRange: function (rng) {\n          var start = Element.fromDom(rng.startContainer);\n          var finish = Element.fromDom(rng.endContainer);\n          return preprocessExact(start, rng.startOffset, finish, rng.endOffset);\n        },\n        relative: preprocessRelative,\n        exact: preprocessExact\n      });\n    };\n\n    var makeRange = function (start, soffset, finish, foffset) {\n      var doc = owner(start);\n      var rng = doc.dom().createRange();\n      rng.setStart(start.dom(), soffset);\n      rng.setEnd(finish.dom(), foffset);\n      return rng;\n    };\n    var after$3 = function (start, soffset, finish, foffset) {\n      var r = makeRange(start, soffset, finish, foffset);\n      var same = eq(start, finish) && soffset === foffset;\n      return r.collapsed && !same;\n    };\n\n    var doSetNativeRange = function (win, rng) {\n      Option.from(win.getSelection()).each(function (selection) {\n        selection.removeAllRanges();\n        selection.addRange(rng);\n      });\n    };\n    var doSetRange = function (win, start, soffset, finish, foffset) {\n      var rng = exactToNative(win, start, soffset, finish, foffset);\n      doSetNativeRange(win, rng);\n    };\n    var setLegacyRtlRange = function (win, selection, start, soffset, finish, foffset) {\n      selection.collapse(start.dom(), soffset);\n      selection.extend(finish.dom(), foffset);\n    };\n    var setRangeFromRelative = function (win, relative) {\n      return diagnose(win, relative).match({\n        ltr: function (start, soffset, finish, foffset) {\n          doSetRange(win, start, soffset, finish, foffset);\n        },\n        rtl: function (start, soffset, finish, foffset) {\n          var selection = win.getSelection();\n          if (selection.setBaseAndExtent) {\n            selection.setBaseAndExtent(start.dom(), soffset, finish.dom(), foffset);\n          } else if (selection.extend) {\n            try {\n              setLegacyRtlRange(win, selection, start, soffset, finish, foffset);\n            } catch (e) {\n              doSetRange(win, finish, foffset, start, soffset);\n            }\n          } else {\n            doSetRange(win, finish, foffset, start, soffset);\n          }\n        }\n      });\n    };\n    var setExact = function (win, start, soffset, finish, foffset) {\n      var relative = preprocessExact(start, soffset, finish, foffset);\n      setRangeFromRelative(win, relative);\n    };\n    var setRelative = function (win, startSitu, finishSitu) {\n      var relative = preprocessRelative(startSitu, finishSitu);\n      setRangeFromRelative(win, relative);\n    };\n    var toNative = function (selection) {\n      var win = Selection.getWin(selection).dom();\n      var getDomRange = function (start, soffset, finish, foffset) {\n        return exactToNative(win, start, soffset, finish, foffset);\n      };\n      var filtered = preprocess(selection);\n      return diagnose(win, filtered).match({\n        ltr: getDomRange,\n        rtl: getDomRange\n      });\n    };\n    var readRange = function (selection) {\n      if (selection.rangeCount > 0) {\n        var firstRng = selection.getRangeAt(0);\n        var lastRng = selection.getRangeAt(selection.rangeCount - 1);\n        return Option.some(SimRange.create(Element.fromDom(firstRng.startContainer), firstRng.startOffset, Element.fromDom(lastRng.endContainer), lastRng.endOffset));\n      } else {\n        return Option.none();\n      }\n    };\n    var doGetExact = function (selection) {\n      var anchor = Element.fromDom(selection.anchorNode);\n      var focus = Element.fromDom(selection.focusNode);\n      return after$3(anchor, selection.anchorOffset, focus, selection.focusOffset) ? Option.some(SimRange.create(anchor, selection.anchorOffset, focus, selection.focusOffset)) : readRange(selection);\n    };\n    var setToElement = function (win, element) {\n      var rng = selectNodeContents(win, element);\n      doSetNativeRange(win, rng);\n    };\n    var getExact = function (win) {\n      return Option.from(win.getSelection()).filter(function (sel) {\n        return sel.rangeCount > 0;\n      }).bind(doGetExact);\n    };\n    var get$9 = function (win) {\n      return getExact(win).map(function (range) {\n        return Selection.exact(range.start(), range.soffset(), range.finish(), range.foffset());\n      });\n    };\n    var getFirstRect$1 = function (win, selection) {\n      var rng = asLtrRange(win, selection);\n      return getFirstRect(rng);\n    };\n    var getAtPoint = function (win, x, y) {\n      return fromPoint$1(win, x, y);\n    };\n    var clear = function (win) {\n      var selection = win.getSelection();\n      selection.removeAllRanges();\n    };\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n    var forward = function (editor, isRoot, cell, lazyWire) {\n      return go(editor, isRoot, CellNavigation.next(cell), lazyWire);\n    };\n    var backward = function (editor, isRoot, cell, lazyWire) {\n      return go(editor, isRoot, CellNavigation.prev(cell), lazyWire);\n    };\n    var getCellFirstCursorPosition = function (editor, cell) {\n      var selection = Selection.exact(cell, 0, cell, 0);\n      return toNative(selection);\n    };\n    var getNewRowCursorPosition = function (editor, table) {\n      var rows = descendants$1(table, 'tr');\n      return last(rows).bind(function (last) {\n        return descendant$1(last, 'td,th').map(function (first) {\n          return getCellFirstCursorPosition(editor, first);\n        });\n      });\n    };\n    var go = function (editor, isRoot, cell, actions, lazyWire) {\n      return cell.fold(Option.none, Option.none, function (current, next) {\n        return first(next).map(function (cell) {\n          return getCellFirstCursorPosition(editor, cell);\n        });\n      }, function (current) {\n        return TableLookup.table(current, isRoot).bind(function (table) {\n          var targets = TableTargets.noMenu(current);\n          editor.undoManager.transact(function () {\n            actions.insertRowsAfter(table, targets);\n          });\n          return getNewRowCursorPosition(editor, table);\n        });\n      });\n    };\n    var rootElements = [\n      'table',\n      'li',\n      'dl'\n    ];\n    var handle$1 = function (event, editor, actions, lazyWire) {\n      if (event.keyCode === global$3.TAB) {\n        var body_1 = getBody$1(editor);\n        var isRoot_1 = function (element) {\n          var name$1 = name(element);\n          return eq(element, body_1) || contains(rootElements, name$1);\n        };\n        var rng = editor.selection.getRng();\n        if (rng.collapsed) {\n          var start = Element.fromDom(rng.startContainer);\n          TableLookup.cell(start, isRoot_1).each(function (cell) {\n            event.preventDefault();\n            var navigation = event.shiftKey ? backward : forward;\n            var rng = navigation(editor, isRoot_1, cell, actions, lazyWire);\n            rng.each(function (range) {\n              editor.selection.setRng(range);\n            });\n          });\n        }\n      }\n    };\n    var TabContext = { handle: handle$1 };\n\n    var create$4 = Immutable('selection', 'kill');\n    var Response = { create: create$4 };\n\n    var create$5 = function (start, soffset, finish, foffset) {\n      return {\n        start: constant(Situ.on(start, soffset)),\n        finish: constant(Situ.on(finish, foffset))\n      };\n    };\n    var Situs = { create: create$5 };\n\n    var convertToRange = function (win, selection) {\n      var rng = asLtrRange(win, selection);\n      return SimRange.create(Element.fromDom(rng.startContainer), rng.startOffset, Element.fromDom(rng.endContainer), rng.endOffset);\n    };\n    var makeSitus = Situs.create;\n    var Util = {\n      convertToRange: convertToRange,\n      makeSitus: makeSitus\n    };\n\n    var sync = function (container, isRoot, start, soffset, finish, foffset, selectRange) {\n      if (!(eq(start, finish) && soffset === foffset)) {\n        return closest$1(start, 'td,th', isRoot).bind(function (s) {\n          return closest$1(finish, 'td,th', isRoot).bind(function (f) {\n            return detect$5(container, isRoot, s, f, selectRange);\n          });\n        });\n      } else {\n        return Option.none();\n      }\n    };\n    var detect$5 = function (container, isRoot, start, finish, selectRange) {\n      if (!eq(start, finish)) {\n        return CellSelection.identify(start, finish, isRoot).bind(function (cellSel) {\n          var boxes = cellSel.boxes().getOr([]);\n          if (boxes.length > 0) {\n            selectRange(container, boxes, cellSel.start(), cellSel.finish());\n            return Option.some(Response.create(Option.some(Util.makeSitus(start, 0, start, getEnd(start))), true));\n          } else {\n            return Option.none();\n          }\n        });\n      } else {\n        return Option.none();\n      }\n    };\n    var update = function (rows, columns, container, selected, annotations) {\n      var updateSelection = function (newSels) {\n        annotations.clear(container);\n        annotations.selectRange(container, newSels.boxes(), newSels.start(), newSels.finish());\n        return newSels.boxes();\n      };\n      return CellSelection.shiftSelection(selected, rows, columns, annotations.firstSelectedSelector(), annotations.lastSelectedSelector()).map(updateSelection);\n    };\n    var KeySelection = {\n      sync: sync,\n      detect: detect$5,\n      update: update\n    };\n\n    var traverse = Immutable('item', 'mode');\n    var backtrack = function (universe, item, _direction, transition) {\n      if (transition === void 0) {\n        transition = sidestep;\n      }\n      return universe.property().parent(item).map(function (p) {\n        return traverse(p, transition);\n      });\n    };\n    var sidestep = function (universe, item, direction, transition) {\n      if (transition === void 0) {\n        transition = advance;\n      }\n      return direction.sibling(universe, item).map(function (p) {\n        return traverse(p, transition);\n      });\n    };\n    var advance = function (universe, item, direction, transition) {\n      if (transition === void 0) {\n        transition = advance;\n      }\n      var children = universe.property().children(item);\n      var result = direction.first(children);\n      return result.map(function (r) {\n        return traverse(r, transition);\n      });\n    };\n    var successors = [\n      {\n        current: backtrack,\n        next: sidestep,\n        fallback: Option.none()\n      },\n      {\n        current: sidestep,\n        next: advance,\n        fallback: Option.some(backtrack)\n      },\n      {\n        current: advance,\n        next: advance,\n        fallback: Option.some(sidestep)\n      }\n    ];\n    var go$1 = function (universe, item, mode, direction, rules) {\n      if (rules === void 0) {\n        rules = successors;\n      }\n      var ruleOpt = find(rules, function (succ) {\n        return succ.current === mode;\n      });\n      return ruleOpt.bind(function (rule) {\n        return rule.current(universe, item, direction, rule.next).orThunk(function () {\n          return rule.fallback.bind(function (fb) {\n            return go$1(universe, item, fb, direction);\n          });\n        });\n      });\n    };\n\n    var left = function () {\n      var sibling = function (universe, item) {\n        return universe.query().prevSibling(item);\n      };\n      var first = function (children) {\n        return children.length > 0 ? Option.some(children[children.length - 1]) : Option.none();\n      };\n      return {\n        sibling: sibling,\n        first: first\n      };\n    };\n    var right = function () {\n      var sibling = function (universe, item) {\n        return universe.query().nextSibling(item);\n      };\n      var first = function (children) {\n        return children.length > 0 ? Option.some(children[0]) : Option.none();\n      };\n      return {\n        sibling: sibling,\n        first: first\n      };\n    };\n    var Walkers = {\n      left: left,\n      right: right\n    };\n\n    var hone = function (universe, item, predicate, mode, direction, isRoot) {\n      var next = go$1(universe, item, mode, direction);\n      return next.bind(function (n) {\n        if (isRoot(n.item())) {\n          return Option.none();\n        } else {\n          return predicate(n.item()) ? Option.some(n.item()) : hone(universe, n.item(), predicate, n.mode(), direction, isRoot);\n        }\n      });\n    };\n    var left$1 = function (universe, item, predicate, isRoot) {\n      return hone(universe, item, predicate, sidestep, Walkers.left(), isRoot);\n    };\n    var right$1 = function (universe, item, predicate, isRoot) {\n      return hone(universe, item, predicate, sidestep, Walkers.right(), isRoot);\n    };\n\n    var isLeaf = function (universe) {\n      return function (element) {\n        return universe.property().children(element).length === 0;\n      };\n    };\n    var before$3 = function (universe, item, isRoot) {\n      return seekLeft(universe, item, isLeaf(universe), isRoot);\n    };\n    var after$4 = function (universe, item, isRoot) {\n      return seekRight(universe, item, isLeaf(universe), isRoot);\n    };\n    var seekLeft = left$1;\n    var seekRight = right$1;\n\n    var universe$2 = DomUniverse();\n    var before$4 = function (element, isRoot) {\n      return before$3(universe$2, element, isRoot);\n    };\n    var after$5 = function (element, isRoot) {\n      return after$4(universe$2, element, isRoot);\n    };\n    var seekLeft$1 = function (element, predicate, isRoot) {\n      return seekLeft(universe$2, element, predicate, isRoot);\n    };\n    var seekRight$1 = function (element, predicate, isRoot) {\n      return seekRight(universe$2, element, predicate, isRoot);\n    };\n\n    var ancestor$2 = function (scope, predicate, isRoot) {\n      return ancestor(scope, predicate, isRoot).isSome();\n    };\n\n    var point = Immutable('element', 'offset');\n    var delta = Immutable('element', 'deltaOffset');\n    var range$2 = Immutable('element', 'start', 'finish');\n    var points = Immutable('begin', 'end');\n    var text = Immutable('element', 'text');\n\n    var adt$5 = Adt.generate([\n      { none: ['message'] },\n      { success: [] },\n      { failedUp: ['cell'] },\n      { failedDown: ['cell'] }\n    ]);\n    var isOverlapping = function (bridge, before, after) {\n      var beforeBounds = bridge.getRect(before);\n      var afterBounds = bridge.getRect(after);\n      return afterBounds.right > beforeBounds.left && afterBounds.left < beforeBounds.right;\n    };\n    var isRow = function (elem) {\n      return closest$1(elem, 'tr');\n    };\n    var verify = function (bridge, before, beforeOffset, after, afterOffset, failure, isRoot) {\n      return closest$1(after, 'td,th', isRoot).bind(function (afterCell) {\n        return closest$1(before, 'td,th', isRoot).map(function (beforeCell) {\n          if (!eq(afterCell, beforeCell)) {\n            return DomParent.sharedOne(isRow, [\n              afterCell,\n              beforeCell\n            ]).fold(function () {\n              return isOverlapping(bridge, beforeCell, afterCell) ? adt$5.success() : failure(beforeCell);\n            }, function (_sharedRow) {\n              return failure(beforeCell);\n            });\n          } else {\n            return eq(after, afterCell) && getEnd(afterCell) === afterOffset ? failure(beforeCell) : adt$5.none('in same cell');\n          }\n        });\n      }).getOr(adt$5.none('default'));\n    };\n    var cata$2 = function (subject, onNone, onSuccess, onFailedUp, onFailedDown) {\n      return subject.fold(onNone, onSuccess, onFailedUp, onFailedDown);\n    };\n    var BeforeAfter = __assign(__assign({}, adt$5), {\n      verify: verify,\n      cata: cata$2\n    });\n\n    var inAncestor = Immutable('ancestor', 'descendants', 'element', 'index');\n    var inParent = Immutable('parent', 'children', 'element', 'index');\n    var indexInParent = function (element) {\n      return parent(element).bind(function (parent) {\n        var children$1 = children(parent);\n        return indexOf(children$1, element).map(function (index) {\n          return inParent(parent, children$1, element, index);\n        });\n      });\n    };\n    var indexOf = function (elements, element) {\n      return findIndex(elements, curry(eq, element));\n    };\n\n    var isBr = function (elem) {\n      return name(elem) === 'br';\n    };\n    var gatherer = function (cand, gather, isRoot) {\n      return gather(cand, isRoot).bind(function (target) {\n        return isText(target) && get$2(target).trim().length === 0 ? gatherer(target, gather, isRoot) : Option.some(target);\n      });\n    };\n    var handleBr = function (isRoot, element, direction) {\n      return direction.traverse(element).orThunk(function () {\n        return gatherer(element, direction.gather, isRoot);\n      }).map(direction.relative);\n    };\n    var findBr = function (element, offset) {\n      return child(element, offset).filter(isBr).orThunk(function () {\n        return child(element, offset - 1).filter(isBr);\n      });\n    };\n    var handleParent = function (isRoot, element, offset, direction) {\n      return findBr(element, offset).bind(function (br) {\n        return direction.traverse(br).fold(function () {\n          return gatherer(br, direction.gather, isRoot).map(direction.relative);\n        }, function (adjacent) {\n          return indexInParent(adjacent).map(function (info) {\n            return Situ.on(info.parent(), info.index());\n          });\n        });\n      });\n    };\n    var tryBr = function (isRoot, element, offset, direction) {\n      var target = isBr(element) ? handleBr(isRoot, element, direction) : handleParent(isRoot, element, offset, direction);\n      return target.map(function (tgt) {\n        return {\n          start: constant(tgt),\n          finish: constant(tgt)\n        };\n      });\n    };\n    var process = function (analysis) {\n      return BeforeAfter.cata(analysis, function (message) {\n        return Option.none();\n      }, function () {\n        return Option.none();\n      }, function (cell) {\n        return Option.some(point(cell, 0));\n      }, function (cell) {\n        return Option.some(point(cell, getEnd(cell)));\n      });\n    };\n    var BrTags = {\n      tryBr: tryBr,\n      process: process\n    };\n\n    var nu$3 = MixedBag([\n      'left',\n      'top',\n      'right',\n      'bottom'\n    ], []);\n    var moveDown = function (caret, amount) {\n      return nu$3({\n        left: caret.left(),\n        top: caret.top() + amount,\n        right: caret.right(),\n        bottom: caret.bottom() + amount\n      });\n    };\n    var moveUp = function (caret, amount) {\n      return nu$3({\n        left: caret.left(),\n        top: caret.top() - amount,\n        right: caret.right(),\n        bottom: caret.bottom() - amount\n      });\n    };\n    var moveBottomTo = function (caret, bottom) {\n      var height = caret.bottom() - caret.top();\n      return nu$3({\n        left: caret.left(),\n        top: bottom - height,\n        right: caret.right(),\n        bottom: bottom\n      });\n    };\n    var moveTopTo = function (caret, top) {\n      var height = caret.bottom() - caret.top();\n      return nu$3({\n        left: caret.left(),\n        top: top,\n        right: caret.right(),\n        bottom: top + height\n      });\n    };\n    var translate = function (caret, xDelta, yDelta) {\n      return nu$3({\n        left: caret.left() + xDelta,\n        top: caret.top() + yDelta,\n        right: caret.right() + xDelta,\n        bottom: caret.bottom() + yDelta\n      });\n    };\n    var getTop$1 = function (caret) {\n      return caret.top();\n    };\n    var getBottom = function (caret) {\n      return caret.bottom();\n    };\n    var toString = function (caret) {\n      return '(' + caret.left() + ', ' + caret.top() + ') -> (' + caret.right() + ', ' + caret.bottom() + ')';\n    };\n    var Carets = {\n      nu: nu$3,\n      moveUp: moveUp,\n      moveDown: moveDown,\n      moveBottomTo: moveBottomTo,\n      moveTopTo: moveTopTo,\n      getTop: getTop$1,\n      getBottom: getBottom,\n      translate: translate,\n      toString: toString\n    };\n\n    var getPartialBox = function (bridge, element, offset) {\n      if (offset >= 0 && offset < getEnd(element)) {\n        return bridge.getRangedRect(element, offset, element, offset + 1);\n      } else if (offset > 0) {\n        return bridge.getRangedRect(element, offset - 1, element, offset);\n      }\n      return Option.none();\n    };\n    var toCaret = function (rect) {\n      return Carets.nu({\n        left: rect.left,\n        top: rect.top,\n        right: rect.right,\n        bottom: rect.bottom\n      });\n    };\n    var getElemBox = function (bridge, element) {\n      return Option.some(bridge.getRect(element));\n    };\n    var getBoxAt = function (bridge, element, offset) {\n      if (isElement(element)) {\n        return getElemBox(bridge, element).map(toCaret);\n      } else if (isText(element)) {\n        return getPartialBox(bridge, element, offset).map(toCaret);\n      } else {\n        return Option.none();\n      }\n    };\n    var getEntireBox = function (bridge, element) {\n      if (isElement(element)) {\n        return getElemBox(bridge, element).map(toCaret);\n      } else if (isText(element)) {\n        return bridge.getRangedRect(element, 0, element, getEnd(element)).map(toCaret);\n      } else {\n        return Option.none();\n      }\n    };\n    var Rectangles = {\n      getBoxAt: getBoxAt,\n      getEntireBox: getEntireBox\n    };\n\n    var JUMP_SIZE = 5;\n    var NUM_RETRIES = 100;\n    var adt$6 = Adt.generate([\n      { none: [] },\n      { retry: ['caret'] }\n    ]);\n    var isOutside = function (caret, box) {\n      return caret.left() < box.left() || Math.abs(box.right() - caret.left()) < 1 || caret.left() > box.right();\n    };\n    var inOutsideBlock = function (bridge, element, caret) {\n      return closest(element, DomStructure.isBlock).fold(constant(false), function (cell) {\n        return Rectangles.getEntireBox(bridge, cell).exists(function (box) {\n          return isOutside(caret, box);\n        });\n      });\n    };\n    var adjustDown = function (bridge, element, guessBox, original, caret) {\n      var lowerCaret = Carets.moveDown(caret, JUMP_SIZE);\n      if (Math.abs(guessBox.bottom() - original.bottom()) < 1) {\n        return adt$6.retry(lowerCaret);\n      } else if (guessBox.top() > caret.bottom()) {\n        return adt$6.retry(lowerCaret);\n      } else if (guessBox.top() === caret.bottom()) {\n        return adt$6.retry(Carets.moveDown(caret, 1));\n      } else {\n        return inOutsideBlock(bridge, element, caret) ? adt$6.retry(Carets.translate(lowerCaret, JUMP_SIZE, 0)) : adt$6.none();\n      }\n    };\n    var adjustUp = function (bridge, element, guessBox, original, caret) {\n      var higherCaret = Carets.moveUp(caret, JUMP_SIZE);\n      if (Math.abs(guessBox.top() - original.top()) < 1) {\n        return adt$6.retry(higherCaret);\n      } else if (guessBox.bottom() < caret.top()) {\n        return adt$6.retry(higherCaret);\n      } else if (guessBox.bottom() === caret.top()) {\n        return adt$6.retry(Carets.moveUp(caret, 1));\n      } else {\n        return inOutsideBlock(bridge, element, caret) ? adt$6.retry(Carets.translate(higherCaret, JUMP_SIZE, 0)) : adt$6.none();\n      }\n    };\n    var upMovement = {\n      point: Carets.getTop,\n      adjuster: adjustUp,\n      move: Carets.moveUp,\n      gather: before$4\n    };\n    var downMovement = {\n      point: Carets.getBottom,\n      adjuster: adjustDown,\n      move: Carets.moveDown,\n      gather: after$5\n    };\n    var isAtTable = function (bridge, x, y) {\n      return bridge.elementFromPoint(x, y).filter(function (elm) {\n        return name(elm) === 'table';\n      }).isSome();\n    };\n    var adjustForTable = function (bridge, movement, original, caret, numRetries) {\n      return adjustTil(bridge, movement, original, movement.move(caret, JUMP_SIZE), numRetries);\n    };\n    var adjustTil = function (bridge, movement, original, caret, numRetries) {\n      if (numRetries === 0) {\n        return Option.some(caret);\n      }\n      if (isAtTable(bridge, caret.left(), movement.point(caret))) {\n        return adjustForTable(bridge, movement, original, caret, numRetries - 1);\n      }\n      return bridge.situsFromPoint(caret.left(), movement.point(caret)).bind(function (guess) {\n        return guess.start().fold(Option.none, function (element) {\n          return Rectangles.getEntireBox(bridge, element).bind(function (guessBox) {\n            return movement.adjuster(bridge, element, guessBox, original, caret).fold(Option.none, function (newCaret) {\n              return adjustTil(bridge, movement, original, newCaret, numRetries - 1);\n            });\n          }).orThunk(function () {\n            return Option.some(caret);\n          });\n        }, Option.none);\n      });\n    };\n    var ieTryDown = function (bridge, caret) {\n      return bridge.situsFromPoint(caret.left(), caret.bottom() + JUMP_SIZE);\n    };\n    var ieTryUp = function (bridge, caret) {\n      return bridge.situsFromPoint(caret.left(), caret.top() - JUMP_SIZE);\n    };\n    var checkScroll = function (movement, adjusted, bridge) {\n      if (movement.point(adjusted) > bridge.getInnerHeight()) {\n        return Option.some(movement.point(adjusted) - bridge.getInnerHeight());\n      } else if (movement.point(adjusted) < 0) {\n        return Option.some(-movement.point(adjusted));\n      } else {\n        return Option.none();\n      }\n    };\n    var retry = function (movement, bridge, caret) {\n      var moved = movement.move(caret, JUMP_SIZE);\n      var adjusted = adjustTil(bridge, movement, caret, moved, NUM_RETRIES).getOr(moved);\n      return checkScroll(movement, adjusted, bridge).fold(function () {\n        return bridge.situsFromPoint(adjusted.left(), movement.point(adjusted));\n      }, function (delta) {\n        bridge.scrollBy(0, delta);\n        return bridge.situsFromPoint(adjusted.left(), movement.point(adjusted) - delta);\n      });\n    };\n    var Retries = {\n      tryUp: curry(retry, upMovement),\n      tryDown: curry(retry, downMovement),\n      ieTryUp: ieTryUp,\n      ieTryDown: ieTryDown,\n      getJumpSize: constant(JUMP_SIZE)\n    };\n\n    var MAX_RETRIES = 20;\n    var platform$1 = PlatformDetection$1.detect();\n    var findSpot = function (bridge, isRoot, direction) {\n      return bridge.getSelection().bind(function (sel) {\n        return BrTags.tryBr(isRoot, sel.finish(), sel.foffset(), direction).fold(function () {\n          return Option.some(point(sel.finish(), sel.foffset()));\n        }, function (brNeighbour) {\n          var range = bridge.fromSitus(brNeighbour);\n          var analysis = BeforeAfter.verify(bridge, sel.finish(), sel.foffset(), range.finish(), range.foffset(), direction.failure, isRoot);\n          return BrTags.process(analysis);\n        });\n      });\n    };\n    var scan = function (bridge, isRoot, element, offset, direction, numRetries) {\n      if (numRetries === 0) {\n        return Option.none();\n      }\n      return tryCursor(bridge, isRoot, element, offset, direction).bind(function (situs) {\n        var range = bridge.fromSitus(situs);\n        var analysis = BeforeAfter.verify(bridge, element, offset, range.finish(), range.foffset(), direction.failure, isRoot);\n        return BeforeAfter.cata(analysis, function () {\n          return Option.none();\n        }, function () {\n          return Option.some(situs);\n        }, function (cell) {\n          if (eq(element, cell) && offset === 0) {\n            return tryAgain(bridge, element, offset, Carets.moveUp, direction);\n          } else {\n            return scan(bridge, isRoot, cell, 0, direction, numRetries - 1);\n          }\n        }, function (cell) {\n          if (eq(element, cell) && offset === getEnd(cell)) {\n            return tryAgain(bridge, element, offset, Carets.moveDown, direction);\n          } else {\n            return scan(bridge, isRoot, cell, getEnd(cell), direction, numRetries - 1);\n          }\n        });\n      });\n    };\n    var tryAgain = function (bridge, element, offset, move, direction) {\n      return Rectangles.getBoxAt(bridge, element, offset).bind(function (box) {\n        return tryAt(bridge, direction, move(box, Retries.getJumpSize()));\n      });\n    };\n    var tryAt = function (bridge, direction, box) {\n      if (platform$1.browser.isChrome() || platform$1.browser.isSafari() || platform$1.browser.isFirefox() || platform$1.browser.isEdge()) {\n        return direction.otherRetry(bridge, box);\n      } else if (platform$1.browser.isIE()) {\n        return direction.ieRetry(bridge, box);\n      } else {\n        return Option.none();\n      }\n    };\n    var tryCursor = function (bridge, isRoot, element, offset, direction) {\n      return Rectangles.getBoxAt(bridge, element, offset).bind(function (box) {\n        return tryAt(bridge, direction, box);\n      });\n    };\n    var handle$2 = function (bridge, isRoot, direction) {\n      return findSpot(bridge, isRoot, direction).bind(function (spot) {\n        return scan(bridge, isRoot, spot.element(), spot.offset(), direction, MAX_RETRIES).map(bridge.fromSitus);\n      });\n    };\n    var TableKeys = { handle: handle$2 };\n\n    var detection = PlatformDetection$1.detect();\n    var inSameTable = function (elem, table) {\n      return ancestor$2(elem, function (e) {\n        return parent(e).exists(function (p) {\n          return eq(p, table);\n        });\n      });\n    };\n    var simulate = function (bridge, isRoot, direction, initial, anchor) {\n      return closest$1(initial, 'td,th', isRoot).bind(function (start) {\n        return closest$1(start, 'table', isRoot).bind(function (table) {\n          if (!inSameTable(anchor, table)) {\n            return Option.none();\n          }\n          return TableKeys.handle(bridge, isRoot, direction).bind(function (range) {\n            return closest$1(range.finish(), 'td,th', isRoot).map(function (finish) {\n              return {\n                start: constant(start),\n                finish: constant(finish),\n                range: constant(range)\n              };\n            });\n          });\n        });\n      });\n    };\n    var navigate = function (bridge, isRoot, direction, initial, anchor, precheck) {\n      if (detection.browser.isIE()) {\n        return Option.none();\n      } else {\n        return precheck(initial, isRoot).orThunk(function () {\n          return simulate(bridge, isRoot, direction, initial, anchor).map(function (info) {\n            var range = info.range();\n            return Response.create(Option.some(Util.makeSitus(range.start(), range.soffset(), range.finish(), range.foffset())), true);\n          });\n        });\n      }\n    };\n    var firstUpCheck = function (initial, isRoot) {\n      return closest$1(initial, 'tr', isRoot).bind(function (startRow) {\n        return closest$1(startRow, 'table', isRoot).bind(function (table) {\n          var rows = descendants$1(table, 'tr');\n          if (eq(startRow, rows[0])) {\n            return seekLeft$1(table, function (element) {\n              return last$1(element).isSome();\n            }, isRoot).map(function (last) {\n              var lastOffset = getEnd(last);\n              return Response.create(Option.some(Util.makeSitus(last, lastOffset, last, lastOffset)), true);\n            });\n          } else {\n            return Option.none();\n          }\n        });\n      });\n    };\n    var lastDownCheck = function (initial, isRoot) {\n      return closest$1(initial, 'tr', isRoot).bind(function (startRow) {\n        return closest$1(startRow, 'table', isRoot).bind(function (table) {\n          var rows = descendants$1(table, 'tr');\n          if (eq(startRow, rows[rows.length - 1])) {\n            return seekRight$1(table, function (element) {\n              return first(element).isSome();\n            }, isRoot).map(function (first) {\n              return Response.create(Option.some(Util.makeSitus(first, 0, first, 0)), true);\n            });\n          } else {\n            return Option.none();\n          }\n        });\n      });\n    };\n    var select = function (bridge, container, isRoot, direction, initial, anchor, selectRange) {\n      return simulate(bridge, isRoot, direction, initial, anchor).bind(function (info) {\n        return KeySelection.detect(container, isRoot, info.start(), info.finish(), selectRange);\n      });\n    };\n    var VerticalMovement = {\n      navigate: navigate,\n      select: select,\n      firstUpCheck: firstUpCheck,\n      lastDownCheck: lastDownCheck\n    };\n\n    var findCell = function (target, isRoot) {\n      return closest$1(target, 'td,th', isRoot);\n    };\n    function MouseSelection (bridge, container, isRoot, annotations) {\n      var cursor = Option.none();\n      var clearState = function () {\n        cursor = Option.none();\n      };\n      var mousedown = function (event) {\n        annotations.clear(container);\n        cursor = findCell(event.target(), isRoot);\n      };\n      var mouseover = function (event) {\n        cursor.each(function (start) {\n          annotations.clear(container);\n          findCell(event.target(), isRoot).each(function (finish) {\n            CellSelection.identify(start, finish, isRoot).each(function (cellSel) {\n              var boxes = cellSel.boxes().getOr([]);\n              if (boxes.length > 1 || boxes.length === 1 && !eq(start, finish)) {\n                annotations.selectRange(container, boxes, cellSel.start(), cellSel.finish());\n                bridge.selectContents(finish);\n              }\n            });\n          });\n        });\n      };\n      var mouseup = function (_event) {\n        cursor.each(clearState);\n      };\n      return {\n        mousedown: mousedown,\n        mouseover: mouseover,\n        mouseup: mouseup\n      };\n    }\n\n    var down = {\n      traverse: nextSibling,\n      gather: after$5,\n      relative: Situ.before,\n      otherRetry: Retries.tryDown,\n      ieRetry: Retries.ieTryDown,\n      failure: BeforeAfter.failedDown\n    };\n    var up = {\n      traverse: prevSibling,\n      gather: before$4,\n      relative: Situ.before,\n      otherRetry: Retries.tryUp,\n      ieRetry: Retries.ieTryUp,\n      failure: BeforeAfter.failedUp\n    };\n    var KeyDirection = {\n      down: down,\n      up: up\n    };\n\n    var isKey = function (key) {\n      return function (keycode) {\n        return keycode === key;\n      };\n    };\n    var isUp = isKey(38);\n    var isDown = isKey(40);\n    var isNavigation = function (keycode) {\n      return keycode >= 37 && keycode <= 40;\n    };\n    var SelectionKeys = {\n      ltr: {\n        isBackward: isKey(37),\n        isForward: isKey(39)\n      },\n      rtl: {\n        isBackward: isKey(39),\n        isForward: isKey(37)\n      },\n      isUp: isUp,\n      isDown: isDown,\n      isNavigation: isNavigation\n    };\n\n    var toRaw = function (sr) {\n      return {\n        left: sr.left(),\n        top: sr.top(),\n        right: sr.right(),\n        bottom: sr.bottom(),\n        width: sr.width(),\n        height: sr.height()\n      };\n    };\n    var Rect = { toRaw: toRaw };\n\n    var isSafari = PlatformDetection$1.detect().browser.isSafari();\n    var get$a = function (_DOC) {\n      var doc = _DOC !== undefined ? _DOC.dom() : domGlobals.document;\n      var x = doc.body.scrollLeft || doc.documentElement.scrollLeft;\n      var y = doc.body.scrollTop || doc.documentElement.scrollTop;\n      return Position(x, y);\n    };\n    var by = function (x, y, _DOC) {\n      var doc = _DOC !== undefined ? _DOC.dom() : domGlobals.document;\n      var win = doc.defaultView;\n      win.scrollBy(x, y);\n    };\n\n    var WindowBridge = function (win) {\n      var elementFromPoint = function (x, y) {\n        return Element.fromPoint(Element.fromDom(win.document), x, y);\n      };\n      var getRect = function (element) {\n        return element.dom().getBoundingClientRect();\n      };\n      var getRangedRect = function (start, soffset, finish, foffset) {\n        var sel = Selection.exact(start, soffset, finish, foffset);\n        return getFirstRect$1(win, sel).map(Rect.toRaw);\n      };\n      var getSelection = function () {\n        return get$9(win).map(function (exactAdt) {\n          return Util.convertToRange(win, exactAdt);\n        });\n      };\n      var fromSitus = function (situs) {\n        var relative = Selection.relative(situs.start(), situs.finish());\n        return Util.convertToRange(win, relative);\n      };\n      var situsFromPoint = function (x, y) {\n        return getAtPoint(win, x, y).map(function (exact) {\n          return Situs.create(exact.start(), exact.soffset(), exact.finish(), exact.foffset());\n        });\n      };\n      var clearSelection = function () {\n        clear(win);\n      };\n      var selectContents = function (element) {\n        setToElement(win, element);\n      };\n      var setSelection = function (sel) {\n        setExact(win, sel.start(), sel.soffset(), sel.finish(), sel.foffset());\n      };\n      var setRelativeSelection = function (start, finish) {\n        setRelative(win, start, finish);\n      };\n      var getInnerHeight = function () {\n        return win.innerHeight;\n      };\n      var getScrollY = function () {\n        var pos = get$a(Element.fromDom(win.document));\n        return pos.top();\n      };\n      var scrollBy = function (x, y) {\n        by(x, y, Element.fromDom(win.document));\n      };\n      return {\n        elementFromPoint: elementFromPoint,\n        getRect: getRect,\n        getRangedRect: getRangedRect,\n        getSelection: getSelection,\n        fromSitus: fromSitus,\n        situsFromPoint: situsFromPoint,\n        clearSelection: clearSelection,\n        setSelection: setSelection,\n        setRelativeSelection: setRelativeSelection,\n        selectContents: selectContents,\n        getInnerHeight: getInnerHeight,\n        getScrollY: getScrollY,\n        scrollBy: scrollBy\n      };\n    };\n\n    var rc = Immutable('rows', 'cols');\n    var mouse = function (win, container, isRoot, annotations) {\n      var bridge = WindowBridge(win);\n      var handlers = MouseSelection(bridge, container, isRoot, annotations);\n      return {\n        mousedown: handlers.mousedown,\n        mouseover: handlers.mouseover,\n        mouseup: handlers.mouseup\n      };\n    };\n    var keyboard = function (win, container, isRoot, annotations) {\n      var bridge = WindowBridge(win);\n      var clearToNavigate = function () {\n        annotations.clear(container);\n        return Option.none();\n      };\n      var keydown = function (event, start, soffset, finish, foffset, direction) {\n        var realEvent = event.raw();\n        var keycode = realEvent.which;\n        var shiftKey = realEvent.shiftKey === true;\n        var handler = CellSelection.retrieve(container, annotations.selectedSelector()).fold(function () {\n          if (SelectionKeys.isDown(keycode) && shiftKey) {\n            return curry(VerticalMovement.select, bridge, container, isRoot, KeyDirection.down, finish, start, annotations.selectRange);\n          } else if (SelectionKeys.isUp(keycode) && shiftKey) {\n            return curry(VerticalMovement.select, bridge, container, isRoot, KeyDirection.up, finish, start, annotations.selectRange);\n          } else if (SelectionKeys.isDown(keycode)) {\n            return curry(VerticalMovement.navigate, bridge, isRoot, KeyDirection.down, finish, start, VerticalMovement.lastDownCheck);\n          } else if (SelectionKeys.isUp(keycode)) {\n            return curry(VerticalMovement.navigate, bridge, isRoot, KeyDirection.up, finish, start, VerticalMovement.firstUpCheck);\n          } else {\n            return Option.none;\n          }\n        }, function (selected) {\n          var update = function (attempts) {\n            return function () {\n              var navigation = findMap(attempts, function (delta) {\n                return KeySelection.update(delta.rows(), delta.cols(), container, selected, annotations);\n              });\n              return navigation.fold(function () {\n                return CellSelection.getEdges(container, annotations.firstSelectedSelector(), annotations.lastSelectedSelector()).map(function (edges) {\n                  var relative = SelectionKeys.isDown(keycode) || direction.isForward(keycode) ? Situ.after : Situ.before;\n                  bridge.setRelativeSelection(Situ.on(edges.first(), 0), relative(edges.table()));\n                  annotations.clear(container);\n                  return Response.create(Option.none(), true);\n                });\n              }, function (_) {\n                return Option.some(Response.create(Option.none(), true));\n              });\n            };\n          };\n          if (SelectionKeys.isDown(keycode) && shiftKey) {\n            return update([rc(+1, 0)]);\n          } else if (SelectionKeys.isUp(keycode) && shiftKey) {\n            return update([rc(-1, 0)]);\n          } else if (direction.isBackward(keycode) && shiftKey) {\n            return update([\n              rc(0, -1),\n              rc(-1, 0)\n            ]);\n          } else if (direction.isForward(keycode) && shiftKey) {\n            return update([\n              rc(0, +1),\n              rc(+1, 0)\n            ]);\n          } else if (SelectionKeys.isNavigation(keycode) && shiftKey === false) {\n            return clearToNavigate;\n          } else {\n            return Option.none;\n          }\n        });\n        return handler();\n      };\n      var keyup = function (event, start, soffset, finish, foffset) {\n        return CellSelection.retrieve(container, annotations.selectedSelector()).fold(function () {\n          var realEvent = event.raw();\n          var keycode = realEvent.which;\n          var shiftKey = realEvent.shiftKey === true;\n          if (shiftKey === false) {\n            return Option.none();\n          }\n          if (SelectionKeys.isNavigation(keycode)) {\n            return KeySelection.sync(container, isRoot, start, soffset, finish, foffset, annotations.selectRange);\n          } else {\n            return Option.none();\n          }\n        }, Option.none);\n      };\n      return {\n        keydown: keydown,\n        keyup: keyup\n      };\n    };\n    var InputHandlers = {\n      mouse: mouse,\n      keyboard: keyboard\n    };\n\n    var remove$7 = function (element, classes) {\n      each(classes, function (x) {\n        remove$5(element, x);\n      });\n    };\n\n    var addClass = function (clazz) {\n      return function (element) {\n        add$2(element, clazz);\n      };\n    };\n    var removeClasses = function (classes) {\n      return function (element) {\n        remove$7(element, classes);\n      };\n    };\n\n    var byClass = function (ephemera) {\n      var addSelectionClass = addClass(ephemera.selected());\n      var removeSelectionClasses = removeClasses([\n        ephemera.selected(),\n        ephemera.lastSelected(),\n        ephemera.firstSelected()\n      ]);\n      var clear = function (container) {\n        var sels = descendants$1(container, ephemera.selectedSelector());\n        each(sels, removeSelectionClasses);\n      };\n      var selectRange = function (container, cells, start, finish) {\n        clear(container);\n        each(cells, addSelectionClass);\n        add$2(start, ephemera.firstSelected());\n        add$2(finish, ephemera.lastSelected());\n      };\n      return {\n        clear: clear,\n        selectRange: selectRange,\n        selectedSelector: ephemera.selectedSelector,\n        firstSelectedSelector: ephemera.firstSelectedSelector,\n        lastSelectedSelector: ephemera.lastSelectedSelector\n      };\n    };\n    var byAttr = function (ephemera) {\n      var removeSelectionAttributes = function (element) {\n        remove(element, ephemera.selected());\n        remove(element, ephemera.firstSelected());\n        remove(element, ephemera.lastSelected());\n      };\n      var addSelectionAttribute = function (element) {\n        set(element, ephemera.selected(), '1');\n      };\n      var clear = function (container) {\n        var sels = descendants$1(container, ephemera.selectedSelector());\n        each(sels, removeSelectionAttributes);\n      };\n      var selectRange = function (container, cells, start, finish) {\n        clear(container);\n        each(cells, addSelectionAttribute);\n        set(start, ephemera.firstSelected(), '1');\n        set(finish, ephemera.lastSelected(), '1');\n      };\n      return {\n        clear: clear,\n        selectRange: selectRange,\n        selectedSelector: ephemera.selectedSelector,\n        firstSelectedSelector: ephemera.firstSelectedSelector,\n        lastSelectedSelector: ephemera.lastSelectedSelector\n      };\n    };\n    var SelectionAnnotation = {\n      byClass: byClass,\n      byAttr: byAttr\n    };\n\n    var hasInternalTarget = function (e) {\n      return has$1(Element.fromDom(e.target), 'ephox-snooker-resizer-bar') === false;\n    };\n    function CellSelection$1 (editor, lazyResize) {\n      var handlerStruct = MixedBag([\n        'mousedown',\n        'mouseover',\n        'mouseup',\n        'keyup',\n        'keydown'\n      ], []);\n      var handlers = Option.none();\n      var annotations = SelectionAnnotation.byAttr(Ephemera);\n      editor.on('init', function (e) {\n        var win = editor.getWin();\n        var body = getBody$1(editor);\n        var isRoot = getIsRoot(editor);\n        var syncSelection = function () {\n          var sel = editor.selection;\n          var start = Element.fromDom(sel.getStart());\n          var end = Element.fromDom(sel.getEnd());\n          var shared = DomParent.sharedOne(TableLookup.table, [\n            start,\n            end\n          ]);\n          shared.fold(function () {\n            annotations.clear(body);\n          }, noop);\n        };\n        var mouseHandlers = InputHandlers.mouse(win, body, isRoot, annotations);\n        var keyHandlers = InputHandlers.keyboard(win, body, isRoot, annotations);\n        var hasShiftKey = function (event) {\n          return event.raw().shiftKey === true;\n        };\n        var handleResponse = function (event, response) {\n          if (!hasShiftKey(event)) {\n            return;\n          }\n          if (response.kill()) {\n            event.kill();\n          }\n          response.selection().each(function (ns) {\n            var relative = Selection.relative(ns.start(), ns.finish());\n            var rng = asLtrRange(win, relative);\n            editor.selection.setRng(rng);\n          });\n        };\n        var keyup = function (event) {\n          var wrappedEvent = wrapEvent(event);\n          if (wrappedEvent.raw().shiftKey && SelectionKeys.isNavigation(wrappedEvent.raw().which)) {\n            var rng = editor.selection.getRng();\n            var start = Element.fromDom(rng.startContainer);\n            var end = Element.fromDom(rng.endContainer);\n            keyHandlers.keyup(wrappedEvent, start, rng.startOffset, end, rng.endOffset).each(function (response) {\n              handleResponse(wrappedEvent, response);\n            });\n          }\n        };\n        var keydown = function (event) {\n          var wrappedEvent = wrapEvent(event);\n          lazyResize().each(function (resize) {\n            resize.hideBars();\n          });\n          var rng = editor.selection.getRng();\n          var startContainer = Element.fromDom(editor.selection.getStart());\n          var start = Element.fromDom(rng.startContainer);\n          var end = Element.fromDom(rng.endContainer);\n          var direction = Direction.directionAt(startContainer).isRtl() ? SelectionKeys.rtl : SelectionKeys.ltr;\n          keyHandlers.keydown(wrappedEvent, start, rng.startOffset, end, rng.endOffset, direction).each(function (response) {\n            handleResponse(wrappedEvent, response);\n          });\n          lazyResize().each(function (resize) {\n            resize.showBars();\n          });\n        };\n        var isMouseEvent = function (event) {\n          return event.hasOwnProperty('x') && event.hasOwnProperty('y');\n        };\n        var wrapEvent = function (event) {\n          var target = Element.fromDom(event.target);\n          var stop = function () {\n            event.stopPropagation();\n          };\n          var prevent = function () {\n            event.preventDefault();\n          };\n          var kill = compose(prevent, stop);\n          return {\n            target: constant(target),\n            x: constant(isMouseEvent(event) ? event.x : null),\n            y: constant(isMouseEvent(event) ? event.y : null),\n            stop: stop,\n            prevent: prevent,\n            kill: kill,\n            raw: constant(event)\n          };\n        };\n        var isLeftMouse = function (raw) {\n          return raw.button === 0;\n        };\n        var isLeftButtonPressed = function (raw) {\n          if (raw.buttons === undefined) {\n            return true;\n          }\n          if (global$2.ie && global$2.ie >= 12 && raw.buttons === 0) {\n            return true;\n          }\n          return (raw.buttons & 1) !== 0;\n        };\n        var mouseDown = function (e) {\n          if (isLeftMouse(e) && hasInternalTarget(e)) {\n            mouseHandlers.mousedown(wrapEvent(e));\n          }\n        };\n        var mouseOver = function (e) {\n          if (isLeftButtonPressed(e) && hasInternalTarget(e)) {\n            mouseHandlers.mouseover(wrapEvent(e));\n          }\n        };\n        var mouseUp = function (e) {\n          if (isLeftMouse(e) && hasInternalTarget(e)) {\n            mouseHandlers.mouseup(wrapEvent(e));\n          }\n        };\n        editor.on('mousedown', mouseDown);\n        editor.on('mouseover', mouseOver);\n        editor.on('mouseup', mouseUp);\n        editor.on('keyup', keyup);\n        editor.on('keydown', keydown);\n        editor.on('nodechange', syncSelection);\n        handlers = Option.some(handlerStruct({\n          mousedown: mouseDown,\n          mouseover: mouseOver,\n          mouseup: mouseUp,\n          keyup: keyup,\n          keydown: keydown\n        }));\n      });\n      var destroy = function () {\n        handlers.each(function (handlers) {\n        });\n      };\n      return {\n        clear: annotations.clear,\n        destroy: destroy\n      };\n    }\n\n    var Selections = function (editor) {\n      var get = function () {\n        var body = getBody$1(editor);\n        return TableSelection.retrieve(body, Ephemera.selectedSelector()).fold(function () {\n          if (editor.selection.getStart() === undefined) {\n            return SelectionTypes.none();\n          } else {\n            return SelectionTypes.single(editor.selection);\n          }\n        }, function (cells) {\n          return SelectionTypes.multiple(cells);\n        });\n      };\n      return { get: get };\n    };\n\n    var each$4 = global$1.each;\n    var addButtons = function (editor) {\n      var menuItems = [];\n      each$4('inserttable tableprops deletetable | cell row column'.split(' '), function (name) {\n        if (name === '|') {\n          menuItems.push({ text: '-' });\n        } else {\n          menuItems.push(editor.menuItems[name]);\n        }\n      });\n      editor.addButton('table', {\n        type: 'menubutton',\n        title: 'Table',\n        menu: menuItems\n      });\n      function cmd(command) {\n        return function () {\n          editor.execCommand(command);\n        };\n      }\n      editor.addButton('tableprops', {\n        title: 'Table properties',\n        onclick: cmd('mceTableProps'),\n        icon: 'table'\n      });\n      editor.addButton('tabledelete', {\n        title: 'Delete table',\n        onclick: cmd('mceTableDelete')\n      });\n      editor.addButton('tablecellprops', {\n        title: 'Cell properties',\n        onclick: cmd('mceTableCellProps')\n      });\n      editor.addButton('tablemergecells', {\n        title: 'Merge cells',\n        onclick: cmd('mceTableMergeCells')\n      });\n      editor.addButton('tablesplitcells', {\n        title: 'Split cell',\n        onclick: cmd('mceTableSplitCells')\n      });\n      editor.addButton('tableinsertrowbefore', {\n        title: 'Insert row before',\n        onclick: cmd('mceTableInsertRowBefore')\n      });\n      editor.addButton('tableinsertrowafter', {\n        title: 'Insert row after',\n        onclick: cmd('mceTableInsertRowAfter')\n      });\n      editor.addButton('tabledeleterow', {\n        title: 'Delete row',\n        onclick: cmd('mceTableDeleteRow')\n      });\n      editor.addButton('tablerowprops', {\n        title: 'Row properties',\n        onclick: cmd('mceTableRowProps')\n      });\n      editor.addButton('tablecutrow', {\n        title: 'Cut row',\n        onclick: cmd('mceTableCutRow')\n      });\n      editor.addButton('tablecopyrow', {\n        title: 'Copy row',\n        onclick: cmd('mceTableCopyRow')\n      });\n      editor.addButton('tablepasterowbefore', {\n        title: 'Paste row before',\n        onclick: cmd('mceTablePasteRowBefore')\n      });\n      editor.addButton('tablepasterowafter', {\n        title: 'Paste row after',\n        onclick: cmd('mceTablePasteRowAfter')\n      });\n      editor.addButton('tableinsertcolbefore', {\n        title: 'Insert column before',\n        onclick: cmd('mceTableInsertColBefore')\n      });\n      editor.addButton('tableinsertcolafter', {\n        title: 'Insert column after',\n        onclick: cmd('mceTableInsertColAfter')\n      });\n      editor.addButton('tabledeletecol', {\n        title: 'Delete column',\n        onclick: cmd('mceTableDeleteCol')\n      });\n    };\n    var addToolbars = function (editor) {\n      var isTable = function (table) {\n        var selectorMatched = editor.dom.is(table, 'table') && editor.getBody().contains(table);\n        return selectorMatched;\n      };\n      var toolbar = getToolbar(editor);\n      if (toolbar.length > 0) {\n        editor.addContextToolbar(isTable, toolbar.join(' '));\n      }\n    };\n    var Buttons = {\n      addButtons: addButtons,\n      addToolbars: addToolbars\n    };\n\n    var addMenuItems = function (editor, selections) {\n      var targets = Option.none();\n      var tableCtrls = [];\n      var cellCtrls = [];\n      var mergeCtrls = [];\n      var unmergeCtrls = [];\n      var noTargetDisable = function (ctrl) {\n        ctrl.disabled(true);\n      };\n      var ctrlEnable = function (ctrl) {\n        ctrl.disabled(false);\n      };\n      var pushTable = function () {\n        var self = this;\n        tableCtrls.push(self);\n        targets.fold(function () {\n          noTargetDisable(self);\n        }, function (targets) {\n          ctrlEnable(self);\n        });\n      };\n      var pushCell = function () {\n        var self = this;\n        cellCtrls.push(self);\n        targets.fold(function () {\n          noTargetDisable(self);\n        }, function (targets) {\n          ctrlEnable(self);\n        });\n      };\n      var pushMerge = function () {\n        var self = this;\n        mergeCtrls.push(self);\n        targets.fold(function () {\n          noTargetDisable(self);\n        }, function (targets) {\n          self.disabled(targets.mergable().isNone());\n        });\n      };\n      var pushUnmerge = function () {\n        var self = this;\n        unmergeCtrls.push(self);\n        targets.fold(function () {\n          noTargetDisable(self);\n        }, function (targets) {\n          self.disabled(targets.unmergable().isNone());\n        });\n      };\n      var setDisabledCtrls = function () {\n        targets.fold(function () {\n          each(tableCtrls, noTargetDisable);\n          each(cellCtrls, noTargetDisable);\n          each(mergeCtrls, noTargetDisable);\n          each(unmergeCtrls, noTargetDisable);\n        }, function (targets) {\n          each(tableCtrls, ctrlEnable);\n          each(cellCtrls, ctrlEnable);\n          each(mergeCtrls, function (mergeCtrl) {\n            mergeCtrl.disabled(targets.mergable().isNone());\n          });\n          each(unmergeCtrls, function (unmergeCtrl) {\n            unmergeCtrl.disabled(targets.unmergable().isNone());\n          });\n        });\n      };\n      editor.on('init', function () {\n        editor.on('nodechange', function (e) {\n          var cellOpt = Option.from(editor.dom.getParent(editor.selection.getStart(), 'th,td'));\n          targets = cellOpt.bind(function (cellDom) {\n            var cell = Element.fromDom(cellDom);\n            var table = TableLookup.table(cell);\n            return table.map(function (table) {\n              return TableTargets.forMenu(selections, table, cell);\n            });\n          });\n          setDisabledCtrls();\n        });\n      });\n      var generateTableGrid = function () {\n        var html = '';\n        html = '<table role=\"grid\" class=\"mce-grid mce-grid-border\" aria-readonly=\"true\">';\n        for (var y = 0; y < 10; y++) {\n          html += '<tr>';\n          for (var x = 0; x < 10; x++) {\n            html += '<td role=\"gridcell\" tabindex=\"-1\"><a id=\"mcegrid' + (y * 10 + x) + '\" href=\"#\" ' + 'data-mce-x=\"' + x + '\" data-mce-y=\"' + y + '\"></a></td>';\n          }\n          html += '</tr>';\n        }\n        html += '</table>';\n        html += '<div class=\"mce-text-center\" role=\"presentation\">1 x 1</div>';\n        return html;\n      };\n      var selectGrid = function (editor, tx, ty, control) {\n        var table = control.getEl().getElementsByTagName('table')[0];\n        var x, y, focusCell, cell, active;\n        var rtl = control.isRtl() || control.parent().rel === 'tl-tr';\n        table.nextSibling.innerHTML = tx + 1 + ' x ' + (ty + 1);\n        if (rtl) {\n          tx = 9 - tx;\n        }\n        for (y = 0; y < 10; y++) {\n          for (x = 0; x < 10; x++) {\n            cell = table.rows[y].childNodes[x].firstChild;\n            active = (rtl ? x >= tx : x <= tx) && y <= ty;\n            editor.dom.toggleClass(cell, 'mce-active', active);\n            if (active) {\n              focusCell = cell;\n            }\n          }\n        }\n        return focusCell.parentNode;\n      };\n      var insertTable = hasTableGrid(editor) === false ? {\n        text: 'Table',\n        icon: 'table',\n        context: 'table',\n        onclick: cmd('mceInsertTable')\n      } : {\n        text: 'Table',\n        icon: 'table',\n        context: 'table',\n        ariaHideMenu: true,\n        onclick: function (e) {\n          if (e.aria) {\n            this.parent().hideAll();\n            e.stopImmediatePropagation();\n            editor.execCommand('mceInsertTable');\n          }\n        },\n        onshow: function () {\n          selectGrid(editor, 0, 0, this.menu.items()[0]);\n        },\n        onhide: function () {\n          var elements = this.menu.items()[0].getEl().getElementsByTagName('a');\n          editor.dom.removeClass(elements, 'mce-active');\n          editor.dom.addClass(elements[0], 'mce-active');\n        },\n        menu: [{\n            type: 'container',\n            html: generateTableGrid(),\n            onPostRender: function () {\n              this.lastX = this.lastY = 0;\n            },\n            onmousemove: function (e) {\n              var target = e.target;\n              var x, y;\n              if (target.tagName.toUpperCase() === 'A') {\n                x = parseInt(target.getAttribute('data-mce-x'), 10);\n                y = parseInt(target.getAttribute('data-mce-y'), 10);\n                if (this.isRtl() || this.parent().rel === 'tl-tr') {\n                  x = 9 - x;\n                }\n                if (x !== this.lastX || y !== this.lastY) {\n                  selectGrid(editor, x, y, e.control);\n                  this.lastX = x;\n                  this.lastY = y;\n                }\n              }\n            },\n            onclick: function (e) {\n              var self = this;\n              if (e.target.tagName.toUpperCase() === 'A') {\n                e.preventDefault();\n                e.stopPropagation();\n                self.parent().cancel();\n                editor.undoManager.transact(function () {\n                  InsertTable.insert(editor, self.lastX + 1, self.lastY + 1);\n                });\n                editor.addVisual();\n              }\n            }\n          }]\n      };\n      function cmd(command) {\n        return function () {\n          editor.execCommand(command);\n        };\n      }\n      var tableProperties = {\n        text: 'Table properties',\n        context: 'table',\n        onPostRender: pushTable,\n        onclick: cmd('mceTableProps')\n      };\n      var deleteTable = {\n        text: 'Delete table',\n        context: 'table',\n        onPostRender: pushTable,\n        cmd: 'mceTableDelete'\n      };\n      var row = {\n        text: 'Row',\n        context: 'table',\n        menu: [\n          {\n            text: 'Insert row before',\n            onclick: cmd('mceTableInsertRowBefore'),\n            onPostRender: pushCell\n          },\n          {\n            text: 'Insert row after',\n            onclick: cmd('mceTableInsertRowAfter'),\n            onPostRender: pushCell\n          },\n          {\n            text: 'Delete row',\n            onclick: cmd('mceTableDeleteRow'),\n            onPostRender: pushCell\n          },\n          {\n            text: 'Row properties',\n            onclick: cmd('mceTableRowProps'),\n            onPostRender: pushCell\n          },\n          { text: '-' },\n          {\n            text: 'Cut row',\n            onclick: cmd('mceTableCutRow'),\n            onPostRender: pushCell\n          },\n          {\n            text: 'Copy row',\n            onclick: cmd('mceTableCopyRow'),\n            onPostRender: pushCell\n          },\n          {\n            text: 'Paste row before',\n            onclick: cmd('mceTablePasteRowBefore'),\n            onPostRender: pushCell\n          },\n          {\n            text: 'Paste row after',\n            onclick: cmd('mceTablePasteRowAfter'),\n            onPostRender: pushCell\n          }\n        ]\n      };\n      var column = {\n        text: 'Column',\n        context: 'table',\n        menu: [\n          {\n            text: 'Insert column before',\n            onclick: cmd('mceTableInsertColBefore'),\n            onPostRender: pushCell\n          },\n          {\n            text: 'Insert column after',\n            onclick: cmd('mceTableInsertColAfter'),\n            onPostRender: pushCell\n          },\n          {\n            text: 'Delete column',\n            onclick: cmd('mceTableDeleteCol'),\n            onPostRender: pushCell\n          }\n        ]\n      };\n      var cell = {\n        separator: 'before',\n        text: 'Cell',\n        context: 'table',\n        menu: [\n          {\n            text: 'Cell properties',\n            onclick: cmd('mceTableCellProps'),\n            onPostRender: pushCell\n          },\n          {\n            text: 'Merge cells',\n            onclick: cmd('mceTableMergeCells'),\n            onPostRender: pushMerge\n          },\n          {\n            text: 'Split cell',\n            onclick: cmd('mceTableSplitCells'),\n            onPostRender: pushUnmerge\n          }\n        ]\n      };\n      editor.addMenuItem('inserttable', insertTable);\n      editor.addMenuItem('tableprops', tableProperties);\n      editor.addMenuItem('deletetable', deleteTable);\n      editor.addMenuItem('row', row);\n      editor.addMenuItem('column', column);\n      editor.addMenuItem('cell', cell);\n    };\n    var MenuItems = { addMenuItems: addMenuItems };\n\n    var getClipboardRows = function (clipboardRows) {\n      return clipboardRows.get().fold(function () {\n        return;\n      }, function (rows) {\n        return map(rows, function (row) {\n          return row.dom();\n        });\n      });\n    };\n    var setClipboardRows = function (rows, clipboardRows) {\n      var sugarRows = map(rows, Element.fromDom);\n      clipboardRows.set(Option.from(sugarRows));\n    };\n    var getApi = function (editor, clipboardRows) {\n      return {\n        insertTable: function (columns, rows) {\n          return InsertTable.insert(editor, columns, rows);\n        },\n        setClipboardRows: function (rows) {\n          return setClipboardRows(rows, clipboardRows);\n        },\n        getClipboardRows: function () {\n          return getClipboardRows(clipboardRows);\n        }\n      };\n    };\n\n    function Plugin(editor) {\n      var resizeHandler = ResizeHandler(editor);\n      var cellSelection = CellSelection$1(editor, resizeHandler.lazyResize);\n      var actions = TableActions(editor, resizeHandler.lazyWire);\n      var selections = Selections(editor);\n      var clipboardRows = Cell(Option.none());\n      Commands.registerCommands(editor, actions, cellSelection, selections, clipboardRows);\n      Clipboard.registerEvents(editor, selections, actions, cellSelection);\n      MenuItems.addMenuItems(editor, selections);\n      Buttons.addButtons(editor);\n      Buttons.addToolbars(editor);\n      editor.on('PreInit', function () {\n        editor.serializer.addTempAttr(Ephemera.firstSelected());\n        editor.serializer.addTempAttr(Ephemera.lastSelected());\n      });\n      if (hasTabNavigation(editor)) {\n        editor.on('keydown', function (e) {\n          TabContext.handle(e, editor, actions, resizeHandler.lazyWire);\n        });\n      }\n      editor.on('remove', function () {\n        resizeHandler.destroy();\n        cellSelection.destroy();\n      });\n      return getApi(editor, clipboardRows);\n    }\n    global.add('table', Plugin);\n    function Plugin$1 () {\n    }\n\n    return Plugin$1;\n\n}(window));\n})();\n\n\n/***/ }),\n\n/***/ \"Q/P+\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// Exports the \"table\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/table')\n//   ES2015:\n//     import 'tinymce/plugins/table'\n__webpack_require__(\"BzBW\");\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/8.72581677443679e133ec.js","(function () {\nvar table = (function (domGlobals) {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var noop = function () {\n    };\n    var compose = function (fa, fb) {\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        return fa(fb.apply(null, args));\n      };\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var identity = function (x) {\n      return x;\n    };\n    function curry(fn) {\n      var initialArgs = [];\n      for (var _i = 1; _i < arguments.length; _i++) {\n        initialArgs[_i - 1] = arguments[_i];\n      }\n      return function () {\n        var restArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          restArgs[_i] = arguments[_i];\n        }\n        var all = initialArgs.concat(restArgs);\n        return fn.apply(null, all);\n      };\n    }\n    var not = function (f) {\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        return !f.apply(null, args);\n      };\n    };\n    var die = function (msg) {\n      return function () {\n        throw new Error(msg);\n      };\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var none = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var eq = function (o) {\n        return o.isNone();\n      };\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = function (n) {\n        return n;\n      };\n      var me = {\n        fold: function (n, s) {\n          return n();\n        },\n        is: never,\n        isSome: never,\n        isNone: always,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: constant(null),\n        getOrUndefined: constant(undefined),\n        or: id,\n        orThunk: call,\n        map: none,\n        each: noop,\n        bind: none,\n        exists: never,\n        forall: always,\n        filter: none,\n        equals: eq,\n        equals_: eq,\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      if (Object.freeze) {\n        Object.freeze(me);\n      }\n      return me;\n    }();\n    var some = function (a) {\n      var constant_a = constant(a);\n      var self = function () {\n        return me;\n      };\n      var bind = function (f) {\n        return f(a);\n      };\n      var me = {\n        fold: function (n, s) {\n          return s(a);\n        },\n        is: function (v) {\n          return a === v;\n        },\n        isSome: always,\n        isNone: never,\n        getOr: constant_a,\n        getOrThunk: constant_a,\n        getOrDie: constant_a,\n        getOrNull: constant_a,\n        getOrUndefined: constant_a,\n        or: self,\n        orThunk: self,\n        map: function (f) {\n          return some(f(a));\n        },\n        each: function (f) {\n          f(a);\n        },\n        bind: bind,\n        exists: bind,\n        forall: bind,\n        filter: function (f) {\n          return f(a) ? me : NONE;\n        },\n        toArray: function () {\n          return [a];\n        },\n        toString: function () {\n          return 'some(' + a + ')';\n        },\n        equals: function (o) {\n          return o.is(a);\n        },\n        equals_: function (o, elementEq) {\n          return o.fold(never, function (b) {\n            return elementEq(a, b);\n          });\n        }\n      };\n      return me;\n    };\n    var from = function (value) {\n      return value === null || value === undefined ? NONE : some(value);\n    };\n    var Option = {\n      some: some,\n      none: none,\n      from: from\n    };\n\n    var typeOf = function (x) {\n      if (x === null) {\n        return 'null';\n      }\n      var t = typeof x;\n      if (t === 'object' && (Array.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'Array')) {\n        return 'array';\n      }\n      if (t === 'object' && (String.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'String')) {\n        return 'string';\n      }\n      return t;\n    };\n    var isType = function (type) {\n      return function (value) {\n        return typeOf(value) === type;\n      };\n    };\n    var isString = isType('string');\n    var isArray = isType('array');\n    var isBoolean = isType('boolean');\n    var isFunction = isType('function');\n    var isNumber = isType('number');\n\n    var nativeSlice = Array.prototype.slice;\n    var nativeIndexOf = Array.prototype.indexOf;\n    var nativePush = Array.prototype.push;\n    var rawIndexOf = function (ts, t) {\n      return nativeIndexOf.call(ts, t);\n    };\n    var contains = function (xs, x) {\n      return rawIndexOf(xs, x) > -1;\n    };\n    var exists = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    var map = function (xs, f) {\n      var len = xs.length;\n      var r = new Array(len);\n      for (var i = 0; i < len; i++) {\n        var x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    var each = function (xs, f) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        f(x, i);\n      }\n    };\n    var eachr = function (xs, f) {\n      for (var i = xs.length - 1; i >= 0; i--) {\n        var x = xs[i];\n        f(x, i);\n      }\n    };\n    var filter = function (xs, pred) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          r.push(x);\n        }\n      }\n      return r;\n    };\n    var foldr = function (xs, f, acc) {\n      eachr(xs, function (x) {\n        acc = f(acc, x);\n      });\n      return acc;\n    };\n    var foldl = function (xs, f, acc) {\n      each(xs, function (x) {\n        acc = f(acc, x);\n      });\n      return acc;\n    };\n    var find = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          return Option.some(x);\n        }\n      }\n      return Option.none();\n    };\n    var findIndex = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          return Option.some(i);\n        }\n      }\n      return Option.none();\n    };\n    var flatten = function (xs) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; ++i) {\n        if (!isArray(xs[i])) {\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        }\n        nativePush.apply(r, xs[i]);\n      }\n      return r;\n    };\n    var bind = function (xs, f) {\n      var output = map(xs, f);\n      return flatten(output);\n    };\n    var forall = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; ++i) {\n        var x = xs[i];\n        if (pred(x, i) !== true) {\n          return false;\n        }\n      }\n      return true;\n    };\n    var reverse = function (xs) {\n      var r = nativeSlice.call(xs, 0);\n      r.reverse();\n      return r;\n    };\n    var last = function (xs) {\n      return xs.length === 0 ? Option.none() : Option.some(xs[xs.length - 1]);\n    };\n    var from$1 = isFunction(Array.from) ? Array.from : function (x) {\n      return nativeSlice.call(x);\n    };\n\n    var keys = Object.keys;\n    var each$1 = function (obj, f) {\n      var props = keys(obj);\n      for (var k = 0, len = props.length; k < len; k++) {\n        var i = props[k];\n        var x = obj[i];\n        f(x, i);\n      }\n    };\n    var map$1 = function (obj, f) {\n      return tupleMap(obj, function (x, i) {\n        return {\n          k: i,\n          v: f(x, i)\n        };\n      });\n    };\n    var tupleMap = function (obj, f) {\n      var r = {};\n      each$1(obj, function (x, i) {\n        var tuple = f(x, i);\n        r[tuple.k] = tuple.v;\n      });\n      return r;\n    };\n\n    var Immutable = function () {\n      var fields = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        fields[_i] = arguments[_i];\n      }\n      return function () {\n        var values = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          values[_i] = arguments[_i];\n        }\n        if (fields.length !== values.length) {\n          throw new Error('Wrong number of arguments to struct. Expected \"[' + fields.length + ']\", got ' + values.length + ' arguments');\n        }\n        var struct = {};\n        each(fields, function (name, i) {\n          struct[name] = constant(values[i]);\n        });\n        return struct;\n      };\n    };\n\n    var sort = function (arr) {\n      return arr.slice(0).sort();\n    };\n    var reqMessage = function (required, keys) {\n      throw new Error('All required keys (' + sort(required).join(', ') + ') were not specified. Specified keys were: ' + sort(keys).join(', ') + '.');\n    };\n    var unsuppMessage = function (unsupported) {\n      throw new Error('Unsupported keys for object: ' + sort(unsupported).join(', '));\n    };\n    var validateStrArr = function (label, array) {\n      if (!isArray(array)) {\n        throw new Error('The ' + label + ' fields must be an array. Was: ' + array + '.');\n      }\n      each(array, function (a) {\n        if (!isString(a)) {\n          throw new Error('The value ' + a + ' in the ' + label + ' fields was not a string.');\n        }\n      });\n    };\n    var invalidTypeMessage = function (incorrect, type) {\n      throw new Error('All values need to be of type: ' + type + '. Keys (' + sort(incorrect).join(', ') + ') were not.');\n    };\n    var checkDupes = function (everything) {\n      var sorted = sort(everything);\n      var dupe = find(sorted, function (s, i) {\n        return i < sorted.length - 1 && s === sorted[i + 1];\n      });\n      dupe.each(function (d) {\n        throw new Error('The field: ' + d + ' occurs more than once in the combined fields: [' + sorted.join(', ') + '].');\n      });\n    };\n\n    var MixedBag = function (required, optional) {\n      var everything = required.concat(optional);\n      if (everything.length === 0) {\n        throw new Error('You must specify at least one required or optional field.');\n      }\n      validateStrArr('required', required);\n      validateStrArr('optional', optional);\n      checkDupes(everything);\n      return function (obj) {\n        var keys$1 = keys(obj);\n        var allReqd = forall(required, function (req) {\n          return contains(keys$1, req);\n        });\n        if (!allReqd) {\n          reqMessage(required, keys$1);\n        }\n        var unsupported = filter(keys$1, function (key) {\n          return !contains(everything, key);\n        });\n        if (unsupported.length > 0) {\n          unsuppMessage(unsupported);\n        }\n        var r = {};\n        each(required, function (req) {\n          r[req] = constant(obj[req]);\n        });\n        each(optional, function (opt) {\n          r[opt] = constant(Object.prototype.hasOwnProperty.call(obj, opt) ? Option.some(obj[opt]) : Option.none());\n        });\n        return r;\n      };\n    };\n\n    var ATTRIBUTE = domGlobals.Node.ATTRIBUTE_NODE;\n    var CDATA_SECTION = domGlobals.Node.CDATA_SECTION_NODE;\n    var COMMENT = domGlobals.Node.COMMENT_NODE;\n    var DOCUMENT = domGlobals.Node.DOCUMENT_NODE;\n    var DOCUMENT_TYPE = domGlobals.Node.DOCUMENT_TYPE_NODE;\n    var DOCUMENT_FRAGMENT = domGlobals.Node.DOCUMENT_FRAGMENT_NODE;\n    var ELEMENT = domGlobals.Node.ELEMENT_NODE;\n    var TEXT = domGlobals.Node.TEXT_NODE;\n    var PROCESSING_INSTRUCTION = domGlobals.Node.PROCESSING_INSTRUCTION_NODE;\n    var ENTITY_REFERENCE = domGlobals.Node.ENTITY_REFERENCE_NODE;\n    var ENTITY = domGlobals.Node.ENTITY_NODE;\n    var NOTATION = domGlobals.Node.NOTATION_NODE;\n\n    var Global = typeof domGlobals.window !== 'undefined' ? domGlobals.window : Function('return this;')();\n\n    var path = function (parts, scope) {\n      var o = scope !== undefined && scope !== null ? scope : Global;\n      for (var i = 0; i < parts.length && o !== undefined && o !== null; ++i) {\n        o = o[parts[i]];\n      }\n      return o;\n    };\n    var resolve = function (p, scope) {\n      var parts = p.split('.');\n      return path(parts, scope);\n    };\n\n    var unsafe = function (name, scope) {\n      return resolve(name, scope);\n    };\n    var getOrDie = function (name, scope) {\n      var actual = unsafe(name, scope);\n      if (actual === undefined || actual === null) {\n        throw new Error(name + ' not available on this browser');\n      }\n      return actual;\n    };\n    var Global$1 = { getOrDie: getOrDie };\n\n    var name = function (element) {\n      var r = element.dom().nodeName;\n      return r.toLowerCase();\n    };\n    var type = function (element) {\n      return element.dom().nodeType;\n    };\n    var isType$1 = function (t) {\n      return function (element) {\n        return type(element) === t;\n      };\n    };\n    var isComment = function (element) {\n      return type(element) === COMMENT || name(element) === '#comment';\n    };\n    var isElement = isType$1(ELEMENT);\n    var isText = isType$1(TEXT);\n\n    var rawSet = function (dom, key, value) {\n      if (isString(value) || isBoolean(value) || isNumber(value)) {\n        dom.setAttribute(key, value + '');\n      } else {\n        domGlobals.console.error('Invalid call to Attr.set. Key ', key, ':: Value ', value, ':: Element ', dom);\n        throw new Error('Attribute value was not simple');\n      }\n    };\n    var set = function (element, key, value) {\n      rawSet(element.dom(), key, value);\n    };\n    var setAll = function (element, attrs) {\n      var dom = element.dom();\n      each$1(attrs, function (v, k) {\n        rawSet(dom, k, v);\n      });\n    };\n    var get = function (element, key) {\n      var v = element.dom().getAttribute(key);\n      return v === null ? undefined : v;\n    };\n    var has = function (element, key) {\n      var dom = element.dom();\n      return dom && dom.hasAttribute ? dom.hasAttribute(key) : false;\n    };\n    var remove = function (element, key) {\n      element.dom().removeAttribute(key);\n    };\n    var clone = function (element) {\n      return foldl(element.dom().attributes, function (acc, attr) {\n        acc[attr.name] = attr.value;\n        return acc;\n      }, {});\n    };\n\n    var checkRange = function (str, substr, start) {\n      if (substr === '') {\n        return true;\n      }\n      if (str.length < substr.length) {\n        return false;\n      }\n      var x = str.substr(start, start + substr.length);\n      return x === substr;\n    };\n    var contains$1 = function (str, substr) {\n      return str.indexOf(substr) !== -1;\n    };\n    var endsWith = function (str, suffix) {\n      return checkRange(str, suffix, str.length - suffix.length);\n    };\n    var trim = function (str) {\n      return str.replace(/^\\s+|\\s+$/g, '');\n    };\n\n    var isSupported = function (dom) {\n      return dom.style !== undefined && isFunction(dom.style.getPropertyValue);\n    };\n\n    var cached = function (f) {\n      var called = false;\n      var r;\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        if (!called) {\n          called = true;\n          r = f.apply(null, args);\n        }\n        return r;\n      };\n    };\n\n    var fromHtml = function (html, scope) {\n      var doc = scope || domGlobals.document;\n      var div = doc.createElement('div');\n      div.innerHTML = html;\n      if (!div.hasChildNodes() || div.childNodes.length > 1) {\n        domGlobals.console.error('HTML does not have a single root node', html);\n        throw new Error('HTML must have a single root node');\n      }\n      return fromDom(div.childNodes[0]);\n    };\n    var fromTag = function (tag, scope) {\n      var doc = scope || domGlobals.document;\n      var node = doc.createElement(tag);\n      return fromDom(node);\n    };\n    var fromText = function (text, scope) {\n      var doc = scope || domGlobals.document;\n      var node = doc.createTextNode(text);\n      return fromDom(node);\n    };\n    var fromDom = function (node) {\n      if (node === null || node === undefined) {\n        throw new Error('Node cannot be null or undefined');\n      }\n      return { dom: constant(node) };\n    };\n    var fromPoint = function (docElm, x, y) {\n      var doc = docElm.dom();\n      return Option.from(doc.elementFromPoint(x, y)).map(fromDom);\n    };\n    var Element = {\n      fromHtml: fromHtml,\n      fromTag: fromTag,\n      fromText: fromText,\n      fromDom: fromDom,\n      fromPoint: fromPoint\n    };\n\n    var inBody = function (element) {\n      var dom = isText(element) ? element.dom().parentNode : element.dom();\n      return dom !== undefined && dom !== null && dom.ownerDocument.body.contains(dom);\n    };\n    var body = cached(function () {\n      return getBody(Element.fromDom(domGlobals.document));\n    });\n    var getBody = function (doc) {\n      var b = doc.dom().body;\n      if (b === null || b === undefined) {\n        throw new Error('Body is not available yet');\n      }\n      return Element.fromDom(b);\n    };\n\n    var internalSet = function (dom, property, value) {\n      if (!isString(value)) {\n        domGlobals.console.error('Invalid call to CSS.set. Property ', property, ':: Value ', value, ':: Element ', dom);\n        throw new Error('CSS value must be a string: ' + value);\n      }\n      if (isSupported(dom)) {\n        dom.style.setProperty(property, value);\n      }\n    };\n    var internalRemove = function (dom, property) {\n      if (isSupported(dom)) {\n        dom.style.removeProperty(property);\n      }\n    };\n    var set$1 = function (element, property, value) {\n      var dom = element.dom();\n      internalSet(dom, property, value);\n    };\n    var setAll$1 = function (element, css) {\n      var dom = element.dom();\n      each$1(css, function (v, k) {\n        internalSet(dom, k, v);\n      });\n    };\n    var get$1 = function (element, property) {\n      var dom = element.dom();\n      var styles = domGlobals.window.getComputedStyle(dom);\n      var r = styles.getPropertyValue(property);\n      var v = r === '' && !inBody(element) ? getUnsafeProperty(dom, property) : r;\n      return v === null ? undefined : v;\n    };\n    var getUnsafeProperty = function (dom, property) {\n      return isSupported(dom) ? dom.style.getPropertyValue(property) : '';\n    };\n    var getRaw = function (element, property) {\n      var dom = element.dom();\n      var raw = getUnsafeProperty(dom, property);\n      return Option.from(raw).filter(function (r) {\n        return r.length > 0;\n      });\n    };\n    var remove$1 = function (element, property) {\n      var dom = element.dom();\n      internalRemove(dom, property);\n      if (has(element, 'style') && trim(get(element, 'style')) === '') {\n        remove(element, 'style');\n      }\n    };\n    var copy = function (source, target) {\n      var sourceDom = source.dom();\n      var targetDom = target.dom();\n      if (isSupported(sourceDom) && isSupported(targetDom)) {\n        targetDom.style.cssText = sourceDom.style.cssText;\n      }\n    };\n\n    var node = function () {\n      var f = Global$1.getOrDie('Node');\n      return f;\n    };\n    var compareDocumentPosition = function (a, b, match) {\n      return (a.compareDocumentPosition(b) & match) !== 0;\n    };\n    var documentPositionPreceding = function (a, b) {\n      return compareDocumentPosition(a, b, node().DOCUMENT_POSITION_PRECEDING);\n    };\n    var documentPositionContainedBy = function (a, b) {\n      return compareDocumentPosition(a, b, node().DOCUMENT_POSITION_CONTAINED_BY);\n    };\n    var Node = {\n      documentPositionPreceding: documentPositionPreceding,\n      documentPositionContainedBy: documentPositionContainedBy\n    };\n\n    var firstMatch = function (regexes, s) {\n      for (var i = 0; i < regexes.length; i++) {\n        var x = regexes[i];\n        if (x.test(s)) {\n          return x;\n        }\n      }\n      return undefined;\n    };\n    var find$1 = function (regexes, agent) {\n      var r = firstMatch(regexes, agent);\n      if (!r) {\n        return {\n          major: 0,\n          minor: 0\n        };\n      }\n      var group = function (i) {\n        return Number(agent.replace(r, '$' + i));\n      };\n      return nu(group(1), group(2));\n    };\n    var detect = function (versionRegexes, agent) {\n      var cleanedAgent = String(agent).toLowerCase();\n      if (versionRegexes.length === 0) {\n        return unknown();\n      }\n      return find$1(versionRegexes, cleanedAgent);\n    };\n    var unknown = function () {\n      return nu(0, 0);\n    };\n    var nu = function (major, minor) {\n      return {\n        major: major,\n        minor: minor\n      };\n    };\n    var Version = {\n      nu: nu,\n      detect: detect,\n      unknown: unknown\n    };\n\n    var edge = 'Edge';\n    var chrome = 'Chrome';\n    var ie = 'IE';\n    var opera = 'Opera';\n    var firefox = 'Firefox';\n    var safari = 'Safari';\n    var isBrowser = function (name, current) {\n      return function () {\n        return current === name;\n      };\n    };\n    var unknown$1 = function () {\n      return nu$1({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    var nu$1 = function (info) {\n      var current = info.current;\n      var version = info.version;\n      return {\n        current: current,\n        version: version,\n        isEdge: isBrowser(edge, current),\n        isChrome: isBrowser(chrome, current),\n        isIE: isBrowser(ie, current),\n        isOpera: isBrowser(opera, current),\n        isFirefox: isBrowser(firefox, current),\n        isSafari: isBrowser(safari, current)\n      };\n    };\n    var Browser = {\n      unknown: unknown$1,\n      nu: nu$1,\n      edge: constant(edge),\n      chrome: constant(chrome),\n      ie: constant(ie),\n      opera: constant(opera),\n      firefox: constant(firefox),\n      safari: constant(safari)\n    };\n\n    var windows = 'Windows';\n    var ios = 'iOS';\n    var android = 'Android';\n    var linux = 'Linux';\n    var osx = 'OSX';\n    var solaris = 'Solaris';\n    var freebsd = 'FreeBSD';\n    var isOS = function (name, current) {\n      return function () {\n        return current === name;\n      };\n    };\n    var unknown$2 = function () {\n      return nu$2({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    var nu$2 = function (info) {\n      var current = info.current;\n      var version = info.version;\n      return {\n        current: current,\n        version: version,\n        isWindows: isOS(windows, current),\n        isiOS: isOS(ios, current),\n        isAndroid: isOS(android, current),\n        isOSX: isOS(osx, current),\n        isLinux: isOS(linux, current),\n        isSolaris: isOS(solaris, current),\n        isFreeBSD: isOS(freebsd, current)\n      };\n    };\n    var OperatingSystem = {\n      unknown: unknown$2,\n      nu: nu$2,\n      windows: constant(windows),\n      ios: constant(ios),\n      android: constant(android),\n      linux: constant(linux),\n      osx: constant(osx),\n      solaris: constant(solaris),\n      freebsd: constant(freebsd)\n    };\n\n    var DeviceType = function (os, browser, userAgent) {\n      var isiPad = os.isiOS() && /ipad/i.test(userAgent) === true;\n      var isiPhone = os.isiOS() && !isiPad;\n      var isAndroid3 = os.isAndroid() && os.version.major === 3;\n      var isAndroid4 = os.isAndroid() && os.version.major === 4;\n      var isTablet = isiPad || isAndroid3 || isAndroid4 && /mobile/i.test(userAgent) === true;\n      var isTouch = os.isiOS() || os.isAndroid();\n      var isPhone = isTouch && !isTablet;\n      var iOSwebview = browser.isSafari() && os.isiOS() && /safari/i.test(userAgent) === false;\n      return {\n        isiPad: constant(isiPad),\n        isiPhone: constant(isiPhone),\n        isTablet: constant(isTablet),\n        isPhone: constant(isPhone),\n        isTouch: constant(isTouch),\n        isAndroid: os.isAndroid,\n        isiOS: os.isiOS,\n        isWebView: constant(iOSwebview)\n      };\n    };\n\n    var detect$1 = function (candidates, userAgent) {\n      var agent = String(userAgent).toLowerCase();\n      return find(candidates, function (candidate) {\n        return candidate.search(agent);\n      });\n    };\n    var detectBrowser = function (browsers, userAgent) {\n      return detect$1(browsers, userAgent).map(function (browser) {\n        var version = Version.detect(browser.versionRegexes, userAgent);\n        return {\n          current: browser.name,\n          version: version\n        };\n      });\n    };\n    var detectOs = function (oses, userAgent) {\n      return detect$1(oses, userAgent).map(function (os) {\n        var version = Version.detect(os.versionRegexes, userAgent);\n        return {\n          current: os.name,\n          version: version\n        };\n      });\n    };\n    var UaString = {\n      detectBrowser: detectBrowser,\n      detectOs: detectOs\n    };\n\n    var normalVersionRegex = /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/;\n    var checkContains = function (target) {\n      return function (uastring) {\n        return contains$1(uastring, target);\n      };\n    };\n    var browsers = [\n      {\n        name: 'Edge',\n        versionRegexes: [/.*?edge\\/ ?([0-9]+)\\.([0-9]+)$/],\n        search: function (uastring) {\n          return contains$1(uastring, 'edge/') && contains$1(uastring, 'chrome') && contains$1(uastring, 'safari') && contains$1(uastring, 'applewebkit');\n        }\n      },\n      {\n        name: 'Chrome',\n        versionRegexes: [\n          /.*?chrome\\/([0-9]+)\\.([0-9]+).*/,\n          normalVersionRegex\n        ],\n        search: function (uastring) {\n          return contains$1(uastring, 'chrome') && !contains$1(uastring, 'chromeframe');\n        }\n      },\n      {\n        name: 'IE',\n        versionRegexes: [\n          /.*?msie\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*?rv:([0-9]+)\\.([0-9]+).*/\n        ],\n        search: function (uastring) {\n          return contains$1(uastring, 'msie') || contains$1(uastring, 'trident');\n        }\n      },\n      {\n        name: 'Opera',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?opera\\/([0-9]+)\\.([0-9]+).*/\n        ],\n        search: checkContains('opera')\n      },\n      {\n        name: 'Firefox',\n        versionRegexes: [/.*?firefox\\/\\ ?([0-9]+)\\.([0-9]+).*/],\n        search: checkContains('firefox')\n      },\n      {\n        name: 'Safari',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?cpu os ([0-9]+)_([0-9]+).*/\n        ],\n        search: function (uastring) {\n          return (contains$1(uastring, 'safari') || contains$1(uastring, 'mobile/')) && contains$1(uastring, 'applewebkit');\n        }\n      }\n    ];\n    var oses = [\n      {\n        name: 'Windows',\n        search: checkContains('win'),\n        versionRegexes: [/.*?windows\\ nt\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'iOS',\n        search: function (uastring) {\n          return contains$1(uastring, 'iphone') || contains$1(uastring, 'ipad');\n        },\n        versionRegexes: [\n          /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*cpu os ([0-9]+)_([0-9]+).*/,\n          /.*cpu iphone os ([0-9]+)_([0-9]+).*/\n        ]\n      },\n      {\n        name: 'Android',\n        search: checkContains('android'),\n        versionRegexes: [/.*?android\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'OSX',\n        search: checkContains('os x'),\n        versionRegexes: [/.*?os\\ x\\ ?([0-9]+)_([0-9]+).*/]\n      },\n      {\n        name: 'Linux',\n        search: checkContains('linux'),\n        versionRegexes: []\n      },\n      {\n        name: 'Solaris',\n        search: checkContains('sunos'),\n        versionRegexes: []\n      },\n      {\n        name: 'FreeBSD',\n        search: checkContains('freebsd'),\n        versionRegexes: []\n      }\n    ];\n    var PlatformInfo = {\n      browsers: constant(browsers),\n      oses: constant(oses)\n    };\n\n    var detect$2 = function (userAgent) {\n      var browsers = PlatformInfo.browsers();\n      var oses = PlatformInfo.oses();\n      var browser = UaString.detectBrowser(browsers, userAgent).fold(Browser.unknown, Browser.nu);\n      var os = UaString.detectOs(oses, userAgent).fold(OperatingSystem.unknown, OperatingSystem.nu);\n      var deviceType = DeviceType(os, browser, userAgent);\n      return {\n        browser: browser,\n        os: os,\n        deviceType: deviceType\n      };\n    };\n    var PlatformDetection = { detect: detect$2 };\n\n    var detect$3 = cached(function () {\n      var userAgent = domGlobals.navigator.userAgent;\n      return PlatformDetection.detect(userAgent);\n    });\n    var PlatformDetection$1 = { detect: detect$3 };\n\n    var ELEMENT$1 = ELEMENT;\n    var DOCUMENT$1 = DOCUMENT;\n    var is = function (element, selector) {\n      var dom = element.dom();\n      if (dom.nodeType !== ELEMENT$1) {\n        return false;\n      } else {\n        var elem = dom;\n        if (elem.matches !== undefined) {\n          return elem.matches(selector);\n        } else if (elem.msMatchesSelector !== undefined) {\n          return elem.msMatchesSelector(selector);\n        } else if (elem.webkitMatchesSelector !== undefined) {\n          return elem.webkitMatchesSelector(selector);\n        } else if (elem.mozMatchesSelector !== undefined) {\n          return elem.mozMatchesSelector(selector);\n        } else {\n          throw new Error('Browser lacks native selectors');\n        }\n      }\n    };\n    var bypassSelector = function (dom) {\n      return dom.nodeType !== ELEMENT$1 && dom.nodeType !== DOCUMENT$1 || dom.childElementCount === 0;\n    };\n    var all = function (selector, scope) {\n      var base = scope === undefined ? domGlobals.document : scope.dom();\n      return bypassSelector(base) ? [] : map(base.querySelectorAll(selector), Element.fromDom);\n    };\n    var one = function (selector, scope) {\n      var base = scope === undefined ? domGlobals.document : scope.dom();\n      return bypassSelector(base) ? Option.none() : Option.from(base.querySelector(selector)).map(Element.fromDom);\n    };\n\n    var eq = function (e1, e2) {\n      return e1.dom() === e2.dom();\n    };\n    var regularContains = function (e1, e2) {\n      var d1 = e1.dom();\n      var d2 = e2.dom();\n      return d1 === d2 ? false : d1.contains(d2);\n    };\n    var ieContains = function (e1, e2) {\n      return Node.documentPositionContainedBy(e1.dom(), e2.dom());\n    };\n    var browser = PlatformDetection$1.detect().browser;\n    var contains$2 = browser.isIE() ? ieContains : regularContains;\n    var is$1 = is;\n\n    var owner = function (element) {\n      return Element.fromDom(element.dom().ownerDocument);\n    };\n    var defaultView = function (element) {\n      return Element.fromDom(element.dom().ownerDocument.defaultView);\n    };\n    var parent = function (element) {\n      return Option.from(element.dom().parentNode).map(Element.fromDom);\n    };\n    var parents = function (element, isRoot) {\n      var stop = isFunction(isRoot) ? isRoot : never;\n      var dom = element.dom();\n      var ret = [];\n      while (dom.parentNode !== null && dom.parentNode !== undefined) {\n        var rawParent = dom.parentNode;\n        var p = Element.fromDom(rawParent);\n        ret.push(p);\n        if (stop(p) === true) {\n          break;\n        } else {\n          dom = rawParent;\n        }\n      }\n      return ret;\n    };\n    var prevSibling = function (element) {\n      return Option.from(element.dom().previousSibling).map(Element.fromDom);\n    };\n    var nextSibling = function (element) {\n      return Option.from(element.dom().nextSibling).map(Element.fromDom);\n    };\n    var children = function (element) {\n      return map(element.dom().childNodes, Element.fromDom);\n    };\n    var child = function (element, index) {\n      var cs = element.dom().childNodes;\n      return Option.from(cs[index]).map(Element.fromDom);\n    };\n    var firstChild = function (element) {\n      return child(element, 0);\n    };\n    var spot = Immutable('element', 'offset');\n\n    var before = function (marker, element) {\n      var parent$1 = parent(marker);\n      parent$1.each(function (v) {\n        v.dom().insertBefore(element.dom(), marker.dom());\n      });\n    };\n    var after = function (marker, element) {\n      var sibling = nextSibling(marker);\n      sibling.fold(function () {\n        var parent$1 = parent(marker);\n        parent$1.each(function (v) {\n          append(v, element);\n        });\n      }, function (v) {\n        before(v, element);\n      });\n    };\n    var prepend = function (parent, element) {\n      var firstChild$1 = firstChild(parent);\n      firstChild$1.fold(function () {\n        append(parent, element);\n      }, function (v) {\n        parent.dom().insertBefore(element.dom(), v.dom());\n      });\n    };\n    var append = function (parent, element) {\n      parent.dom().appendChild(element.dom());\n    };\n    var wrap = function (element, wrapper) {\n      before(element, wrapper);\n      append(wrapper, element);\n    };\n\n    var before$1 = function (marker, elements) {\n      each(elements, function (x) {\n        before(marker, x);\n      });\n    };\n    var after$1 = function (marker, elements) {\n      each(elements, function (x, i) {\n        var e = i === 0 ? marker : elements[i - 1];\n        after(e, x);\n      });\n    };\n    var append$1 = function (parent, elements) {\n      each(elements, function (x) {\n        append(parent, x);\n      });\n    };\n\n    var empty = function (element) {\n      element.dom().textContent = '';\n      each(children(element), function (rogue) {\n        remove$2(rogue);\n      });\n    };\n    var remove$2 = function (element) {\n      var dom = element.dom();\n      if (dom.parentNode !== null) {\n        dom.parentNode.removeChild(dom);\n      }\n    };\n    var unwrap = function (wrapper) {\n      var children$1 = children(wrapper);\n      if (children$1.length > 0) {\n        before$1(wrapper, children$1);\n      }\n      remove$2(wrapper);\n    };\n\n    var dimension = Immutable('width', 'height');\n    var dimensions = Immutable('width', 'height');\n    var grid = Immutable('rows', 'columns');\n    var address = Immutable('row', 'column');\n    var coords = Immutable('x', 'y');\n    var detail = Immutable('element', 'rowspan', 'colspan');\n    var detailnew = Immutable('element', 'rowspan', 'colspan', 'isNew');\n    var extended = Immutable('element', 'rowspan', 'colspan', 'row', 'column');\n    var rowdata = Immutable('element', 'cells', 'section');\n    var elementnew = Immutable('element', 'isNew');\n    var rowdatanew = Immutable('element', 'cells', 'section', 'isNew');\n    var rowcells = Immutable('cells', 'section');\n    var rowdetails = Immutable('details', 'section');\n    var bounds = Immutable('startRow', 'startCol', 'finishRow', 'finishCol');\n\n    var ancestors = function (scope, predicate, isRoot) {\n      return filter(parents(scope, isRoot), predicate);\n    };\n    var children$1 = function (scope, predicate) {\n      return filter(children(scope), predicate);\n    };\n    var descendants = function (scope, predicate) {\n      var result = [];\n      each(children(scope), function (x) {\n        if (predicate(x)) {\n          result = result.concat([x]);\n        }\n        result = result.concat(descendants(x, predicate));\n      });\n      return result;\n    };\n\n    var ancestors$1 = function (scope, selector, isRoot) {\n      return ancestors(scope, function (e) {\n        return is(e, selector);\n      }, isRoot);\n    };\n    var children$2 = function (scope, selector) {\n      return children$1(scope, function (e) {\n        return is(e, selector);\n      });\n    };\n    var descendants$1 = function (scope, selector) {\n      return all(selector, scope);\n    };\n\n    function ClosestOrAncestor (is, ancestor, scope, a, isRoot) {\n      return is(scope, a) ? Option.some(scope) : isFunction(isRoot) && isRoot(scope) ? Option.none() : ancestor(scope, a, isRoot);\n    }\n\n    var ancestor = function (scope, predicate, isRoot) {\n      var element = scope.dom();\n      var stop = isFunction(isRoot) ? isRoot : constant(false);\n      while (element.parentNode) {\n        element = element.parentNode;\n        var el = Element.fromDom(element);\n        if (predicate(el)) {\n          return Option.some(el);\n        } else if (stop(el)) {\n          break;\n        }\n      }\n      return Option.none();\n    };\n    var closest = function (scope, predicate, isRoot) {\n      var is = function (s, test) {\n        return test(s);\n      };\n      return ClosestOrAncestor(is, ancestor, scope, predicate, isRoot);\n    };\n    var child$1 = function (scope, predicate) {\n      var pred = function (node) {\n        return predicate(Element.fromDom(node));\n      };\n      var result = find(scope.dom().childNodes, pred);\n      return result.map(Element.fromDom);\n    };\n    var descendant = function (scope, predicate) {\n      var descend = function (node) {\n        for (var i = 0; i < node.childNodes.length; i++) {\n          var child_1 = Element.fromDom(node.childNodes[i]);\n          if (predicate(child_1)) {\n            return Option.some(child_1);\n          }\n          var res = descend(node.childNodes[i]);\n          if (res.isSome()) {\n            return res;\n          }\n        }\n        return Option.none();\n      };\n      return descend(scope.dom());\n    };\n\n    var ancestor$1 = function (scope, selector, isRoot) {\n      return ancestor(scope, function (e) {\n        return is(e, selector);\n      }, isRoot);\n    };\n    var child$2 = function (scope, selector) {\n      return child$1(scope, function (e) {\n        return is(e, selector);\n      });\n    };\n    var descendant$1 = function (scope, selector) {\n      return one(selector, scope);\n    };\n    var closest$1 = function (scope, selector, isRoot) {\n      return ClosestOrAncestor(is, ancestor$1, scope, selector, isRoot);\n    };\n\n    var firstLayer = function (scope, selector) {\n      return filterFirstLayer(scope, selector, constant(true));\n    };\n    var filterFirstLayer = function (scope, selector, predicate) {\n      return bind(children(scope), function (x) {\n        return is(x, selector) ? predicate(x) ? [x] : [] : filterFirstLayer(x, selector, predicate);\n      });\n    };\n    var LayerSelector = {\n      firstLayer: firstLayer,\n      filterFirstLayer: filterFirstLayer\n    };\n\n    var lookup = function (tags, element, isRoot) {\n      if (isRoot === void 0) {\n        isRoot = never;\n      }\n      if (isRoot(element)) {\n        return Option.none();\n      }\n      if (contains(tags, name(element))) {\n        return Option.some(element);\n      }\n      var isRootOrUpperTable = function (elm) {\n        return is(elm, 'table') || isRoot(elm);\n      };\n      return ancestor$1(element, tags.join(','), isRootOrUpperTable);\n    };\n    var cell = function (element, isRoot) {\n      return lookup([\n        'td',\n        'th'\n      ], element, isRoot);\n    };\n    var cells = function (ancestor) {\n      return LayerSelector.firstLayer(ancestor, 'th,td');\n    };\n    var notCell = function (element, isRoot) {\n      return lookup([\n        'caption',\n        'tr',\n        'tbody',\n        'tfoot',\n        'thead'\n      ], element, isRoot);\n    };\n    var neighbours = function (selector, element) {\n      return parent(element).map(function (parent) {\n        return children$2(parent, selector);\n      });\n    };\n    var neighbourCells = curry(neighbours, 'th,td');\n    var neighbourRows = curry(neighbours, 'tr');\n    var firstCell = function (ancestor) {\n      return descendant$1(ancestor, 'th,td');\n    };\n    var table = function (element, isRoot) {\n      return closest$1(element, 'table', isRoot);\n    };\n    var row = function (element, isRoot) {\n      return lookup(['tr'], element, isRoot);\n    };\n    var rows = function (ancestor) {\n      return LayerSelector.firstLayer(ancestor, 'tr');\n    };\n    var attr = function (element, property) {\n      return parseInt(get(element, property), 10);\n    };\n    var grid$1 = function (element, rowProp, colProp) {\n      var rowsCount = attr(element, rowProp);\n      var cols = attr(element, colProp);\n      return grid(rowsCount, cols);\n    };\n    var TableLookup = {\n      cell: cell,\n      firstCell: firstCell,\n      cells: cells,\n      neighbourCells: neighbourCells,\n      table: table,\n      row: row,\n      rows: rows,\n      notCell: notCell,\n      neighbourRows: neighbourRows,\n      attr: attr,\n      grid: grid$1\n    };\n\n    var fromTable = function (table) {\n      var rows = TableLookup.rows(table);\n      return map(rows, function (row) {\n        var element = row;\n        var parent$1 = parent(element);\n        var parentSection = parent$1.map(function (p) {\n          var parentName = name(p);\n          return parentName === 'tfoot' || parentName === 'thead' || parentName === 'tbody' ? parentName : 'tbody';\n        }).getOr('tbody');\n        var cells = map(TableLookup.cells(row), function (cell) {\n          var rowspan = has(cell, 'rowspan') ? parseInt(get(cell, 'rowspan'), 10) : 1;\n          var colspan = has(cell, 'colspan') ? parseInt(get(cell, 'colspan'), 10) : 1;\n          return detail(cell, rowspan, colspan);\n        });\n        return rowdata(element, cells, parentSection);\n      });\n    };\n    var fromPastedRows = function (rows, example) {\n      return map(rows, function (row) {\n        var cells = map(TableLookup.cells(row), function (cell) {\n          var rowspan = has(cell, 'rowspan') ? parseInt(get(cell, 'rowspan'), 10) : 1;\n          var colspan = has(cell, 'colspan') ? parseInt(get(cell, 'colspan'), 10) : 1;\n          return detail(cell, rowspan, colspan);\n        });\n        return rowdata(row, cells, example.section());\n      });\n    };\n    var DetailsList = {\n      fromTable: fromTable,\n      fromPastedRows: fromPastedRows\n    };\n\n    var key = function (row, column) {\n      return row + ',' + column;\n    };\n    var getAt = function (warehouse, row, column) {\n      var raw = warehouse.access()[key(row, column)];\n      return raw !== undefined ? Option.some(raw) : Option.none();\n    };\n    var findItem = function (warehouse, item, comparator) {\n      var filtered = filterItems(warehouse, function (detail) {\n        return comparator(item, detail.element());\n      });\n      return filtered.length > 0 ? Option.some(filtered[0]) : Option.none();\n    };\n    var filterItems = function (warehouse, predicate) {\n      var all = bind(warehouse.all(), function (r) {\n        return r.cells();\n      });\n      return filter(all, predicate);\n    };\n    var generate = function (list) {\n      var access = {};\n      var cells = [];\n      var maxRows = list.length;\n      var maxColumns = 0;\n      each(list, function (details, r) {\n        var currentRow = [];\n        each(details.cells(), function (detail) {\n          var start = 0;\n          while (access[key(r, start)] !== undefined) {\n            start++;\n          }\n          var current = extended(detail.element(), detail.rowspan(), detail.colspan(), r, start);\n          for (var i = 0; i < detail.colspan(); i++) {\n            for (var j = 0; j < detail.rowspan(); j++) {\n              var cr = r + j;\n              var cc = start + i;\n              var newpos = key(cr, cc);\n              access[newpos] = current;\n              maxColumns = Math.max(maxColumns, cc + 1);\n            }\n          }\n          currentRow.push(current);\n        });\n        cells.push(rowdata(details.element(), currentRow, details.section()));\n      });\n      var grid$1 = grid(maxRows, maxColumns);\n      return {\n        grid: constant(grid$1),\n        access: constant(access),\n        all: constant(cells)\n      };\n    };\n    var justCells = function (warehouse) {\n      var rows = map(warehouse.all(), function (w) {\n        return w.cells();\n      });\n      return flatten(rows);\n    };\n    var Warehouse = {\n      generate: generate,\n      getAt: getAt,\n      findItem: findItem,\n      filterItems: filterItems,\n      justCells: justCells\n    };\n\n    var statsStruct = Immutable('minRow', 'minCol', 'maxRow', 'maxCol');\n    var findSelectedStats = function (house, isSelected) {\n      var totalColumns = house.grid().columns();\n      var totalRows = house.grid().rows();\n      var minRow = totalRows;\n      var minCol = totalColumns;\n      var maxRow = 0;\n      var maxCol = 0;\n      each$1(house.access(), function (detail) {\n        if (isSelected(detail)) {\n          var startRow = detail.row();\n          var endRow = startRow + detail.rowspan() - 1;\n          var startCol = detail.column();\n          var endCol = startCol + detail.colspan() - 1;\n          if (startRow < minRow) {\n            minRow = startRow;\n          } else if (endRow > maxRow) {\n            maxRow = endRow;\n          }\n          if (startCol < minCol) {\n            minCol = startCol;\n          } else if (endCol > maxCol) {\n            maxCol = endCol;\n          }\n        }\n      });\n      return statsStruct(minRow, minCol, maxRow, maxCol);\n    };\n    var makeCell = function (list, seenSelected, rowIndex) {\n      var row = list[rowIndex].element();\n      var td = Element.fromTag('td');\n      append(td, Element.fromTag('br'));\n      var f = seenSelected ? append : prepend;\n      f(row, td);\n    };\n    var fillInGaps = function (list, house, stats, isSelected) {\n      var totalColumns = house.grid().columns();\n      var totalRows = house.grid().rows();\n      for (var i = 0; i < totalRows; i++) {\n        var seenSelected = false;\n        for (var j = 0; j < totalColumns; j++) {\n          if (!(i < stats.minRow() || i > stats.maxRow() || j < stats.minCol() || j > stats.maxCol())) {\n            var needCell = Warehouse.getAt(house, i, j).filter(isSelected).isNone();\n            if (needCell) {\n              makeCell(list, seenSelected, i);\n            } else {\n              seenSelected = true;\n            }\n          }\n        }\n      }\n    };\n    var clean = function (table, stats) {\n      var emptyRows = filter(LayerSelector.firstLayer(table, 'tr'), function (row) {\n        return row.dom().childElementCount === 0;\n      });\n      each(emptyRows, remove$2);\n      if (stats.minCol() === stats.maxCol() || stats.minRow() === stats.maxRow()) {\n        each(LayerSelector.firstLayer(table, 'th,td'), function (cell) {\n          remove(cell, 'rowspan');\n          remove(cell, 'colspan');\n        });\n      }\n      remove(table, 'width');\n      remove(table, 'height');\n      remove$1(table, 'width');\n      remove$1(table, 'height');\n    };\n    var extract = function (table, selectedSelector) {\n      var isSelected = function (detail) {\n        return is(detail.element(), selectedSelector);\n      };\n      var list = DetailsList.fromTable(table);\n      var house = Warehouse.generate(list);\n      var stats = findSelectedStats(house, isSelected);\n      var selector = 'th:not(' + selectedSelector + ')' + ',td:not(' + selectedSelector + ')';\n      var unselectedCells = LayerSelector.filterFirstLayer(table, 'th,td', function (cell) {\n        return is(cell, selector);\n      });\n      each(unselectedCells, remove$2);\n      fillInGaps(list, house, stats, isSelected);\n      clean(table, stats);\n      return table;\n    };\n    var CopySelected = { extract: extract };\n\n    function NodeValue (is, name) {\n      var get = function (element) {\n        if (!is(element)) {\n          throw new Error('Can only get ' + name + ' value of a ' + name + ' node');\n        }\n        return getOption(element).getOr('');\n      };\n      var getOption = function (element) {\n        return is(element) ? Option.from(element.dom().nodeValue) : Option.none();\n      };\n      var set = function (element, value) {\n        if (!is(element)) {\n          throw new Error('Can only set raw ' + name + ' value of a ' + name + ' node');\n        }\n        element.dom().nodeValue = value;\n      };\n      return {\n        get: get,\n        getOption: getOption,\n        set: set\n      };\n    }\n\n    var api = NodeValue(isText, 'text');\n    var get$2 = function (element) {\n      return api.get(element);\n    };\n    var getOption = function (element) {\n      return api.getOption(element);\n    };\n    var set$2 = function (element, value) {\n      api.set(element, value);\n    };\n\n    var getEnd = function (element) {\n      return name(element) === 'img' ? 1 : getOption(element).fold(function () {\n        return children(element).length;\n      }, function (v) {\n        return v.length;\n      });\n    };\n    var NBSP = '\\xA0';\n    var isTextNodeWithCursorPosition = function (el) {\n      return getOption(el).filter(function (text) {\n        return text.trim().length !== 0 || text.indexOf(NBSP) > -1;\n      }).isSome();\n    };\n    var elementsWithCursorPosition = [\n      'img',\n      'br'\n    ];\n    var isCursorPosition = function (elem) {\n      var hasCursorPosition = isTextNodeWithCursorPosition(elem);\n      return hasCursorPosition || contains(elementsWithCursorPosition, name(elem));\n    };\n\n    var first = function (element) {\n      return descendant(element, isCursorPosition);\n    };\n    var last$1 = function (element) {\n      return descendantRtl(element, isCursorPosition);\n    };\n    var descendantRtl = function (scope, predicate) {\n      var descend = function (element) {\n        var children$1 = children(element);\n        for (var i = children$1.length - 1; i >= 0; i--) {\n          var child = children$1[i];\n          if (predicate(child)) {\n            return Option.some(child);\n          }\n          var res = descend(child);\n          if (res.isSome()) {\n            return res;\n          }\n        }\n        return Option.none();\n      };\n      return descend(scope);\n    };\n\n    var clone$1 = function (original, isDeep) {\n      return Element.fromDom(original.dom().cloneNode(isDeep));\n    };\n    var shallow = function (original) {\n      return clone$1(original, false);\n    };\n    var deep = function (original) {\n      return clone$1(original, true);\n    };\n    var shallowAs = function (original, tag) {\n      var nu = Element.fromTag(tag);\n      var attributes = clone(original);\n      setAll(nu, attributes);\n      return nu;\n    };\n    var copy$1 = function (original, tag) {\n      var nu = shallowAs(original, tag);\n      var cloneChildren = children(deep(original));\n      append$1(nu, cloneChildren);\n      return nu;\n    };\n\n    var createCell = function () {\n      var td = Element.fromTag('td');\n      append(td, Element.fromTag('br'));\n      return td;\n    };\n    var replace = function (cell, tag, attrs) {\n      var replica = copy$1(cell, tag);\n      each$1(attrs, function (v, k) {\n        if (v === null) {\n          remove(replica, k);\n        } else {\n          set(replica, k, v);\n        }\n      });\n      return replica;\n    };\n    var pasteReplace = function (cell) {\n      return cell;\n    };\n    var newRow = function (doc) {\n      return function () {\n        return Element.fromTag('tr', doc.dom());\n      };\n    };\n    var cloneFormats = function (oldCell, newCell, formats) {\n      var first$1 = first(oldCell);\n      return first$1.map(function (firstText) {\n        var formatSelector = formats.join(',');\n        var parents = ancestors$1(firstText, formatSelector, function (element) {\n          return eq(element, oldCell);\n        });\n        return foldr(parents, function (last, parent) {\n          var clonedFormat = shallow(parent);\n          remove(clonedFormat, 'contenteditable');\n          append(last, clonedFormat);\n          return clonedFormat;\n        }, newCell);\n      }).getOr(newCell);\n    };\n    var cellOperations = function (mutate, doc, formatsToClone) {\n      var newCell = function (prev) {\n        var docu = owner(prev.element());\n        var td = Element.fromTag(name(prev.element()), docu.dom());\n        var formats = formatsToClone.getOr([\n          'strong',\n          'em',\n          'b',\n          'i',\n          'span',\n          'font',\n          'h1',\n          'h2',\n          'h3',\n          'h4',\n          'h5',\n          'h6',\n          'p',\n          'div'\n        ]);\n        var lastNode = formats.length > 0 ? cloneFormats(prev.element(), td, formats) : td;\n        append(lastNode, Element.fromTag('br'));\n        copy(prev.element(), td);\n        remove$1(td, 'height');\n        if (prev.colspan() !== 1) {\n          remove$1(prev.element(), 'width');\n        }\n        mutate(prev.element(), td);\n        return td;\n      };\n      return {\n        row: newRow(doc),\n        cell: newCell,\n        replace: replace,\n        gap: createCell\n      };\n    };\n    var paste = function (doc) {\n      return {\n        row: newRow(doc),\n        cell: createCell,\n        replace: pasteReplace,\n        gap: createCell\n      };\n    };\n    var TableFill = {\n      cellOperations: cellOperations,\n      paste: paste\n    };\n\n    var fromHtml$1 = function (html, scope) {\n      var doc = scope || domGlobals.document;\n      var div = doc.createElement('div');\n      div.innerHTML = html;\n      return children(Element.fromDom(div));\n    };\n\n    var inSelection = function (bounds, detail) {\n      var leftEdge = detail.column();\n      var rightEdge = detail.column() + detail.colspan() - 1;\n      var topEdge = detail.row();\n      var bottomEdge = detail.row() + detail.rowspan() - 1;\n      return leftEdge <= bounds.finishCol() && rightEdge >= bounds.startCol() && (topEdge <= bounds.finishRow() && bottomEdge >= bounds.startRow());\n    };\n    var isWithin = function (bounds, detail) {\n      return detail.column() >= bounds.startCol() && detail.column() + detail.colspan() - 1 <= bounds.finishCol() && detail.row() >= bounds.startRow() && detail.row() + detail.rowspan() - 1 <= bounds.finishRow();\n    };\n    var isRectangular = function (warehouse, bounds) {\n      var isRect = true;\n      var detailIsWithin = curry(isWithin, bounds);\n      for (var i = bounds.startRow(); i <= bounds.finishRow(); i++) {\n        for (var j = bounds.startCol(); j <= bounds.finishCol(); j++) {\n          isRect = isRect && Warehouse.getAt(warehouse, i, j).exists(detailIsWithin);\n        }\n      }\n      return isRect ? Option.some(bounds) : Option.none();\n    };\n    var CellBounds = {\n      inSelection: inSelection,\n      isWithin: isWithin,\n      isRectangular: isRectangular\n    };\n\n    var getBounds = function (detailA, detailB) {\n      return bounds(Math.min(detailA.row(), detailB.row()), Math.min(detailA.column(), detailB.column()), Math.max(detailA.row() + detailA.rowspan() - 1, detailB.row() + detailB.rowspan() - 1), Math.max(detailA.column() + detailA.colspan() - 1, detailB.column() + detailB.colspan() - 1));\n    };\n    var getAnyBox = function (warehouse, startCell, finishCell) {\n      var startCoords = Warehouse.findItem(warehouse, startCell, eq);\n      var finishCoords = Warehouse.findItem(warehouse, finishCell, eq);\n      return startCoords.bind(function (sc) {\n        return finishCoords.map(function (fc) {\n          return getBounds(sc, fc);\n        });\n      });\n    };\n    var getBox = function (warehouse, startCell, finishCell) {\n      return getAnyBox(warehouse, startCell, finishCell).bind(function (bounds) {\n        return CellBounds.isRectangular(warehouse, bounds);\n      });\n    };\n    var CellGroup = {\n      getAnyBox: getAnyBox,\n      getBox: getBox\n    };\n\n    var moveBy = function (warehouse, cell, row, column) {\n      return Warehouse.findItem(warehouse, cell, eq).bind(function (detail) {\n        var startRow = row > 0 ? detail.row() + detail.rowspan() - 1 : detail.row();\n        var startCol = column > 0 ? detail.column() + detail.colspan() - 1 : detail.column();\n        var dest = Warehouse.getAt(warehouse, startRow + row, startCol + column);\n        return dest.map(function (d) {\n          return d.element();\n        });\n      });\n    };\n    var intercepts = function (warehouse, start, finish) {\n      return CellGroup.getAnyBox(warehouse, start, finish).map(function (bounds) {\n        var inside = Warehouse.filterItems(warehouse, curry(CellBounds.inSelection, bounds));\n        return map(inside, function (detail) {\n          return detail.element();\n        });\n      });\n    };\n    var parentCell = function (warehouse, innerCell) {\n      var isContainedBy = function (c1, c2) {\n        return contains$2(c2, c1);\n      };\n      return Warehouse.findItem(warehouse, innerCell, isContainedBy).map(function (detail) {\n        return detail.element();\n      });\n    };\n    var CellFinder = {\n      moveBy: moveBy,\n      intercepts: intercepts,\n      parentCell: parentCell\n    };\n\n    var moveBy$1 = function (cell, deltaRow, deltaColumn) {\n      return TableLookup.table(cell).bind(function (table) {\n        var warehouse = getWarehouse(table);\n        return CellFinder.moveBy(warehouse, cell, deltaRow, deltaColumn);\n      });\n    };\n    var intercepts$1 = function (table, first, last) {\n      var warehouse = getWarehouse(table);\n      return CellFinder.intercepts(warehouse, first, last);\n    };\n    var nestedIntercepts = function (table, first, firstTable, last, lastTable) {\n      var warehouse = getWarehouse(table);\n      var optStartCell = eq(table, firstTable) ? Option.some(first) : CellFinder.parentCell(warehouse, first);\n      var optLastCell = eq(table, lastTable) ? Option.some(last) : CellFinder.parentCell(warehouse, last);\n      return optStartCell.bind(function (startCell) {\n        return optLastCell.bind(function (lastCell) {\n          return CellFinder.intercepts(warehouse, startCell, lastCell);\n        });\n      });\n    };\n    var getBox$1 = function (table, first, last) {\n      var warehouse = getWarehouse(table);\n      return CellGroup.getBox(warehouse, first, last);\n    };\n    var getWarehouse = function (table) {\n      var list = DetailsList.fromTable(table);\n      return Warehouse.generate(list);\n    };\n    var TablePositions = {\n      moveBy: moveBy$1,\n      intercepts: intercepts$1,\n      nestedIntercepts: nestedIntercepts,\n      getBox: getBox$1\n    };\n\n    var TagBoundaries = [\n      'body',\n      'p',\n      'div',\n      'article',\n      'aside',\n      'figcaption',\n      'figure',\n      'footer',\n      'header',\n      'nav',\n      'section',\n      'ol',\n      'ul',\n      'li',\n      'table',\n      'thead',\n      'tbody',\n      'tfoot',\n      'caption',\n      'tr',\n      'td',\n      'th',\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n      'blockquote',\n      'pre',\n      'address'\n    ];\n\n    function DomUniverse () {\n      var clone$1 = function (element) {\n        return Element.fromDom(element.dom().cloneNode(false));\n      };\n      var document = function (element) {\n        return element.dom().ownerDocument;\n      };\n      var isBoundary = function (element) {\n        if (!isElement(element)) {\n          return false;\n        }\n        if (name(element) === 'body') {\n          return true;\n        }\n        return contains(TagBoundaries, name(element));\n      };\n      var isEmptyTag = function (element) {\n        if (!isElement(element)) {\n          return false;\n        }\n        return contains([\n          'br',\n          'img',\n          'hr',\n          'input'\n        ], name(element));\n      };\n      var comparePosition = function (element, other) {\n        return element.dom().compareDocumentPosition(other.dom());\n      };\n      var copyAttributesTo = function (source, destination) {\n        var as = clone(source);\n        setAll(destination, as);\n      };\n      return {\n        up: constant({\n          selector: ancestor$1,\n          closest: closest$1,\n          predicate: ancestor,\n          all: parents\n        }),\n        down: constant({\n          selector: descendants$1,\n          predicate: descendants\n        }),\n        styles: constant({\n          get: get$1,\n          getRaw: getRaw,\n          set: set$1,\n          remove: remove$1\n        }),\n        attrs: constant({\n          get: get,\n          set: set,\n          remove: remove,\n          copyTo: copyAttributesTo\n        }),\n        insert: constant({\n          before: before,\n          after: after,\n          afterAll: after$1,\n          append: append,\n          appendAll: append$1,\n          prepend: prepend,\n          wrap: wrap\n        }),\n        remove: constant({\n          unwrap: unwrap,\n          remove: remove$2\n        }),\n        create: constant({\n          nu: Element.fromTag,\n          clone: clone$1,\n          text: Element.fromText\n        }),\n        query: constant({\n          comparePosition: comparePosition,\n          prevSibling: prevSibling,\n          nextSibling: nextSibling\n        }),\n        property: constant({\n          children: children,\n          name: name,\n          parent: parent,\n          document: document,\n          isText: isText,\n          isComment: isComment,\n          isElement: isElement,\n          getText: get$2,\n          setText: set$2,\n          isBoundary: isBoundary,\n          isEmptyTag: isEmptyTag\n        }),\n        eq: eq,\n        is: is$1\n      };\n    }\n\n    var leftRight = Immutable('left', 'right');\n    var brokenPath = Immutable('first', 'second', 'splits');\n    var bisect = function (universe, parent, child) {\n      var children = universe.property().children(parent);\n      var index = findIndex(children, curry(universe.eq, child));\n      return index.map(function (ind) {\n        return {\n          before: constant(children.slice(0, ind)),\n          after: constant(children.slice(ind + 1))\n        };\n      });\n    };\n    var breakToRight = function (universe, parent, child) {\n      return bisect(universe, parent, child).map(function (parts) {\n        var second = universe.create().clone(parent);\n        universe.insert().appendAll(second, parts.after());\n        universe.insert().after(parent, second);\n        return leftRight(parent, second);\n      });\n    };\n    var breakToLeft = function (universe, parent, child) {\n      return bisect(universe, parent, child).map(function (parts) {\n        var prior = universe.create().clone(parent);\n        universe.insert().appendAll(prior, parts.before().concat([child]));\n        universe.insert().appendAll(parent, parts.after());\n        universe.insert().before(parent, prior);\n        return leftRight(prior, parent);\n      });\n    };\n    var breakPath = function (universe, item, isTop, breaker) {\n      var next = function (child, group, splits) {\n        var fallback = brokenPath(child, Option.none(), splits);\n        if (isTop(child)) {\n          return brokenPath(child, group, splits);\n        } else {\n          return universe.property().parent(child).bind(function (parent) {\n            return breaker(universe, parent, child).map(function (breakage) {\n              var extra = [{\n                  first: breakage.left,\n                  second: breakage.right\n                }];\n              var nextChild = isTop(parent) ? parent : breakage.left();\n              return next(nextChild, Option.some(breakage.right()), splits.concat(extra));\n            });\n          }).getOr(fallback);\n        }\n      };\n      return next(item, Option.none(), []);\n    };\n\n    var all$1 = function (universe, look, elements, f) {\n      var head = elements[0];\n      var tail = elements.slice(1);\n      return f(universe, look, head, tail);\n    };\n    var oneAll = function (universe, look, elements) {\n      return elements.length > 0 ? all$1(universe, look, elements, unsafeOne) : Option.none();\n    };\n    var unsafeOne = function (universe, look, head, tail) {\n      var start = look(universe, head);\n      return foldr(tail, function (b, a) {\n        var current = look(universe, a);\n        return commonElement(universe, b, current);\n      }, start);\n    };\n    var commonElement = function (universe, start, end) {\n      return start.bind(function (s) {\n        return end.filter(curry(universe.eq, s));\n      });\n    };\n\n    var eq$1 = function (universe, item) {\n      return curry(universe.eq, item);\n    };\n    var unsafeSubset = function (universe, common, ps1, ps2) {\n      var children = universe.property().children(common);\n      if (universe.eq(common, ps1[0])) {\n        return Option.some([ps1[0]]);\n      }\n      if (universe.eq(common, ps2[0])) {\n        return Option.some([ps2[0]]);\n      }\n      var finder = function (ps) {\n        var topDown = reverse(ps);\n        var index = findIndex(topDown, eq$1(universe, common)).getOr(-1);\n        var item = index < topDown.length - 1 ? topDown[index + 1] : topDown[index];\n        return findIndex(children, eq$1(universe, item));\n      };\n      var startIndex = finder(ps1);\n      var endIndex = finder(ps2);\n      return startIndex.bind(function (sIndex) {\n        return endIndex.map(function (eIndex) {\n          var first = Math.min(sIndex, eIndex);\n          var last = Math.max(sIndex, eIndex);\n          return children.slice(first, last + 1);\n        });\n      });\n    };\n    var ancestors$2 = function (universe, start, end, isRoot) {\n      if (isRoot === void 0) {\n        isRoot = never;\n      }\n      var ps1 = [start].concat(universe.up().all(start));\n      var ps2 = [end].concat(universe.up().all(end));\n      var prune = function (path) {\n        var index = findIndex(path, isRoot);\n        return index.fold(function () {\n          return path;\n        }, function (ind) {\n          return path.slice(0, ind + 1);\n        });\n      };\n      var pruned1 = prune(ps1);\n      var pruned2 = prune(ps2);\n      var shared = find(pruned1, function (x) {\n        return exists(pruned2, eq$1(universe, x));\n      });\n      return {\n        firstpath: constant(pruned1),\n        secondpath: constant(pruned2),\n        shared: constant(shared)\n      };\n    };\n    var subset = function (universe, start, end) {\n      var ancs = ancestors$2(universe, start, end);\n      return ancs.shared().bind(function (shared) {\n        return unsafeSubset(universe, shared, ancs.firstpath(), ancs.secondpath());\n      });\n    };\n    var SubsetFn = {\n      subset: subset,\n      ancestors: ancestors$2\n    };\n\n    var sharedOne = oneAll;\n    var subset$1 = SubsetFn.subset;\n    var ancestors$3 = SubsetFn.ancestors;\n    var breakToLeft$1 = breakToLeft;\n    var breakToRight$1 = breakToRight;\n    var breakPath$1 = breakPath;\n    var Parent = {\n      sharedOne: sharedOne,\n      subset: subset$1,\n      ancestors: ancestors$3,\n      breakToLeft: breakToLeft$1,\n      breakToRight: breakToRight$1,\n      breakPath: breakPath$1\n    };\n\n    var universe = DomUniverse();\n    var sharedOne$1 = function (look, elements) {\n      return Parent.sharedOne(universe, function (_universe, element) {\n        return look(element);\n      }, elements);\n    };\n    var subset$2 = function (start, finish) {\n      return Parent.subset(universe, start, finish);\n    };\n    var ancestors$4 = function (start, finish, isRoot) {\n      return Parent.ancestors(universe, start, finish, isRoot);\n    };\n    var breakToLeft$2 = function (parent, child) {\n      return Parent.breakToLeft(universe, parent, child);\n    };\n    var breakToRight$2 = function (parent, child) {\n      return Parent.breakToRight(universe, parent, child);\n    };\n    var breakPath$2 = function (child, isTop, breaker) {\n      return Parent.breakPath(universe, child, isTop, function (u, p, c) {\n        return breaker(p, c);\n      });\n    };\n    var DomParent = {\n      sharedOne: sharedOne$1,\n      subset: subset$2,\n      ancestors: ancestors$4,\n      breakToLeft: breakToLeft$2,\n      breakToRight: breakToRight$2,\n      breakPath: breakPath$2\n    };\n\n    var create = MixedBag([\n      'boxes',\n      'start',\n      'finish'\n    ], []);\n    var Identified = { create: create };\n\n    var lookupTable = function (container) {\n      return ancestor$1(container, 'table');\n    };\n    var identify = function (start, finish, isRoot) {\n      var getIsRoot = function (rootTable) {\n        return function (element) {\n          return isRoot !== undefined && isRoot(element) || eq(element, rootTable);\n        };\n      };\n      if (eq(start, finish)) {\n        return Option.some(Identified.create({\n          boxes: Option.some([start]),\n          start: start,\n          finish: finish\n        }));\n      } else {\n        return lookupTable(start).bind(function (startTable) {\n          return lookupTable(finish).bind(function (finishTable) {\n            if (eq(startTable, finishTable)) {\n              return Option.some(Identified.create({\n                boxes: TablePositions.intercepts(startTable, start, finish),\n                start: start,\n                finish: finish\n              }));\n            } else if (contains$2(startTable, finishTable)) {\n              var ancestorCells = ancestors$1(finish, 'td,th', getIsRoot(startTable));\n              var finishCell = ancestorCells.length > 0 ? ancestorCells[ancestorCells.length - 1] : finish;\n              return Option.some(Identified.create({\n                boxes: TablePositions.nestedIntercepts(startTable, start, startTable, finish, finishTable),\n                start: start,\n                finish: finishCell\n              }));\n            } else if (contains$2(finishTable, startTable)) {\n              var ancestorCells = ancestors$1(start, 'td,th', getIsRoot(finishTable));\n              var startCell = ancestorCells.length > 0 ? ancestorCells[ancestorCells.length - 1] : start;\n              return Option.some(Identified.create({\n                boxes: TablePositions.nestedIntercepts(finishTable, start, startTable, finish, finishTable),\n                start: start,\n                finish: startCell\n              }));\n            } else {\n              return DomParent.ancestors(start, finish).shared().bind(function (lca) {\n                return closest$1(lca, 'table', isRoot).bind(function (lcaTable) {\n                  var finishAncestorCells = ancestors$1(finish, 'td,th', getIsRoot(lcaTable));\n                  var finishCell = finishAncestorCells.length > 0 ? finishAncestorCells[finishAncestorCells.length - 1] : finish;\n                  var startAncestorCells = ancestors$1(start, 'td,th', getIsRoot(lcaTable));\n                  var startCell = startAncestorCells.length > 0 ? startAncestorCells[startAncestorCells.length - 1] : start;\n                  return Option.some(Identified.create({\n                    boxes: TablePositions.nestedIntercepts(lcaTable, start, startTable, finish, finishTable),\n                    start: startCell,\n                    finish: finishCell\n                  }));\n                });\n              });\n            }\n          });\n        });\n      }\n    };\n    var retrieve = function (container, selector) {\n      var sels = descendants$1(container, selector);\n      return sels.length > 0 ? Option.some(sels) : Option.none();\n    };\n    var getLast = function (boxes, lastSelectedSelector) {\n      return find(boxes, function (box) {\n        return is(box, lastSelectedSelector);\n      });\n    };\n    var getEdges = function (container, firstSelectedSelector, lastSelectedSelector) {\n      return descendant$1(container, firstSelectedSelector).bind(function (first) {\n        return descendant$1(container, lastSelectedSelector).bind(function (last) {\n          return DomParent.sharedOne(lookupTable, [\n            first,\n            last\n          ]).map(function (tbl) {\n            return {\n              first: constant(first),\n              last: constant(last),\n              table: constant(tbl)\n            };\n          });\n        });\n      });\n    };\n    var expandTo = function (finish, firstSelectedSelector) {\n      return ancestor$1(finish, 'table').bind(function (table) {\n        return descendant$1(table, firstSelectedSelector).bind(function (start) {\n          return identify(start, finish).bind(function (identified) {\n            return identified.boxes().map(function (boxes) {\n              return {\n                boxes: constant(boxes),\n                start: constant(identified.start()),\n                finish: constant(identified.finish())\n              };\n            });\n          });\n        });\n      });\n    };\n    var shiftSelection = function (boxes, deltaRow, deltaColumn, firstSelectedSelector, lastSelectedSelector) {\n      return getLast(boxes, lastSelectedSelector).bind(function (last) {\n        return TablePositions.moveBy(last, deltaRow, deltaColumn).bind(function (finish) {\n          return expandTo(finish, firstSelectedSelector);\n        });\n      });\n    };\n    var CellSelection = {\n      identify: identify,\n      retrieve: retrieve,\n      shiftSelection: shiftSelection,\n      getEdges: getEdges\n    };\n\n    var retrieve$1 = function (container, selector) {\n      return CellSelection.retrieve(container, selector);\n    };\n    var retrieveBox = function (container, firstSelectedSelector, lastSelectedSelector) {\n      return CellSelection.getEdges(container, firstSelectedSelector, lastSelectedSelector).bind(function (edges) {\n        var isRoot = function (ancestor) {\n          return eq(container, ancestor);\n        };\n        var firstAncestor = ancestor$1(edges.first(), 'thead,tfoot,tbody,table', isRoot);\n        var lastAncestor = ancestor$1(edges.last(), 'thead,tfoot,tbody,table', isRoot);\n        return firstAncestor.bind(function (fA) {\n          return lastAncestor.bind(function (lA) {\n            return eq(fA, lA) ? TablePositions.getBox(edges.table(), edges.first(), edges.last()) : Option.none();\n          });\n        });\n      });\n    };\n    var TableSelection = {\n      retrieve: retrieve$1,\n      retrieveBox: retrieveBox\n    };\n\n    var selected = 'data-mce-selected';\n    var selectedSelector = 'td[' + selected + '],th[' + selected + ']';\n    var attributeSelector = '[' + selected + ']';\n    var firstSelected = 'data-mce-first-selected';\n    var firstSelectedSelector = 'td[' + firstSelected + '],th[' + firstSelected + ']';\n    var lastSelected = 'data-mce-last-selected';\n    var lastSelectedSelector = 'td[' + lastSelected + '],th[' + lastSelected + ']';\n    var Ephemera = {\n      selected: constant(selected),\n      selectedSelector: constant(selectedSelector),\n      attributeSelector: constant(attributeSelector),\n      firstSelected: constant(firstSelected),\n      firstSelectedSelector: constant(firstSelectedSelector),\n      lastSelected: constant(lastSelected),\n      lastSelectedSelector: constant(lastSelectedSelector)\n    };\n\n    var generate$1 = function (cases) {\n      if (!isArray(cases)) {\n        throw new Error('cases must be an array');\n      }\n      if (cases.length === 0) {\n        throw new Error('there must be at least one case');\n      }\n      var constructors = [];\n      var adt = {};\n      each(cases, function (acase, count) {\n        var keys$1 = keys(acase);\n        if (keys$1.length !== 1) {\n          throw new Error('one and only one name per case');\n        }\n        var key = keys$1[0];\n        var value = acase[key];\n        if (adt[key] !== undefined) {\n          throw new Error('duplicate key detected:' + key);\n        } else if (key === 'cata') {\n          throw new Error('cannot have a case named cata (sorry)');\n        } else if (!isArray(value)) {\n          throw new Error('case arguments must be an array');\n        }\n        constructors.push(key);\n        adt[key] = function () {\n          var argLength = arguments.length;\n          if (argLength !== value.length) {\n            throw new Error('Wrong number of arguments to case ' + key + '. Expected ' + value.length + ' (' + value + '), got ' + argLength);\n          }\n          var args = new Array(argLength);\n          for (var i = 0; i < args.length; i++) {\n            args[i] = arguments[i];\n          }\n          var match = function (branches) {\n            var branchKeys = keys(branches);\n            if (constructors.length !== branchKeys.length) {\n              throw new Error('Wrong number of arguments to match. Expected: ' + constructors.join(',') + '\\nActual: ' + branchKeys.join(','));\n            }\n            var allReqd = forall(constructors, function (reqKey) {\n              return contains(branchKeys, reqKey);\n            });\n            if (!allReqd) {\n              throw new Error('Not all branches were specified when using match. Specified: ' + branchKeys.join(', ') + '\\nRequired: ' + constructors.join(', '));\n            }\n            return branches[key].apply(null, args);\n          };\n          return {\n            fold: function () {\n              if (arguments.length !== cases.length) {\n                throw new Error('Wrong number of arguments to fold. Expected ' + cases.length + ', got ' + arguments.length);\n              }\n              var target = arguments[count];\n              return target.apply(null, args);\n            },\n            match: match,\n            log: function (label) {\n              domGlobals.console.log(label, {\n                constructors: constructors,\n                constructor: key,\n                params: args\n              });\n            }\n          };\n        };\n      });\n      return adt;\n    };\n    var Adt = { generate: generate$1 };\n\n    var type$1 = Adt.generate([\n      { none: [] },\n      { multiple: ['elements'] },\n      { single: ['selection'] }\n    ]);\n    var cata = function (subject, onNone, onMultiple, onSingle) {\n      return subject.fold(onNone, onMultiple, onSingle);\n    };\n    var SelectionTypes = {\n      cata: cata,\n      none: type$1.none,\n      multiple: type$1.multiple,\n      single: type$1.single\n    };\n\n    var selection = function (cell, selections) {\n      return SelectionTypes.cata(selections.get(), constant([]), identity, constant([cell]));\n    };\n    var unmergable = function (cell, selections) {\n      var hasSpan = function (elem) {\n        return has(elem, 'rowspan') && parseInt(get(elem, 'rowspan'), 10) > 1 || has(elem, 'colspan') && parseInt(get(elem, 'colspan'), 10) > 1;\n      };\n      var candidates = selection(cell, selections);\n      return candidates.length > 0 && forall(candidates, hasSpan) ? Option.some(candidates) : Option.none();\n    };\n    var mergable = function (table, selections) {\n      return SelectionTypes.cata(selections.get(), Option.none, function (cells, _env) {\n        if (cells.length === 0) {\n          return Option.none();\n        }\n        return TableSelection.retrieveBox(table, Ephemera.firstSelectedSelector(), Ephemera.lastSelectedSelector()).bind(function (bounds) {\n          return cells.length > 1 ? Option.some({\n            bounds: constant(bounds),\n            cells: constant(cells)\n          }) : Option.none();\n        });\n      }, Option.none);\n    };\n    var CellOperations = {\n      mergable: mergable,\n      unmergable: unmergable,\n      selection: selection\n    };\n\n    var noMenu = function (cell) {\n      return {\n        element: constant(cell),\n        mergable: Option.none,\n        unmergable: Option.none,\n        selection: constant([cell])\n      };\n    };\n    var forMenu = function (selections, table, cell) {\n      return {\n        element: constant(cell),\n        mergable: constant(CellOperations.mergable(table, selections)),\n        unmergable: constant(CellOperations.unmergable(cell, selections)),\n        selection: constant(CellOperations.selection(cell, selections))\n      };\n    };\n    var notCell$1 = function (element) {\n      return noMenu(element);\n    };\n    var paste$1 = Immutable('element', 'clipboard', 'generators');\n    var pasteRows = function (selections, table, cell, clipboard, generators) {\n      return {\n        element: constant(cell),\n        mergable: Option.none,\n        unmergable: Option.none,\n        selection: constant(CellOperations.selection(cell, selections)),\n        clipboard: constant(clipboard),\n        generators: constant(generators)\n      };\n    };\n    var TableTargets = {\n      noMenu: noMenu,\n      forMenu: forMenu,\n      notCell: notCell$1,\n      paste: paste$1,\n      pasteRows: pasteRows\n    };\n\n    var extractSelected = function (cells) {\n      return TableLookup.table(cells[0]).map(deep).map(function (replica) {\n        return [CopySelected.extract(replica, Ephemera.attributeSelector())];\n      });\n    };\n    var serializeElements = function (editor, elements) {\n      return map(elements, function (elm) {\n        return editor.selection.serializer.serialize(elm.dom(), {});\n      }).join('');\n    };\n    var getTextContent = function (elements) {\n      return map(elements, function (element) {\n        return element.dom().innerText;\n      }).join('');\n    };\n    var registerEvents = function (editor, selections, actions, cellSelection) {\n      editor.on('BeforeGetContent', function (e) {\n        var multiCellContext = function (cells) {\n          e.preventDefault();\n          extractSelected(cells).each(function (elements) {\n            e.content = e.format === 'text' ? getTextContent(elements) : serializeElements(editor, elements);\n          });\n        };\n        if (e.selection === true) {\n          SelectionTypes.cata(selections.get(), noop, multiCellContext, noop);\n        }\n      });\n      editor.on('BeforeSetContent', function (e) {\n        if (e.selection === true && e.paste === true) {\n          var cellOpt = Option.from(editor.dom.getParent(editor.selection.getStart(), 'th,td'));\n          cellOpt.each(function (domCell) {\n            var cell = Element.fromDom(domCell);\n            TableLookup.table(cell).each(function (table) {\n              var elements = filter(fromHtml$1(e.content), function (content) {\n                return name(content) !== 'meta';\n              });\n              if (elements.length === 1 && name(elements[0]) === 'table') {\n                e.preventDefault();\n                var doc = Element.fromDom(editor.getDoc());\n                var generators = TableFill.paste(doc);\n                var targets = TableTargets.paste(cell, elements[0], generators);\n                actions.pasteCells(table, targets).each(function (rng) {\n                  editor.selection.setRng(rng);\n                  editor.focus();\n                  cellSelection.clear(table);\n                });\n              }\n            });\n          });\n        }\n      });\n    };\n    var Clipboard = { registerEvents: registerEvents };\n\n    function Dimension (name, getOffset) {\n      var set = function (element, h) {\n        if (!isNumber(h) && !h.match(/^[0-9]+$/)) {\n          throw new Error(name + '.set accepts only positive integer values. Value was ' + h);\n        }\n        var dom = element.dom();\n        if (isSupported(dom)) {\n          dom.style[name] = h + 'px';\n        }\n      };\n      var get = function (element) {\n        var r = getOffset(element);\n        if (r <= 0 || r === null) {\n          var css = get$1(element, name);\n          return parseFloat(css) || 0;\n        }\n        return r;\n      };\n      var getOuter = get;\n      var aggregate = function (element, properties) {\n        return foldl(properties, function (acc, property) {\n          var val = get$1(element, property);\n          var value = val === undefined ? 0 : parseInt(val, 10);\n          return isNaN(value) ? acc : acc + value;\n        }, 0);\n      };\n      var max = function (element, value, properties) {\n        var cumulativeInclusions = aggregate(element, properties);\n        var absoluteMax = value > cumulativeInclusions ? value - cumulativeInclusions : 0;\n        return absoluteMax;\n      };\n      return {\n        set: set,\n        get: get,\n        getOuter: getOuter,\n        aggregate: aggregate,\n        max: max\n      };\n    }\n\n    var api$1 = Dimension('height', function (element) {\n      var dom = element.dom();\n      return inBody(element) ? dom.getBoundingClientRect().height : dom.offsetHeight;\n    });\n    var get$3 = function (element) {\n      return api$1.get(element);\n    };\n    var getOuter = function (element) {\n      return api$1.getOuter(element);\n    };\n\n    var api$2 = Dimension('width', function (element) {\n      return element.dom().offsetWidth;\n    });\n    var get$4 = function (element) {\n      return api$2.get(element);\n    };\n    var getOuter$1 = function (element) {\n      return api$2.getOuter(element);\n    };\n\n    var platform = PlatformDetection$1.detect();\n    var needManualCalc = function () {\n      return platform.browser.isIE() || platform.browser.isEdge();\n    };\n    var toNumber = function (px, fallback) {\n      var num = parseFloat(px);\n      return isNaN(num) ? fallback : num;\n    };\n    var getProp = function (elm, name, fallback) {\n      return toNumber(get$1(elm, name), fallback);\n    };\n    var getCalculatedHeight = function (cell) {\n      var paddingTop = getProp(cell, 'padding-top', 0);\n      var paddingBottom = getProp(cell, 'padding-bottom', 0);\n      var borderTop = getProp(cell, 'border-top-width', 0);\n      var borderBottom = getProp(cell, 'border-bottom-width', 0);\n      var height = cell.dom().getBoundingClientRect().height;\n      var boxSizing = get$1(cell, 'box-sizing');\n      var borders = borderTop + borderBottom;\n      return boxSizing === 'border-box' ? height : height - paddingTop - paddingBottom - borders;\n    };\n    var getWidth = function (cell) {\n      return getProp(cell, 'width', get$4(cell));\n    };\n    var getHeight = function (cell) {\n      return needManualCalc() ? getCalculatedHeight(cell) : getProp(cell, 'height', get$3(cell));\n    };\n    var RuntimeSize = {\n      getWidth: getWidth,\n      getHeight: getHeight\n    };\n\n    var genericSizeRegex = /(\\d+(\\.\\d+)?)(\\w|%)*/;\n    var percentageBasedSizeRegex = /(\\d+(\\.\\d+)?)%/;\n    var pixelBasedSizeRegex = /(\\d+(\\.\\d+)?)px|em/;\n    var setPixelWidth = function (cell, amount) {\n      set$1(cell, 'width', amount + 'px');\n    };\n    var setPercentageWidth = function (cell, amount) {\n      set$1(cell, 'width', amount + '%');\n    };\n    var setHeight = function (cell, amount) {\n      set$1(cell, 'height', amount + 'px');\n    };\n    var getHeightValue = function (cell) {\n      return getRaw(cell, 'height').getOrThunk(function () {\n        return RuntimeSize.getHeight(cell) + 'px';\n      });\n    };\n    var convert = function (cell, number, getter, setter) {\n      var newSize = TableLookup.table(cell).map(function (table) {\n        var total = getter(table);\n        return Math.floor(number / 100 * total);\n      }).getOr(number);\n      setter(cell, newSize);\n      return newSize;\n    };\n    var normalizePixelSize = function (value, cell, getter, setter) {\n      var number = parseInt(value, 10);\n      return endsWith(value, '%') && name(cell) !== 'table' ? convert(cell, number, getter, setter) : number;\n    };\n    var getTotalHeight = function (cell) {\n      var value = getHeightValue(cell);\n      if (!value) {\n        return get$3(cell);\n      }\n      return normalizePixelSize(value, cell, get$3, setHeight);\n    };\n    var get$5 = function (cell, type, f) {\n      var v = f(cell);\n      var span = getSpan(cell, type);\n      return v / span;\n    };\n    var getSpan = function (cell, type) {\n      return has(cell, type) ? parseInt(get(cell, type), 10) : 1;\n    };\n    var getRawWidth = function (element) {\n      var cssWidth = getRaw(element, 'width');\n      return cssWidth.fold(function () {\n        return Option.from(get(element, 'width'));\n      }, function (width) {\n        return Option.some(width);\n      });\n    };\n    var normalizePercentageWidth = function (cellWidth, tableSize) {\n      return cellWidth / tableSize.pixelWidth() * 100;\n    };\n    var choosePercentageSize = function (element, width, tableSize) {\n      var percentMatch = percentageBasedSizeRegex.exec(width);\n      if (percentMatch !== null) {\n        return parseFloat(percentMatch[1]);\n      } else {\n        var intWidth = get$4(element);\n        return normalizePercentageWidth(intWidth, tableSize);\n      }\n    };\n    var getPercentageWidth = function (cell, tableSize) {\n      var width = getRawWidth(cell);\n      return width.fold(function () {\n        var intWidth = get$4(cell);\n        return normalizePercentageWidth(intWidth, tableSize);\n      }, function (w) {\n        return choosePercentageSize(cell, w, tableSize);\n      });\n    };\n    var normalizePixelWidth = function (cellWidth, tableSize) {\n      return cellWidth / 100 * tableSize.pixelWidth();\n    };\n    var choosePixelSize = function (element, width, tableSize) {\n      var pixelMatch = pixelBasedSizeRegex.exec(width);\n      if (pixelMatch !== null) {\n        return parseInt(pixelMatch[1], 10);\n      }\n      var percentMatch = percentageBasedSizeRegex.exec(width);\n      if (percentMatch !== null) {\n        var floatWidth = parseFloat(percentMatch[1]);\n        return normalizePixelWidth(floatWidth, tableSize);\n      }\n      return get$4(element);\n    };\n    var getPixelWidth = function (cell, tableSize) {\n      var width = getRawWidth(cell);\n      return width.fold(function () {\n        return get$4(cell);\n      }, function (w) {\n        return choosePixelSize(cell, w, tableSize);\n      });\n    };\n    var getHeight$1 = function (cell) {\n      return get$5(cell, 'rowspan', getTotalHeight);\n    };\n    var getGenericWidth = function (cell) {\n      var width = getRawWidth(cell);\n      return width.bind(function (w) {\n        var match = genericSizeRegex.exec(w);\n        if (match !== null) {\n          return Option.some({\n            width: constant(parseFloat(match[1])),\n            unit: constant(match[3])\n          });\n        } else {\n          return Option.none();\n        }\n      });\n    };\n    var setGenericWidth = function (cell, amount, unit) {\n      set$1(cell, 'width', amount + unit);\n    };\n    var Sizes = {\n      percentageBasedSizeRegex: constant(percentageBasedSizeRegex),\n      pixelBasedSizeRegex: constant(pixelBasedSizeRegex),\n      setPixelWidth: setPixelWidth,\n      setPercentageWidth: setPercentageWidth,\n      setHeight: setHeight,\n      getPixelWidth: getPixelWidth,\n      getPercentageWidth: getPercentageWidth,\n      getGenericWidth: getGenericWidth,\n      setGenericWidth: setGenericWidth,\n      getHeight: getHeight$1,\n      getRawWidth: getRawWidth\n    };\n\n    var halve = function (main, other) {\n      var width = Sizes.getGenericWidth(main);\n      width.each(function (w) {\n        var newWidth = w.width() / 2;\n        Sizes.setGenericWidth(main, newWidth, w.unit());\n        Sizes.setGenericWidth(other, newWidth, w.unit());\n      });\n    };\n    var CellMutations = { halve: halve };\n\n    var r = function (left, top) {\n      var translate = function (x, y) {\n        return r(left + x, top + y);\n      };\n      return {\n        left: constant(left),\n        top: constant(top),\n        translate: translate\n      };\n    };\n    var Position = r;\n\n    var boxPosition = function (dom) {\n      var box = dom.getBoundingClientRect();\n      return Position(box.left, box.top);\n    };\n    var firstDefinedOrZero = function (a, b) {\n      return a !== undefined ? a : b !== undefined ? b : 0;\n    };\n    var absolute = function (element) {\n      var doc = element.dom().ownerDocument;\n      var body = doc.body;\n      var win = doc.defaultView;\n      var html = doc.documentElement;\n      var scrollTop = firstDefinedOrZero(win.pageYOffset, html.scrollTop);\n      var scrollLeft = firstDefinedOrZero(win.pageXOffset, html.scrollLeft);\n      var clientTop = firstDefinedOrZero(html.clientTop, body.clientTop);\n      var clientLeft = firstDefinedOrZero(html.clientLeft, body.clientLeft);\n      return viewport(element).translate(scrollLeft - clientLeft, scrollTop - clientTop);\n    };\n    var viewport = function (element) {\n      var dom = element.dom();\n      var doc = dom.ownerDocument;\n      var body = doc.body;\n      if (body === dom) {\n        return Position(body.offsetLeft, body.offsetTop);\n      }\n      if (!inBody(element)) {\n        return Position(0, 0);\n      }\n      return boxPosition(dom);\n    };\n\n    var rowInfo = Immutable('row', 'y');\n    var colInfo = Immutable('col', 'x');\n    var rtlEdge = function (cell) {\n      var pos = absolute(cell);\n      return pos.left() + getOuter$1(cell);\n    };\n    var ltrEdge = function (cell) {\n      return absolute(cell).left();\n    };\n    var getLeftEdge = function (index, cell) {\n      return colInfo(index, ltrEdge(cell));\n    };\n    var getRightEdge = function (index, cell) {\n      return colInfo(index, rtlEdge(cell));\n    };\n    var getTop = function (cell) {\n      return absolute(cell).top();\n    };\n    var getTopEdge = function (index, cell) {\n      return rowInfo(index, getTop(cell));\n    };\n    var getBottomEdge = function (index, cell) {\n      return rowInfo(index, getTop(cell) + getOuter(cell));\n    };\n    var findPositions = function (getInnerEdge, getOuterEdge, array) {\n      if (array.length === 0) {\n        return [];\n      }\n      var lines = map(array.slice(1), function (cellOption, index) {\n        return cellOption.map(function (cell) {\n          return getInnerEdge(index, cell);\n        });\n      });\n      var lastLine = array[array.length - 1].map(function (cell) {\n        return getOuterEdge(array.length - 1, cell);\n      });\n      return lines.concat([lastLine]);\n    };\n    var negate = function (step) {\n      return -step;\n    };\n    var height = {\n      delta: identity,\n      positions: function (optElements) {\n        return findPositions(getTopEdge, getBottomEdge, optElements);\n      },\n      edge: getTop\n    };\n    var ltr = {\n      delta: identity,\n      edge: ltrEdge,\n      positions: function (optElements) {\n        return findPositions(getLeftEdge, getRightEdge, optElements);\n      }\n    };\n    var rtl = {\n      delta: negate,\n      edge: rtlEdge,\n      positions: function (optElements) {\n        return findPositions(getRightEdge, getLeftEdge, optElements);\n      }\n    };\n    var BarPositions = {\n      height: height,\n      rtl: rtl,\n      ltr: ltr\n    };\n\n    var ResizeDirection = {\n      ltr: BarPositions.ltr,\n      rtl: BarPositions.rtl\n    };\n\n    function TableDirection (directionAt) {\n      var auto = function (table) {\n        return directionAt(table).isRtl() ? ResizeDirection.rtl : ResizeDirection.ltr;\n      };\n      var delta = function (amount, table) {\n        return auto(table).delta(amount, table);\n      };\n      var positions = function (cols, table) {\n        return auto(table).positions(cols, table);\n      };\n      var edge = function (cell) {\n        return auto(cell).edge(cell);\n      };\n      return {\n        delta: delta,\n        edge: edge,\n        positions: positions\n      };\n    }\n\n    var getGridSize = function (table) {\n      var input = DetailsList.fromTable(table);\n      var warehouse = Warehouse.generate(input);\n      return warehouse.grid();\n    };\n    var TableGridSize = { getGridSize: getGridSize };\n\n    var __assign = function () {\n      __assign = Object.assign || function __assign(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n              t[p] = s[p];\n        }\n        return t;\n      };\n      return __assign.apply(this, arguments);\n    };\n\n    var cat = function (arr) {\n      var r = [];\n      var push = function (x) {\n        r.push(x);\n      };\n      for (var i = 0; i < arr.length; i++) {\n        arr[i].each(push);\n      }\n      return r;\n    };\n    var findMap = function (arr, f) {\n      for (var i = 0; i < arr.length; i++) {\n        var r = f(arr[i], i);\n        if (r.isSome()) {\n          return r;\n        }\n      }\n      return Option.none();\n    };\n\n    var setIfNot = function (element, property, value, ignore) {\n      if (value === ignore) {\n        remove(element, property);\n      } else {\n        set(element, property, value);\n      }\n    };\n    var render = function (table, grid) {\n      var newRows = [];\n      var newCells = [];\n      var renderSection = function (gridSection, sectionName) {\n        var section = child$2(table, sectionName).getOrThunk(function () {\n          var tb = Element.fromTag(sectionName, owner(table).dom());\n          append(table, tb);\n          return tb;\n        });\n        empty(section);\n        var rows = map(gridSection, function (row) {\n          if (row.isNew()) {\n            newRows.push(row.element());\n          }\n          var tr = row.element();\n          empty(tr);\n          each(row.cells(), function (cell) {\n            if (cell.isNew()) {\n              newCells.push(cell.element());\n            }\n            setIfNot(cell.element(), 'colspan', cell.colspan(), 1);\n            setIfNot(cell.element(), 'rowspan', cell.rowspan(), 1);\n            append(tr, cell.element());\n          });\n          return tr;\n        });\n        append$1(section, rows);\n      };\n      var removeSection = function (sectionName) {\n        child$2(table, sectionName).each(remove$2);\n      };\n      var renderOrRemoveSection = function (gridSection, sectionName) {\n        if (gridSection.length > 0) {\n          renderSection(gridSection, sectionName);\n        } else {\n          removeSection(sectionName);\n        }\n      };\n      var headSection = [];\n      var bodySection = [];\n      var footSection = [];\n      each(grid, function (row) {\n        switch (row.section()) {\n        case 'thead':\n          headSection.push(row);\n          break;\n        case 'tbody':\n          bodySection.push(row);\n          break;\n        case 'tfoot':\n          footSection.push(row);\n          break;\n        }\n      });\n      renderOrRemoveSection(headSection, 'thead');\n      renderOrRemoveSection(bodySection, 'tbody');\n      renderOrRemoveSection(footSection, 'tfoot');\n      return {\n        newRows: constant(newRows),\n        newCells: constant(newCells)\n      };\n    };\n    var copy$2 = function (grid) {\n      var rows = map(grid, function (row) {\n        var tr = shallow(row.element());\n        each(row.cells(), function (cell) {\n          var clonedCell = deep(cell.element());\n          setIfNot(clonedCell, 'colspan', cell.colspan(), 1);\n          setIfNot(clonedCell, 'rowspan', cell.rowspan(), 1);\n          append(tr, clonedCell);\n        });\n        return tr;\n      });\n      return rows;\n    };\n    var Redraw = {\n      render: render,\n      copy: copy$2\n    };\n\n    var read = function (element, attr) {\n      var value = get(element, attr);\n      return value === undefined || value === '' ? [] : value.split(' ');\n    };\n    var add = function (element, attr, id) {\n      var old = read(element, attr);\n      var nu = old.concat([id]);\n      set(element, attr, nu.join(' '));\n      return true;\n    };\n    var remove$3 = function (element, attr, id) {\n      var nu = filter(read(element, attr), function (v) {\n        return v !== id;\n      });\n      if (nu.length > 0) {\n        set(element, attr, nu.join(' '));\n      } else {\n        remove(element, attr);\n      }\n      return false;\n    };\n\n    var supports = function (element) {\n      return element.dom().classList !== undefined;\n    };\n    var get$6 = function (element) {\n      return read(element, 'class');\n    };\n    var add$1 = function (element, clazz) {\n      return add(element, 'class', clazz);\n    };\n    var remove$4 = function (element, clazz) {\n      return remove$3(element, 'class', clazz);\n    };\n\n    var add$2 = function (element, clazz) {\n      if (supports(element)) {\n        element.dom().classList.add(clazz);\n      } else {\n        add$1(element, clazz);\n      }\n    };\n    var cleanClass = function (element) {\n      var classList = supports(element) ? element.dom().classList : get$6(element);\n      if (classList.length === 0) {\n        remove(element, 'class');\n      }\n    };\n    var remove$5 = function (element, clazz) {\n      if (supports(element)) {\n        var classList = element.dom().classList;\n        classList.remove(clazz);\n      } else {\n        remove$4(element, clazz);\n      }\n      cleanClass(element);\n    };\n    var has$1 = function (element, clazz) {\n      return supports(element) && element.dom().classList.contains(clazz);\n    };\n\n    var repeat = function (repititions, f) {\n      var r = [];\n      for (var i = 0; i < repititions; i++) {\n        r.push(f(i));\n      }\n      return r;\n    };\n    var range = function (start, end) {\n      var r = [];\n      for (var i = start; i < end; i++) {\n        r.push(i);\n      }\n      return r;\n    };\n    var deduce = function (xs, index) {\n      if (index < 0 || index >= xs.length - 1) {\n        return Option.none();\n      }\n      var current = xs[index].fold(function () {\n        var rest = reverse(xs.slice(0, index));\n        return findMap(rest, function (a, i) {\n          return a.map(function (aa) {\n            return {\n              value: aa,\n              delta: i + 1\n            };\n          });\n        });\n      }, function (c) {\n        return Option.some({\n          value: c,\n          delta: 0\n        });\n      });\n      var next = xs[index + 1].fold(function () {\n        var rest = xs.slice(index + 1);\n        return findMap(rest, function (a, i) {\n          return a.map(function (aa) {\n            return {\n              value: aa,\n              delta: i + 1\n            };\n          });\n        });\n      }, function (n) {\n        return Option.some({\n          value: n,\n          delta: 1\n        });\n      });\n      return current.bind(function (c) {\n        return next.map(function (n) {\n          var extras = n.delta + c.delta;\n          return Math.abs(n.value - c.value) / extras;\n        });\n      });\n    };\n\n    var columns = function (warehouse) {\n      var grid = warehouse.grid();\n      var cols = range(0, grid.columns());\n      var rowsArr = range(0, grid.rows());\n      return map(cols, function (col) {\n        var getBlock = function () {\n          return bind(rowsArr, function (r) {\n            return Warehouse.getAt(warehouse, r, col).filter(function (detail) {\n              return detail.column() === col;\n            }).fold(constant([]), function (detail) {\n              return [detail];\n            });\n          });\n        };\n        var isSingle = function (detail) {\n          return detail.colspan() === 1;\n        };\n        var getFallback = function () {\n          return Warehouse.getAt(warehouse, 0, col);\n        };\n        return decide(getBlock, isSingle, getFallback);\n      });\n    };\n    var decide = function (getBlock, isSingle, getFallback) {\n      var inBlock = getBlock();\n      var singleInBlock = find(inBlock, isSingle);\n      var detailOption = singleInBlock.orThunk(function () {\n        return Option.from(inBlock[0]).orThunk(getFallback);\n      });\n      return detailOption.map(function (detail) {\n        return detail.element();\n      });\n    };\n    var rows$1 = function (warehouse) {\n      var grid = warehouse.grid();\n      var rowsArr = range(0, grid.rows());\n      var cols = range(0, grid.columns());\n      return map(rowsArr, function (row) {\n        var getBlock = function () {\n          return bind(cols, function (c) {\n            return Warehouse.getAt(warehouse, row, c).filter(function (detail) {\n              return detail.row() === row;\n            }).fold(constant([]), function (detail) {\n              return [detail];\n            });\n          });\n        };\n        var isSingle = function (detail) {\n          return detail.rowspan() === 1;\n        };\n        var getFallback = function () {\n          return Warehouse.getAt(warehouse, row, 0);\n        };\n        return decide(getBlock, isSingle, getFallback);\n      });\n    };\n    var Blocks = {\n      columns: columns,\n      rows: rows$1\n    };\n\n    var css = function (namespace) {\n      var dashNamespace = namespace.replace(/\\./g, '-');\n      var resolve = function (str) {\n        return dashNamespace + '-' + str;\n      };\n      return { resolve: resolve };\n    };\n\n    var styles = css('ephox-snooker');\n    var Styles = { resolve: styles.resolve };\n\n    var col = function (column, x, y, w, h) {\n      var blocker = Element.fromTag('div');\n      setAll$1(blocker, {\n        position: 'absolute',\n        left: x - w / 2 + 'px',\n        top: y + 'px',\n        height: h + 'px',\n        width: w + 'px'\n      });\n      setAll(blocker, {\n        'data-column': column,\n        'role': 'presentation'\n      });\n      return blocker;\n    };\n    var row$1 = function (r, x, y, w, h) {\n      var blocker = Element.fromTag('div');\n      setAll$1(blocker, {\n        position: 'absolute',\n        left: x + 'px',\n        top: y - h / 2 + 'px',\n        height: h + 'px',\n        width: w + 'px'\n      });\n      setAll(blocker, {\n        'data-row': r,\n        'role': 'presentation'\n      });\n      return blocker;\n    };\n    var Bar = {\n      col: col,\n      row: row$1\n    };\n\n    var resizeBar = Styles.resolve('resizer-bar');\n    var resizeRowBar = Styles.resolve('resizer-rows');\n    var resizeColBar = Styles.resolve('resizer-cols');\n    var BAR_THICKNESS = 7;\n    var destroy = function (wire) {\n      var previous = descendants$1(wire.parent(), '.' + resizeBar);\n      each(previous, remove$2);\n    };\n    var drawBar = function (wire, positions, create) {\n      var origin = wire.origin();\n      each(positions, function (cpOption, i) {\n        cpOption.each(function (cp) {\n          var bar = create(origin, cp);\n          add$2(bar, resizeBar);\n          append(wire.parent(), bar);\n        });\n      });\n    };\n    var refreshCol = function (wire, colPositions, position, tableHeight) {\n      drawBar(wire, colPositions, function (origin, cp) {\n        var colBar = Bar.col(cp.col(), cp.x() - origin.left(), position.top() - origin.top(), BAR_THICKNESS, tableHeight);\n        add$2(colBar, resizeColBar);\n        return colBar;\n      });\n    };\n    var refreshRow = function (wire, rowPositions, position, tableWidth) {\n      drawBar(wire, rowPositions, function (origin, cp) {\n        var rowBar = Bar.row(cp.row(), position.left() - origin.left(), cp.y() - origin.top(), tableWidth, BAR_THICKNESS);\n        add$2(rowBar, resizeRowBar);\n        return rowBar;\n      });\n    };\n    var refreshGrid = function (wire, table, rows, cols, hdirection, vdirection) {\n      var position = absolute(table);\n      var rowPositions = rows.length > 0 ? hdirection.positions(rows, table) : [];\n      refreshRow(wire, rowPositions, position, getOuter$1(table));\n      var colPositions = cols.length > 0 ? vdirection.positions(cols, table) : [];\n      refreshCol(wire, colPositions, position, getOuter(table));\n    };\n    var refresh = function (wire, table, hdirection, vdirection) {\n      destroy(wire);\n      var list = DetailsList.fromTable(table);\n      var warehouse = Warehouse.generate(list);\n      var rows = Blocks.rows(warehouse);\n      var cols = Blocks.columns(warehouse);\n      refreshGrid(wire, table, rows, cols, hdirection, vdirection);\n    };\n    var each$2 = function (wire, f) {\n      var bars = descendants$1(wire.parent(), '.' + resizeBar);\n      each(bars, f);\n    };\n    var hide = function (wire) {\n      each$2(wire, function (bar) {\n        set$1(bar, 'display', 'none');\n      });\n    };\n    var show = function (wire) {\n      each$2(wire, function (bar) {\n        set$1(bar, 'display', 'block');\n      });\n    };\n    var isRowBar = function (element) {\n      return has$1(element, resizeRowBar);\n    };\n    var isColBar = function (element) {\n      return has$1(element, resizeColBar);\n    };\n    var Bars = {\n      refresh: refresh,\n      hide: hide,\n      show: show,\n      destroy: destroy,\n      isRowBar: isRowBar,\n      isColBar: isColBar\n    };\n\n    var addCell = function (gridRow, index, cell) {\n      var cells = gridRow.cells();\n      var before = cells.slice(0, index);\n      var after = cells.slice(index);\n      var newCells = before.concat([cell]).concat(after);\n      return setCells(gridRow, newCells);\n    };\n    var mutateCell = function (gridRow, index, cell) {\n      var cells = gridRow.cells();\n      cells[index] = cell;\n    };\n    var setCells = function (gridRow, cells) {\n      return rowcells(cells, gridRow.section());\n    };\n    var mapCells = function (gridRow, f) {\n      var cells = gridRow.cells();\n      var r = map(cells, f);\n      return rowcells(r, gridRow.section());\n    };\n    var getCell = function (gridRow, index) {\n      return gridRow.cells()[index];\n    };\n    var getCellElement = function (gridRow, index) {\n      return getCell(gridRow, index).element();\n    };\n    var cellLength = function (gridRow) {\n      return gridRow.cells().length;\n    };\n    var GridRow = {\n      addCell: addCell,\n      setCells: setCells,\n      mutateCell: mutateCell,\n      getCell: getCell,\n      getCellElement: getCellElement,\n      mapCells: mapCells,\n      cellLength: cellLength\n    };\n\n    var getColumn = function (grid, index) {\n      return map(grid, function (row) {\n        return GridRow.getCell(row, index);\n      });\n    };\n    var getRow = function (grid, index) {\n      return grid[index];\n    };\n    var findDiff = function (xs, comp) {\n      if (xs.length === 0) {\n        return 0;\n      }\n      var first = xs[0];\n      var index = findIndex(xs, function (x) {\n        return !comp(first.element(), x.element());\n      });\n      return index.fold(function () {\n        return xs.length;\n      }, function (ind) {\n        return ind;\n      });\n    };\n    var subgrid = function (grid, row, column, comparator) {\n      var restOfRow = getRow(grid, row).cells().slice(column);\n      var endColIndex = findDiff(restOfRow, comparator);\n      var restOfColumn = getColumn(grid, column).slice(row);\n      var endRowIndex = findDiff(restOfColumn, comparator);\n      return {\n        colspan: constant(endColIndex),\n        rowspan: constant(endRowIndex)\n      };\n    };\n    var TableGrid = { subgrid: subgrid };\n\n    var toDetails = function (grid, comparator) {\n      var seen = map(grid, function (row, ri) {\n        return map(row.cells(), function (col, ci) {\n          return false;\n        });\n      });\n      var updateSeen = function (ri, ci, rowspan, colspan) {\n        for (var r = ri; r < ri + rowspan; r++) {\n          for (var c = ci; c < ci + colspan; c++) {\n            seen[r][c] = true;\n          }\n        }\n      };\n      return map(grid, function (row, ri) {\n        var details = bind(row.cells(), function (cell, ci) {\n          if (seen[ri][ci] === false) {\n            var result = TableGrid.subgrid(grid, ri, ci, comparator);\n            updateSeen(ri, ci, result.rowspan(), result.colspan());\n            return [detailnew(cell.element(), result.rowspan(), result.colspan(), cell.isNew())];\n          } else {\n            return [];\n          }\n        });\n        return rowdetails(details, row.section());\n      });\n    };\n    var toGrid = function (warehouse, generators, isNew) {\n      var grid = [];\n      for (var i = 0; i < warehouse.grid().rows(); i++) {\n        var rowCells = [];\n        for (var j = 0; j < warehouse.grid().columns(); j++) {\n          var element = Warehouse.getAt(warehouse, i, j).map(function (item) {\n            return elementnew(item.element(), isNew);\n          }).getOrThunk(function () {\n            return elementnew(generators.gap(), true);\n          });\n          rowCells.push(element);\n        }\n        var row = rowcells(rowCells, warehouse.all()[i].section());\n        grid.push(row);\n      }\n      return grid;\n    };\n    var Transitions = {\n      toDetails: toDetails,\n      toGrid: toGrid\n    };\n\n    var fromWarehouse = function (warehouse, generators) {\n      return Transitions.toGrid(warehouse, generators, false);\n    };\n    var deriveRows = function (rendered, generators) {\n      var findRow = function (details) {\n        var rowOfCells = findMap(details, function (detail) {\n          return parent(detail.element()).map(function (row) {\n            var isNew = parent(row).isNone();\n            return elementnew(row, isNew);\n          });\n        });\n        return rowOfCells.getOrThunk(function () {\n          return elementnew(generators.row(), true);\n        });\n      };\n      return map(rendered, function (details) {\n        var row = findRow(details.details());\n        return rowdatanew(row.element(), details.details(), details.section(), row.isNew());\n      });\n    };\n    var toDetailList = function (grid, generators) {\n      var rendered = Transitions.toDetails(grid, eq);\n      return deriveRows(rendered, generators);\n    };\n    var findInWarehouse = function (warehouse, element) {\n      var all = flatten(map(warehouse.all(), function (r) {\n        return r.cells();\n      }));\n      return find(all, function (e) {\n        return eq(element, e.element());\n      });\n    };\n    var run = function (operation, extract, adjustment, postAction, genWrappers) {\n      return function (wire, table, target, generators, direction) {\n        var input = DetailsList.fromTable(table);\n        var warehouse = Warehouse.generate(input);\n        var output = extract(warehouse, target).map(function (info) {\n          var model = fromWarehouse(warehouse, generators);\n          var result = operation(model, info, eq, genWrappers(generators));\n          var grid = toDetailList(result.grid(), generators);\n          return {\n            grid: constant(grid),\n            cursor: result.cursor\n          };\n        });\n        return output.fold(function () {\n          return Option.none();\n        }, function (out) {\n          var newElements = Redraw.render(table, out.grid());\n          adjustment(table, out.grid(), direction);\n          postAction(table);\n          Bars.refresh(wire, table, BarPositions.height, direction);\n          return Option.some({\n            cursor: out.cursor,\n            newRows: newElements.newRows,\n            newCells: newElements.newCells\n          });\n        });\n      };\n    };\n    var onCell = function (warehouse, target) {\n      return TableLookup.cell(target.element()).bind(function (cell) {\n        return findInWarehouse(warehouse, cell);\n      });\n    };\n    var onPaste = function (warehouse, target) {\n      return TableLookup.cell(target.element()).bind(function (cell) {\n        return findInWarehouse(warehouse, cell).map(function (details) {\n          var value = __assign(__assign({}, details), {\n            generators: target.generators,\n            clipboard: target.clipboard\n          });\n          return value;\n        });\n      });\n    };\n    var onPasteRows = function (warehouse, target) {\n      var details = map(target.selection(), function (cell) {\n        return TableLookup.cell(cell).bind(function (lc) {\n          return findInWarehouse(warehouse, lc);\n        });\n      });\n      var cells = cat(details);\n      return cells.length > 0 ? Option.some({\n        cells: cells,\n        generators: target.generators,\n        clipboard: target.clipboard\n      }) : Option.none();\n    };\n    var onMergable = function (_warehouse, target) {\n      return target.mergable();\n    };\n    var onUnmergable = function (_warehouse, target) {\n      return target.unmergable();\n    };\n    var onCells = function (warehouse, target) {\n      var details = map(target.selection(), function (cell) {\n        return TableLookup.cell(cell).bind(function (lc) {\n          return findInWarehouse(warehouse, lc);\n        });\n      });\n      var cells = cat(details);\n      return cells.length > 0 ? Option.some(cells) : Option.none();\n    };\n\n    var value = function (o) {\n      var is = function (v) {\n        return o === v;\n      };\n      var or = function (opt) {\n        return value(o);\n      };\n      var orThunk = function (f) {\n        return value(o);\n      };\n      var map = function (f) {\n        return value(f(o));\n      };\n      var mapError = function (f) {\n        return value(o);\n      };\n      var each = function (f) {\n        f(o);\n      };\n      var bind = function (f) {\n        return f(o);\n      };\n      var fold = function (_, onValue) {\n        return onValue(o);\n      };\n      var exists = function (f) {\n        return f(o);\n      };\n      var forall = function (f) {\n        return f(o);\n      };\n      var toOption = function () {\n        return Option.some(o);\n      };\n      return {\n        is: is,\n        isValue: always,\n        isError: never,\n        getOr: constant(o),\n        getOrThunk: constant(o),\n        getOrDie: constant(o),\n        or: or,\n        orThunk: orThunk,\n        fold: fold,\n        map: map,\n        mapError: mapError,\n        each: each,\n        bind: bind,\n        exists: exists,\n        forall: forall,\n        toOption: toOption\n      };\n    };\n    var error = function (message) {\n      var getOrThunk = function (f) {\n        return f();\n      };\n      var getOrDie = function () {\n        return die(String(message))();\n      };\n      var or = function (opt) {\n        return opt;\n      };\n      var orThunk = function (f) {\n        return f();\n      };\n      var map = function (f) {\n        return error(message);\n      };\n      var mapError = function (f) {\n        return error(f(message));\n      };\n      var bind = function (f) {\n        return error(message);\n      };\n      var fold = function (onError, _) {\n        return onError(message);\n      };\n      return {\n        is: never,\n        isValue: never,\n        isError: always,\n        getOr: identity,\n        getOrThunk: getOrThunk,\n        getOrDie: getOrDie,\n        or: or,\n        orThunk: orThunk,\n        fold: fold,\n        map: map,\n        mapError: mapError,\n        each: noop,\n        bind: bind,\n        exists: never,\n        forall: always,\n        toOption: Option.none\n      };\n    };\n    var fromOption = function (opt, err) {\n      return opt.fold(function () {\n        return error(err);\n      }, value);\n    };\n    var Result = {\n      value: value,\n      error: error,\n      fromOption: fromOption\n    };\n\n    var measure = function (startAddress, gridA, gridB) {\n      if (startAddress.row() >= gridA.length || startAddress.column() > GridRow.cellLength(gridA[0])) {\n        return Result.error('invalid start address out of table bounds, row: ' + startAddress.row() + ', column: ' + startAddress.column());\n      }\n      var rowRemainder = gridA.slice(startAddress.row());\n      var colRemainder = rowRemainder[0].cells().slice(startAddress.column());\n      var colRequired = GridRow.cellLength(gridB[0]);\n      var rowRequired = gridB.length;\n      return Result.value({\n        rowDelta: constant(rowRemainder.length - rowRequired),\n        colDelta: constant(colRemainder.length - colRequired)\n      });\n    };\n    var measureWidth = function (gridA, gridB) {\n      var colLengthA = GridRow.cellLength(gridA[0]);\n      var colLengthB = GridRow.cellLength(gridB[0]);\n      return {\n        rowDelta: constant(0),\n        colDelta: constant(colLengthA - colLengthB)\n      };\n    };\n    var fill = function (cells, generator) {\n      return map(cells, function () {\n        return elementnew(generator.cell(), true);\n      });\n    };\n    var rowFill = function (grid, amount, generator) {\n      return grid.concat(repeat(amount, function (_row) {\n        return GridRow.setCells(grid[grid.length - 1], fill(grid[grid.length - 1].cells(), generator));\n      }));\n    };\n    var colFill = function (grid, amount, generator) {\n      return map(grid, function (row) {\n        return GridRow.setCells(row, row.cells().concat(fill(range(0, amount), generator)));\n      });\n    };\n    var tailor = function (gridA, delta, generator) {\n      var fillCols = delta.colDelta() < 0 ? colFill : identity;\n      var fillRows = delta.rowDelta() < 0 ? rowFill : identity;\n      var modifiedCols = fillCols(gridA, Math.abs(delta.colDelta()), generator);\n      var tailoredGrid = fillRows(modifiedCols, Math.abs(delta.rowDelta()), generator);\n      return tailoredGrid;\n    };\n    var Fitment = {\n      measure: measure,\n      measureWidth: measureWidth,\n      tailor: tailor\n    };\n\n    var merge = function (grid, bounds, comparator, substitution) {\n      if (grid.length === 0) {\n        return grid;\n      }\n      for (var i = bounds.startRow(); i <= bounds.finishRow(); i++) {\n        for (var j = bounds.startCol(); j <= bounds.finishCol(); j++) {\n          GridRow.mutateCell(grid[i], j, elementnew(substitution(), false));\n        }\n      }\n      return grid;\n    };\n    var unmerge = function (grid, target, comparator, substitution) {\n      var first = true;\n      for (var i = 0; i < grid.length; i++) {\n        for (var j = 0; j < GridRow.cellLength(grid[0]); j++) {\n          var current = GridRow.getCellElement(grid[i], j);\n          var isToReplace = comparator(current, target);\n          if (isToReplace === true && first === false) {\n            GridRow.mutateCell(grid[i], j, elementnew(substitution(), true));\n          } else if (isToReplace === true) {\n            first = false;\n          }\n        }\n      }\n      return grid;\n    };\n    var uniqueCells = function (row, comparator) {\n      return foldl(row, function (rest, cell) {\n        return exists(rest, function (currentCell) {\n          return comparator(currentCell.element(), cell.element());\n        }) ? rest : rest.concat([cell]);\n      }, []);\n    };\n    var splitRows = function (grid, index, comparator, substitution) {\n      if (index > 0 && index < grid.length) {\n        var rowPrevCells = grid[index - 1].cells();\n        var cells = uniqueCells(rowPrevCells, comparator);\n        each(cells, function (cell) {\n          var replacement = Option.none();\n          var _loop_1 = function (i) {\n            var _loop_2 = function (j) {\n              var current = grid[i].cells()[j];\n              var isToReplace = comparator(current.element(), cell.element());\n              if (isToReplace) {\n                if (replacement.isNone()) {\n                  replacement = Option.some(substitution());\n                }\n                replacement.each(function (sub) {\n                  GridRow.mutateCell(grid[i], j, elementnew(sub, true));\n                });\n              }\n            };\n            for (var j = 0; j < GridRow.cellLength(grid[0]); j++) {\n              _loop_2(j);\n            }\n          };\n          for (var i = index; i < grid.length; i++) {\n            _loop_1(i);\n          }\n        });\n      }\n      return grid;\n    };\n    var MergingOperations = {\n      merge: merge,\n      unmerge: unmerge,\n      splitRows: splitRows\n    };\n\n    var isSpanning = function (grid, row, col, comparator) {\n      var candidate = GridRow.getCell(grid[row], col);\n      var matching = curry(comparator, candidate.element());\n      var currentRow = grid[row];\n      return grid.length > 1 && GridRow.cellLength(currentRow) > 1 && (col > 0 && matching(GridRow.getCellElement(currentRow, col - 1)) || col < currentRow.cells().length - 1 && matching(GridRow.getCellElement(currentRow, col + 1)) || row > 0 && matching(GridRow.getCellElement(grid[row - 1], col)) || row < grid.length - 1 && matching(GridRow.getCellElement(grid[row + 1], col)));\n    };\n    var mergeTables = function (startAddress, gridA, gridB, generator, comparator) {\n      var startRow = startAddress.row();\n      var startCol = startAddress.column();\n      var mergeHeight = gridB.length;\n      var mergeWidth = GridRow.cellLength(gridB[0]);\n      var endRow = startRow + mergeHeight;\n      var endCol = startCol + mergeWidth;\n      for (var r = startRow; r < endRow; r++) {\n        for (var c = startCol; c < endCol; c++) {\n          if (isSpanning(gridA, r, c, comparator)) {\n            MergingOperations.unmerge(gridA, GridRow.getCellElement(gridA[r], c), comparator, generator.cell);\n          }\n          var newCell = GridRow.getCellElement(gridB[r - startRow], c - startCol);\n          var replacement = generator.replace(newCell);\n          GridRow.mutateCell(gridA[r], c, elementnew(replacement, true));\n        }\n      }\n      return gridA;\n    };\n    var merge$1 = function (startAddress, gridA, gridB, generator, comparator) {\n      var result = Fitment.measure(startAddress, gridA, gridB);\n      return result.map(function (delta) {\n        var fittedGrid = Fitment.tailor(gridA, delta, generator);\n        return mergeTables(startAddress, fittedGrid, gridB, generator, comparator);\n      });\n    };\n    var insert = function (index, gridA, gridB, generator, comparator) {\n      MergingOperations.splitRows(gridA, index, comparator, generator.cell);\n      var delta = Fitment.measureWidth(gridB, gridA);\n      var fittedNewGrid = Fitment.tailor(gridB, delta, generator);\n      var secondDelta = Fitment.measureWidth(gridA, fittedNewGrid);\n      var fittedOldGrid = Fitment.tailor(gridA, secondDelta, generator);\n      return fittedOldGrid.slice(0, index).concat(fittedNewGrid).concat(fittedOldGrid.slice(index, fittedOldGrid.length));\n    };\n    var TableMerge = {\n      merge: merge$1,\n      insert: insert\n    };\n\n    var insertRowAt = function (grid, index, example, comparator, substitution) {\n      var before = grid.slice(0, index);\n      var after = grid.slice(index);\n      var between = GridRow.mapCells(grid[example], function (ex, c) {\n        var withinSpan = index > 0 && index < grid.length && comparator(GridRow.getCellElement(grid[index - 1], c), GridRow.getCellElement(grid[index], c));\n        var ret = withinSpan ? GridRow.getCell(grid[index], c) : elementnew(substitution(ex.element(), comparator), true);\n        return ret;\n      });\n      return before.concat([between]).concat(after);\n    };\n    var insertColumnAt = function (grid, index, example, comparator, substitution) {\n      return map(grid, function (row) {\n        var withinSpan = index > 0 && index < GridRow.cellLength(row) && comparator(GridRow.getCellElement(row, index - 1), GridRow.getCellElement(row, index));\n        var sub = withinSpan ? GridRow.getCell(row, index) : elementnew(substitution(GridRow.getCellElement(row, example), comparator), true);\n        return GridRow.addCell(row, index, sub);\n      });\n    };\n    var splitCellIntoColumns = function (grid, exampleRow, exampleCol, comparator, substitution) {\n      var index = exampleCol + 1;\n      return map(grid, function (row, i) {\n        var isTargetCell = i === exampleRow;\n        var sub = isTargetCell ? elementnew(substitution(GridRow.getCellElement(row, exampleCol), comparator), true) : GridRow.getCell(row, exampleCol);\n        return GridRow.addCell(row, index, sub);\n      });\n    };\n    var splitCellIntoRows = function (grid, exampleRow, exampleCol, comparator, substitution) {\n      var index = exampleRow + 1;\n      var before = grid.slice(0, index);\n      var after = grid.slice(index);\n      var between = GridRow.mapCells(grid[exampleRow], function (ex, i) {\n        var isTargetCell = i === exampleCol;\n        return isTargetCell ? elementnew(substitution(ex.element(), comparator), true) : ex;\n      });\n      return before.concat([between]).concat(after);\n    };\n    var deleteColumnsAt = function (grid, start, finish) {\n      var rows = map(grid, function (row) {\n        var cells = row.cells().slice(0, start).concat(row.cells().slice(finish + 1));\n        return rowcells(cells, row.section());\n      });\n      return filter(rows, function (row) {\n        return row.cells().length > 0;\n      });\n    };\n    var deleteRowsAt = function (grid, start, finish) {\n      return grid.slice(0, start).concat(grid.slice(finish + 1));\n    };\n    var ModificationOperations = {\n      insertRowAt: insertRowAt,\n      insertColumnAt: insertColumnAt,\n      splitCellIntoColumns: splitCellIntoColumns,\n      splitCellIntoRows: splitCellIntoRows,\n      deleteRowsAt: deleteRowsAt,\n      deleteColumnsAt: deleteColumnsAt\n    };\n\n    var replaceIn = function (grid, targets, comparator, substitution) {\n      var isTarget = function (cell) {\n        return exists(targets, function (target) {\n          return comparator(cell.element(), target.element());\n        });\n      };\n      return map(grid, function (row) {\n        return GridRow.mapCells(row, function (cell) {\n          return isTarget(cell) ? elementnew(substitution(cell.element(), comparator), true) : cell;\n        });\n      });\n    };\n    var notStartRow = function (grid, rowIndex, colIndex, comparator) {\n      return GridRow.getCellElement(grid[rowIndex], colIndex) !== undefined && (rowIndex > 0 && comparator(GridRow.getCellElement(grid[rowIndex - 1], colIndex), GridRow.getCellElement(grid[rowIndex], colIndex)));\n    };\n    var notStartColumn = function (row, index, comparator) {\n      return index > 0 && comparator(GridRow.getCellElement(row, index - 1), GridRow.getCellElement(row, index));\n    };\n    var replaceColumn = function (grid, index, comparator, substitution) {\n      var targets = bind(grid, function (row, i) {\n        var alreadyAdded = notStartRow(grid, i, index, comparator) || notStartColumn(row, index, comparator);\n        return alreadyAdded ? [] : [GridRow.getCell(row, index)];\n      });\n      return replaceIn(grid, targets, comparator, substitution);\n    };\n    var replaceRow = function (grid, index, comparator, substitution) {\n      var targetRow = grid[index];\n      var targets = bind(targetRow.cells(), function (item, i) {\n        var alreadyAdded = notStartRow(grid, index, i, comparator) || notStartColumn(targetRow, i, comparator);\n        return alreadyAdded ? [] : [item];\n      });\n      return replaceIn(grid, targets, comparator, substitution);\n    };\n    var TransformOperations = {\n      replaceColumn: replaceColumn,\n      replaceRow: replaceRow\n    };\n\n    var adt = Adt.generate([\n      { none: [] },\n      { only: ['index'] },\n      {\n        left: [\n          'index',\n          'next'\n        ]\n      },\n      {\n        middle: [\n          'prev',\n          'index',\n          'next'\n        ]\n      },\n      {\n        right: [\n          'prev',\n          'index'\n        ]\n      }\n    ]);\n    var ColumnContext = __assign({}, adt);\n\n    var neighbours$1 = function (input, index) {\n      if (input.length === 0) {\n        return ColumnContext.none();\n      }\n      if (input.length === 1) {\n        return ColumnContext.only(0);\n      }\n      if (index === 0) {\n        return ColumnContext.left(0, 1);\n      }\n      if (index === input.length - 1) {\n        return ColumnContext.right(index - 1, index);\n      }\n      if (index > 0 && index < input.length - 1) {\n        return ColumnContext.middle(index - 1, index, index + 1);\n      }\n      return ColumnContext.none();\n    };\n    var determine = function (input, column, step, tableSize) {\n      var result = input.slice(0);\n      var context = neighbours$1(input, column);\n      var zero = function (array) {\n        return map(array, constant(0));\n      };\n      var onNone = constant(zero(result));\n      var onOnly = function (index) {\n        return tableSize.singleColumnWidth(result[index], step);\n      };\n      var onChange = function (index, next) {\n        if (step >= 0) {\n          var newNext = Math.max(tableSize.minCellWidth(), result[next] - step);\n          return zero(result.slice(0, index)).concat([\n            step,\n            newNext - result[next]\n          ]).concat(zero(result.slice(next + 1)));\n        } else {\n          var newThis = Math.max(tableSize.minCellWidth(), result[index] + step);\n          var diffx = result[index] - newThis;\n          return zero(result.slice(0, index)).concat([\n            newThis - result[index],\n            diffx\n          ]).concat(zero(result.slice(next + 1)));\n        }\n      };\n      var onLeft = onChange;\n      var onMiddle = function (_prev, index, next) {\n        return onChange(index, next);\n      };\n      var onRight = function (_prev, index) {\n        if (step >= 0) {\n          return zero(result.slice(0, index)).concat([step]);\n        } else {\n          var size = Math.max(tableSize.minCellWidth(), result[index] + step);\n          return zero(result.slice(0, index)).concat([size - result[index]]);\n        }\n      };\n      return context.fold(onNone, onOnly, onLeft, onMiddle, onRight);\n    };\n    var Deltas = { determine: determine };\n\n    var getSpan$1 = function (cell, type) {\n      return has(cell, type) && parseInt(get(cell, type), 10) > 1;\n    };\n    var hasColspan = function (cell) {\n      return getSpan$1(cell, 'colspan');\n    };\n    var hasRowspan = function (cell) {\n      return getSpan$1(cell, 'rowspan');\n    };\n    var getInt = function (element, property) {\n      return parseInt(get$1(element, property), 10);\n    };\n    var CellUtils = {\n      hasColspan: hasColspan,\n      hasRowspan: hasRowspan,\n      minWidth: constant(10),\n      minHeight: constant(10),\n      getInt: getInt\n    };\n\n    var getRaw$1 = function (cell, property, getter) {\n      return getRaw(cell, property).fold(function () {\n        return getter(cell) + 'px';\n      }, function (raw) {\n        return raw;\n      });\n    };\n    var getRawW = function (cell, tableSize) {\n      return getRaw$1(cell, 'width', function (e) {\n        return Sizes.getPixelWidth(e, tableSize);\n      });\n    };\n    var getRawH = function (cell) {\n      return getRaw$1(cell, 'height', Sizes.getHeight);\n    };\n    var getWidthFrom = function (warehouse, direction, getWidth, fallback, tableSize) {\n      var columns = Blocks.columns(warehouse);\n      var backups = map(columns, function (cellOption) {\n        return cellOption.map(direction.edge);\n      });\n      return map(columns, function (cellOption, c) {\n        var columnCell = cellOption.filter(not(CellUtils.hasColspan));\n        return columnCell.fold(function () {\n          var deduced = deduce(backups, c);\n          return fallback(deduced);\n        }, function (cell) {\n          return getWidth(cell, tableSize);\n        });\n      });\n    };\n    var getDeduced = function (deduced) {\n      return deduced.map(function (d) {\n        return d + 'px';\n      }).getOr('');\n    };\n    var getRawWidths = function (warehouse, direction, tableSize) {\n      return getWidthFrom(warehouse, direction, getRawW, getDeduced, tableSize);\n    };\n    var getPercentageWidths = function (warehouse, direction, tableSize) {\n      return getWidthFrom(warehouse, direction, Sizes.getPercentageWidth, function (deduced) {\n        return deduced.fold(function () {\n          return tableSize.minCellWidth();\n        }, function (cellWidth) {\n          return cellWidth / tableSize.pixelWidth() * 100;\n        });\n      }, tableSize);\n    };\n    var getPixelWidths = function (warehouse, direction, tableSize) {\n      return getWidthFrom(warehouse, direction, Sizes.getPixelWidth, function (deduced) {\n        return deduced.getOrThunk(tableSize.minCellWidth);\n      }, tableSize);\n    };\n    var getHeightFrom = function (warehouse, direction, getHeight, fallback) {\n      var rows = Blocks.rows(warehouse);\n      var backups = map(rows, function (cellOption) {\n        return cellOption.map(direction.edge);\n      });\n      return map(rows, function (cellOption, c) {\n        var rowCell = cellOption.filter(not(CellUtils.hasRowspan));\n        return rowCell.fold(function () {\n          var deduced = deduce(backups, c);\n          return fallback(deduced);\n        }, function (cell) {\n          return getHeight(cell);\n        });\n      });\n    };\n    var getPixelHeights = function (warehouse, direction) {\n      return getHeightFrom(warehouse, direction, Sizes.getHeight, function (deduced) {\n        return deduced.getOrThunk(CellUtils.minHeight);\n      });\n    };\n    var getRawHeights = function (warehouse, direction) {\n      return getHeightFrom(warehouse, direction, getRawH, getDeduced);\n    };\n    var ColumnSizes = {\n      getRawWidths: getRawWidths,\n      getPixelWidths: getPixelWidths,\n      getPercentageWidths: getPercentageWidths,\n      getPixelHeights: getPixelHeights,\n      getRawHeights: getRawHeights\n    };\n\n    var total = function (start, end, measures) {\n      var r = 0;\n      for (var i = start; i < end; i++) {\n        r += measures[i] !== undefined ? measures[i] : 0;\n      }\n      return r;\n    };\n    var recalculateWidth = function (warehouse, widths) {\n      var all = Warehouse.justCells(warehouse);\n      return map(all, function (cell) {\n        var width = total(cell.column(), cell.column() + cell.colspan(), widths);\n        return {\n          element: cell.element,\n          width: constant(width),\n          colspan: cell.colspan\n        };\n      });\n    };\n    var recalculateHeight = function (warehouse, heights) {\n      var all = Warehouse.justCells(warehouse);\n      return map(all, function (cell) {\n        var height = total(cell.row(), cell.row() + cell.rowspan(), heights);\n        return {\n          element: cell.element,\n          height: constant(height),\n          rowspan: cell.rowspan\n        };\n      });\n    };\n    var matchRowHeight = function (warehouse, heights) {\n      return map(warehouse.all(), function (row, i) {\n        return {\n          element: row.element,\n          height: constant(heights[i])\n        };\n      });\n    };\n    var Recalculations = {\n      recalculateWidth: recalculateWidth,\n      recalculateHeight: recalculateHeight,\n      matchRowHeight: matchRowHeight\n    };\n\n    var percentageSize = function (width, element) {\n      var floatWidth = parseFloat(width);\n      var pixelWidth = get$4(element);\n      var getCellDelta = function (delta) {\n        return delta / pixelWidth * 100;\n      };\n      var singleColumnWidth = function (w, _delta) {\n        return [100 - w];\n      };\n      var minCellWidth = function () {\n        return CellUtils.minWidth() / pixelWidth * 100;\n      };\n      var setTableWidth = function (table, _newWidths, delta) {\n        var ratio = delta / 100;\n        var change = ratio * floatWidth;\n        Sizes.setPercentageWidth(table, floatWidth + change);\n      };\n      return {\n        width: constant(floatWidth),\n        pixelWidth: constant(pixelWidth),\n        getWidths: ColumnSizes.getPercentageWidths,\n        getCellDelta: getCellDelta,\n        singleColumnWidth: singleColumnWidth,\n        minCellWidth: minCellWidth,\n        setElementWidth: Sizes.setPercentageWidth,\n        setTableWidth: setTableWidth\n      };\n    };\n    var pixelSize = function (width) {\n      var getCellDelta = identity;\n      var singleColumnWidth = function (w, delta) {\n        var newNext = Math.max(CellUtils.minWidth(), w + delta);\n        return [newNext - w];\n      };\n      var setTableWidth = function (table, newWidths, _delta) {\n        var total = foldr(newWidths, function (b, a) {\n          return b + a;\n        }, 0);\n        Sizes.setPixelWidth(table, total);\n      };\n      return {\n        width: constant(width),\n        pixelWidth: constant(width),\n        getWidths: ColumnSizes.getPixelWidths,\n        getCellDelta: getCellDelta,\n        singleColumnWidth: singleColumnWidth,\n        minCellWidth: CellUtils.minWidth,\n        setElementWidth: Sizes.setPixelWidth,\n        setTableWidth: setTableWidth\n      };\n    };\n    var chooseSize = function (element, width) {\n      var percentMatch = Sizes.percentageBasedSizeRegex().exec(width);\n      if (percentMatch !== null) {\n        return percentageSize(percentMatch[1], element);\n      }\n      var pixelMatch = Sizes.pixelBasedSizeRegex().exec(width);\n      if (pixelMatch !== null) {\n        var intWidth = parseInt(pixelMatch[1], 10);\n        return pixelSize(intWidth);\n      }\n      var fallbackWidth = get$4(element);\n      return pixelSize(fallbackWidth);\n    };\n    var getTableSize = function (element) {\n      var width = Sizes.getRawWidth(element);\n      return width.fold(function () {\n        var fallbackWidth = get$4(element);\n        return pixelSize(fallbackWidth);\n      }, function (w) {\n        return chooseSize(element, w);\n      });\n    };\n    var TableSize = { getTableSize: getTableSize };\n\n    var getWarehouse$1 = function (list) {\n      return Warehouse.generate(list);\n    };\n    var sumUp = function (newSize) {\n      return foldr(newSize, function (b, a) {\n        return b + a;\n      }, 0);\n    };\n    var getTableWarehouse = function (table) {\n      var list = DetailsList.fromTable(table);\n      return getWarehouse$1(list);\n    };\n    var adjustWidth = function (table, delta, index, direction) {\n      var tableSize = TableSize.getTableSize(table);\n      var step = tableSize.getCellDelta(delta);\n      var warehouse = getTableWarehouse(table);\n      var widths = tableSize.getWidths(warehouse, direction, tableSize);\n      var deltas = Deltas.determine(widths, index, step, tableSize);\n      var newWidths = map(deltas, function (dx, i) {\n        return dx + widths[i];\n      });\n      var newSizes = Recalculations.recalculateWidth(warehouse, newWidths);\n      each(newSizes, function (cell) {\n        tableSize.setElementWidth(cell.element(), cell.width());\n      });\n      if (index === warehouse.grid().columns() - 1) {\n        tableSize.setTableWidth(table, newWidths, step);\n      }\n    };\n    var adjustHeight = function (table, delta, index, direction) {\n      var warehouse = getTableWarehouse(table);\n      var heights = ColumnSizes.getPixelHeights(warehouse, direction);\n      var newHeights = map(heights, function (dy, i) {\n        return index === i ? Math.max(delta + dy, CellUtils.minHeight()) : dy;\n      });\n      var newCellSizes = Recalculations.recalculateHeight(warehouse, newHeights);\n      var newRowSizes = Recalculations.matchRowHeight(warehouse, newHeights);\n      each(newRowSizes, function (row) {\n        Sizes.setHeight(row.element(), row.height());\n      });\n      each(newCellSizes, function (cell) {\n        Sizes.setHeight(cell.element(), cell.height());\n      });\n      var total = sumUp(newHeights);\n      Sizes.setHeight(table, total);\n    };\n    var adjustWidthTo = function (table, list, direction) {\n      var tableSize = TableSize.getTableSize(table);\n      var warehouse = getWarehouse$1(list);\n      var widths = tableSize.getWidths(warehouse, direction, tableSize);\n      var newSizes = Recalculations.recalculateWidth(warehouse, widths);\n      each(newSizes, function (cell) {\n        tableSize.setElementWidth(cell.element(), cell.width());\n      });\n      if (newSizes.length > 0) {\n        tableSize.setTableWidth(table, widths, tableSize.getCellDelta(0));\n      }\n    };\n    var Adjustments = {\n      adjustWidth: adjustWidth,\n      adjustHeight: adjustHeight,\n      adjustWidthTo: adjustWidthTo\n    };\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      var clone = function () {\n        return Cell(get());\n      };\n      return {\n        get: get,\n        set: set,\n        clone: clone\n      };\n    };\n\n    var base = function (handleUnsupported, required) {\n      return baseWith(handleUnsupported, required, {\n        validate: isFunction,\n        label: 'function'\n      });\n    };\n    var baseWith = function (handleUnsupported, required, pred) {\n      if (required.length === 0) {\n        throw new Error('You must specify at least one required field.');\n      }\n      validateStrArr('required', required);\n      checkDupes(required);\n      return function (obj) {\n        var keys$1 = keys(obj);\n        var allReqd = forall(required, function (req) {\n          return contains(keys$1, req);\n        });\n        if (!allReqd) {\n          reqMessage(required, keys$1);\n        }\n        handleUnsupported(required, keys$1);\n        var invalidKeys = filter(required, function (key) {\n          return !pred.validate(obj[key], key);\n        });\n        if (invalidKeys.length > 0) {\n          invalidTypeMessage(invalidKeys, pred.label);\n        }\n        return obj;\n      };\n    };\n    var handleExact = function (required, keys) {\n      var unsupported = filter(keys, function (key) {\n        return !contains(required, key);\n      });\n      if (unsupported.length > 0) {\n        unsuppMessage(unsupported);\n      }\n    };\n    var exactly = function (required) {\n      return base(handleExact, required);\n    };\n\n    var verifyGenerators = exactly([\n      'cell',\n      'row',\n      'replace',\n      'gap'\n    ]);\n    var elementToData = function (element) {\n      var colspan = has(element, 'colspan') ? parseInt(get(element, 'colspan'), 10) : 1;\n      var rowspan = has(element, 'rowspan') ? parseInt(get(element, 'rowspan'), 10) : 1;\n      return {\n        element: constant(element),\n        colspan: constant(colspan),\n        rowspan: constant(rowspan)\n      };\n    };\n    var modification = function (generators, toData) {\n      if (toData === void 0) {\n        toData = elementToData;\n      }\n      verifyGenerators(generators);\n      var position = Cell(Option.none());\n      var nu = function (data) {\n        return generators.cell(data);\n      };\n      var nuFrom = function (element) {\n        var data = toData(element);\n        return nu(data);\n      };\n      var add = function (element) {\n        var replacement = nuFrom(element);\n        if (position.get().isNone()) {\n          position.set(Option.some(replacement));\n        }\n        recent = Option.some({\n          item: element,\n          replacement: replacement\n        });\n        return replacement;\n      };\n      var recent = Option.none();\n      var getOrInit = function (element, comparator) {\n        return recent.fold(function () {\n          return add(element);\n        }, function (p) {\n          return comparator(element, p.item) ? p.replacement : add(element);\n        });\n      };\n      return {\n        getOrInit: getOrInit,\n        cursor: position.get\n      };\n    };\n    var transform = function (scope, tag) {\n      return function (generators) {\n        var position = Cell(Option.none());\n        verifyGenerators(generators);\n        var list = [];\n        var find$1 = function (element, comparator) {\n          return find(list, function (x) {\n            return comparator(x.item, element);\n          });\n        };\n        var makeNew = function (element) {\n          var attrs = { scope: scope };\n          var cell = generators.replace(element, tag, attrs);\n          list.push({\n            item: element,\n            sub: cell\n          });\n          if (position.get().isNone()) {\n            position.set(Option.some(cell));\n          }\n          return cell;\n        };\n        var replaceOrInit = function (element, comparator) {\n          return find$1(element, comparator).fold(function () {\n            return makeNew(element);\n          }, function (p) {\n            return comparator(element, p.item) ? p.sub : makeNew(element);\n          });\n        };\n        return {\n          replaceOrInit: replaceOrInit,\n          cursor: position.get\n        };\n      };\n    };\n    var merging = function (generators) {\n      verifyGenerators(generators);\n      var position = Cell(Option.none());\n      var combine = function (cell) {\n        if (position.get().isNone()) {\n          position.set(Option.some(cell));\n        }\n        return function () {\n          var raw = generators.cell({\n            element: constant(cell),\n            colspan: constant(1),\n            rowspan: constant(1)\n          });\n          remove$1(raw, 'width');\n          remove$1(cell, 'width');\n          return raw;\n        };\n      };\n      return {\n        combine: combine,\n        cursor: position.get\n      };\n    };\n    var Generators = {\n      modification: modification,\n      transform: transform,\n      merging: merging\n    };\n\n    var blockList = [\n      'body',\n      'p',\n      'div',\n      'article',\n      'aside',\n      'figcaption',\n      'figure',\n      'footer',\n      'header',\n      'nav',\n      'section',\n      'ol',\n      'ul',\n      'table',\n      'thead',\n      'tfoot',\n      'tbody',\n      'caption',\n      'tr',\n      'td',\n      'th',\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n      'blockquote',\n      'pre',\n      'address'\n    ];\n    var isList = function (universe, item) {\n      var tagName = universe.property().name(item);\n      return contains([\n        'ol',\n        'ul'\n      ], tagName);\n    };\n    var isBlock = function (universe, item) {\n      var tagName = universe.property().name(item);\n      return contains(blockList, tagName);\n    };\n    var isFormatting = function (universe, item) {\n      var tagName = universe.property().name(item);\n      return contains([\n        'address',\n        'pre',\n        'p',\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6'\n      ], tagName);\n    };\n    var isHeading = function (universe, item) {\n      var tagName = universe.property().name(item);\n      return contains([\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6'\n      ], tagName);\n    };\n    var isContainer = function (universe, item) {\n      return contains([\n        'div',\n        'li',\n        'td',\n        'th',\n        'blockquote',\n        'body',\n        'caption'\n      ], universe.property().name(item));\n    };\n    var isEmptyTag = function (universe, item) {\n      return contains([\n        'br',\n        'img',\n        'hr',\n        'input'\n      ], universe.property().name(item));\n    };\n    var isFrame = function (universe, item) {\n      return universe.property().name(item) === 'iframe';\n    };\n    var isInline = function (universe, item) {\n      return !(isBlock(universe, item) || isEmptyTag(universe, item)) && universe.property().name(item) !== 'li';\n    };\n    var Structure = {\n      isBlock: isBlock,\n      isList: isList,\n      isFormatting: isFormatting,\n      isHeading: isHeading,\n      isContainer: isContainer,\n      isEmptyTag: isEmptyTag,\n      isFrame: isFrame,\n      isInline: isInline\n    };\n\n    var universe$1 = DomUniverse();\n    var isBlock$1 = function (element) {\n      return Structure.isBlock(universe$1, element);\n    };\n    var isList$1 = function (element) {\n      return Structure.isList(universe$1, element);\n    };\n    var isFormatting$1 = function (element) {\n      return Structure.isFormatting(universe$1, element);\n    };\n    var isHeading$1 = function (element) {\n      return Structure.isHeading(universe$1, element);\n    };\n    var isContainer$1 = function (element) {\n      return Structure.isContainer(universe$1, element);\n    };\n    var isEmptyTag$1 = function (element) {\n      return Structure.isEmptyTag(universe$1, element);\n    };\n    var isFrame$1 = function (element) {\n      return Structure.isFrame(universe$1, element);\n    };\n    var isInline$1 = function (element) {\n      return Structure.isInline(universe$1, element);\n    };\n    var DomStructure = {\n      isBlock: isBlock$1,\n      isList: isList$1,\n      isFormatting: isFormatting$1,\n      isHeading: isHeading$1,\n      isContainer: isContainer$1,\n      isEmptyTag: isEmptyTag$1,\n      isFrame: isFrame$1,\n      isInline: isInline$1\n    };\n\n    var merge$2 = function (cells) {\n      var isBr = function (el) {\n        return name(el) === 'br';\n      };\n      var advancedBr = function (children) {\n        return forall(children, function (c) {\n          return isBr(c) || isText(c) && get$2(c).trim().length === 0;\n        });\n      };\n      var isListItem = function (el) {\n        return name(el) === 'li' || ancestor(el, DomStructure.isList).isSome();\n      };\n      var siblingIsBlock = function (el) {\n        return nextSibling(el).map(function (rightSibling) {\n          if (DomStructure.isBlock(rightSibling)) {\n            return true;\n          }\n          if (DomStructure.isEmptyTag(rightSibling)) {\n            return name(rightSibling) === 'img' ? false : true;\n          }\n          return false;\n        }).getOr(false);\n      };\n      var markCell = function (cell) {\n        return last$1(cell).bind(function (rightEdge) {\n          var rightSiblingIsBlock = siblingIsBlock(rightEdge);\n          return parent(rightEdge).map(function (parent) {\n            return rightSiblingIsBlock === true || isListItem(parent) || isBr(rightEdge) || DomStructure.isBlock(parent) && !eq(cell, parent) ? [] : [Element.fromTag('br')];\n          });\n        }).getOr([]);\n      };\n      var markContent = function () {\n        var content = bind(cells, function (cell) {\n          var children$1 = children(cell);\n          return advancedBr(children$1) ? [] : children$1.concat(markCell(cell));\n        });\n        return content.length === 0 ? [Element.fromTag('br')] : content;\n      };\n      var contents = markContent();\n      empty(cells[0]);\n      append$1(cells[0], contents);\n    };\n    var TableContent = { merge: merge$2 };\n\n    var prune = function (table) {\n      var cells = TableLookup.cells(table);\n      if (cells.length === 0) {\n        remove$2(table);\n      }\n    };\n    var outcome = Immutable('grid', 'cursor');\n    var elementFromGrid = function (grid, row, column) {\n      return findIn(grid, row, column).orThunk(function () {\n        return findIn(grid, 0, 0);\n      });\n    };\n    var findIn = function (grid, row, column) {\n      return Option.from(grid[row]).bind(function (r) {\n        return Option.from(r.cells()[column]).bind(function (c) {\n          return Option.from(c.element());\n        });\n      });\n    };\n    var bundle = function (grid, row, column) {\n      return outcome(grid, findIn(grid, row, column));\n    };\n    var uniqueRows = function (details) {\n      return foldl(details, function (rest, detail) {\n        return exists(rest, function (currentDetail) {\n          return currentDetail.row() === detail.row();\n        }) ? rest : rest.concat([detail]);\n      }, []).sort(function (detailA, detailB) {\n        return detailA.row() - detailB.row();\n      });\n    };\n    var uniqueColumns = function (details) {\n      return foldl(details, function (rest, detail) {\n        return exists(rest, function (currentDetail) {\n          return currentDetail.column() === detail.column();\n        }) ? rest : rest.concat([detail]);\n      }, []).sort(function (detailA, detailB) {\n        return detailA.column() - detailB.column();\n      });\n    };\n    var insertRowBefore = function (grid, detail, comparator, genWrappers) {\n      var example = detail.row();\n      var targetIndex = detail.row();\n      var newGrid = ModificationOperations.insertRowAt(grid, targetIndex, example, comparator, genWrappers.getOrInit);\n      return bundle(newGrid, targetIndex, detail.column());\n    };\n    var insertRowsBefore = function (grid, details, comparator, genWrappers) {\n      var example = details[0].row();\n      var targetIndex = details[0].row();\n      var rows = uniqueRows(details);\n      var newGrid = foldl(rows, function (newG, _row) {\n        return ModificationOperations.insertRowAt(newG, targetIndex, example, comparator, genWrappers.getOrInit);\n      }, grid);\n      return bundle(newGrid, targetIndex, details[0].column());\n    };\n    var insertRowAfter = function (grid, detail, comparator, genWrappers) {\n      var example = detail.row();\n      var targetIndex = detail.row() + detail.rowspan();\n      var newGrid = ModificationOperations.insertRowAt(grid, targetIndex, example, comparator, genWrappers.getOrInit);\n      return bundle(newGrid, targetIndex, detail.column());\n    };\n    var insertRowsAfter = function (grid, details, comparator, genWrappers) {\n      var rows = uniqueRows(details);\n      var example = rows[rows.length - 1].row();\n      var targetIndex = rows[rows.length - 1].row() + rows[rows.length - 1].rowspan();\n      var newGrid = foldl(rows, function (newG, _row) {\n        return ModificationOperations.insertRowAt(newG, targetIndex, example, comparator, genWrappers.getOrInit);\n      }, grid);\n      return bundle(newGrid, targetIndex, details[0].column());\n    };\n    var insertColumnBefore = function (grid, detail, comparator, genWrappers) {\n      var example = detail.column();\n      var targetIndex = detail.column();\n      var newGrid = ModificationOperations.insertColumnAt(grid, targetIndex, example, comparator, genWrappers.getOrInit);\n      return bundle(newGrid, detail.row(), targetIndex);\n    };\n    var insertColumnsBefore = function (grid, details, comparator, genWrappers) {\n      var columns = uniqueColumns(details);\n      var example = columns[0].column();\n      var targetIndex = columns[0].column();\n      var newGrid = foldl(columns, function (newG, _row) {\n        return ModificationOperations.insertColumnAt(newG, targetIndex, example, comparator, genWrappers.getOrInit);\n      }, grid);\n      return bundle(newGrid, details[0].row(), targetIndex);\n    };\n    var insertColumnAfter = function (grid, detail, comparator, genWrappers) {\n      var example = detail.column();\n      var targetIndex = detail.column() + detail.colspan();\n      var newGrid = ModificationOperations.insertColumnAt(grid, targetIndex, example, comparator, genWrappers.getOrInit);\n      return bundle(newGrid, detail.row(), targetIndex);\n    };\n    var insertColumnsAfter = function (grid, details, comparator, genWrappers) {\n      var example = details[details.length - 1].column();\n      var targetIndex = details[details.length - 1].column() + details[details.length - 1].colspan();\n      var columns = uniqueColumns(details);\n      var newGrid = foldl(columns, function (newG, _row) {\n        return ModificationOperations.insertColumnAt(newG, targetIndex, example, comparator, genWrappers.getOrInit);\n      }, grid);\n      return bundle(newGrid, details[0].row(), targetIndex);\n    };\n    var makeRowHeader = function (grid, detail, comparator, genWrappers) {\n      var newGrid = TransformOperations.replaceRow(grid, detail.row(), comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var makeColumnHeader = function (grid, detail, comparator, genWrappers) {\n      var newGrid = TransformOperations.replaceColumn(grid, detail.column(), comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var unmakeRowHeader = function (grid, detail, comparator, genWrappers) {\n      var newGrid = TransformOperations.replaceRow(grid, detail.row(), comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var unmakeColumnHeader = function (grid, detail, comparator, genWrappers) {\n      var newGrid = TransformOperations.replaceColumn(grid, detail.column(), comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var splitCellIntoColumns$1 = function (grid, detail, comparator, genWrappers) {\n      var newGrid = ModificationOperations.splitCellIntoColumns(grid, detail.row(), detail.column(), comparator, genWrappers.getOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var splitCellIntoRows$1 = function (grid, detail, comparator, genWrappers) {\n      var newGrid = ModificationOperations.splitCellIntoRows(grid, detail.row(), detail.column(), comparator, genWrappers.getOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var eraseColumns = function (grid, details, _comparator, _genWrappers) {\n      var columns = uniqueColumns(details);\n      var newGrid = ModificationOperations.deleteColumnsAt(grid, columns[0].column(), columns[columns.length - 1].column());\n      var cursor = elementFromGrid(newGrid, details[0].row(), details[0].column());\n      return outcome(newGrid, cursor);\n    };\n    var eraseRows = function (grid, details, _comparator, _genWrappers) {\n      var rows = uniqueRows(details);\n      var newGrid = ModificationOperations.deleteRowsAt(grid, rows[0].row(), rows[rows.length - 1].row());\n      var cursor = elementFromGrid(newGrid, details[0].row(), details[0].column());\n      return outcome(newGrid, cursor);\n    };\n    var mergeCells = function (grid, mergable, comparator, _genWrappers) {\n      var cells = mergable.cells();\n      TableContent.merge(cells);\n      var newGrid = MergingOperations.merge(grid, mergable.bounds(), comparator, constant(cells[0]));\n      return outcome(newGrid, Option.from(cells[0]));\n    };\n    var unmergeCells = function (grid, unmergable, comparator, genWrappers) {\n      var newGrid = foldr(unmergable, function (b, cell) {\n        return MergingOperations.unmerge(b, cell, comparator, genWrappers.combine(cell));\n      }, grid);\n      return outcome(newGrid, Option.from(unmergable[0]));\n    };\n    var pasteCells = function (grid, pasteDetails, comparator, _genWrappers) {\n      var gridify = function (table, generators) {\n        var list = DetailsList.fromTable(table);\n        var wh = Warehouse.generate(list);\n        return Transitions.toGrid(wh, generators, true);\n      };\n      var gridB = gridify(pasteDetails.clipboard(), pasteDetails.generators());\n      var startAddress = address(pasteDetails.row(), pasteDetails.column());\n      var mergedGrid = TableMerge.merge(startAddress, grid, gridB, pasteDetails.generators(), comparator);\n      return mergedGrid.fold(function () {\n        return outcome(grid, Option.some(pasteDetails.element()));\n      }, function (nuGrid) {\n        var cursor = elementFromGrid(nuGrid, pasteDetails.row(), pasteDetails.column());\n        return outcome(nuGrid, cursor);\n      });\n    };\n    var gridifyRows = function (rows, generators, example) {\n      var pasteDetails = DetailsList.fromPastedRows(rows, example);\n      var wh = Warehouse.generate(pasteDetails);\n      return Transitions.toGrid(wh, generators, true);\n    };\n    var pasteRowsBefore = function (grid, pasteDetails, comparator, _genWrappers) {\n      var example = grid[pasteDetails.cells[0].row()];\n      var index = pasteDetails.cells[0].row();\n      var gridB = gridifyRows(pasteDetails.clipboard(), pasteDetails.generators(), example);\n      var mergedGrid = TableMerge.insert(index, grid, gridB, pasteDetails.generators(), comparator);\n      var cursor = elementFromGrid(mergedGrid, pasteDetails.cells[0].row(), pasteDetails.cells[0].column());\n      return outcome(mergedGrid, cursor);\n    };\n    var pasteRowsAfter = function (grid, pasteDetails, comparator, _genWrappers) {\n      var example = grid[pasteDetails.cells[0].row()];\n      var index = pasteDetails.cells[pasteDetails.cells.length - 1].row() + pasteDetails.cells[pasteDetails.cells.length - 1].rowspan();\n      var gridB = gridifyRows(pasteDetails.clipboard(), pasteDetails.generators(), example);\n      var mergedGrid = TableMerge.insert(index, grid, gridB, pasteDetails.generators(), comparator);\n      var cursor = elementFromGrid(mergedGrid, pasteDetails.cells[0].row(), pasteDetails.cells[0].column());\n      return outcome(mergedGrid, cursor);\n    };\n    var resize = Adjustments.adjustWidthTo;\n    var TableOperations = {\n      insertRowBefore: run(insertRowBefore, onCell, noop, noop, Generators.modification),\n      insertRowsBefore: run(insertRowsBefore, onCells, noop, noop, Generators.modification),\n      insertRowAfter: run(insertRowAfter, onCell, noop, noop, Generators.modification),\n      insertRowsAfter: run(insertRowsAfter, onCells, noop, noop, Generators.modification),\n      insertColumnBefore: run(insertColumnBefore, onCell, resize, noop, Generators.modification),\n      insertColumnsBefore: run(insertColumnsBefore, onCells, resize, noop, Generators.modification),\n      insertColumnAfter: run(insertColumnAfter, onCell, resize, noop, Generators.modification),\n      insertColumnsAfter: run(insertColumnsAfter, onCells, resize, noop, Generators.modification),\n      splitCellIntoColumns: run(splitCellIntoColumns$1, onCell, resize, noop, Generators.modification),\n      splitCellIntoRows: run(splitCellIntoRows$1, onCell, noop, noop, Generators.modification),\n      eraseColumns: run(eraseColumns, onCells, resize, prune, Generators.modification),\n      eraseRows: run(eraseRows, onCells, noop, prune, Generators.modification),\n      makeColumnHeader: run(makeColumnHeader, onCell, noop, noop, Generators.transform('row', 'th')),\n      unmakeColumnHeader: run(unmakeColumnHeader, onCell, noop, noop, Generators.transform(null, 'td')),\n      makeRowHeader: run(makeRowHeader, onCell, noop, noop, Generators.transform('col', 'th')),\n      unmakeRowHeader: run(unmakeRowHeader, onCell, noop, noop, Generators.transform(null, 'td')),\n      mergeCells: run(mergeCells, onMergable, noop, noop, Generators.merging),\n      unmergeCells: run(unmergeCells, onUnmergable, resize, noop, Generators.merging),\n      pasteCells: run(pasteCells, onPaste, resize, noop, Generators.modification),\n      pasteRowsBefore: run(pasteRowsBefore, onPasteRows, noop, noop, Generators.modification),\n      pasteRowsAfter: run(pasteRowsAfter, onPasteRows, noop, noop, Generators.modification)\n    };\n\n    var getBody$1 = function (editor) {\n      return Element.fromDom(editor.getBody());\n    };\n    var getPixelWidth$1 = function (elm) {\n      return elm.getBoundingClientRect().width;\n    };\n    var getPixelHeight = function (elm) {\n      return elm.getBoundingClientRect().height;\n    };\n    var getIsRoot = function (editor) {\n      return function (element) {\n        return eq(element, getBody$1(editor));\n      };\n    };\n    var removePxSuffix = function (size) {\n      return size ? size.replace(/px$/, '') : '';\n    };\n    var addSizeSuffix = function (size) {\n      if (/^[0-9]+$/.test(size)) {\n        size += 'px';\n      }\n      return size;\n    };\n    var removeDataStyle = function (table) {\n      var dataStyleCells = descendants$1(table, 'td[data-mce-style],th[data-mce-style]');\n      remove(table, 'data-mce-style');\n      each(dataStyleCells, function (cell) {\n        remove(cell, 'data-mce-style');\n      });\n    };\n\n    var getDirection = function (element) {\n      return get$1(element, 'direction') === 'rtl' ? 'rtl' : 'ltr';\n    };\n\n    var ltr$1 = { isRtl: constant(false) };\n    var rtl$1 = { isRtl: constant(true) };\n    var directionAt = function (element) {\n      var dir = getDirection(element);\n      return dir === 'rtl' ? rtl$1 : ltr$1;\n    };\n    var Direction = { directionAt: directionAt };\n\n    var defaultTableToolbar = [\n      'tableprops',\n      'tabledelete',\n      '|',\n      'tableinsertrowbefore',\n      'tableinsertrowafter',\n      'tabledeleterow',\n      '|',\n      'tableinsertcolbefore',\n      'tableinsertcolafter',\n      'tabledeletecol'\n    ];\n    var defaultStyles = {\n      'border-collapse': 'collapse',\n      'width': '100%'\n    };\n    var defaultAttributes = { border: '1' };\n    var getDefaultAttributes = function (editor) {\n      return editor.getParam('table_default_attributes', defaultAttributes, 'object');\n    };\n    var getDefaultStyles = function (editor) {\n      return editor.getParam('table_default_styles', defaultStyles, 'object');\n    };\n    var hasTableResizeBars = function (editor) {\n      return editor.getParam('table_resize_bars', true, 'boolean');\n    };\n    var hasTabNavigation = function (editor) {\n      return editor.getParam('table_tab_navigation', true, 'boolean');\n    };\n    var hasAdvancedCellTab = function (editor) {\n      return editor.getParam('table_cell_advtab', true, 'boolean');\n    };\n    var hasAdvancedRowTab = function (editor) {\n      return editor.getParam('table_row_advtab', true, 'boolean');\n    };\n    var hasAdvancedTableTab = function (editor) {\n      return editor.getParam('table_advtab', true, 'boolean');\n    };\n    var hasAppearanceOptions = function (editor) {\n      return editor.getParam('table_appearance_options', true, 'boolean');\n    };\n    var hasTableGrid = function (editor) {\n      return editor.getParam('table_grid', true, 'boolean');\n    };\n    var shouldStyleWithCss = function (editor) {\n      return editor.getParam('table_style_by_css', false, 'boolean');\n    };\n    var getCellClassList = function (editor) {\n      return editor.getParam('table_cell_class_list', [], 'array');\n    };\n    var getRowClassList = function (editor) {\n      return editor.getParam('table_row_class_list', [], 'array');\n    };\n    var getTableClassList = function (editor) {\n      return editor.getParam('table_class_list', [], 'array');\n    };\n    var getColorPickerCallback = function (editor) {\n      return editor.getParam('color_picker_callback');\n    };\n    var isPixelsForced = function (editor) {\n      return editor.getParam('table_responsive_width') === false;\n    };\n    var getCloneElements = function (editor) {\n      var cloneElements = editor.getParam('table_clone_elements');\n      if (isString(cloneElements)) {\n        return Option.some(cloneElements.split(/[ ,]/));\n      } else if (Array.isArray(cloneElements)) {\n        return Option.some(cloneElements);\n      } else {\n        return Option.none();\n      }\n    };\n    var hasObjectResizing = function (editor) {\n      var objectResizing = editor.getParam('object_resizing', true);\n      return objectResizing === 'table' || objectResizing;\n    };\n    var getToolbar = function (editor) {\n      var toolbar = editor.getParam('table_toolbar', defaultTableToolbar);\n      if (toolbar === '' || toolbar === false) {\n        return [];\n      } else if (isString(toolbar)) {\n        return toolbar.split(/[ ,]/);\n      } else if (isArray(toolbar)) {\n        return toolbar;\n      } else {\n        return [];\n      }\n    };\n\n    var fireNewRow = function (editor, row) {\n      return editor.fire('newrow', { node: row });\n    };\n    var fireNewCell = function (editor, cell) {\n      return editor.fire('newcell', { node: cell });\n    };\n    var fireObjectResizeStart = function (editor, target, width, height) {\n      editor.fire('ObjectResizeStart', {\n        target: target,\n        width: width,\n        height: height\n      });\n    };\n    var fireObjectResized = function (editor, target, width, height) {\n      editor.fire('ObjectResized', {\n        target: target,\n        width: width,\n        height: height\n      });\n    };\n\n    var TableActions = function (editor, lazyWire) {\n      var isTableBody = function (editor) {\n        return name(getBody$1(editor)) === 'table';\n      };\n      var lastRowGuard = function (table) {\n        var size = TableGridSize.getGridSize(table);\n        return isTableBody(editor) === false || size.rows() > 1;\n      };\n      var lastColumnGuard = function (table) {\n        var size = TableGridSize.getGridSize(table);\n        return isTableBody(editor) === false || size.columns() > 1;\n      };\n      var cloneFormats = getCloneElements(editor);\n      var execute = function (operation, guard, mutate, lazyWire) {\n        return function (table, target) {\n          removeDataStyle(table);\n          var wire = lazyWire();\n          var doc = Element.fromDom(editor.getDoc());\n          var direction = TableDirection(Direction.directionAt);\n          var generators = TableFill.cellOperations(mutate, doc, cloneFormats);\n          return guard(table) ? operation(wire, table, target, generators, direction).bind(function (result) {\n            each(result.newRows(), function (row) {\n              fireNewRow(editor, row.dom());\n            });\n            each(result.newCells(), function (cell) {\n              fireNewCell(editor, cell.dom());\n            });\n            return result.cursor().map(function (cell) {\n              var rng = editor.dom.createRng();\n              rng.setStart(cell.dom(), 0);\n              rng.setEnd(cell.dom(), 0);\n              return rng;\n            });\n          }) : Option.none();\n        };\n      };\n      var deleteRow = execute(TableOperations.eraseRows, lastRowGuard, noop, lazyWire);\n      var deleteColumn = execute(TableOperations.eraseColumns, lastColumnGuard, noop, lazyWire);\n      var insertRowsBefore = execute(TableOperations.insertRowsBefore, always, noop, lazyWire);\n      var insertRowsAfter = execute(TableOperations.insertRowsAfter, always, noop, lazyWire);\n      var insertColumnsBefore = execute(TableOperations.insertColumnsBefore, always, CellMutations.halve, lazyWire);\n      var insertColumnsAfter = execute(TableOperations.insertColumnsAfter, always, CellMutations.halve, lazyWire);\n      var mergeCells = execute(TableOperations.mergeCells, always, noop, lazyWire);\n      var unmergeCells = execute(TableOperations.unmergeCells, always, noop, lazyWire);\n      var pasteRowsBefore = execute(TableOperations.pasteRowsBefore, always, noop, lazyWire);\n      var pasteRowsAfter = execute(TableOperations.pasteRowsAfter, always, noop, lazyWire);\n      var pasteCells = execute(TableOperations.pasteCells, always, noop, lazyWire);\n      return {\n        deleteRow: deleteRow,\n        deleteColumn: deleteColumn,\n        insertRowsBefore: insertRowsBefore,\n        insertRowsAfter: insertRowsAfter,\n        insertColumnsBefore: insertColumnsBefore,\n        insertColumnsAfter: insertColumnsAfter,\n        mergeCells: mergeCells,\n        unmergeCells: unmergeCells,\n        pasteRowsBefore: pasteRowsBefore,\n        pasteRowsAfter: pasteRowsAfter,\n        pasteCells: pasteCells\n      };\n    };\n\n    var copyRows = function (table, target, generators) {\n      var list = DetailsList.fromTable(table);\n      var house = Warehouse.generate(list);\n      var details = onCells(house, target);\n      return details.map(function (selectedCells) {\n        var grid = Transitions.toGrid(house, generators, false);\n        var slicedGrid = grid.slice(selectedCells[0].row(), selectedCells[selectedCells.length - 1].row() + selectedCells[selectedCells.length - 1].rowspan());\n        var slicedDetails = toDetailList(slicedGrid, generators);\n        return Redraw.copy(slicedDetails);\n      });\n    };\n    var CopyRows = { copyRows: copyRows };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var getTDTHOverallStyle = function (dom, elm, name) {\n      var cells = dom.select('td,th', elm);\n      var firstChildStyle;\n      var checkChildren = function (firstChildStyle, elms) {\n        for (var i = 0; i < elms.length; i++) {\n          var currentStyle = dom.getStyle(elms[i], name);\n          if (typeof firstChildStyle === 'undefined') {\n            firstChildStyle = currentStyle;\n          }\n          if (firstChildStyle !== currentStyle) {\n            return '';\n          }\n        }\n        return firstChildStyle;\n      };\n      firstChildStyle = checkChildren(firstChildStyle, cells);\n      return firstChildStyle;\n    };\n    var applyAlign = function (editor, elm, name) {\n      if (name) {\n        editor.formatter.apply('align' + name, {}, elm);\n      }\n    };\n    var applyVAlign = function (editor, elm, name) {\n      if (name) {\n        editor.formatter.apply('valign' + name, {}, elm);\n      }\n    };\n    var unApplyAlign = function (editor, elm) {\n      global$1.each('left center right'.split(' '), function (name) {\n        editor.formatter.remove('align' + name, {}, elm);\n      });\n    };\n    var unApplyVAlign = function (editor, elm) {\n      global$1.each('top middle bottom'.split(' '), function (name) {\n        editor.formatter.remove('valign' + name, {}, elm);\n      });\n    };\n    var Styles$1 = {\n      applyAlign: applyAlign,\n      applyVAlign: applyVAlign,\n      unApplyAlign: unApplyAlign,\n      unApplyVAlign: unApplyVAlign,\n      getTDTHOverallStyle: getTDTHOverallStyle\n    };\n\n    var buildListItems = function (inputList, itemCallback, startItems) {\n      var appendItems = function (values, output) {\n        output = output || [];\n        global$1.each(values, function (item) {\n          var menuItem = { text: item.text || item.title };\n          if (item.menu) {\n            menuItem.menu = appendItems(item.menu);\n          } else {\n            menuItem.value = item.value;\n            if (itemCallback) {\n              itemCallback(menuItem);\n            }\n          }\n          output.push(menuItem);\n        });\n        return output;\n      };\n      return appendItems(inputList, startItems || []);\n    };\n    function styleFieldHasFocus(e) {\n      return e.control.rootControl.find('#style')[0].getEl().isEqualNode(domGlobals.document.activeElement);\n    }\n    var syncAdvancedStyleFields = function (editor, evt) {\n      if (styleFieldHasFocus(evt)) {\n        updateAdvancedFields(editor, evt);\n      } else {\n        updateStyleField(editor, evt);\n      }\n    };\n    var updateStyleField = function (editor, evt) {\n      var dom = editor.dom;\n      var rootControl = evt.control.rootControl;\n      var data = rootControl.toJSON();\n      var css = dom.parseStyle(data.style);\n      css['border-style'] = data.borderStyle;\n      css['border-color'] = data.borderColor;\n      css['background-color'] = data.backgroundColor;\n      css.width = data.width ? addSizeSuffix(data.width) : '';\n      css.height = data.height ? addSizeSuffix(data.height) : '';\n      rootControl.find('#style').value(dom.serializeStyle(dom.parseStyle(dom.serializeStyle(css))));\n    };\n    var updateAdvancedFields = function (editor, evt) {\n      var dom = editor.dom;\n      var rootControl = evt.control.rootControl;\n      var data = rootControl.toJSON();\n      var css = dom.parseStyle(data.style);\n      rootControl.find('#borderStyle').value(css['border-style'] || '');\n      rootControl.find('#borderColor').value(css['border-color'] || '');\n      rootControl.find('#backgroundColor').value(css['background-color'] || '');\n      rootControl.find('#width').value(css.width || '');\n      rootControl.find('#height').value(css.height || '');\n    };\n    var extractAdvancedStyles = function (dom, elm) {\n      var css = dom.parseStyle(dom.getAttrib(elm, 'style'));\n      var data = {};\n      if (css['border-style']) {\n        data.borderStyle = css['border-style'];\n      }\n      if (css['border-color']) {\n        data.borderColor = css['border-color'];\n      }\n      if (css['background-color']) {\n        data.backgroundColor = css['background-color'];\n      }\n      data.style = dom.serializeStyle(css);\n      return data;\n    };\n    var createStyleForm = function (editor) {\n      var createColorPickAction = function () {\n        var colorPickerCallback = getColorPickerCallback(editor);\n        if (colorPickerCallback) {\n          return function (evt) {\n            return colorPickerCallback.call(editor, function (value) {\n              evt.control.value(value).fire('change');\n            }, evt.control.value());\n          };\n        }\n      };\n      return {\n        title: 'Advanced',\n        type: 'form',\n        defaults: { onchange: curry(updateStyleField, editor) },\n        items: [\n          {\n            label: 'Style',\n            name: 'style',\n            type: 'textbox',\n            onchange: curry(updateAdvancedFields, editor)\n          },\n          {\n            type: 'form',\n            padding: 0,\n            formItemDefaults: {\n              layout: 'grid',\n              alignH: [\n                'start',\n                'right'\n              ]\n            },\n            defaults: { size: 7 },\n            items: [\n              {\n                label: 'Border style',\n                type: 'listbox',\n                name: 'borderStyle',\n                width: 90,\n                onselect: curry(updateStyleField, editor),\n                values: [\n                  {\n                    text: 'Select...',\n                    value: ''\n                  },\n                  {\n                    text: 'Solid',\n                    value: 'solid'\n                  },\n                  {\n                    text: 'Dotted',\n                    value: 'dotted'\n                  },\n                  {\n                    text: 'Dashed',\n                    value: 'dashed'\n                  },\n                  {\n                    text: 'Double',\n                    value: 'double'\n                  },\n                  {\n                    text: 'Groove',\n                    value: 'groove'\n                  },\n                  {\n                    text: 'Ridge',\n                    value: 'ridge'\n                  },\n                  {\n                    text: 'Inset',\n                    value: 'inset'\n                  },\n                  {\n                    text: 'Outset',\n                    value: 'outset'\n                  },\n                  {\n                    text: 'None',\n                    value: 'none'\n                  },\n                  {\n                    text: 'Hidden',\n                    value: 'hidden'\n                  }\n                ]\n              },\n              {\n                label: 'Border color',\n                type: 'colorbox',\n                name: 'borderColor',\n                onaction: createColorPickAction()\n              },\n              {\n                label: 'Background color',\n                type: 'colorbox',\n                name: 'backgroundColor',\n                onaction: createColorPickAction()\n              }\n            ]\n          }\n        ]\n      };\n    };\n    var Helpers = {\n      createStyleForm: createStyleForm,\n      buildListItems: buildListItems,\n      updateStyleField: updateStyleField,\n      extractAdvancedStyles: extractAdvancedStyles,\n      updateAdvancedFields: updateAdvancedFields,\n      syncAdvancedStyleFields: syncAdvancedStyleFields\n    };\n\n    var updateStyles = function (elm, cssText) {\n      delete elm.dataset.mceStyle;\n      elm.style.cssText += ';' + cssText;\n    };\n    var extractDataFromElement = function (editor, elm) {\n      var dom = editor.dom;\n      var data = {\n        width: dom.getStyle(elm, 'width') || dom.getAttrib(elm, 'width'),\n        height: dom.getStyle(elm, 'height') || dom.getAttrib(elm, 'height'),\n        scope: dom.getAttrib(elm, 'scope'),\n        class: dom.getAttrib(elm, 'class'),\n        type: elm.nodeName.toLowerCase(),\n        style: '',\n        align: '',\n        valign: ''\n      };\n      global$1.each('left center right'.split(' '), function (name) {\n        if (editor.formatter.matchNode(elm, 'align' + name)) {\n          data.align = name;\n        }\n      });\n      global$1.each('top middle bottom'.split(' '), function (name) {\n        if (editor.formatter.matchNode(elm, 'valign' + name)) {\n          data.valign = name;\n        }\n      });\n      if (hasAdvancedCellTab(editor)) {\n        global$1.extend(data, Helpers.extractAdvancedStyles(dom, elm));\n      }\n      return data;\n    };\n    var onSubmitCellForm = function (editor, cells, evt) {\n      var dom = editor.dom;\n      var data;\n      function setAttrib(elm, name, value) {\n        if (cells.length === 1 || value) {\n          dom.setAttrib(elm, name, value);\n        }\n      }\n      function setStyle(elm, name, value) {\n        if (cells.length === 1 || value) {\n          dom.setStyle(elm, name, value);\n        }\n      }\n      if (hasAdvancedCellTab(editor)) {\n        Helpers.syncAdvancedStyleFields(editor, evt);\n      }\n      data = evt.control.rootControl.toJSON();\n      editor.undoManager.transact(function () {\n        global$1.each(cells, function (cellElm) {\n          setAttrib(cellElm, 'scope', data.scope);\n          if (cells.length === 1) {\n            setAttrib(cellElm, 'style', data.style);\n          } else {\n            updateStyles(cellElm, data.style);\n          }\n          setAttrib(cellElm, 'class', data.class);\n          setStyle(cellElm, 'width', addSizeSuffix(data.width));\n          setStyle(cellElm, 'height', addSizeSuffix(data.height));\n          if (data.type && cellElm.nodeName.toLowerCase() !== data.type) {\n            cellElm = dom.rename(cellElm, data.type);\n          }\n          if (cells.length === 1) {\n            Styles$1.unApplyAlign(editor, cellElm);\n            Styles$1.unApplyVAlign(editor, cellElm);\n          }\n          if (data.align) {\n            Styles$1.applyAlign(editor, cellElm, data.align);\n          }\n          if (data.valign) {\n            Styles$1.applyVAlign(editor, cellElm, data.valign);\n          }\n        });\n        editor.focus();\n      });\n    };\n    var open = function (editor) {\n      var cellElm, data, classListCtrl, cells = [];\n      cells = editor.dom.select('td[data-mce-selected],th[data-mce-selected]');\n      cellElm = editor.dom.getParent(editor.selection.getStart(), 'td,th');\n      if (!cells.length && cellElm) {\n        cells.push(cellElm);\n      }\n      cellElm = cellElm || cells[0];\n      if (!cellElm) {\n        return;\n      }\n      if (cells.length > 1) {\n        data = {\n          width: '',\n          height: '',\n          scope: '',\n          class: '',\n          align: '',\n          valign: '',\n          style: '',\n          type: cellElm.nodeName.toLowerCase()\n        };\n      } else {\n        data = extractDataFromElement(editor, cellElm);\n      }\n      if (getCellClassList(editor).length > 0) {\n        classListCtrl = {\n          name: 'class',\n          type: 'listbox',\n          label: 'Class',\n          values: Helpers.buildListItems(getCellClassList(editor), function (item) {\n            if (item.value) {\n              item.textStyle = function () {\n                return editor.formatter.getCssText({\n                  block: 'td',\n                  classes: [item.value]\n                });\n              };\n            }\n          })\n        };\n      }\n      var generalCellForm = {\n        type: 'form',\n        layout: 'flex',\n        direction: 'column',\n        labelGapCalc: 'children',\n        padding: 0,\n        items: [\n          {\n            type: 'form',\n            layout: 'grid',\n            columns: 2,\n            labelGapCalc: false,\n            padding: 0,\n            defaults: {\n              type: 'textbox',\n              maxWidth: 50\n            },\n            items: [\n              {\n                label: 'Width',\n                name: 'width',\n                onchange: curry(Helpers.updateStyleField, editor)\n              },\n              {\n                label: 'Height',\n                name: 'height',\n                onchange: curry(Helpers.updateStyleField, editor)\n              },\n              {\n                label: 'Cell type',\n                name: 'type',\n                type: 'listbox',\n                text: 'None',\n                minWidth: 90,\n                maxWidth: null,\n                values: [\n                  {\n                    text: 'Cell',\n                    value: 'td'\n                  },\n                  {\n                    text: 'Header cell',\n                    value: 'th'\n                  }\n                ]\n              },\n              {\n                label: 'Scope',\n                name: 'scope',\n                type: 'listbox',\n                text: 'None',\n                minWidth: 90,\n                maxWidth: null,\n                values: [\n                  {\n                    text: 'None',\n                    value: ''\n                  },\n                  {\n                    text: 'Row',\n                    value: 'row'\n                  },\n                  {\n                    text: 'Column',\n                    value: 'col'\n                  },\n                  {\n                    text: 'Row group',\n                    value: 'rowgroup'\n                  },\n                  {\n                    text: 'Column group',\n                    value: 'colgroup'\n                  }\n                ]\n              },\n              {\n                label: 'H Align',\n                name: 'align',\n                type: 'listbox',\n                text: 'None',\n                minWidth: 90,\n                maxWidth: null,\n                values: [\n                  {\n                    text: 'None',\n                    value: ''\n                  },\n                  {\n                    text: 'Left',\n                    value: 'left'\n                  },\n                  {\n                    text: 'Center',\n                    value: 'center'\n                  },\n                  {\n                    text: 'Right',\n                    value: 'right'\n                  }\n                ]\n              },\n              {\n                label: 'V Align',\n                name: 'valign',\n                type: 'listbox',\n                text: 'None',\n                minWidth: 90,\n                maxWidth: null,\n                values: [\n                  {\n                    text: 'None',\n                    value: ''\n                  },\n                  {\n                    text: 'Top',\n                    value: 'top'\n                  },\n                  {\n                    text: 'Middle',\n                    value: 'middle'\n                  },\n                  {\n                    text: 'Bottom',\n                    value: 'bottom'\n                  }\n                ]\n              }\n            ]\n          },\n          classListCtrl\n        ]\n      };\n      if (hasAdvancedCellTab(editor)) {\n        editor.windowManager.open({\n          title: 'Cell properties',\n          bodyType: 'tabpanel',\n          data: data,\n          body: [\n            {\n              title: 'General',\n              type: 'form',\n              items: generalCellForm\n            },\n            Helpers.createStyleForm(editor)\n          ],\n          onsubmit: curry(onSubmitCellForm, editor, cells)\n        });\n      } else {\n        editor.windowManager.open({\n          title: 'Cell properties',\n          data: data,\n          body: generalCellForm,\n          onsubmit: curry(onSubmitCellForm, editor, cells)\n        });\n      }\n    };\n    var CellDialog = { open: open };\n\n    var extractDataFromElement$1 = function (editor, elm) {\n      var dom = editor.dom;\n      var data = {\n        height: dom.getStyle(elm, 'height') || dom.getAttrib(elm, 'height'),\n        scope: dom.getAttrib(elm, 'scope'),\n        class: dom.getAttrib(elm, 'class'),\n        align: '',\n        style: '',\n        type: elm.parentNode.nodeName.toLowerCase()\n      };\n      global$1.each('left center right'.split(' '), function (name) {\n        if (editor.formatter.matchNode(elm, 'align' + name)) {\n          data.align = name;\n        }\n      });\n      if (hasAdvancedRowTab(editor)) {\n        global$1.extend(data, Helpers.extractAdvancedStyles(dom, elm));\n      }\n      return data;\n    };\n    var switchRowType = function (dom, rowElm, toType) {\n      var tableElm = dom.getParent(rowElm, 'table');\n      var oldParentElm = rowElm.parentNode;\n      var parentElm = dom.select(toType, tableElm)[0];\n      if (!parentElm) {\n        parentElm = dom.create(toType);\n        if (tableElm.firstChild) {\n          if (tableElm.firstChild.nodeName === 'CAPTION') {\n            dom.insertAfter(parentElm, tableElm.firstChild);\n          } else {\n            tableElm.insertBefore(parentElm, tableElm.firstChild);\n          }\n        } else {\n          tableElm.appendChild(parentElm);\n        }\n      }\n      parentElm.appendChild(rowElm);\n      if (!oldParentElm.hasChildNodes()) {\n        dom.remove(oldParentElm);\n      }\n    };\n    function onSubmitRowForm(editor, rows, oldData, evt) {\n      var dom = editor.dom;\n      function setAttrib(elm, name, value) {\n        if (rows.length === 1 || value) {\n          dom.setAttrib(elm, name, value);\n        }\n      }\n      function setStyle(elm, name, value) {\n        if (rows.length === 1 || value) {\n          dom.setStyle(elm, name, value);\n        }\n      }\n      if (hasAdvancedRowTab(editor)) {\n        Helpers.syncAdvancedStyleFields(editor, evt);\n      }\n      var data = evt.control.rootControl.toJSON();\n      editor.undoManager.transact(function () {\n        global$1.each(rows, function (rowElm) {\n          setAttrib(rowElm, 'scope', data.scope);\n          setAttrib(rowElm, 'style', data.style);\n          setAttrib(rowElm, 'class', data.class);\n          setStyle(rowElm, 'height', addSizeSuffix(data.height));\n          if (data.type !== rowElm.parentNode.nodeName.toLowerCase()) {\n            switchRowType(editor.dom, rowElm, data.type);\n          }\n          if (data.align !== oldData.align) {\n            Styles$1.unApplyAlign(editor, rowElm);\n            Styles$1.applyAlign(editor, rowElm, data.align);\n          }\n        });\n        editor.focus();\n      });\n    }\n    var open$1 = function (editor) {\n      var dom = editor.dom;\n      var tableElm, cellElm, rowElm, classListCtrl, data;\n      var rows = [];\n      var generalRowForm;\n      tableElm = dom.getParent(editor.selection.getStart(), 'table');\n      cellElm = dom.getParent(editor.selection.getStart(), 'td,th');\n      global$1.each(tableElm.rows, function (row) {\n        global$1.each(row.cells, function (cell) {\n          if (dom.getAttrib(cell, 'data-mce-selected') || cell === cellElm) {\n            rows.push(row);\n            return false;\n          }\n        });\n      });\n      rowElm = rows[0];\n      if (!rowElm) {\n        return;\n      }\n      if (rows.length > 1) {\n        data = {\n          height: '',\n          scope: '',\n          style: '',\n          class: '',\n          align: '',\n          type: rowElm.parentNode.nodeName.toLowerCase()\n        };\n      } else {\n        data = extractDataFromElement$1(editor, rowElm);\n      }\n      if (getRowClassList(editor).length > 0) {\n        classListCtrl = {\n          name: 'class',\n          type: 'listbox',\n          label: 'Class',\n          values: Helpers.buildListItems(getRowClassList(editor), function (item) {\n            if (item.value) {\n              item.textStyle = function () {\n                return editor.formatter.getCssText({\n                  block: 'tr',\n                  classes: [item.value]\n                });\n              };\n            }\n          })\n        };\n      }\n      generalRowForm = {\n        type: 'form',\n        columns: 2,\n        padding: 0,\n        defaults: { type: 'textbox' },\n        items: [\n          {\n            type: 'listbox',\n            name: 'type',\n            label: 'Row type',\n            text: 'Header',\n            maxWidth: null,\n            values: [\n              {\n                text: 'Header',\n                value: 'thead'\n              },\n              {\n                text: 'Body',\n                value: 'tbody'\n              },\n              {\n                text: 'Footer',\n                value: 'tfoot'\n              }\n            ]\n          },\n          {\n            type: 'listbox',\n            name: 'align',\n            label: 'Alignment',\n            text: 'None',\n            maxWidth: null,\n            values: [\n              {\n                text: 'None',\n                value: ''\n              },\n              {\n                text: 'Left',\n                value: 'left'\n              },\n              {\n                text: 'Center',\n                value: 'center'\n              },\n              {\n                text: 'Right',\n                value: 'right'\n              }\n            ]\n          },\n          {\n            label: 'Height',\n            name: 'height'\n          },\n          classListCtrl\n        ]\n      };\n      if (hasAdvancedRowTab(editor)) {\n        editor.windowManager.open({\n          title: 'Row properties',\n          data: data,\n          bodyType: 'tabpanel',\n          body: [\n            {\n              title: 'General',\n              type: 'form',\n              items: generalRowForm\n            },\n            Helpers.createStyleForm(editor)\n          ],\n          onsubmit: curry(onSubmitRowForm, editor, rows, data)\n        });\n      } else {\n        editor.windowManager.open({\n          title: 'Row properties',\n          data: data,\n          body: generalRowForm,\n          onsubmit: curry(onSubmitRowForm, editor, rows, data)\n        });\n      }\n    };\n    var RowDialog = { open: open$1 };\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var DefaultRenderOptions = {\n      styles: {\n        'border-collapse': 'collapse',\n        'width': '100%'\n      },\n      attributes: { border: '1' },\n      percentages: true\n    };\n    var makeTable = function () {\n      return Element.fromTag('table');\n    };\n    var tableBody = function () {\n      return Element.fromTag('tbody');\n    };\n    var tableRow = function () {\n      return Element.fromTag('tr');\n    };\n    var tableHeaderCell = function () {\n      return Element.fromTag('th');\n    };\n    var tableCell = function () {\n      return Element.fromTag('td');\n    };\n    var render$1 = function (rows, columns, rowHeaders, columnHeaders, renderOpts) {\n      if (renderOpts === void 0) {\n        renderOpts = DefaultRenderOptions;\n      }\n      var table = makeTable();\n      setAll$1(table, renderOpts.styles);\n      setAll(table, renderOpts.attributes);\n      var tbody = tableBody();\n      append(table, tbody);\n      var trs = [];\n      for (var i = 0; i < rows; i++) {\n        var tr = tableRow();\n        for (var j = 0; j < columns; j++) {\n          var td = i < rowHeaders || j < columnHeaders ? tableHeaderCell() : tableCell();\n          if (j < columnHeaders) {\n            set(td, 'scope', 'row');\n          }\n          if (i < rowHeaders) {\n            set(td, 'scope', 'col');\n          }\n          append(td, Element.fromTag('br'));\n          if (renderOpts.percentages) {\n            set$1(td, 'width', 100 / columns + '%');\n          }\n          append(tr, td);\n        }\n        trs.push(tr);\n      }\n      append$1(tbody, trs);\n      return table;\n    };\n\n    var get$7 = function (element) {\n      return element.dom().innerHTML;\n    };\n    var getOuter$2 = function (element) {\n      var container = Element.fromTag('div');\n      var clone = Element.fromDom(element.dom().cloneNode(true));\n      append(container, clone);\n      return get$7(container);\n    };\n\n    var placeCaretInCell = function (editor, cell) {\n      editor.selection.select(cell.dom(), true);\n      editor.selection.collapse(true);\n    };\n    var selectFirstCellInTable = function (editor, tableElm) {\n      descendant$1(tableElm, 'td,th').each(curry(placeCaretInCell, editor));\n    };\n    var fireEvents = function (editor, table) {\n      each(descendants$1(table, 'tr'), function (row) {\n        fireNewRow(editor, row.dom());\n        each(descendants$1(row, 'th,td'), function (cell) {\n          fireNewCell(editor, cell.dom());\n        });\n      });\n    };\n    var isPercentage = function (width) {\n      return isString(width) && width.indexOf('%') !== -1;\n    };\n    var insert$1 = function (editor, columns, rows) {\n      var defaultStyles = getDefaultStyles(editor);\n      var options = {\n        styles: defaultStyles,\n        attributes: getDefaultAttributes(editor),\n        percentages: isPercentage(defaultStyles.width) && !isPixelsForced(editor)\n      };\n      var table = render$1(rows, columns, 0, 0, options);\n      set(table, 'data-mce-id', '__mce');\n      var html = getOuter$2(table);\n      editor.insertContent(html);\n      return descendant$1(getBody$1(editor), 'table[data-mce-id=\"__mce\"]').map(function (table) {\n        if (isPixelsForced(editor)) {\n          set$1(table, 'width', get$1(table, 'width'));\n        }\n        remove(table, 'data-mce-id');\n        fireEvents(editor, table);\n        selectFirstCellInTable(editor, table);\n        return table.dom();\n      }).getOr(null);\n    };\n    var InsertTable = { insert: insert$1 };\n\n    function styleTDTH(dom, elm, name, value) {\n      if (elm.tagName === 'TD' || elm.tagName === 'TH') {\n        dom.setStyle(elm, name, value);\n      } else {\n        if (elm.children) {\n          for (var i = 0; i < elm.children.length; i++) {\n            styleTDTH(dom, elm.children[i], name, value);\n          }\n        }\n      }\n    }\n    var extractDataFromElement$2 = function (editor, tableElm) {\n      var dom = editor.dom;\n      var data = {\n        width: dom.getStyle(tableElm, 'width') || dom.getAttrib(tableElm, 'width'),\n        height: dom.getStyle(tableElm, 'height') || dom.getAttrib(tableElm, 'height'),\n        cellspacing: dom.getStyle(tableElm, 'border-spacing') || dom.getAttrib(tableElm, 'cellspacing'),\n        cellpadding: dom.getAttrib(tableElm, 'data-mce-cell-padding') || dom.getAttrib(tableElm, 'cellpadding') || Styles$1.getTDTHOverallStyle(editor.dom, tableElm, 'padding'),\n        border: dom.getAttrib(tableElm, 'data-mce-border') || dom.getAttrib(tableElm, 'border') || Styles$1.getTDTHOverallStyle(editor.dom, tableElm, 'border'),\n        borderColor: dom.getAttrib(tableElm, 'data-mce-border-color'),\n        caption: !!dom.select('caption', tableElm)[0],\n        class: dom.getAttrib(tableElm, 'class')\n      };\n      global$1.each('left center right'.split(' '), function (name) {\n        if (editor.formatter.matchNode(tableElm, 'align' + name)) {\n          data.align = name;\n        }\n      });\n      if (hasAdvancedTableTab(editor)) {\n        global$1.extend(data, Helpers.extractAdvancedStyles(dom, tableElm));\n      }\n      return data;\n    };\n    var applyDataToElement = function (editor, tableElm, data) {\n      var dom = editor.dom;\n      var attrs = {};\n      var styles = {};\n      attrs.class = data.class;\n      styles.height = addSizeSuffix(data.height);\n      if (dom.getAttrib(tableElm, 'width') && !shouldStyleWithCss(editor)) {\n        attrs.width = removePxSuffix(data.width);\n      } else {\n        styles.width = addSizeSuffix(data.width);\n      }\n      if (shouldStyleWithCss(editor)) {\n        styles['border-width'] = addSizeSuffix(data.border);\n        styles['border-spacing'] = addSizeSuffix(data.cellspacing);\n        global$1.extend(attrs, {\n          'data-mce-border-color': data.borderColor,\n          'data-mce-cell-padding': data.cellpadding,\n          'data-mce-border': data.border\n        });\n      } else {\n        global$1.extend(attrs, {\n          border: data.border,\n          cellpadding: data.cellpadding,\n          cellspacing: data.cellspacing\n        });\n      }\n      if (shouldStyleWithCss(editor)) {\n        if (tableElm.children) {\n          for (var i = 0; i < tableElm.children.length; i++) {\n            styleTDTH(dom, tableElm.children[i], {\n              'border-width': addSizeSuffix(data.border),\n              'border-color': data.borderColor,\n              'padding': addSizeSuffix(data.cellpadding)\n            });\n          }\n        }\n      }\n      if (data.style) {\n        global$1.extend(styles, dom.parseStyle(data.style));\n      } else {\n        styles = global$1.extend({}, dom.parseStyle(dom.getAttrib(tableElm, 'style')), styles);\n      }\n      attrs.style = dom.serializeStyle(styles);\n      dom.setAttribs(tableElm, attrs);\n    };\n    var onSubmitTableForm = function (editor, tableElm, evt) {\n      var dom = editor.dom;\n      var captionElm;\n      var data;\n      if (hasAdvancedTableTab(editor)) {\n        Helpers.syncAdvancedStyleFields(editor, evt);\n      }\n      data = evt.control.rootControl.toJSON();\n      if (data.class === false) {\n        delete data.class;\n      }\n      editor.undoManager.transact(function () {\n        if (!tableElm) {\n          tableElm = InsertTable.insert(editor, data.cols || 1, data.rows || 1);\n        }\n        applyDataToElement(editor, tableElm, data);\n        captionElm = dom.select('caption', tableElm)[0];\n        if (captionElm && !data.caption) {\n          dom.remove(captionElm);\n        }\n        if (!captionElm && data.caption) {\n          captionElm = dom.create('caption');\n          captionElm.innerHTML = !global$2.ie ? '<br data-mce-bogus=\"1\"/>' : '\\xA0';\n          tableElm.insertBefore(captionElm, tableElm.firstChild);\n        }\n        Styles$1.unApplyAlign(editor, tableElm);\n        if (data.align) {\n          Styles$1.applyAlign(editor, tableElm, data.align);\n        }\n        editor.focus();\n        editor.addVisual();\n      });\n    };\n    var open$2 = function (editor, isProps) {\n      var dom = editor.dom;\n      var tableElm, colsCtrl, rowsCtrl, classListCtrl, data = {}, generalTableForm;\n      if (isProps === true) {\n        tableElm = dom.getParent(editor.selection.getStart(), 'table');\n        if (tableElm) {\n          data = extractDataFromElement$2(editor, tableElm);\n        }\n      } else {\n        colsCtrl = {\n          label: 'Cols',\n          name: 'cols'\n        };\n        rowsCtrl = {\n          label: 'Rows',\n          name: 'rows'\n        };\n      }\n      if (getTableClassList(editor).length > 0) {\n        if (data.class) {\n          data.class = data.class.replace(/\\s*mce\\-item\\-table\\s*/g, '');\n        }\n        classListCtrl = {\n          name: 'class',\n          type: 'listbox',\n          label: 'Class',\n          values: Helpers.buildListItems(getTableClassList(editor), function (item) {\n            if (item.value) {\n              item.textStyle = function () {\n                return editor.formatter.getCssText({\n                  block: 'table',\n                  classes: [item.value]\n                });\n              };\n            }\n          })\n        };\n      }\n      generalTableForm = {\n        type: 'form',\n        layout: 'flex',\n        direction: 'column',\n        labelGapCalc: 'children',\n        padding: 0,\n        items: [\n          {\n            type: 'form',\n            labelGapCalc: false,\n            padding: 0,\n            layout: 'grid',\n            columns: 2,\n            defaults: {\n              type: 'textbox',\n              maxWidth: 50\n            },\n            items: hasAppearanceOptions(editor) ? [\n              colsCtrl,\n              rowsCtrl,\n              {\n                label: 'Width',\n                name: 'width',\n                onchange: curry(Helpers.updateStyleField, editor)\n              },\n              {\n                label: 'Height',\n                name: 'height',\n                onchange: curry(Helpers.updateStyleField, editor)\n              },\n              {\n                label: 'Cell spacing',\n                name: 'cellspacing'\n              },\n              {\n                label: 'Cell padding',\n                name: 'cellpadding'\n              },\n              {\n                label: 'Border',\n                name: 'border'\n              },\n              {\n                label: 'Caption',\n                name: 'caption',\n                type: 'checkbox'\n              }\n            ] : [\n              colsCtrl,\n              rowsCtrl,\n              {\n                label: 'Width',\n                name: 'width',\n                onchange: curry(Helpers.updateStyleField, editor)\n              },\n              {\n                label: 'Height',\n                name: 'height',\n                onchange: curry(Helpers.updateStyleField, editor)\n              }\n            ]\n          },\n          {\n            label: 'Alignment',\n            name: 'align',\n            type: 'listbox',\n            text: 'None',\n            values: [\n              {\n                text: 'None',\n                value: ''\n              },\n              {\n                text: 'Left',\n                value: 'left'\n              },\n              {\n                text: 'Center',\n                value: 'center'\n              },\n              {\n                text: 'Right',\n                value: 'right'\n              }\n            ]\n          },\n          classListCtrl\n        ]\n      };\n      if (hasAdvancedTableTab(editor)) {\n        editor.windowManager.open({\n          title: 'Table properties',\n          data: data,\n          bodyType: 'tabpanel',\n          body: [\n            {\n              title: 'General',\n              type: 'form',\n              items: generalTableForm\n            },\n            Helpers.createStyleForm(editor)\n          ],\n          onsubmit: curry(onSubmitTableForm, editor, tableElm)\n        });\n      } else {\n        editor.windowManager.open({\n          title: 'Table properties',\n          data: data,\n          body: generalTableForm,\n          onsubmit: curry(onSubmitTableForm, editor, tableElm)\n        });\n      }\n    };\n    var TableDialog = { open: open$2 };\n\n    var each$3 = global$1.each;\n    var registerCommands = function (editor, actions, cellSelection, selections, clipboardRows) {\n      var isRoot = getIsRoot(editor);\n      var eraseTable = function () {\n        getSelectionStartCell().orThunk(getSelectionStartCaption).each(function (cellOrCaption) {\n          var table = TableLookup.table(cellOrCaption, isRoot);\n          table.filter(not(isRoot)).each(function (table) {\n            var cursor = Element.fromText('');\n            after(table, cursor);\n            remove$2(table);\n            var rng = editor.dom.createRng();\n            rng.setStart(cursor.dom(), 0);\n            rng.setEnd(cursor.dom(), 0);\n            editor.selection.setRng(rng);\n          });\n        });\n      };\n      var getSelectionStartFromSelector = function (selector) {\n        return function () {\n          return Option.from(editor.dom.getParent(editor.selection.getStart(), selector)).map(Element.fromDom);\n        };\n      };\n      var getSelectionStartCaption = getSelectionStartFromSelector('caption');\n      var getSelectionStartCell = getSelectionStartFromSelector('th,td');\n      var getTableFromCell = function (cell) {\n        return TableLookup.table(cell, isRoot);\n      };\n      var getSize = function (table) {\n        return {\n          width: getPixelWidth$1(table.dom()),\n          height: getPixelWidth$1(table.dom())\n        };\n      };\n      var resizeChange = function (editor, oldSize, table) {\n        var newSize = getSize(table);\n        if (oldSize.width !== newSize.width || oldSize.height !== newSize.height) {\n          fireObjectResizeStart(editor, table.dom(), oldSize.width, oldSize.height);\n          fireObjectResized(editor, table.dom(), newSize.width, newSize.height);\n        }\n      };\n      var actOnSelection = function (execute) {\n        getSelectionStartCell().each(function (cell) {\n          getTableFromCell(cell).each(function (table) {\n            var targets = TableTargets.forMenu(selections, table, cell);\n            var beforeSize = getSize(table);\n            execute(table, targets).each(function (rng) {\n              resizeChange(editor, beforeSize, table);\n              editor.selection.setRng(rng);\n              editor.focus();\n              cellSelection.clear(table);\n              removeDataStyle(table);\n            });\n          });\n        });\n      };\n      var copyRowSelection = function (execute) {\n        return getSelectionStartCell().bind(function (cell) {\n          return getTableFromCell(cell).bind(function (table) {\n            var doc = Element.fromDom(editor.getDoc());\n            var targets = TableTargets.forMenu(selections, table, cell);\n            var generators = TableFill.cellOperations(noop, doc, Option.none());\n            return CopyRows.copyRows(table, targets, generators);\n          });\n        });\n      };\n      var pasteOnSelection = function (execute) {\n        clipboardRows.get().each(function (rows) {\n          var clonedRows = map(rows, function (row) {\n            return deep(row);\n          });\n          getSelectionStartCell().each(function (cell) {\n            getTableFromCell(cell).each(function (table) {\n              var doc = Element.fromDom(editor.getDoc());\n              var generators = TableFill.paste(doc);\n              var targets = TableTargets.pasteRows(selections, table, cell, clonedRows, generators);\n              execute(table, targets).each(function (rng) {\n                editor.selection.setRng(rng);\n                editor.focus();\n                cellSelection.clear(table);\n              });\n            });\n          });\n        });\n      };\n      each$3({\n        mceTableSplitCells: function () {\n          actOnSelection(actions.unmergeCells);\n        },\n        mceTableMergeCells: function () {\n          actOnSelection(actions.mergeCells);\n        },\n        mceTableInsertRowBefore: function () {\n          actOnSelection(actions.insertRowsBefore);\n        },\n        mceTableInsertRowAfter: function () {\n          actOnSelection(actions.insertRowsAfter);\n        },\n        mceTableInsertColBefore: function () {\n          actOnSelection(actions.insertColumnsBefore);\n        },\n        mceTableInsertColAfter: function () {\n          actOnSelection(actions.insertColumnsAfter);\n        },\n        mceTableDeleteCol: function () {\n          actOnSelection(actions.deleteColumn);\n        },\n        mceTableDeleteRow: function () {\n          actOnSelection(actions.deleteRow);\n        },\n        mceTableCutRow: function (grid) {\n          clipboardRows.set(copyRowSelection());\n          actOnSelection(actions.deleteRow);\n        },\n        mceTableCopyRow: function (grid) {\n          clipboardRows.set(copyRowSelection());\n        },\n        mceTablePasteRowBefore: function (grid) {\n          pasteOnSelection(actions.pasteRowsBefore);\n        },\n        mceTablePasteRowAfter: function (grid) {\n          pasteOnSelection(actions.pasteRowsAfter);\n        },\n        mceTableDelete: eraseTable\n      }, function (func, name) {\n        editor.addCommand(name, func);\n      });\n      each$3({\n        mceInsertTable: curry(TableDialog.open, editor),\n        mceTableProps: curry(TableDialog.open, editor, true),\n        mceTableRowProps: curry(RowDialog.open, editor),\n        mceTableCellProps: curry(CellDialog.open, editor)\n      }, function (func, name) {\n        editor.addCommand(name, function (ui, val) {\n          func(val);\n        });\n      });\n    };\n    var Commands = { registerCommands: registerCommands };\n\n    var only = function (element) {\n      var parent = Option.from(element.dom().documentElement).map(Element.fromDom).getOr(element);\n      return {\n        parent: constant(parent),\n        view: constant(element),\n        origin: constant(Position(0, 0))\n      };\n    };\n    var detached = function (editable, chrome) {\n      var origin = function () {\n        return absolute(chrome);\n      };\n      return {\n        parent: constant(chrome),\n        view: constant(editable),\n        origin: origin\n      };\n    };\n    var body$1 = function (editable, chrome) {\n      return {\n        parent: constant(chrome),\n        view: constant(editable),\n        origin: constant(Position(0, 0))\n      };\n    };\n    var ResizeWire = {\n      only: only,\n      detached: detached,\n      body: body$1\n    };\n\n    var Event = function (fields) {\n      var struct = Immutable.apply(null, fields);\n      var handlers = [];\n      var bind = function (handler) {\n        if (handler === undefined) {\n          throw new Error('Event bind error: undefined handler');\n        }\n        handlers.push(handler);\n      };\n      var unbind = function (handler) {\n        handlers = filter(handlers, function (h) {\n          return h !== handler;\n        });\n      };\n      var trigger = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        var event = struct.apply(null, args);\n        each(handlers, function (handler) {\n          handler(event);\n        });\n      };\n      return {\n        bind: bind,\n        unbind: unbind,\n        trigger: trigger\n      };\n    };\n\n    var create$1 = function (typeDefs) {\n      var registry = map$1(typeDefs, function (event) {\n        return {\n          bind: event.bind,\n          unbind: event.unbind\n        };\n      });\n      var trigger = map$1(typeDefs, function (event) {\n        return event.trigger;\n      });\n      return {\n        registry: registry,\n        trigger: trigger\n      };\n    };\n    var Events = { create: create$1 };\n\n    var mkEvent = function (target, x, y, stop, prevent, kill, raw) {\n      return {\n        target: constant(target),\n        x: constant(x),\n        y: constant(y),\n        stop: stop,\n        prevent: prevent,\n        kill: kill,\n        raw: constant(raw)\n      };\n    };\n    var handle = function (filter, handler) {\n      return function (rawEvent) {\n        if (!filter(rawEvent)) {\n          return;\n        }\n        var target = Element.fromDom(rawEvent.target);\n        var stop = function () {\n          rawEvent.stopPropagation();\n        };\n        var prevent = function () {\n          rawEvent.preventDefault();\n        };\n        var kill = compose(prevent, stop);\n        var evt = mkEvent(target, rawEvent.clientX, rawEvent.clientY, stop, prevent, kill, rawEvent);\n        handler(evt);\n      };\n    };\n    var binder = function (element, event, filter, handler, useCapture) {\n      var wrapped = handle(filter, handler);\n      element.dom().addEventListener(event, wrapped, useCapture);\n      return { unbind: curry(unbind, element, event, wrapped, useCapture) };\n    };\n    var bind$1 = function (element, event, filter, handler) {\n      return binder(element, event, filter, handler, false);\n    };\n    var unbind = function (element, event, handler, useCapture) {\n      element.dom().removeEventListener(event, handler, useCapture);\n    };\n\n    var filter$1 = constant(true);\n    var bind$2 = function (element, event, handler) {\n      return bind$1(element, event, filter$1, handler);\n    };\n\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var shallow$1 = function (old, nu) {\n      return nu;\n    };\n    var baseMerge = function (merger) {\n      return function () {\n        var objects = new Array(arguments.length);\n        for (var i = 0; i < objects.length; i++) {\n          objects[i] = arguments[i];\n        }\n        if (objects.length === 0) {\n          throw new Error('Can\\'t merge zero objects');\n        }\n        var ret = {};\n        for (var j = 0; j < objects.length; j++) {\n          var curObject = objects[j];\n          for (var key in curObject) {\n            if (hasOwnProperty.call(curObject, key)) {\n              ret[key] = merger(ret[key], curObject[key]);\n            }\n          }\n        }\n        return ret;\n      };\n    };\n    var merge$3 = baseMerge(shallow$1);\n\n    var styles$1 = css('ephox-dragster');\n    var Styles$2 = { resolve: styles$1.resolve };\n\n    var Blocker = function (options) {\n      var settings = merge$3({ layerClass: Styles$2.resolve('blocker') }, options);\n      var div = Element.fromTag('div');\n      set(div, 'role', 'presentation');\n      setAll$1(div, {\n        position: 'fixed',\n        left: '0px',\n        top: '0px',\n        width: '100%',\n        height: '100%'\n      });\n      add$2(div, Styles$2.resolve('blocker'));\n      add$2(div, settings.layerClass);\n      var element = function () {\n        return div;\n      };\n      var destroy = function () {\n        remove$2(div);\n      };\n      return {\n        element: element,\n        destroy: destroy\n      };\n    };\n\n    var DragMode = exactly([\n      'compare',\n      'extract',\n      'mutate',\n      'sink'\n    ]);\n    var DragSink = exactly([\n      'element',\n      'start',\n      'stop',\n      'destroy'\n    ]);\n    var DragApi = exactly([\n      'forceDrop',\n      'drop',\n      'move',\n      'delayDrop'\n    ]);\n\n    var compare = function (old, nu) {\n      return Position(nu.left() - old.left(), nu.top() - old.top());\n    };\n    var extract$1 = function (event) {\n      return Option.some(Position(event.x(), event.y()));\n    };\n    var mutate = function (mutation, info) {\n      mutation.mutate(info.left(), info.top());\n    };\n    var sink = function (dragApi, settings) {\n      var blocker = Blocker(settings);\n      var mdown = bind$2(blocker.element(), 'mousedown', dragApi.forceDrop);\n      var mup = bind$2(blocker.element(), 'mouseup', dragApi.drop);\n      var mmove = bind$2(blocker.element(), 'mousemove', dragApi.move);\n      var mout = bind$2(blocker.element(), 'mouseout', dragApi.delayDrop);\n      var destroy = function () {\n        blocker.destroy();\n        mup.unbind();\n        mmove.unbind();\n        mout.unbind();\n        mdown.unbind();\n      };\n      var start = function (parent) {\n        append(parent, blocker.element());\n      };\n      var stop = function () {\n        remove$2(blocker.element());\n      };\n      return DragSink({\n        element: blocker.element,\n        start: start,\n        stop: stop,\n        destroy: destroy\n      });\n    };\n    var MouseDrag = DragMode({\n      compare: compare,\n      extract: extract$1,\n      sink: sink,\n      mutate: mutate\n    });\n\n    var last$2 = function (fn, rate) {\n      var timer = null;\n      var cancel = function () {\n        if (timer !== null) {\n          domGlobals.clearTimeout(timer);\n          timer = null;\n        }\n      };\n      var throttle = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        if (timer !== null) {\n          domGlobals.clearTimeout(timer);\n        }\n        timer = domGlobals.setTimeout(function () {\n          fn.apply(null, args);\n          timer = null;\n        }, rate);\n      };\n      return {\n        cancel: cancel,\n        throttle: throttle\n      };\n    };\n\n    function InDrag () {\n      var previous = Option.none();\n      var reset = function () {\n        previous = Option.none();\n      };\n      var update = function (mode, nu) {\n        var result = previous.map(function (old) {\n          return mode.compare(old, nu);\n        });\n        previous = Option.some(nu);\n        return result;\n      };\n      var onEvent = function (event, mode) {\n        var dataOption = mode.extract(event);\n        dataOption.each(function (data) {\n          var offset = update(mode, data);\n          offset.each(function (d) {\n            events.trigger.move(d);\n          });\n        });\n      };\n      var events = Events.create({ move: Event(['info']) });\n      return {\n        onEvent: onEvent,\n        reset: reset,\n        events: events.registry\n      };\n    }\n\n    function NoDrag () {\n      return {\n        onEvent: noop,\n        reset: noop\n      };\n    }\n\n    function Movement () {\n      var noDragState = NoDrag();\n      var inDragState = InDrag();\n      var dragState = noDragState;\n      var on = function () {\n        dragState.reset();\n        dragState = inDragState;\n      };\n      var off = function () {\n        dragState.reset();\n        dragState = noDragState;\n      };\n      var onEvent = function (event, mode) {\n        dragState.onEvent(event, mode);\n      };\n      var isOn = function () {\n        return dragState === inDragState;\n      };\n      return {\n        on: on,\n        off: off,\n        isOn: isOn,\n        onEvent: onEvent,\n        events: inDragState.events\n      };\n    }\n\n    var setup = function (mutation, mode, settings) {\n      var active = false;\n      var events = Events.create({\n        start: Event([]),\n        stop: Event([])\n      });\n      var movement = Movement();\n      var drop = function () {\n        sink.stop();\n        if (movement.isOn()) {\n          movement.off();\n          events.trigger.stop();\n        }\n      };\n      var throttledDrop = last$2(drop, 200);\n      var go = function (parent) {\n        sink.start(parent);\n        movement.on();\n        events.trigger.start();\n      };\n      var mousemove = function (event) {\n        throttledDrop.cancel();\n        movement.onEvent(event, mode);\n      };\n      movement.events.move.bind(function (event) {\n        mode.mutate(mutation, event.info());\n      });\n      var on = function () {\n        active = true;\n      };\n      var off = function () {\n        active = false;\n      };\n      var runIfActive = function (f) {\n        return function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          if (active) {\n            f.apply(null, args);\n          }\n        };\n      };\n      var sink = mode.sink(DragApi({\n        forceDrop: drop,\n        drop: runIfActive(drop),\n        move: runIfActive(mousemove),\n        delayDrop: runIfActive(throttledDrop.throttle)\n      }), settings);\n      var destroy = function () {\n        sink.destroy();\n      };\n      return {\n        element: sink.element,\n        go: go,\n        on: on,\n        off: off,\n        destroy: destroy,\n        events: events.registry\n      };\n    };\n    var Dragging = { setup: setup };\n\n    var transform$1 = function (mutation, settings) {\n      if (settings === void 0) {\n        settings = {};\n      }\n      var mode = settings.mode !== undefined ? settings.mode : MouseDrag;\n      return Dragging.setup(mutation, mode, settings);\n    };\n    var Dragger = { transform: transform$1 };\n\n    var Mutation = function () {\n      var events = Events.create({\n        drag: Event([\n          'xDelta',\n          'yDelta'\n        ])\n      });\n      var mutate = function (x, y) {\n        events.trigger.drag(x, y);\n      };\n      return {\n        mutate: mutate,\n        events: events.registry\n      };\n    };\n\n    var BarMutation = function () {\n      var events = Events.create({\n        drag: Event([\n          'xDelta',\n          'yDelta',\n          'target'\n        ])\n      });\n      var target = Option.none();\n      var delegate = Mutation();\n      delegate.events.drag.bind(function (event) {\n        target.each(function (t) {\n          events.trigger.drag(event.xDelta(), event.yDelta(), t);\n        });\n      });\n      var assign = function (t) {\n        target = Option.some(t);\n      };\n      var get = function () {\n        return target;\n      };\n      return {\n        assign: assign,\n        get: get,\n        mutate: delegate.mutate,\n        events: events.registry\n      };\n    };\n\n    var isContentEditableTrue = function (elm) {\n      return get(elm, 'contenteditable') === 'true';\n    };\n    var findClosestContentEditable = function (target, isRoot) {\n      return closest$1(target, '[contenteditable]', isRoot);\n    };\n\n    var resizeBarDragging = Styles.resolve('resizer-bar-dragging');\n    var BarManager = function (wire, direction, hdirection) {\n      var mutation = BarMutation();\n      var resizing = Dragger.transform(mutation, {});\n      var hoverTable = Option.none();\n      var getResizer = function (element, type) {\n        return Option.from(get(element, type));\n      };\n      mutation.events.drag.bind(function (event) {\n        getResizer(event.target(), 'data-row').each(function (_dataRow) {\n          var currentRow = CellUtils.getInt(event.target(), 'top');\n          set$1(event.target(), 'top', currentRow + event.yDelta() + 'px');\n        });\n        getResizer(event.target(), 'data-column').each(function (_dataCol) {\n          var currentCol = CellUtils.getInt(event.target(), 'left');\n          set$1(event.target(), 'left', currentCol + event.xDelta() + 'px');\n        });\n      });\n      var getDelta = function (target, dir) {\n        var newX = CellUtils.getInt(target, dir);\n        var oldX = parseInt(get(target, 'data-initial-' + dir), 10);\n        return newX - oldX;\n      };\n      resizing.events.stop.bind(function () {\n        mutation.get().each(function (target) {\n          hoverTable.each(function (table) {\n            getResizer(target, 'data-row').each(function (row) {\n              var delta = getDelta(target, 'top');\n              remove(target, 'data-initial-top');\n              events.trigger.adjustHeight(table, delta, parseInt(row, 10));\n            });\n            getResizer(target, 'data-column').each(function (column) {\n              var delta = getDelta(target, 'left');\n              remove(target, 'data-initial-left');\n              events.trigger.adjustWidth(table, delta, parseInt(column, 10));\n            });\n            Bars.refresh(wire, table, hdirection, direction);\n          });\n        });\n      });\n      var handler = function (target, dir) {\n        events.trigger.startAdjust();\n        mutation.assign(target);\n        set(target, 'data-initial-' + dir, parseInt(get$1(target, dir), 10));\n        add$2(target, resizeBarDragging);\n        set$1(target, 'opacity', '0.2');\n        resizing.go(wire.parent());\n      };\n      var mousedown = bind$2(wire.parent(), 'mousedown', function (event) {\n        if (Bars.isRowBar(event.target())) {\n          handler(event.target(), 'top');\n        }\n        if (Bars.isColBar(event.target())) {\n          handler(event.target(), 'left');\n        }\n      });\n      var isRoot = function (e) {\n        return eq(e, wire.view());\n      };\n      var findClosestEditableTable = function (target) {\n        return closest$1(target, 'table', isRoot).filter(function (table) {\n          return findClosestContentEditable(table, isRoot).exists(isContentEditableTrue);\n        });\n      };\n      var mouseover = bind$2(wire.view(), 'mouseover', function (event) {\n        findClosestEditableTable(event.target()).fold(function () {\n          if (inBody(event.target())) {\n            Bars.destroy(wire);\n          }\n        }, function (table) {\n          hoverTable = Option.some(table);\n          Bars.refresh(wire, table, hdirection, direction);\n        });\n      });\n      var destroy = function () {\n        mousedown.unbind();\n        mouseover.unbind();\n        resizing.destroy();\n        Bars.destroy(wire);\n      };\n      var refresh = function (tbl) {\n        Bars.refresh(wire, tbl, hdirection, direction);\n      };\n      var events = Events.create({\n        adjustHeight: Event([\n          'table',\n          'delta',\n          'row'\n        ]),\n        adjustWidth: Event([\n          'table',\n          'delta',\n          'column'\n        ]),\n        startAdjust: Event([])\n      });\n      return {\n        destroy: destroy,\n        refresh: refresh,\n        on: resizing.on,\n        off: resizing.off,\n        hideBars: curry(Bars.hide, wire),\n        showBars: curry(Bars.show, wire),\n        events: events.registry\n      };\n    };\n\n    var create$2 = function (wire, vdirection) {\n      var hdirection = BarPositions.height;\n      var manager = BarManager(wire, vdirection, hdirection);\n      var events = Events.create({\n        beforeResize: Event(['table']),\n        afterResize: Event(['table']),\n        startDrag: Event([])\n      });\n      manager.events.adjustHeight.bind(function (event) {\n        events.trigger.beforeResize(event.table());\n        var delta = hdirection.delta(event.delta(), event.table());\n        Adjustments.adjustHeight(event.table(), delta, event.row(), hdirection);\n        events.trigger.afterResize(event.table());\n      });\n      manager.events.startAdjust.bind(function (event) {\n        events.trigger.startDrag();\n      });\n      manager.events.adjustWidth.bind(function (event) {\n        events.trigger.beforeResize(event.table());\n        var delta = vdirection.delta(event.delta(), event.table());\n        Adjustments.adjustWidth(event.table(), delta, event.column(), vdirection);\n        events.trigger.afterResize(event.table());\n      });\n      return {\n        on: manager.on,\n        off: manager.off,\n        hideBars: manager.hideBars,\n        showBars: manager.showBars,\n        destroy: manager.destroy,\n        events: events.registry\n      };\n    };\n    var TableResize = { create: create$2 };\n\n    var createContainer = function () {\n      var container = Element.fromTag('div');\n      setAll$1(container, {\n        position: 'static',\n        height: '0',\n        width: '0',\n        padding: '0',\n        margin: '0',\n        border: '0'\n      });\n      append(body(), container);\n      return container;\n    };\n    var get$8 = function (editor, container) {\n      return editor.inline ? ResizeWire.body(getBody$1(editor), createContainer()) : ResizeWire.only(Element.fromDom(editor.getDoc()));\n    };\n    var remove$6 = function (editor, wire) {\n      if (editor.inline) {\n        remove$2(wire.parent());\n      }\n    };\n    var TableWire = {\n      get: get$8,\n      remove: remove$6\n    };\n\n    var ResizeHandler = function (editor) {\n      var selectionRng = Option.none();\n      var resize = Option.none();\n      var wire = Option.none();\n      var percentageBasedSizeRegex = /(\\d+(\\.\\d+)?)%/;\n      var startW, startRawW;\n      var isTable = function (elm) {\n        return elm.nodeName === 'TABLE';\n      };\n      var getRawWidth = function (elm) {\n        return editor.dom.getStyle(elm, 'width') || editor.dom.getAttrib(elm, 'width');\n      };\n      var lazyResize = function () {\n        return resize;\n      };\n      var lazyWire = function () {\n        return wire.getOr(ResizeWire.only(Element.fromDom(editor.getBody())));\n      };\n      var destroy = function () {\n        resize.each(function (sz) {\n          sz.destroy();\n        });\n        wire.each(function (w) {\n          TableWire.remove(editor, w);\n        });\n      };\n      editor.on('init', function () {\n        var direction = TableDirection(Direction.directionAt);\n        var rawWire = TableWire.get(editor);\n        wire = Option.some(rawWire);\n        if (hasObjectResizing(editor) && hasTableResizeBars(editor)) {\n          var sz = TableResize.create(rawWire, direction);\n          sz.on();\n          sz.events.startDrag.bind(function (event) {\n            selectionRng = Option.some(editor.selection.getRng());\n          });\n          sz.events.beforeResize.bind(function (event) {\n            var rawTable = event.table().dom();\n            fireObjectResizeStart(editor, rawTable, getPixelWidth$1(rawTable), getPixelHeight(rawTable));\n          });\n          sz.events.afterResize.bind(function (event) {\n            var table = event.table();\n            var rawTable = table.dom();\n            removeDataStyle(table);\n            selectionRng.each(function (rng) {\n              editor.selection.setRng(rng);\n              editor.focus();\n            });\n            fireObjectResized(editor, rawTable, getPixelWidth$1(rawTable), getPixelHeight(rawTable));\n            editor.undoManager.add();\n          });\n          resize = Option.some(sz);\n        }\n      });\n      editor.on('ObjectResizeStart', function (e) {\n        var targetElm = e.target;\n        if (isTable(targetElm)) {\n          startW = e.width;\n          startRawW = getRawWidth(targetElm);\n        }\n      });\n      editor.on('ObjectResized', function (e) {\n        var targetElm = e.target;\n        if (isTable(targetElm)) {\n          var table = targetElm;\n          if (percentageBasedSizeRegex.test(startRawW)) {\n            var percentW = parseFloat(percentageBasedSizeRegex.exec(startRawW)[1]);\n            var targetPercentW = e.width * percentW / startW;\n            editor.dom.setStyle(table, 'width', targetPercentW + '%');\n          } else {\n            var newCellSizes_1 = [];\n            global$1.each(table.rows, function (row) {\n              global$1.each(row.cells, function (cell) {\n                var width = editor.dom.getStyle(cell, 'width', true);\n                newCellSizes_1.push({\n                  cell: cell,\n                  width: width\n                });\n              });\n            });\n            global$1.each(newCellSizes_1, function (newCellSize) {\n              editor.dom.setStyle(newCellSize.cell, 'width', newCellSize.width);\n              editor.dom.setAttrib(newCellSize.cell, 'width', null);\n            });\n          }\n        }\n      });\n      return {\n        lazyResize: lazyResize,\n        lazyWire: lazyWire,\n        destroy: destroy\n      };\n    };\n\n    var adt$1 = Adt.generate([\n      { none: ['current'] },\n      { first: ['current'] },\n      {\n        middle: [\n          'current',\n          'target'\n        ]\n      },\n      { last: ['current'] }\n    ]);\n    var none$1 = function (current) {\n      if (current === void 0) {\n        current = undefined;\n      }\n      return adt$1.none(current);\n    };\n    var CellLocation = __assign(__assign({}, adt$1), { none: none$1 });\n\n    var detect$4 = function (current, isRoot) {\n      return TableLookup.table(current, isRoot).bind(function (table) {\n        var all = TableLookup.cells(table);\n        var index = findIndex(all, function (x) {\n          return eq(current, x);\n        });\n        return index.map(function (ind) {\n          return {\n            index: constant(ind),\n            all: constant(all)\n          };\n        });\n      });\n    };\n    var next = function (current, isRoot) {\n      var detection = detect$4(current, isRoot);\n      return detection.fold(function () {\n        return CellLocation.none(current);\n      }, function (info) {\n        return info.index() + 1 < info.all().length ? CellLocation.middle(current, info.all()[info.index() + 1]) : CellLocation.last(current);\n      });\n    };\n    var prev = function (current, isRoot) {\n      var detection = detect$4(current, isRoot);\n      return detection.fold(function () {\n        return CellLocation.none();\n      }, function (info) {\n        return info.index() - 1 >= 0 ? CellLocation.middle(current, info.all()[info.index() - 1]) : CellLocation.first(current);\n      });\n    };\n    var CellNavigation = {\n      next: next,\n      prev: prev\n    };\n\n    var create$3 = Immutable('start', 'soffset', 'finish', 'foffset');\n    var SimRange = { create: create$3 };\n\n    var adt$2 = Adt.generate([\n      { before: ['element'] },\n      {\n        on: [\n          'element',\n          'offset'\n        ]\n      },\n      { after: ['element'] }\n    ]);\n    var cata$1 = function (subject, onBefore, onOn, onAfter) {\n      return subject.fold(onBefore, onOn, onAfter);\n    };\n    var getStart = function (situ) {\n      return situ.fold(identity, identity, identity);\n    };\n    var before$2 = adt$2.before;\n    var on = adt$2.on;\n    var after$2 = adt$2.after;\n    var Situ = {\n      before: before$2,\n      on: on,\n      after: after$2,\n      cata: cata$1,\n      getStart: getStart\n    };\n\n    var adt$3 = Adt.generate([\n      { domRange: ['rng'] },\n      {\n        relative: [\n          'startSitu',\n          'finishSitu'\n        ]\n      },\n      {\n        exact: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      }\n    ]);\n    var exactFromRange = function (simRange) {\n      return adt$3.exact(simRange.start(), simRange.soffset(), simRange.finish(), simRange.foffset());\n    };\n    var getStart$1 = function (selection) {\n      return selection.match({\n        domRange: function (rng) {\n          return Element.fromDom(rng.startContainer);\n        },\n        relative: function (startSitu, finishSitu) {\n          return Situ.getStart(startSitu);\n        },\n        exact: function (start, soffset, finish, foffset) {\n          return start;\n        }\n      });\n    };\n    var domRange = adt$3.domRange;\n    var relative = adt$3.relative;\n    var exact = adt$3.exact;\n    var getWin = function (selection) {\n      var start = getStart$1(selection);\n      return defaultView(start);\n    };\n    var range$1 = SimRange.create;\n    var Selection = {\n      domRange: domRange,\n      relative: relative,\n      exact: exact,\n      exactFromRange: exactFromRange,\n      getWin: getWin,\n      range: range$1\n    };\n\n    var selectNodeContents = function (win, element) {\n      var rng = win.document.createRange();\n      selectNodeContentsUsing(rng, element);\n      return rng;\n    };\n    var selectNodeContentsUsing = function (rng, element) {\n      rng.selectNodeContents(element.dom());\n    };\n    var setStart = function (rng, situ) {\n      situ.fold(function (e) {\n        rng.setStartBefore(e.dom());\n      }, function (e, o) {\n        rng.setStart(e.dom(), o);\n      }, function (e) {\n        rng.setStartAfter(e.dom());\n      });\n    };\n    var setFinish = function (rng, situ) {\n      situ.fold(function (e) {\n        rng.setEndBefore(e.dom());\n      }, function (e, o) {\n        rng.setEnd(e.dom(), o);\n      }, function (e) {\n        rng.setEndAfter(e.dom());\n      });\n    };\n    var relativeToNative = function (win, startSitu, finishSitu) {\n      var range = win.document.createRange();\n      setStart(range, startSitu);\n      setFinish(range, finishSitu);\n      return range;\n    };\n    var exactToNative = function (win, start, soffset, finish, foffset) {\n      var rng = win.document.createRange();\n      rng.setStart(start.dom(), soffset);\n      rng.setEnd(finish.dom(), foffset);\n      return rng;\n    };\n    var toRect = function (rect) {\n      return {\n        left: constant(rect.left),\n        top: constant(rect.top),\n        right: constant(rect.right),\n        bottom: constant(rect.bottom),\n        width: constant(rect.width),\n        height: constant(rect.height)\n      };\n    };\n    var getFirstRect = function (rng) {\n      var rects = rng.getClientRects();\n      var rect = rects.length > 0 ? rects[0] : rng.getBoundingClientRect();\n      return rect.width > 0 || rect.height > 0 ? Option.some(rect).map(toRect) : Option.none();\n    };\n\n    var adt$4 = Adt.generate([\n      {\n        ltr: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      },\n      {\n        rtl: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      }\n    ]);\n    var fromRange = function (win, type, range) {\n      return type(Element.fromDom(range.startContainer), range.startOffset, Element.fromDom(range.endContainer), range.endOffset);\n    };\n    var getRanges = function (win, selection) {\n      return selection.match({\n        domRange: function (rng) {\n          return {\n            ltr: constant(rng),\n            rtl: Option.none\n          };\n        },\n        relative: function (startSitu, finishSitu) {\n          return {\n            ltr: cached(function () {\n              return relativeToNative(win, startSitu, finishSitu);\n            }),\n            rtl: cached(function () {\n              return Option.some(relativeToNative(win, finishSitu, startSitu));\n            })\n          };\n        },\n        exact: function (start, soffset, finish, foffset) {\n          return {\n            ltr: cached(function () {\n              return exactToNative(win, start, soffset, finish, foffset);\n            }),\n            rtl: cached(function () {\n              return Option.some(exactToNative(win, finish, foffset, start, soffset));\n            })\n          };\n        }\n      });\n    };\n    var doDiagnose = function (win, ranges) {\n      var rng = ranges.ltr();\n      if (rng.collapsed) {\n        var reversed = ranges.rtl().filter(function (rev) {\n          return rev.collapsed === false;\n        });\n        return reversed.map(function (rev) {\n          return adt$4.rtl(Element.fromDom(rev.endContainer), rev.endOffset, Element.fromDom(rev.startContainer), rev.startOffset);\n        }).getOrThunk(function () {\n          return fromRange(win, adt$4.ltr, rng);\n        });\n      } else {\n        return fromRange(win, adt$4.ltr, rng);\n      }\n    };\n    var diagnose = function (win, selection) {\n      var ranges = getRanges(win, selection);\n      return doDiagnose(win, ranges);\n    };\n    var asLtrRange = function (win, selection) {\n      var diagnosis = diagnose(win, selection);\n      return diagnosis.match({\n        ltr: function (start, soffset, finish, foffset) {\n          var rng = win.document.createRange();\n          rng.setStart(start.dom(), soffset);\n          rng.setEnd(finish.dom(), foffset);\n          return rng;\n        },\n        rtl: function (start, soffset, finish, foffset) {\n          var rng = win.document.createRange();\n          rng.setStart(finish.dom(), foffset);\n          rng.setEnd(start.dom(), soffset);\n          return rng;\n        }\n      });\n    };\n\n    var searchForPoint = function (rectForOffset, x, y, maxX, length) {\n      if (length === 0) {\n        return 0;\n      } else if (x === maxX) {\n        return length - 1;\n      }\n      var xDelta = maxX;\n      for (var i = 1; i < length; i++) {\n        var rect = rectForOffset(i);\n        var curDeltaX = Math.abs(x - rect.left);\n        if (y <= rect.bottom) {\n          if (y < rect.top || curDeltaX > xDelta) {\n            return i - 1;\n          } else {\n            xDelta = curDeltaX;\n          }\n        }\n      }\n      return 0;\n    };\n    var inRect = function (rect, x, y) {\n      return x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom;\n    };\n\n    var locateOffset = function (doc, textnode, x, y, rect) {\n      var rangeForOffset = function (o) {\n        var r = doc.dom().createRange();\n        r.setStart(textnode.dom(), o);\n        r.collapse(true);\n        return r;\n      };\n      var rectForOffset = function (o) {\n        var r = rangeForOffset(o);\n        return r.getBoundingClientRect();\n      };\n      var length = get$2(textnode).length;\n      var offset = searchForPoint(rectForOffset, x, y, rect.right, length);\n      return rangeForOffset(offset);\n    };\n    var locate = function (doc, node, x, y) {\n      var r = doc.dom().createRange();\n      r.selectNode(node.dom());\n      var rects = r.getClientRects();\n      var foundRect = findMap(rects, function (rect) {\n        return inRect(rect, x, y) ? Option.some(rect) : Option.none();\n      });\n      return foundRect.map(function (rect) {\n        return locateOffset(doc, node, x, y, rect);\n      });\n    };\n\n    var searchInChildren = function (doc, node, x, y) {\n      var r = doc.dom().createRange();\n      var nodes = children(node);\n      return findMap(nodes, function (n) {\n        r.selectNode(n.dom());\n        return inRect(r.getBoundingClientRect(), x, y) ? locateNode(doc, n, x, y) : Option.none();\n      });\n    };\n    var locateNode = function (doc, node, x, y) {\n      return isText(node) ? locate(doc, node, x, y) : searchInChildren(doc, node, x, y);\n    };\n    var locate$1 = function (doc, node, x, y) {\n      var r = doc.dom().createRange();\n      r.selectNode(node.dom());\n      var rect = r.getBoundingClientRect();\n      var boundedX = Math.max(rect.left, Math.min(rect.right, x));\n      var boundedY = Math.max(rect.top, Math.min(rect.bottom, y));\n      return locateNode(doc, node, boundedX, boundedY);\n    };\n\n    var COLLAPSE_TO_LEFT = true;\n    var COLLAPSE_TO_RIGHT = false;\n    var getCollapseDirection = function (rect, x) {\n      return x - rect.left < rect.right - x ? COLLAPSE_TO_LEFT : COLLAPSE_TO_RIGHT;\n    };\n    var createCollapsedNode = function (doc, target, collapseDirection) {\n      var r = doc.dom().createRange();\n      r.selectNode(target.dom());\n      r.collapse(collapseDirection);\n      return r;\n    };\n    var locateInElement = function (doc, node, x) {\n      var cursorRange = doc.dom().createRange();\n      cursorRange.selectNode(node.dom());\n      var rect = cursorRange.getBoundingClientRect();\n      var collapseDirection = getCollapseDirection(rect, x);\n      var f = collapseDirection === COLLAPSE_TO_LEFT ? first : last$1;\n      return f(node).map(function (target) {\n        return createCollapsedNode(doc, target, collapseDirection);\n      });\n    };\n    var locateInEmpty = function (doc, node, x) {\n      var rect = node.dom().getBoundingClientRect();\n      var collapseDirection = getCollapseDirection(rect, x);\n      return Option.some(createCollapsedNode(doc, node, collapseDirection));\n    };\n    var search = function (doc, node, x) {\n      var f = children(node).length === 0 ? locateInEmpty : locateInElement;\n      return f(doc, node, x);\n    };\n\n    var caretPositionFromPoint = function (doc, x, y) {\n      return Option.from(doc.dom().caretPositionFromPoint(x, y)).bind(function (pos) {\n        if (pos.offsetNode === null) {\n          return Option.none();\n        }\n        var r = doc.dom().createRange();\n        r.setStart(pos.offsetNode, pos.offset);\n        r.collapse();\n        return Option.some(r);\n      });\n    };\n    var caretRangeFromPoint = function (doc, x, y) {\n      return Option.from(doc.dom().caretRangeFromPoint(x, y));\n    };\n    var searchTextNodes = function (doc, node, x, y) {\n      var r = doc.dom().createRange();\n      r.selectNode(node.dom());\n      var rect = r.getBoundingClientRect();\n      var boundedX = Math.max(rect.left, Math.min(rect.right, x));\n      var boundedY = Math.max(rect.top, Math.min(rect.bottom, y));\n      return locate$1(doc, node, boundedX, boundedY);\n    };\n    var searchFromPoint = function (doc, x, y) {\n      return Element.fromPoint(doc, x, y).bind(function (elem) {\n        var fallback = function () {\n          return search(doc, elem, x);\n        };\n        return children(elem).length === 0 ? fallback() : searchTextNodes(doc, elem, x, y).orThunk(fallback);\n      });\n    };\n    var availableSearch = document.caretPositionFromPoint ? caretPositionFromPoint : document.caretRangeFromPoint ? caretRangeFromPoint : searchFromPoint;\n    var fromPoint$1 = function (win, x, y) {\n      var doc = Element.fromDom(win.document);\n      return availableSearch(doc, x, y).map(function (rng) {\n        return SimRange.create(Element.fromDom(rng.startContainer), rng.startOffset, Element.fromDom(rng.endContainer), rng.endOffset);\n      });\n    };\n\n    var beforeSpecial = function (element, offset) {\n      var name$1 = name(element);\n      if ('input' === name$1) {\n        return Situ.after(element);\n      } else if (!contains([\n          'br',\n          'img'\n        ], name$1)) {\n        return Situ.on(element, offset);\n      } else {\n        return offset === 0 ? Situ.before(element) : Situ.after(element);\n      }\n    };\n    var preprocessRelative = function (startSitu, finishSitu) {\n      var start = startSitu.fold(Situ.before, beforeSpecial, Situ.after);\n      var finish = finishSitu.fold(Situ.before, beforeSpecial, Situ.after);\n      return Selection.relative(start, finish);\n    };\n    var preprocessExact = function (start, soffset, finish, foffset) {\n      var startSitu = beforeSpecial(start, soffset);\n      var finishSitu = beforeSpecial(finish, foffset);\n      return Selection.relative(startSitu, finishSitu);\n    };\n    var preprocess = function (selection) {\n      return selection.match({\n        domRange: function (rng) {\n          var start = Element.fromDom(rng.startContainer);\n          var finish = Element.fromDom(rng.endContainer);\n          return preprocessExact(start, rng.startOffset, finish, rng.endOffset);\n        },\n        relative: preprocessRelative,\n        exact: preprocessExact\n      });\n    };\n\n    var makeRange = function (start, soffset, finish, foffset) {\n      var doc = owner(start);\n      var rng = doc.dom().createRange();\n      rng.setStart(start.dom(), soffset);\n      rng.setEnd(finish.dom(), foffset);\n      return rng;\n    };\n    var after$3 = function (start, soffset, finish, foffset) {\n      var r = makeRange(start, soffset, finish, foffset);\n      var same = eq(start, finish) && soffset === foffset;\n      return r.collapsed && !same;\n    };\n\n    var doSetNativeRange = function (win, rng) {\n      Option.from(win.getSelection()).each(function (selection) {\n        selection.removeAllRanges();\n        selection.addRange(rng);\n      });\n    };\n    var doSetRange = function (win, start, soffset, finish, foffset) {\n      var rng = exactToNative(win, start, soffset, finish, foffset);\n      doSetNativeRange(win, rng);\n    };\n    var setLegacyRtlRange = function (win, selection, start, soffset, finish, foffset) {\n      selection.collapse(start.dom(), soffset);\n      selection.extend(finish.dom(), foffset);\n    };\n    var setRangeFromRelative = function (win, relative) {\n      return diagnose(win, relative).match({\n        ltr: function (start, soffset, finish, foffset) {\n          doSetRange(win, start, soffset, finish, foffset);\n        },\n        rtl: function (start, soffset, finish, foffset) {\n          var selection = win.getSelection();\n          if (selection.setBaseAndExtent) {\n            selection.setBaseAndExtent(start.dom(), soffset, finish.dom(), foffset);\n          } else if (selection.extend) {\n            try {\n              setLegacyRtlRange(win, selection, start, soffset, finish, foffset);\n            } catch (e) {\n              doSetRange(win, finish, foffset, start, soffset);\n            }\n          } else {\n            doSetRange(win, finish, foffset, start, soffset);\n          }\n        }\n      });\n    };\n    var setExact = function (win, start, soffset, finish, foffset) {\n      var relative = preprocessExact(start, soffset, finish, foffset);\n      setRangeFromRelative(win, relative);\n    };\n    var setRelative = function (win, startSitu, finishSitu) {\n      var relative = preprocessRelative(startSitu, finishSitu);\n      setRangeFromRelative(win, relative);\n    };\n    var toNative = function (selection) {\n      var win = Selection.getWin(selection).dom();\n      var getDomRange = function (start, soffset, finish, foffset) {\n        return exactToNative(win, start, soffset, finish, foffset);\n      };\n      var filtered = preprocess(selection);\n      return diagnose(win, filtered).match({\n        ltr: getDomRange,\n        rtl: getDomRange\n      });\n    };\n    var readRange = function (selection) {\n      if (selection.rangeCount > 0) {\n        var firstRng = selection.getRangeAt(0);\n        var lastRng = selection.getRangeAt(selection.rangeCount - 1);\n        return Option.some(SimRange.create(Element.fromDom(firstRng.startContainer), firstRng.startOffset, Element.fromDom(lastRng.endContainer), lastRng.endOffset));\n      } else {\n        return Option.none();\n      }\n    };\n    var doGetExact = function (selection) {\n      var anchor = Element.fromDom(selection.anchorNode);\n      var focus = Element.fromDom(selection.focusNode);\n      return after$3(anchor, selection.anchorOffset, focus, selection.focusOffset) ? Option.some(SimRange.create(anchor, selection.anchorOffset, focus, selection.focusOffset)) : readRange(selection);\n    };\n    var setToElement = function (win, element) {\n      var rng = selectNodeContents(win, element);\n      doSetNativeRange(win, rng);\n    };\n    var getExact = function (win) {\n      return Option.from(win.getSelection()).filter(function (sel) {\n        return sel.rangeCount > 0;\n      }).bind(doGetExact);\n    };\n    var get$9 = function (win) {\n      return getExact(win).map(function (range) {\n        return Selection.exact(range.start(), range.soffset(), range.finish(), range.foffset());\n      });\n    };\n    var getFirstRect$1 = function (win, selection) {\n      var rng = asLtrRange(win, selection);\n      return getFirstRect(rng);\n    };\n    var getAtPoint = function (win, x, y) {\n      return fromPoint$1(win, x, y);\n    };\n    var clear = function (win) {\n      var selection = win.getSelection();\n      selection.removeAllRanges();\n    };\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n    var forward = function (editor, isRoot, cell, lazyWire) {\n      return go(editor, isRoot, CellNavigation.next(cell), lazyWire);\n    };\n    var backward = function (editor, isRoot, cell, lazyWire) {\n      return go(editor, isRoot, CellNavigation.prev(cell), lazyWire);\n    };\n    var getCellFirstCursorPosition = function (editor, cell) {\n      var selection = Selection.exact(cell, 0, cell, 0);\n      return toNative(selection);\n    };\n    var getNewRowCursorPosition = function (editor, table) {\n      var rows = descendants$1(table, 'tr');\n      return last(rows).bind(function (last) {\n        return descendant$1(last, 'td,th').map(function (first) {\n          return getCellFirstCursorPosition(editor, first);\n        });\n      });\n    };\n    var go = function (editor, isRoot, cell, actions, lazyWire) {\n      return cell.fold(Option.none, Option.none, function (current, next) {\n        return first(next).map(function (cell) {\n          return getCellFirstCursorPosition(editor, cell);\n        });\n      }, function (current) {\n        return TableLookup.table(current, isRoot).bind(function (table) {\n          var targets = TableTargets.noMenu(current);\n          editor.undoManager.transact(function () {\n            actions.insertRowsAfter(table, targets);\n          });\n          return getNewRowCursorPosition(editor, table);\n        });\n      });\n    };\n    var rootElements = [\n      'table',\n      'li',\n      'dl'\n    ];\n    var handle$1 = function (event, editor, actions, lazyWire) {\n      if (event.keyCode === global$3.TAB) {\n        var body_1 = getBody$1(editor);\n        var isRoot_1 = function (element) {\n          var name$1 = name(element);\n          return eq(element, body_1) || contains(rootElements, name$1);\n        };\n        var rng = editor.selection.getRng();\n        if (rng.collapsed) {\n          var start = Element.fromDom(rng.startContainer);\n          TableLookup.cell(start, isRoot_1).each(function (cell) {\n            event.preventDefault();\n            var navigation = event.shiftKey ? backward : forward;\n            var rng = navigation(editor, isRoot_1, cell, actions, lazyWire);\n            rng.each(function (range) {\n              editor.selection.setRng(range);\n            });\n          });\n        }\n      }\n    };\n    var TabContext = { handle: handle$1 };\n\n    var create$4 = Immutable('selection', 'kill');\n    var Response = { create: create$4 };\n\n    var create$5 = function (start, soffset, finish, foffset) {\n      return {\n        start: constant(Situ.on(start, soffset)),\n        finish: constant(Situ.on(finish, foffset))\n      };\n    };\n    var Situs = { create: create$5 };\n\n    var convertToRange = function (win, selection) {\n      var rng = asLtrRange(win, selection);\n      return SimRange.create(Element.fromDom(rng.startContainer), rng.startOffset, Element.fromDom(rng.endContainer), rng.endOffset);\n    };\n    var makeSitus = Situs.create;\n    var Util = {\n      convertToRange: convertToRange,\n      makeSitus: makeSitus\n    };\n\n    var sync = function (container, isRoot, start, soffset, finish, foffset, selectRange) {\n      if (!(eq(start, finish) && soffset === foffset)) {\n        return closest$1(start, 'td,th', isRoot).bind(function (s) {\n          return closest$1(finish, 'td,th', isRoot).bind(function (f) {\n            return detect$5(container, isRoot, s, f, selectRange);\n          });\n        });\n      } else {\n        return Option.none();\n      }\n    };\n    var detect$5 = function (container, isRoot, start, finish, selectRange) {\n      if (!eq(start, finish)) {\n        return CellSelection.identify(start, finish, isRoot).bind(function (cellSel) {\n          var boxes = cellSel.boxes().getOr([]);\n          if (boxes.length > 0) {\n            selectRange(container, boxes, cellSel.start(), cellSel.finish());\n            return Option.some(Response.create(Option.some(Util.makeSitus(start, 0, start, getEnd(start))), true));\n          } else {\n            return Option.none();\n          }\n        });\n      } else {\n        return Option.none();\n      }\n    };\n    var update = function (rows, columns, container, selected, annotations) {\n      var updateSelection = function (newSels) {\n        annotations.clear(container);\n        annotations.selectRange(container, newSels.boxes(), newSels.start(), newSels.finish());\n        return newSels.boxes();\n      };\n      return CellSelection.shiftSelection(selected, rows, columns, annotations.firstSelectedSelector(), annotations.lastSelectedSelector()).map(updateSelection);\n    };\n    var KeySelection = {\n      sync: sync,\n      detect: detect$5,\n      update: update\n    };\n\n    var traverse = Immutable('item', 'mode');\n    var backtrack = function (universe, item, _direction, transition) {\n      if (transition === void 0) {\n        transition = sidestep;\n      }\n      return universe.property().parent(item).map(function (p) {\n        return traverse(p, transition);\n      });\n    };\n    var sidestep = function (universe, item, direction, transition) {\n      if (transition === void 0) {\n        transition = advance;\n      }\n      return direction.sibling(universe, item).map(function (p) {\n        return traverse(p, transition);\n      });\n    };\n    var advance = function (universe, item, direction, transition) {\n      if (transition === void 0) {\n        transition = advance;\n      }\n      var children = universe.property().children(item);\n      var result = direction.first(children);\n      return result.map(function (r) {\n        return traverse(r, transition);\n      });\n    };\n    var successors = [\n      {\n        current: backtrack,\n        next: sidestep,\n        fallback: Option.none()\n      },\n      {\n        current: sidestep,\n        next: advance,\n        fallback: Option.some(backtrack)\n      },\n      {\n        current: advance,\n        next: advance,\n        fallback: Option.some(sidestep)\n      }\n    ];\n    var go$1 = function (universe, item, mode, direction, rules) {\n      if (rules === void 0) {\n        rules = successors;\n      }\n      var ruleOpt = find(rules, function (succ) {\n        return succ.current === mode;\n      });\n      return ruleOpt.bind(function (rule) {\n        return rule.current(universe, item, direction, rule.next).orThunk(function () {\n          return rule.fallback.bind(function (fb) {\n            return go$1(universe, item, fb, direction);\n          });\n        });\n      });\n    };\n\n    var left = function () {\n      var sibling = function (universe, item) {\n        return universe.query().prevSibling(item);\n      };\n      var first = function (children) {\n        return children.length > 0 ? Option.some(children[children.length - 1]) : Option.none();\n      };\n      return {\n        sibling: sibling,\n        first: first\n      };\n    };\n    var right = function () {\n      var sibling = function (universe, item) {\n        return universe.query().nextSibling(item);\n      };\n      var first = function (children) {\n        return children.length > 0 ? Option.some(children[0]) : Option.none();\n      };\n      return {\n        sibling: sibling,\n        first: first\n      };\n    };\n    var Walkers = {\n      left: left,\n      right: right\n    };\n\n    var hone = function (universe, item, predicate, mode, direction, isRoot) {\n      var next = go$1(universe, item, mode, direction);\n      return next.bind(function (n) {\n        if (isRoot(n.item())) {\n          return Option.none();\n        } else {\n          return predicate(n.item()) ? Option.some(n.item()) : hone(universe, n.item(), predicate, n.mode(), direction, isRoot);\n        }\n      });\n    };\n    var left$1 = function (universe, item, predicate, isRoot) {\n      return hone(universe, item, predicate, sidestep, Walkers.left(), isRoot);\n    };\n    var right$1 = function (universe, item, predicate, isRoot) {\n      return hone(universe, item, predicate, sidestep, Walkers.right(), isRoot);\n    };\n\n    var isLeaf = function (universe) {\n      return function (element) {\n        return universe.property().children(element).length === 0;\n      };\n    };\n    var before$3 = function (universe, item, isRoot) {\n      return seekLeft(universe, item, isLeaf(universe), isRoot);\n    };\n    var after$4 = function (universe, item, isRoot) {\n      return seekRight(universe, item, isLeaf(universe), isRoot);\n    };\n    var seekLeft = left$1;\n    var seekRight = right$1;\n\n    var universe$2 = DomUniverse();\n    var before$4 = function (element, isRoot) {\n      return before$3(universe$2, element, isRoot);\n    };\n    var after$5 = function (element, isRoot) {\n      return after$4(universe$2, element, isRoot);\n    };\n    var seekLeft$1 = function (element, predicate, isRoot) {\n      return seekLeft(universe$2, element, predicate, isRoot);\n    };\n    var seekRight$1 = function (element, predicate, isRoot) {\n      return seekRight(universe$2, element, predicate, isRoot);\n    };\n\n    var ancestor$2 = function (scope, predicate, isRoot) {\n      return ancestor(scope, predicate, isRoot).isSome();\n    };\n\n    var point = Immutable('element', 'offset');\n    var delta = Immutable('element', 'deltaOffset');\n    var range$2 = Immutable('element', 'start', 'finish');\n    var points = Immutable('begin', 'end');\n    var text = Immutable('element', 'text');\n\n    var adt$5 = Adt.generate([\n      { none: ['message'] },\n      { success: [] },\n      { failedUp: ['cell'] },\n      { failedDown: ['cell'] }\n    ]);\n    var isOverlapping = function (bridge, before, after) {\n      var beforeBounds = bridge.getRect(before);\n      var afterBounds = bridge.getRect(after);\n      return afterBounds.right > beforeBounds.left && afterBounds.left < beforeBounds.right;\n    };\n    var isRow = function (elem) {\n      return closest$1(elem, 'tr');\n    };\n    var verify = function (bridge, before, beforeOffset, after, afterOffset, failure, isRoot) {\n      return closest$1(after, 'td,th', isRoot).bind(function (afterCell) {\n        return closest$1(before, 'td,th', isRoot).map(function (beforeCell) {\n          if (!eq(afterCell, beforeCell)) {\n            return DomParent.sharedOne(isRow, [\n              afterCell,\n              beforeCell\n            ]).fold(function () {\n              return isOverlapping(bridge, beforeCell, afterCell) ? adt$5.success() : failure(beforeCell);\n            }, function (_sharedRow) {\n              return failure(beforeCell);\n            });\n          } else {\n            return eq(after, afterCell) && getEnd(afterCell) === afterOffset ? failure(beforeCell) : adt$5.none('in same cell');\n          }\n        });\n      }).getOr(adt$5.none('default'));\n    };\n    var cata$2 = function (subject, onNone, onSuccess, onFailedUp, onFailedDown) {\n      return subject.fold(onNone, onSuccess, onFailedUp, onFailedDown);\n    };\n    var BeforeAfter = __assign(__assign({}, adt$5), {\n      verify: verify,\n      cata: cata$2\n    });\n\n    var inAncestor = Immutable('ancestor', 'descendants', 'element', 'index');\n    var inParent = Immutable('parent', 'children', 'element', 'index');\n    var indexInParent = function (element) {\n      return parent(element).bind(function (parent) {\n        var children$1 = children(parent);\n        return indexOf(children$1, element).map(function (index) {\n          return inParent(parent, children$1, element, index);\n        });\n      });\n    };\n    var indexOf = function (elements, element) {\n      return findIndex(elements, curry(eq, element));\n    };\n\n    var isBr = function (elem) {\n      return name(elem) === 'br';\n    };\n    var gatherer = function (cand, gather, isRoot) {\n      return gather(cand, isRoot).bind(function (target) {\n        return isText(target) && get$2(target).trim().length === 0 ? gatherer(target, gather, isRoot) : Option.some(target);\n      });\n    };\n    var handleBr = function (isRoot, element, direction) {\n      return direction.traverse(element).orThunk(function () {\n        return gatherer(element, direction.gather, isRoot);\n      }).map(direction.relative);\n    };\n    var findBr = function (element, offset) {\n      return child(element, offset).filter(isBr).orThunk(function () {\n        return child(element, offset - 1).filter(isBr);\n      });\n    };\n    var handleParent = function (isRoot, element, offset, direction) {\n      return findBr(element, offset).bind(function (br) {\n        return direction.traverse(br).fold(function () {\n          return gatherer(br, direction.gather, isRoot).map(direction.relative);\n        }, function (adjacent) {\n          return indexInParent(adjacent).map(function (info) {\n            return Situ.on(info.parent(), info.index());\n          });\n        });\n      });\n    };\n    var tryBr = function (isRoot, element, offset, direction) {\n      var target = isBr(element) ? handleBr(isRoot, element, direction) : handleParent(isRoot, element, offset, direction);\n      return target.map(function (tgt) {\n        return {\n          start: constant(tgt),\n          finish: constant(tgt)\n        };\n      });\n    };\n    var process = function (analysis) {\n      return BeforeAfter.cata(analysis, function (message) {\n        return Option.none();\n      }, function () {\n        return Option.none();\n      }, function (cell) {\n        return Option.some(point(cell, 0));\n      }, function (cell) {\n        return Option.some(point(cell, getEnd(cell)));\n      });\n    };\n    var BrTags = {\n      tryBr: tryBr,\n      process: process\n    };\n\n    var nu$3 = MixedBag([\n      'left',\n      'top',\n      'right',\n      'bottom'\n    ], []);\n    var moveDown = function (caret, amount) {\n      return nu$3({\n        left: caret.left(),\n        top: caret.top() + amount,\n        right: caret.right(),\n        bottom: caret.bottom() + amount\n      });\n    };\n    var moveUp = function (caret, amount) {\n      return nu$3({\n        left: caret.left(),\n        top: caret.top() - amount,\n        right: caret.right(),\n        bottom: caret.bottom() - amount\n      });\n    };\n    var moveBottomTo = function (caret, bottom) {\n      var height = caret.bottom() - caret.top();\n      return nu$3({\n        left: caret.left(),\n        top: bottom - height,\n        right: caret.right(),\n        bottom: bottom\n      });\n    };\n    var moveTopTo = function (caret, top) {\n      var height = caret.bottom() - caret.top();\n      return nu$3({\n        left: caret.left(),\n        top: top,\n        right: caret.right(),\n        bottom: top + height\n      });\n    };\n    var translate = function (caret, xDelta, yDelta) {\n      return nu$3({\n        left: caret.left() + xDelta,\n        top: caret.top() + yDelta,\n        right: caret.right() + xDelta,\n        bottom: caret.bottom() + yDelta\n      });\n    };\n    var getTop$1 = function (caret) {\n      return caret.top();\n    };\n    var getBottom = function (caret) {\n      return caret.bottom();\n    };\n    var toString = function (caret) {\n      return '(' + caret.left() + ', ' + caret.top() + ') -> (' + caret.right() + ', ' + caret.bottom() + ')';\n    };\n    var Carets = {\n      nu: nu$3,\n      moveUp: moveUp,\n      moveDown: moveDown,\n      moveBottomTo: moveBottomTo,\n      moveTopTo: moveTopTo,\n      getTop: getTop$1,\n      getBottom: getBottom,\n      translate: translate,\n      toString: toString\n    };\n\n    var getPartialBox = function (bridge, element, offset) {\n      if (offset >= 0 && offset < getEnd(element)) {\n        return bridge.getRangedRect(element, offset, element, offset + 1);\n      } else if (offset > 0) {\n        return bridge.getRangedRect(element, offset - 1, element, offset);\n      }\n      return Option.none();\n    };\n    var toCaret = function (rect) {\n      return Carets.nu({\n        left: rect.left,\n        top: rect.top,\n        right: rect.right,\n        bottom: rect.bottom\n      });\n    };\n    var getElemBox = function (bridge, element) {\n      return Option.some(bridge.getRect(element));\n    };\n    var getBoxAt = function (bridge, element, offset) {\n      if (isElement(element)) {\n        return getElemBox(bridge, element).map(toCaret);\n      } else if (isText(element)) {\n        return getPartialBox(bridge, element, offset).map(toCaret);\n      } else {\n        return Option.none();\n      }\n    };\n    var getEntireBox = function (bridge, element) {\n      if (isElement(element)) {\n        return getElemBox(bridge, element).map(toCaret);\n      } else if (isText(element)) {\n        return bridge.getRangedRect(element, 0, element, getEnd(element)).map(toCaret);\n      } else {\n        return Option.none();\n      }\n    };\n    var Rectangles = {\n      getBoxAt: getBoxAt,\n      getEntireBox: getEntireBox\n    };\n\n    var JUMP_SIZE = 5;\n    var NUM_RETRIES = 100;\n    var adt$6 = Adt.generate([\n      { none: [] },\n      { retry: ['caret'] }\n    ]);\n    var isOutside = function (caret, box) {\n      return caret.left() < box.left() || Math.abs(box.right() - caret.left()) < 1 || caret.left() > box.right();\n    };\n    var inOutsideBlock = function (bridge, element, caret) {\n      return closest(element, DomStructure.isBlock).fold(constant(false), function (cell) {\n        return Rectangles.getEntireBox(bridge, cell).exists(function (box) {\n          return isOutside(caret, box);\n        });\n      });\n    };\n    var adjustDown = function (bridge, element, guessBox, original, caret) {\n      var lowerCaret = Carets.moveDown(caret, JUMP_SIZE);\n      if (Math.abs(guessBox.bottom() - original.bottom()) < 1) {\n        return adt$6.retry(lowerCaret);\n      } else if (guessBox.top() > caret.bottom()) {\n        return adt$6.retry(lowerCaret);\n      } else if (guessBox.top() === caret.bottom()) {\n        return adt$6.retry(Carets.moveDown(caret, 1));\n      } else {\n        return inOutsideBlock(bridge, element, caret) ? adt$6.retry(Carets.translate(lowerCaret, JUMP_SIZE, 0)) : adt$6.none();\n      }\n    };\n    var adjustUp = function (bridge, element, guessBox, original, caret) {\n      var higherCaret = Carets.moveUp(caret, JUMP_SIZE);\n      if (Math.abs(guessBox.top() - original.top()) < 1) {\n        return adt$6.retry(higherCaret);\n      } else if (guessBox.bottom() < caret.top()) {\n        return adt$6.retry(higherCaret);\n      } else if (guessBox.bottom() === caret.top()) {\n        return adt$6.retry(Carets.moveUp(caret, 1));\n      } else {\n        return inOutsideBlock(bridge, element, caret) ? adt$6.retry(Carets.translate(higherCaret, JUMP_SIZE, 0)) : adt$6.none();\n      }\n    };\n    var upMovement = {\n      point: Carets.getTop,\n      adjuster: adjustUp,\n      move: Carets.moveUp,\n      gather: before$4\n    };\n    var downMovement = {\n      point: Carets.getBottom,\n      adjuster: adjustDown,\n      move: Carets.moveDown,\n      gather: after$5\n    };\n    var isAtTable = function (bridge, x, y) {\n      return bridge.elementFromPoint(x, y).filter(function (elm) {\n        return name(elm) === 'table';\n      }).isSome();\n    };\n    var adjustForTable = function (bridge, movement, original, caret, numRetries) {\n      return adjustTil(bridge, movement, original, movement.move(caret, JUMP_SIZE), numRetries);\n    };\n    var adjustTil = function (bridge, movement, original, caret, numRetries) {\n      if (numRetries === 0) {\n        return Option.some(caret);\n      }\n      if (isAtTable(bridge, caret.left(), movement.point(caret))) {\n        return adjustForTable(bridge, movement, original, caret, numRetries - 1);\n      }\n      return bridge.situsFromPoint(caret.left(), movement.point(caret)).bind(function (guess) {\n        return guess.start().fold(Option.none, function (element) {\n          return Rectangles.getEntireBox(bridge, element).bind(function (guessBox) {\n            return movement.adjuster(bridge, element, guessBox, original, caret).fold(Option.none, function (newCaret) {\n              return adjustTil(bridge, movement, original, newCaret, numRetries - 1);\n            });\n          }).orThunk(function () {\n            return Option.some(caret);\n          });\n        }, Option.none);\n      });\n    };\n    var ieTryDown = function (bridge, caret) {\n      return bridge.situsFromPoint(caret.left(), caret.bottom() + JUMP_SIZE);\n    };\n    var ieTryUp = function (bridge, caret) {\n      return bridge.situsFromPoint(caret.left(), caret.top() - JUMP_SIZE);\n    };\n    var checkScroll = function (movement, adjusted, bridge) {\n      if (movement.point(adjusted) > bridge.getInnerHeight()) {\n        return Option.some(movement.point(adjusted) - bridge.getInnerHeight());\n      } else if (movement.point(adjusted) < 0) {\n        return Option.some(-movement.point(adjusted));\n      } else {\n        return Option.none();\n      }\n    };\n    var retry = function (movement, bridge, caret) {\n      var moved = movement.move(caret, JUMP_SIZE);\n      var adjusted = adjustTil(bridge, movement, caret, moved, NUM_RETRIES).getOr(moved);\n      return checkScroll(movement, adjusted, bridge).fold(function () {\n        return bridge.situsFromPoint(adjusted.left(), movement.point(adjusted));\n      }, function (delta) {\n        bridge.scrollBy(0, delta);\n        return bridge.situsFromPoint(adjusted.left(), movement.point(adjusted) - delta);\n      });\n    };\n    var Retries = {\n      tryUp: curry(retry, upMovement),\n      tryDown: curry(retry, downMovement),\n      ieTryUp: ieTryUp,\n      ieTryDown: ieTryDown,\n      getJumpSize: constant(JUMP_SIZE)\n    };\n\n    var MAX_RETRIES = 20;\n    var platform$1 = PlatformDetection$1.detect();\n    var findSpot = function (bridge, isRoot, direction) {\n      return bridge.getSelection().bind(function (sel) {\n        return BrTags.tryBr(isRoot, sel.finish(), sel.foffset(), direction).fold(function () {\n          return Option.some(point(sel.finish(), sel.foffset()));\n        }, function (brNeighbour) {\n          var range = bridge.fromSitus(brNeighbour);\n          var analysis = BeforeAfter.verify(bridge, sel.finish(), sel.foffset(), range.finish(), range.foffset(), direction.failure, isRoot);\n          return BrTags.process(analysis);\n        });\n      });\n    };\n    var scan = function (bridge, isRoot, element, offset, direction, numRetries) {\n      if (numRetries === 0) {\n        return Option.none();\n      }\n      return tryCursor(bridge, isRoot, element, offset, direction).bind(function (situs) {\n        var range = bridge.fromSitus(situs);\n        var analysis = BeforeAfter.verify(bridge, element, offset, range.finish(), range.foffset(), direction.failure, isRoot);\n        return BeforeAfter.cata(analysis, function () {\n          return Option.none();\n        }, function () {\n          return Option.some(situs);\n        }, function (cell) {\n          if (eq(element, cell) && offset === 0) {\n            return tryAgain(bridge, element, offset, Carets.moveUp, direction);\n          } else {\n            return scan(bridge, isRoot, cell, 0, direction, numRetries - 1);\n          }\n        }, function (cell) {\n          if (eq(element, cell) && offset === getEnd(cell)) {\n            return tryAgain(bridge, element, offset, Carets.moveDown, direction);\n          } else {\n            return scan(bridge, isRoot, cell, getEnd(cell), direction, numRetries - 1);\n          }\n        });\n      });\n    };\n    var tryAgain = function (bridge, element, offset, move, direction) {\n      return Rectangles.getBoxAt(bridge, element, offset).bind(function (box) {\n        return tryAt(bridge, direction, move(box, Retries.getJumpSize()));\n      });\n    };\n    var tryAt = function (bridge, direction, box) {\n      if (platform$1.browser.isChrome() || platform$1.browser.isSafari() || platform$1.browser.isFirefox() || platform$1.browser.isEdge()) {\n        return direction.otherRetry(bridge, box);\n      } else if (platform$1.browser.isIE()) {\n        return direction.ieRetry(bridge, box);\n      } else {\n        return Option.none();\n      }\n    };\n    var tryCursor = function (bridge, isRoot, element, offset, direction) {\n      return Rectangles.getBoxAt(bridge, element, offset).bind(function (box) {\n        return tryAt(bridge, direction, box);\n      });\n    };\n    var handle$2 = function (bridge, isRoot, direction) {\n      return findSpot(bridge, isRoot, direction).bind(function (spot) {\n        return scan(bridge, isRoot, spot.element(), spot.offset(), direction, MAX_RETRIES).map(bridge.fromSitus);\n      });\n    };\n    var TableKeys = { handle: handle$2 };\n\n    var detection = PlatformDetection$1.detect();\n    var inSameTable = function (elem, table) {\n      return ancestor$2(elem, function (e) {\n        return parent(e).exists(function (p) {\n          return eq(p, table);\n        });\n      });\n    };\n    var simulate = function (bridge, isRoot, direction, initial, anchor) {\n      return closest$1(initial, 'td,th', isRoot).bind(function (start) {\n        return closest$1(start, 'table', isRoot).bind(function (table) {\n          if (!inSameTable(anchor, table)) {\n            return Option.none();\n          }\n          return TableKeys.handle(bridge, isRoot, direction).bind(function (range) {\n            return closest$1(range.finish(), 'td,th', isRoot).map(function (finish) {\n              return {\n                start: constant(start),\n                finish: constant(finish),\n                range: constant(range)\n              };\n            });\n          });\n        });\n      });\n    };\n    var navigate = function (bridge, isRoot, direction, initial, anchor, precheck) {\n      if (detection.browser.isIE()) {\n        return Option.none();\n      } else {\n        return precheck(initial, isRoot).orThunk(function () {\n          return simulate(bridge, isRoot, direction, initial, anchor).map(function (info) {\n            var range = info.range();\n            return Response.create(Option.some(Util.makeSitus(range.start(), range.soffset(), range.finish(), range.foffset())), true);\n          });\n        });\n      }\n    };\n    var firstUpCheck = function (initial, isRoot) {\n      return closest$1(initial, 'tr', isRoot).bind(function (startRow) {\n        return closest$1(startRow, 'table', isRoot).bind(function (table) {\n          var rows = descendants$1(table, 'tr');\n          if (eq(startRow, rows[0])) {\n            return seekLeft$1(table, function (element) {\n              return last$1(element).isSome();\n            }, isRoot).map(function (last) {\n              var lastOffset = getEnd(last);\n              return Response.create(Option.some(Util.makeSitus(last, lastOffset, last, lastOffset)), true);\n            });\n          } else {\n            return Option.none();\n          }\n        });\n      });\n    };\n    var lastDownCheck = function (initial, isRoot) {\n      return closest$1(initial, 'tr', isRoot).bind(function (startRow) {\n        return closest$1(startRow, 'table', isRoot).bind(function (table) {\n          var rows = descendants$1(table, 'tr');\n          if (eq(startRow, rows[rows.length - 1])) {\n            return seekRight$1(table, function (element) {\n              return first(element).isSome();\n            }, isRoot).map(function (first) {\n              return Response.create(Option.some(Util.makeSitus(first, 0, first, 0)), true);\n            });\n          } else {\n            return Option.none();\n          }\n        });\n      });\n    };\n    var select = function (bridge, container, isRoot, direction, initial, anchor, selectRange) {\n      return simulate(bridge, isRoot, direction, initial, anchor).bind(function (info) {\n        return KeySelection.detect(container, isRoot, info.start(), info.finish(), selectRange);\n      });\n    };\n    var VerticalMovement = {\n      navigate: navigate,\n      select: select,\n      firstUpCheck: firstUpCheck,\n      lastDownCheck: lastDownCheck\n    };\n\n    var findCell = function (target, isRoot) {\n      return closest$1(target, 'td,th', isRoot);\n    };\n    function MouseSelection (bridge, container, isRoot, annotations) {\n      var cursor = Option.none();\n      var clearState = function () {\n        cursor = Option.none();\n      };\n      var mousedown = function (event) {\n        annotations.clear(container);\n        cursor = findCell(event.target(), isRoot);\n      };\n      var mouseover = function (event) {\n        cursor.each(function (start) {\n          annotations.clear(container);\n          findCell(event.target(), isRoot).each(function (finish) {\n            CellSelection.identify(start, finish, isRoot).each(function (cellSel) {\n              var boxes = cellSel.boxes().getOr([]);\n              if (boxes.length > 1 || boxes.length === 1 && !eq(start, finish)) {\n                annotations.selectRange(container, boxes, cellSel.start(), cellSel.finish());\n                bridge.selectContents(finish);\n              }\n            });\n          });\n        });\n      };\n      var mouseup = function (_event) {\n        cursor.each(clearState);\n      };\n      return {\n        mousedown: mousedown,\n        mouseover: mouseover,\n        mouseup: mouseup\n      };\n    }\n\n    var down = {\n      traverse: nextSibling,\n      gather: after$5,\n      relative: Situ.before,\n      otherRetry: Retries.tryDown,\n      ieRetry: Retries.ieTryDown,\n      failure: BeforeAfter.failedDown\n    };\n    var up = {\n      traverse: prevSibling,\n      gather: before$4,\n      relative: Situ.before,\n      otherRetry: Retries.tryUp,\n      ieRetry: Retries.ieTryUp,\n      failure: BeforeAfter.failedUp\n    };\n    var KeyDirection = {\n      down: down,\n      up: up\n    };\n\n    var isKey = function (key) {\n      return function (keycode) {\n        return keycode === key;\n      };\n    };\n    var isUp = isKey(38);\n    var isDown = isKey(40);\n    var isNavigation = function (keycode) {\n      return keycode >= 37 && keycode <= 40;\n    };\n    var SelectionKeys = {\n      ltr: {\n        isBackward: isKey(37),\n        isForward: isKey(39)\n      },\n      rtl: {\n        isBackward: isKey(39),\n        isForward: isKey(37)\n      },\n      isUp: isUp,\n      isDown: isDown,\n      isNavigation: isNavigation\n    };\n\n    var toRaw = function (sr) {\n      return {\n        left: sr.left(),\n        top: sr.top(),\n        right: sr.right(),\n        bottom: sr.bottom(),\n        width: sr.width(),\n        height: sr.height()\n      };\n    };\n    var Rect = { toRaw: toRaw };\n\n    var isSafari = PlatformDetection$1.detect().browser.isSafari();\n    var get$a = function (_DOC) {\n      var doc = _DOC !== undefined ? _DOC.dom() : domGlobals.document;\n      var x = doc.body.scrollLeft || doc.documentElement.scrollLeft;\n      var y = doc.body.scrollTop || doc.documentElement.scrollTop;\n      return Position(x, y);\n    };\n    var by = function (x, y, _DOC) {\n      var doc = _DOC !== undefined ? _DOC.dom() : domGlobals.document;\n      var win = doc.defaultView;\n      win.scrollBy(x, y);\n    };\n\n    var WindowBridge = function (win) {\n      var elementFromPoint = function (x, y) {\n        return Element.fromPoint(Element.fromDom(win.document), x, y);\n      };\n      var getRect = function (element) {\n        return element.dom().getBoundingClientRect();\n      };\n      var getRangedRect = function (start, soffset, finish, foffset) {\n        var sel = Selection.exact(start, soffset, finish, foffset);\n        return getFirstRect$1(win, sel).map(Rect.toRaw);\n      };\n      var getSelection = function () {\n        return get$9(win).map(function (exactAdt) {\n          return Util.convertToRange(win, exactAdt);\n        });\n      };\n      var fromSitus = function (situs) {\n        var relative = Selection.relative(situs.start(), situs.finish());\n        return Util.convertToRange(win, relative);\n      };\n      var situsFromPoint = function (x, y) {\n        return getAtPoint(win, x, y).map(function (exact) {\n          return Situs.create(exact.start(), exact.soffset(), exact.finish(), exact.foffset());\n        });\n      };\n      var clearSelection = function () {\n        clear(win);\n      };\n      var selectContents = function (element) {\n        setToElement(win, element);\n      };\n      var setSelection = function (sel) {\n        setExact(win, sel.start(), sel.soffset(), sel.finish(), sel.foffset());\n      };\n      var setRelativeSelection = function (start, finish) {\n        setRelative(win, start, finish);\n      };\n      var getInnerHeight = function () {\n        return win.innerHeight;\n      };\n      var getScrollY = function () {\n        var pos = get$a(Element.fromDom(win.document));\n        return pos.top();\n      };\n      var scrollBy = function (x, y) {\n        by(x, y, Element.fromDom(win.document));\n      };\n      return {\n        elementFromPoint: elementFromPoint,\n        getRect: getRect,\n        getRangedRect: getRangedRect,\n        getSelection: getSelection,\n        fromSitus: fromSitus,\n        situsFromPoint: situsFromPoint,\n        clearSelection: clearSelection,\n        setSelection: setSelection,\n        setRelativeSelection: setRelativeSelection,\n        selectContents: selectContents,\n        getInnerHeight: getInnerHeight,\n        getScrollY: getScrollY,\n        scrollBy: scrollBy\n      };\n    };\n\n    var rc = Immutable('rows', 'cols');\n    var mouse = function (win, container, isRoot, annotations) {\n      var bridge = WindowBridge(win);\n      var handlers = MouseSelection(bridge, container, isRoot, annotations);\n      return {\n        mousedown: handlers.mousedown,\n        mouseover: handlers.mouseover,\n        mouseup: handlers.mouseup\n      };\n    };\n    var keyboard = function (win, container, isRoot, annotations) {\n      var bridge = WindowBridge(win);\n      var clearToNavigate = function () {\n        annotations.clear(container);\n        return Option.none();\n      };\n      var keydown = function (event, start, soffset, finish, foffset, direction) {\n        var realEvent = event.raw();\n        var keycode = realEvent.which;\n        var shiftKey = realEvent.shiftKey === true;\n        var handler = CellSelection.retrieve(container, annotations.selectedSelector()).fold(function () {\n          if (SelectionKeys.isDown(keycode) && shiftKey) {\n            return curry(VerticalMovement.select, bridge, container, isRoot, KeyDirection.down, finish, start, annotations.selectRange);\n          } else if (SelectionKeys.isUp(keycode) && shiftKey) {\n            return curry(VerticalMovement.select, bridge, container, isRoot, KeyDirection.up, finish, start, annotations.selectRange);\n          } else if (SelectionKeys.isDown(keycode)) {\n            return curry(VerticalMovement.navigate, bridge, isRoot, KeyDirection.down, finish, start, VerticalMovement.lastDownCheck);\n          } else if (SelectionKeys.isUp(keycode)) {\n            return curry(VerticalMovement.navigate, bridge, isRoot, KeyDirection.up, finish, start, VerticalMovement.firstUpCheck);\n          } else {\n            return Option.none;\n          }\n        }, function (selected) {\n          var update = function (attempts) {\n            return function () {\n              var navigation = findMap(attempts, function (delta) {\n                return KeySelection.update(delta.rows(), delta.cols(), container, selected, annotations);\n              });\n              return navigation.fold(function () {\n                return CellSelection.getEdges(container, annotations.firstSelectedSelector(), annotations.lastSelectedSelector()).map(function (edges) {\n                  var relative = SelectionKeys.isDown(keycode) || direction.isForward(keycode) ? Situ.after : Situ.before;\n                  bridge.setRelativeSelection(Situ.on(edges.first(), 0), relative(edges.table()));\n                  annotations.clear(container);\n                  return Response.create(Option.none(), true);\n                });\n              }, function (_) {\n                return Option.some(Response.create(Option.none(), true));\n              });\n            };\n          };\n          if (SelectionKeys.isDown(keycode) && shiftKey) {\n            return update([rc(+1, 0)]);\n          } else if (SelectionKeys.isUp(keycode) && shiftKey) {\n            return update([rc(-1, 0)]);\n          } else if (direction.isBackward(keycode) && shiftKey) {\n            return update([\n              rc(0, -1),\n              rc(-1, 0)\n            ]);\n          } else if (direction.isForward(keycode) && shiftKey) {\n            return update([\n              rc(0, +1),\n              rc(+1, 0)\n            ]);\n          } else if (SelectionKeys.isNavigation(keycode) && shiftKey === false) {\n            return clearToNavigate;\n          } else {\n            return Option.none;\n          }\n        });\n        return handler();\n      };\n      var keyup = function (event, start, soffset, finish, foffset) {\n        return CellSelection.retrieve(container, annotations.selectedSelector()).fold(function () {\n          var realEvent = event.raw();\n          var keycode = realEvent.which;\n          var shiftKey = realEvent.shiftKey === true;\n          if (shiftKey === false) {\n            return Option.none();\n          }\n          if (SelectionKeys.isNavigation(keycode)) {\n            return KeySelection.sync(container, isRoot, start, soffset, finish, foffset, annotations.selectRange);\n          } else {\n            return Option.none();\n          }\n        }, Option.none);\n      };\n      return {\n        keydown: keydown,\n        keyup: keyup\n      };\n    };\n    var InputHandlers = {\n      mouse: mouse,\n      keyboard: keyboard\n    };\n\n    var remove$7 = function (element, classes) {\n      each(classes, function (x) {\n        remove$5(element, x);\n      });\n    };\n\n    var addClass = function (clazz) {\n      return function (element) {\n        add$2(element, clazz);\n      };\n    };\n    var removeClasses = function (classes) {\n      return function (element) {\n        remove$7(element, classes);\n      };\n    };\n\n    var byClass = function (ephemera) {\n      var addSelectionClass = addClass(ephemera.selected());\n      var removeSelectionClasses = removeClasses([\n        ephemera.selected(),\n        ephemera.lastSelected(),\n        ephemera.firstSelected()\n      ]);\n      var clear = function (container) {\n        var sels = descendants$1(container, ephemera.selectedSelector());\n        each(sels, removeSelectionClasses);\n      };\n      var selectRange = function (container, cells, start, finish) {\n        clear(container);\n        each(cells, addSelectionClass);\n        add$2(start, ephemera.firstSelected());\n        add$2(finish, ephemera.lastSelected());\n      };\n      return {\n        clear: clear,\n        selectRange: selectRange,\n        selectedSelector: ephemera.selectedSelector,\n        firstSelectedSelector: ephemera.firstSelectedSelector,\n        lastSelectedSelector: ephemera.lastSelectedSelector\n      };\n    };\n    var byAttr = function (ephemera) {\n      var removeSelectionAttributes = function (element) {\n        remove(element, ephemera.selected());\n        remove(element, ephemera.firstSelected());\n        remove(element, ephemera.lastSelected());\n      };\n      var addSelectionAttribute = function (element) {\n        set(element, ephemera.selected(), '1');\n      };\n      var clear = function (container) {\n        var sels = descendants$1(container, ephemera.selectedSelector());\n        each(sels, removeSelectionAttributes);\n      };\n      var selectRange = function (container, cells, start, finish) {\n        clear(container);\n        each(cells, addSelectionAttribute);\n        set(start, ephemera.firstSelected(), '1');\n        set(finish, ephemera.lastSelected(), '1');\n      };\n      return {\n        clear: clear,\n        selectRange: selectRange,\n        selectedSelector: ephemera.selectedSelector,\n        firstSelectedSelector: ephemera.firstSelectedSelector,\n        lastSelectedSelector: ephemera.lastSelectedSelector\n      };\n    };\n    var SelectionAnnotation = {\n      byClass: byClass,\n      byAttr: byAttr\n    };\n\n    var hasInternalTarget = function (e) {\n      return has$1(Element.fromDom(e.target), 'ephox-snooker-resizer-bar') === false;\n    };\n    function CellSelection$1 (editor, lazyResize) {\n      var handlerStruct = MixedBag([\n        'mousedown',\n        'mouseover',\n        'mouseup',\n        'keyup',\n        'keydown'\n      ], []);\n      var handlers = Option.none();\n      var annotations = SelectionAnnotation.byAttr(Ephemera);\n      editor.on('init', function (e) {\n        var win = editor.getWin();\n        var body = getBody$1(editor);\n        var isRoot = getIsRoot(editor);\n        var syncSelection = function () {\n          var sel = editor.selection;\n          var start = Element.fromDom(sel.getStart());\n          var end = Element.fromDom(sel.getEnd());\n          var shared = DomParent.sharedOne(TableLookup.table, [\n            start,\n            end\n          ]);\n          shared.fold(function () {\n            annotations.clear(body);\n          }, noop);\n        };\n        var mouseHandlers = InputHandlers.mouse(win, body, isRoot, annotations);\n        var keyHandlers = InputHandlers.keyboard(win, body, isRoot, annotations);\n        var hasShiftKey = function (event) {\n          return event.raw().shiftKey === true;\n        };\n        var handleResponse = function (event, response) {\n          if (!hasShiftKey(event)) {\n            return;\n          }\n          if (response.kill()) {\n            event.kill();\n          }\n          response.selection().each(function (ns) {\n            var relative = Selection.relative(ns.start(), ns.finish());\n            var rng = asLtrRange(win, relative);\n            editor.selection.setRng(rng);\n          });\n        };\n        var keyup = function (event) {\n          var wrappedEvent = wrapEvent(event);\n          if (wrappedEvent.raw().shiftKey && SelectionKeys.isNavigation(wrappedEvent.raw().which)) {\n            var rng = editor.selection.getRng();\n            var start = Element.fromDom(rng.startContainer);\n            var end = Element.fromDom(rng.endContainer);\n            keyHandlers.keyup(wrappedEvent, start, rng.startOffset, end, rng.endOffset).each(function (response) {\n              handleResponse(wrappedEvent, response);\n            });\n          }\n        };\n        var keydown = function (event) {\n          var wrappedEvent = wrapEvent(event);\n          lazyResize().each(function (resize) {\n            resize.hideBars();\n          });\n          var rng = editor.selection.getRng();\n          var startContainer = Element.fromDom(editor.selection.getStart());\n          var start = Element.fromDom(rng.startContainer);\n          var end = Element.fromDom(rng.endContainer);\n          var direction = Direction.directionAt(startContainer).isRtl() ? SelectionKeys.rtl : SelectionKeys.ltr;\n          keyHandlers.keydown(wrappedEvent, start, rng.startOffset, end, rng.endOffset, direction).each(function (response) {\n            handleResponse(wrappedEvent, response);\n          });\n          lazyResize().each(function (resize) {\n            resize.showBars();\n          });\n        };\n        var isMouseEvent = function (event) {\n          return event.hasOwnProperty('x') && event.hasOwnProperty('y');\n        };\n        var wrapEvent = function (event) {\n          var target = Element.fromDom(event.target);\n          var stop = function () {\n            event.stopPropagation();\n          };\n          var prevent = function () {\n            event.preventDefault();\n          };\n          var kill = compose(prevent, stop);\n          return {\n            target: constant(target),\n            x: constant(isMouseEvent(event) ? event.x : null),\n            y: constant(isMouseEvent(event) ? event.y : null),\n            stop: stop,\n            prevent: prevent,\n            kill: kill,\n            raw: constant(event)\n          };\n        };\n        var isLeftMouse = function (raw) {\n          return raw.button === 0;\n        };\n        var isLeftButtonPressed = function (raw) {\n          if (raw.buttons === undefined) {\n            return true;\n          }\n          if (global$2.ie && global$2.ie >= 12 && raw.buttons === 0) {\n            return true;\n          }\n          return (raw.buttons & 1) !== 0;\n        };\n        var mouseDown = function (e) {\n          if (isLeftMouse(e) && hasInternalTarget(e)) {\n            mouseHandlers.mousedown(wrapEvent(e));\n          }\n        };\n        var mouseOver = function (e) {\n          if (isLeftButtonPressed(e) && hasInternalTarget(e)) {\n            mouseHandlers.mouseover(wrapEvent(e));\n          }\n        };\n        var mouseUp = function (e) {\n          if (isLeftMouse(e) && hasInternalTarget(e)) {\n            mouseHandlers.mouseup(wrapEvent(e));\n          }\n        };\n        editor.on('mousedown', mouseDown);\n        editor.on('mouseover', mouseOver);\n        editor.on('mouseup', mouseUp);\n        editor.on('keyup', keyup);\n        editor.on('keydown', keydown);\n        editor.on('nodechange', syncSelection);\n        handlers = Option.some(handlerStruct({\n          mousedown: mouseDown,\n          mouseover: mouseOver,\n          mouseup: mouseUp,\n          keyup: keyup,\n          keydown: keydown\n        }));\n      });\n      var destroy = function () {\n        handlers.each(function (handlers) {\n        });\n      };\n      return {\n        clear: annotations.clear,\n        destroy: destroy\n      };\n    }\n\n    var Selections = function (editor) {\n      var get = function () {\n        var body = getBody$1(editor);\n        return TableSelection.retrieve(body, Ephemera.selectedSelector()).fold(function () {\n          if (editor.selection.getStart() === undefined) {\n            return SelectionTypes.none();\n          } else {\n            return SelectionTypes.single(editor.selection);\n          }\n        }, function (cells) {\n          return SelectionTypes.multiple(cells);\n        });\n      };\n      return { get: get };\n    };\n\n    var each$4 = global$1.each;\n    var addButtons = function (editor) {\n      var menuItems = [];\n      each$4('inserttable tableprops deletetable | cell row column'.split(' '), function (name) {\n        if (name === '|') {\n          menuItems.push({ text: '-' });\n        } else {\n          menuItems.push(editor.menuItems[name]);\n        }\n      });\n      editor.addButton('table', {\n        type: 'menubutton',\n        title: 'Table',\n        menu: menuItems\n      });\n      function cmd(command) {\n        return function () {\n          editor.execCommand(command);\n        };\n      }\n      editor.addButton('tableprops', {\n        title: 'Table properties',\n        onclick: cmd('mceTableProps'),\n        icon: 'table'\n      });\n      editor.addButton('tabledelete', {\n        title: 'Delete table',\n        onclick: cmd('mceTableDelete')\n      });\n      editor.addButton('tablecellprops', {\n        title: 'Cell properties',\n        onclick: cmd('mceTableCellProps')\n      });\n      editor.addButton('tablemergecells', {\n        title: 'Merge cells',\n        onclick: cmd('mceTableMergeCells')\n      });\n      editor.addButton('tablesplitcells', {\n        title: 'Split cell',\n        onclick: cmd('mceTableSplitCells')\n      });\n      editor.addButton('tableinsertrowbefore', {\n        title: 'Insert row before',\n        onclick: cmd('mceTableInsertRowBefore')\n      });\n      editor.addButton('tableinsertrowafter', {\n        title: 'Insert row after',\n        onclick: cmd('mceTableInsertRowAfter')\n      });\n      editor.addButton('tabledeleterow', {\n        title: 'Delete row',\n        onclick: cmd('mceTableDeleteRow')\n      });\n      editor.addButton('tablerowprops', {\n        title: 'Row properties',\n        onclick: cmd('mceTableRowProps')\n      });\n      editor.addButton('tablecutrow', {\n        title: 'Cut row',\n        onclick: cmd('mceTableCutRow')\n      });\n      editor.addButton('tablecopyrow', {\n        title: 'Copy row',\n        onclick: cmd('mceTableCopyRow')\n      });\n      editor.addButton('tablepasterowbefore', {\n        title: 'Paste row before',\n        onclick: cmd('mceTablePasteRowBefore')\n      });\n      editor.addButton('tablepasterowafter', {\n        title: 'Paste row after',\n        onclick: cmd('mceTablePasteRowAfter')\n      });\n      editor.addButton('tableinsertcolbefore', {\n        title: 'Insert column before',\n        onclick: cmd('mceTableInsertColBefore')\n      });\n      editor.addButton('tableinsertcolafter', {\n        title: 'Insert column after',\n        onclick: cmd('mceTableInsertColAfter')\n      });\n      editor.addButton('tabledeletecol', {\n        title: 'Delete column',\n        onclick: cmd('mceTableDeleteCol')\n      });\n    };\n    var addToolbars = function (editor) {\n      var isTable = function (table) {\n        var selectorMatched = editor.dom.is(table, 'table') && editor.getBody().contains(table);\n        return selectorMatched;\n      };\n      var toolbar = getToolbar(editor);\n      if (toolbar.length > 0) {\n        editor.addContextToolbar(isTable, toolbar.join(' '));\n      }\n    };\n    var Buttons = {\n      addButtons: addButtons,\n      addToolbars: addToolbars\n    };\n\n    var addMenuItems = function (editor, selections) {\n      var targets = Option.none();\n      var tableCtrls = [];\n      var cellCtrls = [];\n      var mergeCtrls = [];\n      var unmergeCtrls = [];\n      var noTargetDisable = function (ctrl) {\n        ctrl.disabled(true);\n      };\n      var ctrlEnable = function (ctrl) {\n        ctrl.disabled(false);\n      };\n      var pushTable = function () {\n        var self = this;\n        tableCtrls.push(self);\n        targets.fold(function () {\n          noTargetDisable(self);\n        }, function (targets) {\n          ctrlEnable(self);\n        });\n      };\n      var pushCell = function () {\n        var self = this;\n        cellCtrls.push(self);\n        targets.fold(function () {\n          noTargetDisable(self);\n        }, function (targets) {\n          ctrlEnable(self);\n        });\n      };\n      var pushMerge = function () {\n        var self = this;\n        mergeCtrls.push(self);\n        targets.fold(function () {\n          noTargetDisable(self);\n        }, function (targets) {\n          self.disabled(targets.mergable().isNone());\n        });\n      };\n      var pushUnmerge = function () {\n        var self = this;\n        unmergeCtrls.push(self);\n        targets.fold(function () {\n          noTargetDisable(self);\n        }, function (targets) {\n          self.disabled(targets.unmergable().isNone());\n        });\n      };\n      var setDisabledCtrls = function () {\n        targets.fold(function () {\n          each(tableCtrls, noTargetDisable);\n          each(cellCtrls, noTargetDisable);\n          each(mergeCtrls, noTargetDisable);\n          each(unmergeCtrls, noTargetDisable);\n        }, function (targets) {\n          each(tableCtrls, ctrlEnable);\n          each(cellCtrls, ctrlEnable);\n          each(mergeCtrls, function (mergeCtrl) {\n            mergeCtrl.disabled(targets.mergable().isNone());\n          });\n          each(unmergeCtrls, function (unmergeCtrl) {\n            unmergeCtrl.disabled(targets.unmergable().isNone());\n          });\n        });\n      };\n      editor.on('init', function () {\n        editor.on('nodechange', function (e) {\n          var cellOpt = Option.from(editor.dom.getParent(editor.selection.getStart(), 'th,td'));\n          targets = cellOpt.bind(function (cellDom) {\n            var cell = Element.fromDom(cellDom);\n            var table = TableLookup.table(cell);\n            return table.map(function (table) {\n              return TableTargets.forMenu(selections, table, cell);\n            });\n          });\n          setDisabledCtrls();\n        });\n      });\n      var generateTableGrid = function () {\n        var html = '';\n        html = '<table role=\"grid\" class=\"mce-grid mce-grid-border\" aria-readonly=\"true\">';\n        for (var y = 0; y < 10; y++) {\n          html += '<tr>';\n          for (var x = 0; x < 10; x++) {\n            html += '<td role=\"gridcell\" tabindex=\"-1\"><a id=\"mcegrid' + (y * 10 + x) + '\" href=\"#\" ' + 'data-mce-x=\"' + x + '\" data-mce-y=\"' + y + '\"></a></td>';\n          }\n          html += '</tr>';\n        }\n        html += '</table>';\n        html += '<div class=\"mce-text-center\" role=\"presentation\">1 x 1</div>';\n        return html;\n      };\n      var selectGrid = function (editor, tx, ty, control) {\n        var table = control.getEl().getElementsByTagName('table')[0];\n        var x, y, focusCell, cell, active;\n        var rtl = control.isRtl() || control.parent().rel === 'tl-tr';\n        table.nextSibling.innerHTML = tx + 1 + ' x ' + (ty + 1);\n        if (rtl) {\n          tx = 9 - tx;\n        }\n        for (y = 0; y < 10; y++) {\n          for (x = 0; x < 10; x++) {\n            cell = table.rows[y].childNodes[x].firstChild;\n            active = (rtl ? x >= tx : x <= tx) && y <= ty;\n            editor.dom.toggleClass(cell, 'mce-active', active);\n            if (active) {\n              focusCell = cell;\n            }\n          }\n        }\n        return focusCell.parentNode;\n      };\n      var insertTable = hasTableGrid(editor) === false ? {\n        text: 'Table',\n        icon: 'table',\n        context: 'table',\n        onclick: cmd('mceInsertTable')\n      } : {\n        text: 'Table',\n        icon: 'table',\n        context: 'table',\n        ariaHideMenu: true,\n        onclick: function (e) {\n          if (e.aria) {\n            this.parent().hideAll();\n            e.stopImmediatePropagation();\n            editor.execCommand('mceInsertTable');\n          }\n        },\n        onshow: function () {\n          selectGrid(editor, 0, 0, this.menu.items()[0]);\n        },\n        onhide: function () {\n          var elements = this.menu.items()[0].getEl().getElementsByTagName('a');\n          editor.dom.removeClass(elements, 'mce-active');\n          editor.dom.addClass(elements[0], 'mce-active');\n        },\n        menu: [{\n            type: 'container',\n            html: generateTableGrid(),\n            onPostRender: function () {\n              this.lastX = this.lastY = 0;\n            },\n            onmousemove: function (e) {\n              var target = e.target;\n              var x, y;\n              if (target.tagName.toUpperCase() === 'A') {\n                x = parseInt(target.getAttribute('data-mce-x'), 10);\n                y = parseInt(target.getAttribute('data-mce-y'), 10);\n                if (this.isRtl() || this.parent().rel === 'tl-tr') {\n                  x = 9 - x;\n                }\n                if (x !== this.lastX || y !== this.lastY) {\n                  selectGrid(editor, x, y, e.control);\n                  this.lastX = x;\n                  this.lastY = y;\n                }\n              }\n            },\n            onclick: function (e) {\n              var self = this;\n              if (e.target.tagName.toUpperCase() === 'A') {\n                e.preventDefault();\n                e.stopPropagation();\n                self.parent().cancel();\n                editor.undoManager.transact(function () {\n                  InsertTable.insert(editor, self.lastX + 1, self.lastY + 1);\n                });\n                editor.addVisual();\n              }\n            }\n          }]\n      };\n      function cmd(command) {\n        return function () {\n          editor.execCommand(command);\n        };\n      }\n      var tableProperties = {\n        text: 'Table properties',\n        context: 'table',\n        onPostRender: pushTable,\n        onclick: cmd('mceTableProps')\n      };\n      var deleteTable = {\n        text: 'Delete table',\n        context: 'table',\n        onPostRender: pushTable,\n        cmd: 'mceTableDelete'\n      };\n      var row = {\n        text: 'Row',\n        context: 'table',\n        menu: [\n          {\n            text: 'Insert row before',\n            onclick: cmd('mceTableInsertRowBefore'),\n            onPostRender: pushCell\n          },\n          {\n            text: 'Insert row after',\n            onclick: cmd('mceTableInsertRowAfter'),\n            onPostRender: pushCell\n          },\n          {\n            text: 'Delete row',\n            onclick: cmd('mceTableDeleteRow'),\n            onPostRender: pushCell\n          },\n          {\n            text: 'Row properties',\n            onclick: cmd('mceTableRowProps'),\n            onPostRender: pushCell\n          },\n          { text: '-' },\n          {\n            text: 'Cut row',\n            onclick: cmd('mceTableCutRow'),\n            onPostRender: pushCell\n          },\n          {\n            text: 'Copy row',\n            onclick: cmd('mceTableCopyRow'),\n            onPostRender: pushCell\n          },\n          {\n            text: 'Paste row before',\n            onclick: cmd('mceTablePasteRowBefore'),\n            onPostRender: pushCell\n          },\n          {\n            text: 'Paste row after',\n            onclick: cmd('mceTablePasteRowAfter'),\n            onPostRender: pushCell\n          }\n        ]\n      };\n      var column = {\n        text: 'Column',\n        context: 'table',\n        menu: [\n          {\n            text: 'Insert column before',\n            onclick: cmd('mceTableInsertColBefore'),\n            onPostRender: pushCell\n          },\n          {\n            text: 'Insert column after',\n            onclick: cmd('mceTableInsertColAfter'),\n            onPostRender: pushCell\n          },\n          {\n            text: 'Delete column',\n            onclick: cmd('mceTableDeleteCol'),\n            onPostRender: pushCell\n          }\n        ]\n      };\n      var cell = {\n        separator: 'before',\n        text: 'Cell',\n        context: 'table',\n        menu: [\n          {\n            text: 'Cell properties',\n            onclick: cmd('mceTableCellProps'),\n            onPostRender: pushCell\n          },\n          {\n            text: 'Merge cells',\n            onclick: cmd('mceTableMergeCells'),\n            onPostRender: pushMerge\n          },\n          {\n            text: 'Split cell',\n            onclick: cmd('mceTableSplitCells'),\n            onPostRender: pushUnmerge\n          }\n        ]\n      };\n      editor.addMenuItem('inserttable', insertTable);\n      editor.addMenuItem('tableprops', tableProperties);\n      editor.addMenuItem('deletetable', deleteTable);\n      editor.addMenuItem('row', row);\n      editor.addMenuItem('column', column);\n      editor.addMenuItem('cell', cell);\n    };\n    var MenuItems = { addMenuItems: addMenuItems };\n\n    var getClipboardRows = function (clipboardRows) {\n      return clipboardRows.get().fold(function () {\n        return;\n      }, function (rows) {\n        return map(rows, function (row) {\n          return row.dom();\n        });\n      });\n    };\n    var setClipboardRows = function (rows, clipboardRows) {\n      var sugarRows = map(rows, Element.fromDom);\n      clipboardRows.set(Option.from(sugarRows));\n    };\n    var getApi = function (editor, clipboardRows) {\n      return {\n        insertTable: function (columns, rows) {\n          return InsertTable.insert(editor, columns, rows);\n        },\n        setClipboardRows: function (rows) {\n          return setClipboardRows(rows, clipboardRows);\n        },\n        getClipboardRows: function () {\n          return getClipboardRows(clipboardRows);\n        }\n      };\n    };\n\n    function Plugin(editor) {\n      var resizeHandler = ResizeHandler(editor);\n      var cellSelection = CellSelection$1(editor, resizeHandler.lazyResize);\n      var actions = TableActions(editor, resizeHandler.lazyWire);\n      var selections = Selections(editor);\n      var clipboardRows = Cell(Option.none());\n      Commands.registerCommands(editor, actions, cellSelection, selections, clipboardRows);\n      Clipboard.registerEvents(editor, selections, actions, cellSelection);\n      MenuItems.addMenuItems(editor, selections);\n      Buttons.addButtons(editor);\n      Buttons.addToolbars(editor);\n      editor.on('PreInit', function () {\n        editor.serializer.addTempAttr(Ephemera.firstSelected());\n        editor.serializer.addTempAttr(Ephemera.lastSelected());\n      });\n      if (hasTabNavigation(editor)) {\n        editor.on('keydown', function (e) {\n          TabContext.handle(e, editor, actions, resizeHandler.lazyWire);\n        });\n      }\n      editor.on('remove', function () {\n        resizeHandler.destroy();\n        cellSelection.destroy();\n      });\n      return getApi(editor, clipboardRows);\n    }\n    global.add('table', Plugin);\n    function Plugin$1 () {\n    }\n\n    return Plugin$1;\n\n}(window));\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tinymce/plugins/table/plugin.js\n// module id = BzBW\n// module chunks = 8","// Exports the \"table\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/table')\n//   ES2015:\n//     import 'tinymce/plugins/table'\nrequire('./plugin.js');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tinymce/plugins/table/index.js\n// module id = Q/P+\n// module chunks = 8"],"sourceRoot":""}