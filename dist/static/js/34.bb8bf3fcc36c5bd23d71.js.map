{"version":3,"sources":["webpack:///static/js/34.bb8bf3fcc36c5bd23d71.js","webpack:///./~/tinymce/plugins/colorpicker/index.js","webpack:///./~/tinymce/plugins/colorpicker/plugin.js"],"names":["webpackJsonp","Rv7z","module","exports","__webpack_require__","iTxg","Plugin","global","tinymce","util","Tools","resolve","global$1","showPreview","win","hexColor","find","getEl","style","background","setColor","value","color","rgb","toRgb","fromJSON","r","g","b","hex","toHex","substr","open","editor","callback","windowManager","title","items","type","layout","direction","align","padding","spacing","onchange","this","labelGap","defaults","size","flex","spellcheck","name","colorPickerCtrl","label","autofocus","border","onSubmit","toJSON","Dialog","add","settings","color_picker_callback"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAASC,GCGjC,EAAQ,SDSFC,KACA,SAAUH,EAAQC,IEhBxB,YACmB,WACf,YAqHA,SAASG,MAnHT,GAAIC,GAASC,QAAQC,KAAKC,MAAMC,QAAQ,yBAEpCC,EAAWJ,QAAQC,KAAKC,MAAMC,QAAQ,sBAEtCE,EAAc,SAAUC,EAAKC,GAC/BD,EAAIE,KAAK,YAAY,GAAGC,QAAQC,MAAMC,WAAaJ,GAEjDK,EAAW,SAAUN,EAAKO,GAC5B,GAAIC,GAAQV,EAASS,GAAQE,EAAMD,EAAME,OACzCV,GAAIW,UACFC,EAAGH,EAAIG,EACPC,EAAGJ,EAAII,EACPC,EAAGL,EAAIK,EACPC,IAAKP,EAAMQ,QAAQC,OAAO,KAE5BlB,EAAYC,EAAKQ,EAAMQ,UAErBE,EAAO,SAAUC,EAAQC,EAAUb,GACrC,GAAIP,GAAMmB,EAAOE,cAAcH,MAC7BI,MAAO,QACPC,OACEC,KAAM,YACNC,OAAQ,OACRC,UAAW,MACXC,MAAO,UACPC,QAAS,EACTC,QAAS,GACTN,QAEIC,KAAM,cACNjB,MAAOA,EACPuB,SAAU,WACR,GAAIrB,GAAMsB,KAAKtB,KACXT,KACFA,EAAIE,KAAK,MAAMK,MAAME,EAAIG,GACzBZ,EAAIE,KAAK,MAAMK,MAAME,EAAII,GACzBb,EAAIE,KAAK,MAAMK,MAAME,EAAIK,GACzBd,EAAIE,KAAK,QAAQK,MAAMwB,KAAKxB,QAAQU,OAAO,IAC3ClB,EAAYC,EAAK+B,KAAKxB,aAK1BiB,KAAM,OACNI,QAAS,EACTI,SAAU,EACVC,UACET,KAAM,UACNU,KAAM,EACN3B,MAAO,IACP4B,KAAM,EACNC,YAAY,EACZN,SAAU,WACR,GACIO,GAAM9B,EADN+B,EAAkBtC,EAAIE,KAAK,eAAe,EAI9C,IAFAmC,EAAON,KAAKM,OACZ9B,EAAQwB,KAAKxB,QACA,QAAT8B,EAIF,MAHA9B,GAAQ,IAAMA,EACdD,EAASN,EAAKO,OACd+B,GAAgB/B,MAAMA,EAGxBA,IACEK,EAAGZ,EAAIE,KAAK,MAAMK,QAClBM,EAAGb,EAAIE,KAAK,MAAMK,QAClBO,EAAGd,EAAIE,KAAK,MAAMK,SAEpB+B,EAAgB/B,MAAMA,GACtBD,EAASN,EAAKO,KAGlBgB,QAEIc,KAAM,IACNE,MAAO,IACPC,UAAW,IAGXH,KAAM,IACNE,MAAO,MAGPF,KAAM,IACNE,MAAO,MAGPF,KAAM,MACNE,MAAO,IACPhC,MAAO,WAGP8B,KAAM,UACNb,KAAM,YACNiB,OAAQ,OAMlBC,SAAU,WACRtB,EAAS,IAAMpB,EAAI2C,SAAS5B,OAGhCT,GAASN,EAAKO,IAEZqC,GAAW1B,KAAMA,EAErBzB,GAAOoD,IAAI,cAAe,SAAU1B,GAC7BA,EAAO2B,SAASC,wBACnB5B,EAAO2B,SAASC,sBAAwB,SAAU3B,EAAUb,GAC1DqC,EAAO1B,KAAKC,EAAQC,EAAUb","file":"static/js/34.bb8bf3fcc36c5bd23d71.js","sourcesContent":["webpackJsonp([34],{\n\n/***/ \"Rv7z\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// Exports the \"colorpicker\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/colorpicker')\n//   ES2015:\n//     import 'tinymce/plugins/colorpicker'\n__webpack_require__(\"iTxg\");\n\n/***/ }),\n\n/***/ \"iTxg\":\n/***/ (function(module, exports) {\n\n(function () {\nvar colorpicker = (function () {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Color');\n\n    var showPreview = function (win, hexColor) {\n      win.find('#preview')[0].getEl().style.background = hexColor;\n    };\n    var setColor = function (win, value) {\n      var color = global$1(value), rgb = color.toRgb();\n      win.fromJSON({\n        r: rgb.r,\n        g: rgb.g,\n        b: rgb.b,\n        hex: color.toHex().substr(1)\n      });\n      showPreview(win, color.toHex());\n    };\n    var open = function (editor, callback, value) {\n      var win = editor.windowManager.open({\n        title: 'Color',\n        items: {\n          type: 'container',\n          layout: 'flex',\n          direction: 'row',\n          align: 'stretch',\n          padding: 5,\n          spacing: 10,\n          items: [\n            {\n              type: 'colorpicker',\n              value: value,\n              onchange: function () {\n                var rgb = this.rgb();\n                if (win) {\n                  win.find('#r').value(rgb.r);\n                  win.find('#g').value(rgb.g);\n                  win.find('#b').value(rgb.b);\n                  win.find('#hex').value(this.value().substr(1));\n                  showPreview(win, this.value());\n                }\n              }\n            },\n            {\n              type: 'form',\n              padding: 0,\n              labelGap: 5,\n              defaults: {\n                type: 'textbox',\n                size: 7,\n                value: '0',\n                flex: 1,\n                spellcheck: false,\n                onchange: function () {\n                  var colorPickerCtrl = win.find('colorpicker')[0];\n                  var name, value;\n                  name = this.name();\n                  value = this.value();\n                  if (name === 'hex') {\n                    value = '#' + value;\n                    setColor(win, value);\n                    colorPickerCtrl.value(value);\n                    return;\n                  }\n                  value = {\n                    r: win.find('#r').value(),\n                    g: win.find('#g').value(),\n                    b: win.find('#b').value()\n                  };\n                  colorPickerCtrl.value(value);\n                  setColor(win, value);\n                }\n              },\n              items: [\n                {\n                  name: 'r',\n                  label: 'R',\n                  autofocus: 1\n                },\n                {\n                  name: 'g',\n                  label: 'G'\n                },\n                {\n                  name: 'b',\n                  label: 'B'\n                },\n                {\n                  name: 'hex',\n                  label: '#',\n                  value: '000000'\n                },\n                {\n                  name: 'preview',\n                  type: 'container',\n                  border: 1\n                }\n              ]\n            }\n          ]\n        },\n        onSubmit: function () {\n          callback('#' + win.toJSON().hex);\n        }\n      });\n      setColor(win, value);\n    };\n    var Dialog = { open: open };\n\n    global.add('colorpicker', function (editor) {\n      if (!editor.settings.color_picker_callback) {\n        editor.settings.color_picker_callback = function (callback, value) {\n          Dialog.open(editor, callback, value);\n        };\n      }\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}());\n})();\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/34.bb8bf3fcc36c5bd23d71.js","// Exports the \"colorpicker\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/colorpicker')\n//   ES2015:\n//     import 'tinymce/plugins/colorpicker'\nrequire('./plugin.js');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tinymce/plugins/colorpicker/index.js\n// module id = Rv7z\n// module chunks = 34","(function () {\nvar colorpicker = (function () {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Color');\n\n    var showPreview = function (win, hexColor) {\n      win.find('#preview')[0].getEl().style.background = hexColor;\n    };\n    var setColor = function (win, value) {\n      var color = global$1(value), rgb = color.toRgb();\n      win.fromJSON({\n        r: rgb.r,\n        g: rgb.g,\n        b: rgb.b,\n        hex: color.toHex().substr(1)\n      });\n      showPreview(win, color.toHex());\n    };\n    var open = function (editor, callback, value) {\n      var win = editor.windowManager.open({\n        title: 'Color',\n        items: {\n          type: 'container',\n          layout: 'flex',\n          direction: 'row',\n          align: 'stretch',\n          padding: 5,\n          spacing: 10,\n          items: [\n            {\n              type: 'colorpicker',\n              value: value,\n              onchange: function () {\n                var rgb = this.rgb();\n                if (win) {\n                  win.find('#r').value(rgb.r);\n                  win.find('#g').value(rgb.g);\n                  win.find('#b').value(rgb.b);\n                  win.find('#hex').value(this.value().substr(1));\n                  showPreview(win, this.value());\n                }\n              }\n            },\n            {\n              type: 'form',\n              padding: 0,\n              labelGap: 5,\n              defaults: {\n                type: 'textbox',\n                size: 7,\n                value: '0',\n                flex: 1,\n                spellcheck: false,\n                onchange: function () {\n                  var colorPickerCtrl = win.find('colorpicker')[0];\n                  var name, value;\n                  name = this.name();\n                  value = this.value();\n                  if (name === 'hex') {\n                    value = '#' + value;\n                    setColor(win, value);\n                    colorPickerCtrl.value(value);\n                    return;\n                  }\n                  value = {\n                    r: win.find('#r').value(),\n                    g: win.find('#g').value(),\n                    b: win.find('#b').value()\n                  };\n                  colorPickerCtrl.value(value);\n                  setColor(win, value);\n                }\n              },\n              items: [\n                {\n                  name: 'r',\n                  label: 'R',\n                  autofocus: 1\n                },\n                {\n                  name: 'g',\n                  label: 'G'\n                },\n                {\n                  name: 'b',\n                  label: 'B'\n                },\n                {\n                  name: 'hex',\n                  label: '#',\n                  value: '000000'\n                },\n                {\n                  name: 'preview',\n                  type: 'container',\n                  border: 1\n                }\n              ]\n            }\n          ]\n        },\n        onSubmit: function () {\n          callback('#' + win.toJSON().hex);\n        }\n      });\n      setColor(win, value);\n    };\n    var Dialog = { open: open };\n\n    global.add('colorpicker', function (editor) {\n      if (!editor.settings.color_picker_callback) {\n        editor.settings.color_picker_callback = function (callback, value) {\n          Dialog.open(editor, callback, value);\n        };\n      }\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}());\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tinymce/plugins/colorpicker/plugin.js\n// module id = iTxg\n// module chunks = 34"],"sourceRoot":""}