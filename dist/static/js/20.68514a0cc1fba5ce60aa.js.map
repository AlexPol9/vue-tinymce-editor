{"version":3,"sources":["webpack:///static/js/20.68514a0cc1fba5ce60aa.js","webpack:///./~/tinymce/plugins/lists/plugin.js","webpack:///./~/tinymce/plugins/lists/index.js"],"names":["webpackJsonp","Z3om","module","exports","domGlobals","Plugin","global","tinymce","util","Tools","resolve","global$1","global$2","global$3","global$4","global$5","global$6","isTextNode","node","nodeType","isListNode","test","nodeName","isOlUlNode","isListItemNode","isDlItemNode","isTableCellNode","isBr","isFirstChild","parentNode","firstChild","isLastChild","lastChild","isTextBlock","editor","schema","getTextBlockElements","isBlock","blockElements","isBogusBr","dom","nextSibling","previousSibling","isEmpty","elm","keepBookmarks","empty","select","length","isChildOfBody","isChildOf","getRoot","NodeType","getNormalizedPoint","container","offset","getNode","childNodes","data","normalizeRange","rng","outRng","cloneRange","rangeStart","startContainer","startOffset","setStart","rangeEnd","endContainer","endOffset","setEnd","Range","DOM","createBookmark","bookmark","setupEndPoint","start","offsetNode","create","hasChildNodes","Math","min","insertBefore","insertAfter","appendChild","collapsed","resolveBookmark","restoreEndPoint","idx","getAttribute","remove","createRng","Bookmark","noop","constant","value","not","f","args","_i","arguments","apply","never","always","none","NONE","eq","o","isNone","call","thunk","id","n","me","fold","s","is","isSome","getOr","getOrThunk","getOrDie","msg","Error","getOrNull","getOrUndefined","undefined","or","orThunk","map","each","bind","exists","forall","filter","equals","equals_","toArray","toString","Object","freeze","some","a","constant_a","self","v","elementEq","b","from","Option","typeOf","x","t","Array","prototype","isPrototypeOf","constructor","name","String","isType","type","isString","isArray","isBoolean","isFunction","isNumber","nativeSlice","slice","nativePush","push","xs","len","r","i","pred","groupBy","wasType","group","foldl","acc","find","flatten","output","reverse","head","last","Global","window","Function","path","parts","scope","p","split","unsafe","actual","Global$1","htmlElement","HTMLElement","global$7","getParentList","selectionStart","selection","getStart","getParent","getClosestListRootElm","isParentListSelected","parentList","selectedBlocks","findSubLists","grep","querySelectorAll","getSelectedSubLists","getSelectedBlocks","findParentListItemsNodes","elms","listItemsElms","parentLi","unique","getSelectedListItems","block","getSelectedDlItems","parentTableCell","getParents","getBody","findLastParentListNode","parentLists","getSelectedLists","firstList","subsequentLists","concat","getSelectedListRoots","selectedLists","getUniqueListRoots","lists","listRoots","list","isList","Selection","fromHtml","html","doc","document","div","createElement","innerHTML","console","error","fromDom","fromTag","tag","fromText","text","createTextNode","fromPoint","docElm","y","elementFromPoint","Element","lift2","oa","ob","fromElements","elements","fragment","createDocumentFragment","element","keys","each$1","obj","props","k","compareDocumentPosition","match","documentPositionPreceding","DOCUMENT_POSITION_PRECEDING","documentPositionContainedBy","DOCUMENT_POSITION_CONTAINED_BY","Node","firstMatch","regexes","find$1","agent","major","minor","Number","replace","nu","detect","versionRegexes","cleanedAgent","toLowerCase","unknown","Version","isBrowser","current","unknown$1","nu$1","version","info","isEdge","isChrome","isIE","isOpera","isFirefox","isSafari","Browser","edge","chrome","ie","opera","firefox","safari","isOS","unknown$2","nu$2","isWindows","isiOS","isAndroid","isOSX","isLinux","isSolaris","isFreeBSD","OperatingSystem","windows","ios","android","linux","osx","solaris","freebsd","DeviceType","os","browser","userAgent","isiPad","isiPhone","isAndroid3","isAndroid4","isTablet","isTouch","isPhone","iOSwebview","isWebView","detect$1","candidates","candidate","search","detectBrowser","browsers","detectOs","oses","UaString","contains","str","substr","indexOf","normalVersionRegex","checkContains","target","uastring","PlatformInfo","detect$2","deviceType","PlatformDetection","detect$3","called","navigator","PlatformDetection$1","ELEMENT","ATTRIBUTE_NODE","CDATA_SECTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","ELEMENT_NODE","ELEMENT$1","TEXT_NODE","PROCESSING_INSTRUCTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","NOTATION_NODE","selector","elem","matches","msMatchesSelector","webkitMatchesSelector","mozMatchesSelector","e1","e2","regularContains","d1","d2","ieContains","contains$1","is$1","parent","children","child","index","cs","before","fields","marker","append","before$1","append$1","removeChild","isElement","rawSet","key","setAttribute","setAll","attrs","clone","attributes","attr","isSupported","style","getPropertyValue","internalSet","property","setProperty","set","clone$1","original","isDeep","cloneNode","deep","shallowAs","mutate","children$1","joinSegment","item","joinSegments","segments","appendSegments","head$1","tail","createSegment","listType","segment","createSegments","entry","size","populateSegments","listAttributes","itemAttributes","content","normalizeSegment","createItem","appendItem","writeShallow","cast","newCast","depth","writeDeep","composeList","entries","isList$1","el","hasFirstChildList","hasLastChildList","isIndented","isSelected","cloneItemContent","li","createEntry","indentEntry","indentation","hasOwnProperty","shallow","old","merge","merger","objects","ret","j","curObject","cloneListProperties","source","previousSiblingEntry","normalizeEntries","matchingEntry","Cell","initial","get","parseItem","itemSelection","selectionState","currentItemEntry","end","childListEntries","parseList","parseLists","sourceList","global$8","createTextBlock","contentNode","textBlock","blockName","hasContentNode","getBlockElements","createFragment","settings","forced_root_block","tagName","setAttribs","forced_root_block_attrs","outdentedComposer","indentedComposer","contentDocument","composeEntries","indentSelectedEntries","getItemSelection","selectedListItems","listsIndentation","entrySets","entrySet","DOM$1","splitList","ul","tmpRng","bookmarks","newBlock","setStartAfter","setEndAfter","extractContents","targetNode","SplitList","outdentDlItem","dl","indentDlItem","dlIndentation","dlItems","selectionIndentation","isHandled","getBookmark","moveToBookmark","setRng","getRng","nodeChanged","indentListSelection","outdentListSelection","flattenListSelection","updateListStyle","detail","setStyle","updateListAttrs","updateListWithDetails","removeStyles","styles","_a","getEndPointNode","root","getSelectedTextBlocks","textBlocks","startNode","endNode","siblings","isBookmarkNode","hasCompatibleStyle","sib","sibStyle","getStyle","detailStyle","applyList","listName","listItemName","getContentEditable","toUpperCase","listBlock","sibling","rename","mergeWithAdjacentLists","isValidLists","list1","list2","hasSameListStyle","hasSameClasses","elm1","elm2","className","shouldMerge","updateList","newList","toggleMultipleLists","hasListStyleDetail","toggleSingleList","toggleList","selectedSubLists","ToggleList","DOM$2","normalizeList","normalizeLists","NormalizeLists","findNextCaretContainer","isForward","nonEmptyBlocks","walker","getNonEmptyElements","next","hasOnlyOneBlockChild","unwrapSingleBlockChild","moveChildren","fromElm","toElm","targetElm","mergeLiElements","listNode","$","nestedLists","mergeIntoEmptyLi","fromLi","toLi","setCursorLocation","mergeForward","mergeBackward","resolvedBookmark","backspaceDeleteFromListToListCaret","otherLi","selectionStartElm","removeBlock","parentBlock","backspaceDeleteIntoListCaret","otherLi_1","undoManager","transact","collapse","backspaceDeleteCaret","backspaceDeleteRange","execCommand","backspaceDelete","isCollapsed","setup","on","e","keyCode","BACKSPACE","preventDefault","DELETE","Delete","Api","queryListCommandState","register","cmd","command","addCommand","ui","addQueryStateHandler","Commands","shouldIndentOnTab","getParam","Settings","setupTabKey","TAB","metaKeyPressed","shiftKey","setup$1","Keyboard","findIndex","predicate","listState","ctrl","control","tableCellIndex","parents","active","register$1","plugin","plugins","inArray","addButton","title","onPostRender","icon","Buttons","add","f85y","__webpack_require__"],"mappings":"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","file":"static/js/20.68514a0cc1fba5ce60aa.js","sourcesContent":["webpackJsonp([20],{\n\n/***/ \"Z3om\":\n/***/ (function(module, exports) {\n\n(function () {\nvar lists = (function (domGlobals) {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.dom.RangeUtils');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.dom.TreeWalker');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.dom.BookmarkManager');\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var global$6 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var isTextNode = function (node) {\n      return node && node.nodeType === 3;\n    };\n    var isListNode = function (node) {\n      return node && /^(OL|UL|DL)$/.test(node.nodeName);\n    };\n    var isOlUlNode = function (node) {\n      return node && /^(OL|UL)$/.test(node.nodeName);\n    };\n    var isListItemNode = function (node) {\n      return node && /^(LI|DT|DD)$/.test(node.nodeName);\n    };\n    var isDlItemNode = function (node) {\n      return node && /^(DT|DD)$/.test(node.nodeName);\n    };\n    var isTableCellNode = function (node) {\n      return node && /^(TH|TD)$/.test(node.nodeName);\n    };\n    var isBr = function (node) {\n      return node && node.nodeName === 'BR';\n    };\n    var isFirstChild = function (node) {\n      return node.parentNode.firstChild === node;\n    };\n    var isLastChild = function (node) {\n      return node.parentNode.lastChild === node;\n    };\n    var isTextBlock = function (editor, node) {\n      return node && !!editor.schema.getTextBlockElements()[node.nodeName];\n    };\n    var isBlock = function (node, blockElements) {\n      return node && node.nodeName in blockElements;\n    };\n    var isBogusBr = function (dom, node) {\n      if (!isBr(node)) {\n        return false;\n      }\n      if (dom.isBlock(node.nextSibling) && !isBr(node.previousSibling)) {\n        return true;\n      }\n      return false;\n    };\n    var isEmpty = function (dom, elm, keepBookmarks) {\n      var empty = dom.isEmpty(elm);\n      if (keepBookmarks && dom.select('span[data-mce-type=bookmark]', elm).length > 0) {\n        return false;\n      }\n      return empty;\n    };\n    var isChildOfBody = function (dom, elm) {\n      return dom.isChildOf(elm, dom.getRoot());\n    };\n    var NodeType = {\n      isTextNode: isTextNode,\n      isListNode: isListNode,\n      isOlUlNode: isOlUlNode,\n      isDlItemNode: isDlItemNode,\n      isListItemNode: isListItemNode,\n      isTableCellNode: isTableCellNode,\n      isBr: isBr,\n      isFirstChild: isFirstChild,\n      isLastChild: isLastChild,\n      isTextBlock: isTextBlock,\n      isBlock: isBlock,\n      isBogusBr: isBogusBr,\n      isEmpty: isEmpty,\n      isChildOfBody: isChildOfBody\n    };\n\n    var getNormalizedPoint = function (container, offset) {\n      if (NodeType.isTextNode(container)) {\n        return {\n          container: container,\n          offset: offset\n        };\n      }\n      var node = global$1.getNode(container, offset);\n      if (NodeType.isTextNode(node)) {\n        return {\n          container: node,\n          offset: offset >= container.childNodes.length ? node.data.length : 0\n        };\n      } else if (node.previousSibling && NodeType.isTextNode(node.previousSibling)) {\n        return {\n          container: node.previousSibling,\n          offset: node.previousSibling.data.length\n        };\n      } else if (node.nextSibling && NodeType.isTextNode(node.nextSibling)) {\n        return {\n          container: node.nextSibling,\n          offset: 0\n        };\n      }\n      return {\n        container: container,\n        offset: offset\n      };\n    };\n    var normalizeRange = function (rng) {\n      var outRng = rng.cloneRange();\n      var rangeStart = getNormalizedPoint(rng.startContainer, rng.startOffset);\n      outRng.setStart(rangeStart.container, rangeStart.offset);\n      var rangeEnd = getNormalizedPoint(rng.endContainer, rng.endOffset);\n      outRng.setEnd(rangeEnd.container, rangeEnd.offset);\n      return outRng;\n    };\n    var Range = {\n      getNormalizedPoint: getNormalizedPoint,\n      normalizeRange: normalizeRange\n    };\n\n    var DOM = global$6.DOM;\n    var createBookmark = function (rng) {\n      var bookmark = {};\n      var setupEndPoint = function (start) {\n        var offsetNode, container, offset;\n        container = rng[start ? 'startContainer' : 'endContainer'];\n        offset = rng[start ? 'startOffset' : 'endOffset'];\n        if (container.nodeType === 1) {\n          offsetNode = DOM.create('span', { 'data-mce-type': 'bookmark' });\n          if (container.hasChildNodes()) {\n            offset = Math.min(offset, container.childNodes.length - 1);\n            if (start) {\n              container.insertBefore(offsetNode, container.childNodes[offset]);\n            } else {\n              DOM.insertAfter(offsetNode, container.childNodes[offset]);\n            }\n          } else {\n            container.appendChild(offsetNode);\n          }\n          container = offsetNode;\n          offset = 0;\n        }\n        bookmark[start ? 'startContainer' : 'endContainer'] = container;\n        bookmark[start ? 'startOffset' : 'endOffset'] = offset;\n      };\n      setupEndPoint(true);\n      if (!rng.collapsed) {\n        setupEndPoint();\n      }\n      return bookmark;\n    };\n    var resolveBookmark = function (bookmark) {\n      function restoreEndPoint(start) {\n        var container, offset, node;\n        var nodeIndex = function (container) {\n          var node = container.parentNode.firstChild, idx = 0;\n          while (node) {\n            if (node === container) {\n              return idx;\n            }\n            if (node.nodeType !== 1 || node.getAttribute('data-mce-type') !== 'bookmark') {\n              idx++;\n            }\n            node = node.nextSibling;\n          }\n          return -1;\n        };\n        container = node = bookmark[start ? 'startContainer' : 'endContainer'];\n        offset = bookmark[start ? 'startOffset' : 'endOffset'];\n        if (!container) {\n          return;\n        }\n        if (container.nodeType === 1) {\n          offset = nodeIndex(container);\n          container = container.parentNode;\n          DOM.remove(node);\n          if (!container.hasChildNodes() && DOM.isBlock(container)) {\n            container.appendChild(DOM.create('br'));\n          }\n        }\n        bookmark[start ? 'startContainer' : 'endContainer'] = container;\n        bookmark[start ? 'startOffset' : 'endOffset'] = offset;\n      }\n      restoreEndPoint(true);\n      restoreEndPoint();\n      var rng = DOM.createRng();\n      rng.setStart(bookmark.startContainer, bookmark.startOffset);\n      if (bookmark.endContainer) {\n        rng.setEnd(bookmark.endContainer, bookmark.endOffset);\n      }\n      return Range.normalizeRange(rng);\n    };\n    var Bookmark = {\n      createBookmark: createBookmark,\n      resolveBookmark: resolveBookmark\n    };\n\n    var noop = function () {\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var not = function (f) {\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        return !f.apply(null, args);\n      };\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var none = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var eq = function (o) {\n        return o.isNone();\n      };\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = function (n) {\n        return n;\n      };\n      var me = {\n        fold: function (n, s) {\n          return n();\n        },\n        is: never,\n        isSome: never,\n        isNone: always,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: constant(null),\n        getOrUndefined: constant(undefined),\n        or: id,\n        orThunk: call,\n        map: none,\n        each: noop,\n        bind: none,\n        exists: never,\n        forall: always,\n        filter: none,\n        equals: eq,\n        equals_: eq,\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      if (Object.freeze) {\n        Object.freeze(me);\n      }\n      return me;\n    }();\n    var some = function (a) {\n      var constant_a = constant(a);\n      var self = function () {\n        return me;\n      };\n      var bind = function (f) {\n        return f(a);\n      };\n      var me = {\n        fold: function (n, s) {\n          return s(a);\n        },\n        is: function (v) {\n          return a === v;\n        },\n        isSome: always,\n        isNone: never,\n        getOr: constant_a,\n        getOrThunk: constant_a,\n        getOrDie: constant_a,\n        getOrNull: constant_a,\n        getOrUndefined: constant_a,\n        or: self,\n        orThunk: self,\n        map: function (f) {\n          return some(f(a));\n        },\n        each: function (f) {\n          f(a);\n        },\n        bind: bind,\n        exists: bind,\n        forall: bind,\n        filter: function (f) {\n          return f(a) ? me : NONE;\n        },\n        toArray: function () {\n          return [a];\n        },\n        toString: function () {\n          return 'some(' + a + ')';\n        },\n        equals: function (o) {\n          return o.is(a);\n        },\n        equals_: function (o, elementEq) {\n          return o.fold(never, function (b) {\n            return elementEq(a, b);\n          });\n        }\n      };\n      return me;\n    };\n    var from = function (value) {\n      return value === null || value === undefined ? NONE : some(value);\n    };\n    var Option = {\n      some: some,\n      none: none,\n      from: from\n    };\n\n    var typeOf = function (x) {\n      if (x === null) {\n        return 'null';\n      }\n      var t = typeof x;\n      if (t === 'object' && (Array.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'Array')) {\n        return 'array';\n      }\n      if (t === 'object' && (String.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'String')) {\n        return 'string';\n      }\n      return t;\n    };\n    var isType = function (type) {\n      return function (value) {\n        return typeOf(value) === type;\n      };\n    };\n    var isString = isType('string');\n    var isArray = isType('array');\n    var isBoolean = isType('boolean');\n    var isFunction = isType('function');\n    var isNumber = isType('number');\n\n    var nativeSlice = Array.prototype.slice;\n    var nativePush = Array.prototype.push;\n    var map = function (xs, f) {\n      var len = xs.length;\n      var r = new Array(len);\n      for (var i = 0; i < len; i++) {\n        var x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    var each = function (xs, f) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        f(x, i);\n      }\n    };\n    var filter = function (xs, pred) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          r.push(x);\n        }\n      }\n      return r;\n    };\n    var groupBy = function (xs, f) {\n      if (xs.length === 0) {\n        return [];\n      } else {\n        var wasType = f(xs[0]);\n        var r = [];\n        var group = [];\n        for (var i = 0, len = xs.length; i < len; i++) {\n          var x = xs[i];\n          var type = f(x);\n          if (type !== wasType) {\n            r.push(group);\n            group = [];\n          }\n          wasType = type;\n          group.push(x);\n        }\n        if (group.length !== 0) {\n          r.push(group);\n        }\n        return r;\n      }\n    };\n    var foldl = function (xs, f, acc) {\n      each(xs, function (x) {\n        acc = f(acc, x);\n      });\n      return acc;\n    };\n    var find = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          return Option.some(x);\n        }\n      }\n      return Option.none();\n    };\n    var flatten = function (xs) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; ++i) {\n        if (!isArray(xs[i])) {\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        }\n        nativePush.apply(r, xs[i]);\n      }\n      return r;\n    };\n    var bind = function (xs, f) {\n      var output = map(xs, f);\n      return flatten(output);\n    };\n    var reverse = function (xs) {\n      var r = nativeSlice.call(xs, 0);\n      r.reverse();\n      return r;\n    };\n    var head = function (xs) {\n      return xs.length === 0 ? Option.none() : Option.some(xs[0]);\n    };\n    var last = function (xs) {\n      return xs.length === 0 ? Option.none() : Option.some(xs[xs.length - 1]);\n    };\n    var from$1 = isFunction(Array.from) ? Array.from : function (x) {\n      return nativeSlice.call(x);\n    };\n\n    var Global = typeof domGlobals.window !== 'undefined' ? domGlobals.window : Function('return this;')();\n\n    var path = function (parts, scope) {\n      var o = scope !== undefined && scope !== null ? scope : Global;\n      for (var i = 0; i < parts.length && o !== undefined && o !== null; ++i) {\n        o = o[parts[i]];\n      }\n      return o;\n    };\n    var resolve = function (p, scope) {\n      var parts = p.split('.');\n      return path(parts, scope);\n    };\n\n    var unsafe = function (name, scope) {\n      return resolve(name, scope);\n    };\n    var getOrDie = function (name, scope) {\n      var actual = unsafe(name, scope);\n      if (actual === undefined || actual === null) {\n        throw new Error(name + ' not available on this browser');\n      }\n      return actual;\n    };\n    var Global$1 = { getOrDie: getOrDie };\n\n    var htmlElement = function (scope) {\n      return Global$1.getOrDie('HTMLElement', scope);\n    };\n    var isPrototypeOf = function (x) {\n      var scope = resolve('ownerDocument.defaultView', x);\n      return htmlElement(scope).prototype.isPrototypeOf(x);\n    };\n    var HTMLElement = { isPrototypeOf: isPrototypeOf };\n\n    var global$7 = tinymce.util.Tools.resolve('tinymce.dom.DomQuery');\n\n    var getParentList = function (editor) {\n      var selectionStart = editor.selection.getStart(true);\n      return editor.dom.getParent(selectionStart, 'OL,UL,DL', getClosestListRootElm(editor, selectionStart));\n    };\n    var isParentListSelected = function (parentList, selectedBlocks) {\n      return parentList && selectedBlocks.length === 1 && selectedBlocks[0] === parentList;\n    };\n    var findSubLists = function (parentList) {\n      return global$5.grep(parentList.querySelectorAll('ol,ul,dl'), function (elm) {\n        return NodeType.isListNode(elm);\n      });\n    };\n    var getSelectedSubLists = function (editor) {\n      var parentList = getParentList(editor);\n      var selectedBlocks = editor.selection.getSelectedBlocks();\n      if (isParentListSelected(parentList, selectedBlocks)) {\n        return findSubLists(parentList);\n      } else {\n        return global$5.grep(selectedBlocks, function (elm) {\n          return NodeType.isListNode(elm) && parentList !== elm;\n        });\n      }\n    };\n    var findParentListItemsNodes = function (editor, elms) {\n      var listItemsElms = global$5.map(elms, function (elm) {\n        var parentLi = editor.dom.getParent(elm, 'li,dd,dt', getClosestListRootElm(editor, elm));\n        return parentLi ? parentLi : elm;\n      });\n      return global$7.unique(listItemsElms);\n    };\n    var getSelectedListItems = function (editor) {\n      var selectedBlocks = editor.selection.getSelectedBlocks();\n      return global$5.grep(findParentListItemsNodes(editor, selectedBlocks), function (block) {\n        return NodeType.isListItemNode(block);\n      });\n    };\n    var getSelectedDlItems = function (editor) {\n      return filter(getSelectedListItems(editor), NodeType.isDlItemNode);\n    };\n    var getClosestListRootElm = function (editor, elm) {\n      var parentTableCell = editor.dom.getParents(elm, 'TD,TH');\n      var root = parentTableCell.length > 0 ? parentTableCell[0] : editor.getBody();\n      return root;\n    };\n    var findLastParentListNode = function (editor, elm) {\n      var parentLists = editor.dom.getParents(elm, 'ol,ul', getClosestListRootElm(editor, elm));\n      return last(parentLists);\n    };\n    var getSelectedLists = function (editor) {\n      var firstList = findLastParentListNode(editor, editor.selection.getStart());\n      var subsequentLists = filter(editor.selection.getSelectedBlocks(), NodeType.isOlUlNode);\n      return firstList.toArray().concat(subsequentLists);\n    };\n    var getSelectedListRoots = function (editor) {\n      var selectedLists = getSelectedLists(editor);\n      return getUniqueListRoots(editor, selectedLists);\n    };\n    var getUniqueListRoots = function (editor, lists) {\n      var listRoots = map(lists, function (list) {\n        return findLastParentListNode(editor, list).getOr(list);\n      });\n      return global$7.unique(listRoots);\n    };\n    var isList = function (editor) {\n      var list = getParentList(editor);\n      return HTMLElement.isPrototypeOf(list);\n    };\n    var Selection = {\n      isList: isList,\n      getParentList: getParentList,\n      getSelectedSubLists: getSelectedSubLists,\n      getSelectedListItems: getSelectedListItems,\n      getClosestListRootElm: getClosestListRootElm,\n      getSelectedDlItems: getSelectedDlItems,\n      getSelectedListRoots: getSelectedListRoots\n    };\n\n    var fromHtml = function (html, scope) {\n      var doc = scope || domGlobals.document;\n      var div = doc.createElement('div');\n      div.innerHTML = html;\n      if (!div.hasChildNodes() || div.childNodes.length > 1) {\n        domGlobals.console.error('HTML does not have a single root node', html);\n        throw new Error('HTML must have a single root node');\n      }\n      return fromDom(div.childNodes[0]);\n    };\n    var fromTag = function (tag, scope) {\n      var doc = scope || domGlobals.document;\n      var node = doc.createElement(tag);\n      return fromDom(node);\n    };\n    var fromText = function (text, scope) {\n      var doc = scope || domGlobals.document;\n      var node = doc.createTextNode(text);\n      return fromDom(node);\n    };\n    var fromDom = function (node) {\n      if (node === null || node === undefined) {\n        throw new Error('Node cannot be null or undefined');\n      }\n      return { dom: constant(node) };\n    };\n    var fromPoint = function (docElm, x, y) {\n      var doc = docElm.dom();\n      return Option.from(doc.elementFromPoint(x, y)).map(fromDom);\n    };\n    var Element = {\n      fromHtml: fromHtml,\n      fromTag: fromTag,\n      fromText: fromText,\n      fromDom: fromDom,\n      fromPoint: fromPoint\n    };\n\n    var lift2 = function (oa, ob, f) {\n      return oa.isSome() && ob.isSome() ? Option.some(f(oa.getOrDie(), ob.getOrDie())) : Option.none();\n    };\n\n    var fromElements = function (elements, scope) {\n      var doc = scope || domGlobals.document;\n      var fragment = doc.createDocumentFragment();\n      each(elements, function (element) {\n        fragment.appendChild(element.dom());\n      });\n      return Element.fromDom(fragment);\n    };\n\n    var Immutable = function () {\n      var fields = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        fields[_i] = arguments[_i];\n      }\n      return function () {\n        var values = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          values[_i] = arguments[_i];\n        }\n        if (fields.length !== values.length) {\n          throw new Error('Wrong number of arguments to struct. Expected \"[' + fields.length + ']\", got ' + values.length + ' arguments');\n        }\n        var struct = {};\n        each(fields, function (name, i) {\n          struct[name] = constant(values[i]);\n        });\n        return struct;\n      };\n    };\n\n    var keys = Object.keys;\n    var each$1 = function (obj, f) {\n      var props = keys(obj);\n      for (var k = 0, len = props.length; k < len; k++) {\n        var i = props[k];\n        var x = obj[i];\n        f(x, i);\n      }\n    };\n\n    var node = function () {\n      var f = Global$1.getOrDie('Node');\n      return f;\n    };\n    var compareDocumentPosition = function (a, b, match) {\n      return (a.compareDocumentPosition(b) & match) !== 0;\n    };\n    var documentPositionPreceding = function (a, b) {\n      return compareDocumentPosition(a, b, node().DOCUMENT_POSITION_PRECEDING);\n    };\n    var documentPositionContainedBy = function (a, b) {\n      return compareDocumentPosition(a, b, node().DOCUMENT_POSITION_CONTAINED_BY);\n    };\n    var Node = {\n      documentPositionPreceding: documentPositionPreceding,\n      documentPositionContainedBy: documentPositionContainedBy\n    };\n\n    var cached = function (f) {\n      var called = false;\n      var r;\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        if (!called) {\n          called = true;\n          r = f.apply(null, args);\n        }\n        return r;\n      };\n    };\n\n    var firstMatch = function (regexes, s) {\n      for (var i = 0; i < regexes.length; i++) {\n        var x = regexes[i];\n        if (x.test(s)) {\n          return x;\n        }\n      }\n      return undefined;\n    };\n    var find$1 = function (regexes, agent) {\n      var r = firstMatch(regexes, agent);\n      if (!r) {\n        return {\n          major: 0,\n          minor: 0\n        };\n      }\n      var group = function (i) {\n        return Number(agent.replace(r, '$' + i));\n      };\n      return nu(group(1), group(2));\n    };\n    var detect = function (versionRegexes, agent) {\n      var cleanedAgent = String(agent).toLowerCase();\n      if (versionRegexes.length === 0) {\n        return unknown();\n      }\n      return find$1(versionRegexes, cleanedAgent);\n    };\n    var unknown = function () {\n      return nu(0, 0);\n    };\n    var nu = function (major, minor) {\n      return {\n        major: major,\n        minor: minor\n      };\n    };\n    var Version = {\n      nu: nu,\n      detect: detect,\n      unknown: unknown\n    };\n\n    var edge = 'Edge';\n    var chrome = 'Chrome';\n    var ie = 'IE';\n    var opera = 'Opera';\n    var firefox = 'Firefox';\n    var safari = 'Safari';\n    var isBrowser = function (name, current) {\n      return function () {\n        return current === name;\n      };\n    };\n    var unknown$1 = function () {\n      return nu$1({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    var nu$1 = function (info) {\n      var current = info.current;\n      var version = info.version;\n      return {\n        current: current,\n        version: version,\n        isEdge: isBrowser(edge, current),\n        isChrome: isBrowser(chrome, current),\n        isIE: isBrowser(ie, current),\n        isOpera: isBrowser(opera, current),\n        isFirefox: isBrowser(firefox, current),\n        isSafari: isBrowser(safari, current)\n      };\n    };\n    var Browser = {\n      unknown: unknown$1,\n      nu: nu$1,\n      edge: constant(edge),\n      chrome: constant(chrome),\n      ie: constant(ie),\n      opera: constant(opera),\n      firefox: constant(firefox),\n      safari: constant(safari)\n    };\n\n    var windows = 'Windows';\n    var ios = 'iOS';\n    var android = 'Android';\n    var linux = 'Linux';\n    var osx = 'OSX';\n    var solaris = 'Solaris';\n    var freebsd = 'FreeBSD';\n    var isOS = function (name, current) {\n      return function () {\n        return current === name;\n      };\n    };\n    var unknown$2 = function () {\n      return nu$2({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    var nu$2 = function (info) {\n      var current = info.current;\n      var version = info.version;\n      return {\n        current: current,\n        version: version,\n        isWindows: isOS(windows, current),\n        isiOS: isOS(ios, current),\n        isAndroid: isOS(android, current),\n        isOSX: isOS(osx, current),\n        isLinux: isOS(linux, current),\n        isSolaris: isOS(solaris, current),\n        isFreeBSD: isOS(freebsd, current)\n      };\n    };\n    var OperatingSystem = {\n      unknown: unknown$2,\n      nu: nu$2,\n      windows: constant(windows),\n      ios: constant(ios),\n      android: constant(android),\n      linux: constant(linux),\n      osx: constant(osx),\n      solaris: constant(solaris),\n      freebsd: constant(freebsd)\n    };\n\n    var DeviceType = function (os, browser, userAgent) {\n      var isiPad = os.isiOS() && /ipad/i.test(userAgent) === true;\n      var isiPhone = os.isiOS() && !isiPad;\n      var isAndroid3 = os.isAndroid() && os.version.major === 3;\n      var isAndroid4 = os.isAndroid() && os.version.major === 4;\n      var isTablet = isiPad || isAndroid3 || isAndroid4 && /mobile/i.test(userAgent) === true;\n      var isTouch = os.isiOS() || os.isAndroid();\n      var isPhone = isTouch && !isTablet;\n      var iOSwebview = browser.isSafari() && os.isiOS() && /safari/i.test(userAgent) === false;\n      return {\n        isiPad: constant(isiPad),\n        isiPhone: constant(isiPhone),\n        isTablet: constant(isTablet),\n        isPhone: constant(isPhone),\n        isTouch: constant(isTouch),\n        isAndroid: os.isAndroid,\n        isiOS: os.isiOS,\n        isWebView: constant(iOSwebview)\n      };\n    };\n\n    var detect$1 = function (candidates, userAgent) {\n      var agent = String(userAgent).toLowerCase();\n      return find(candidates, function (candidate) {\n        return candidate.search(agent);\n      });\n    };\n    var detectBrowser = function (browsers, userAgent) {\n      return detect$1(browsers, userAgent).map(function (browser) {\n        var version = Version.detect(browser.versionRegexes, userAgent);\n        return {\n          current: browser.name,\n          version: version\n        };\n      });\n    };\n    var detectOs = function (oses, userAgent) {\n      return detect$1(oses, userAgent).map(function (os) {\n        var version = Version.detect(os.versionRegexes, userAgent);\n        return {\n          current: os.name,\n          version: version\n        };\n      });\n    };\n    var UaString = {\n      detectBrowser: detectBrowser,\n      detectOs: detectOs\n    };\n\n    var contains = function (str, substr) {\n      return str.indexOf(substr) !== -1;\n    };\n\n    var normalVersionRegex = /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/;\n    var checkContains = function (target) {\n      return function (uastring) {\n        return contains(uastring, target);\n      };\n    };\n    var browsers = [\n      {\n        name: 'Edge',\n        versionRegexes: [/.*?edge\\/ ?([0-9]+)\\.([0-9]+)$/],\n        search: function (uastring) {\n          return contains(uastring, 'edge/') && contains(uastring, 'chrome') && contains(uastring, 'safari') && contains(uastring, 'applewebkit');\n        }\n      },\n      {\n        name: 'Chrome',\n        versionRegexes: [\n          /.*?chrome\\/([0-9]+)\\.([0-9]+).*/,\n          normalVersionRegex\n        ],\n        search: function (uastring) {\n          return contains(uastring, 'chrome') && !contains(uastring, 'chromeframe');\n        }\n      },\n      {\n        name: 'IE',\n        versionRegexes: [\n          /.*?msie\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*?rv:([0-9]+)\\.([0-9]+).*/\n        ],\n        search: function (uastring) {\n          return contains(uastring, 'msie') || contains(uastring, 'trident');\n        }\n      },\n      {\n        name: 'Opera',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?opera\\/([0-9]+)\\.([0-9]+).*/\n        ],\n        search: checkContains('opera')\n      },\n      {\n        name: 'Firefox',\n        versionRegexes: [/.*?firefox\\/\\ ?([0-9]+)\\.([0-9]+).*/],\n        search: checkContains('firefox')\n      },\n      {\n        name: 'Safari',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?cpu os ([0-9]+)_([0-9]+).*/\n        ],\n        search: function (uastring) {\n          return (contains(uastring, 'safari') || contains(uastring, 'mobile/')) && contains(uastring, 'applewebkit');\n        }\n      }\n    ];\n    var oses = [\n      {\n        name: 'Windows',\n        search: checkContains('win'),\n        versionRegexes: [/.*?windows\\ nt\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'iOS',\n        search: function (uastring) {\n          return contains(uastring, 'iphone') || contains(uastring, 'ipad');\n        },\n        versionRegexes: [\n          /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*cpu os ([0-9]+)_([0-9]+).*/,\n          /.*cpu iphone os ([0-9]+)_([0-9]+).*/\n        ]\n      },\n      {\n        name: 'Android',\n        search: checkContains('android'),\n        versionRegexes: [/.*?android\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'OSX',\n        search: checkContains('os x'),\n        versionRegexes: [/.*?os\\ x\\ ?([0-9]+)_([0-9]+).*/]\n      },\n      {\n        name: 'Linux',\n        search: checkContains('linux'),\n        versionRegexes: []\n      },\n      {\n        name: 'Solaris',\n        search: checkContains('sunos'),\n        versionRegexes: []\n      },\n      {\n        name: 'FreeBSD',\n        search: checkContains('freebsd'),\n        versionRegexes: []\n      }\n    ];\n    var PlatformInfo = {\n      browsers: constant(browsers),\n      oses: constant(oses)\n    };\n\n    var detect$2 = function (userAgent) {\n      var browsers = PlatformInfo.browsers();\n      var oses = PlatformInfo.oses();\n      var browser = UaString.detectBrowser(browsers, userAgent).fold(Browser.unknown, Browser.nu);\n      var os = UaString.detectOs(oses, userAgent).fold(OperatingSystem.unknown, OperatingSystem.nu);\n      var deviceType = DeviceType(os, browser, userAgent);\n      return {\n        browser: browser,\n        os: os,\n        deviceType: deviceType\n      };\n    };\n    var PlatformDetection = { detect: detect$2 };\n\n    var detect$3 = cached(function () {\n      var userAgent = domGlobals.navigator.userAgent;\n      return PlatformDetection.detect(userAgent);\n    });\n    var PlatformDetection$1 = { detect: detect$3 };\n\n    var ATTRIBUTE = domGlobals.Node.ATTRIBUTE_NODE;\n    var CDATA_SECTION = domGlobals.Node.CDATA_SECTION_NODE;\n    var COMMENT = domGlobals.Node.COMMENT_NODE;\n    var DOCUMENT = domGlobals.Node.DOCUMENT_NODE;\n    var DOCUMENT_TYPE = domGlobals.Node.DOCUMENT_TYPE_NODE;\n    var DOCUMENT_FRAGMENT = domGlobals.Node.DOCUMENT_FRAGMENT_NODE;\n    var ELEMENT = domGlobals.Node.ELEMENT_NODE;\n    var TEXT = domGlobals.Node.TEXT_NODE;\n    var PROCESSING_INSTRUCTION = domGlobals.Node.PROCESSING_INSTRUCTION_NODE;\n    var ENTITY_REFERENCE = domGlobals.Node.ENTITY_REFERENCE_NODE;\n    var ENTITY = domGlobals.Node.ENTITY_NODE;\n    var NOTATION = domGlobals.Node.NOTATION_NODE;\n\n    var ELEMENT$1 = ELEMENT;\n    var is = function (element, selector) {\n      var dom = element.dom();\n      if (dom.nodeType !== ELEMENT$1) {\n        return false;\n      } else {\n        var elem = dom;\n        if (elem.matches !== undefined) {\n          return elem.matches(selector);\n        } else if (elem.msMatchesSelector !== undefined) {\n          return elem.msMatchesSelector(selector);\n        } else if (elem.webkitMatchesSelector !== undefined) {\n          return elem.webkitMatchesSelector(selector);\n        } else if (elem.mozMatchesSelector !== undefined) {\n          return elem.mozMatchesSelector(selector);\n        } else {\n          throw new Error('Browser lacks native selectors');\n        }\n      }\n    };\n\n    var eq = function (e1, e2) {\n      return e1.dom() === e2.dom();\n    };\n    var regularContains = function (e1, e2) {\n      var d1 = e1.dom();\n      var d2 = e2.dom();\n      return d1 === d2 ? false : d1.contains(d2);\n    };\n    var ieContains = function (e1, e2) {\n      return Node.documentPositionContainedBy(e1.dom(), e2.dom());\n    };\n    var browser = PlatformDetection$1.detect().browser;\n    var contains$1 = browser.isIE() ? ieContains : regularContains;\n    var is$1 = is;\n\n    var parent = function (element) {\n      return Option.from(element.dom().parentNode).map(Element.fromDom);\n    };\n    var children = function (element) {\n      return map(element.dom().childNodes, Element.fromDom);\n    };\n    var child = function (element, index) {\n      var cs = element.dom().childNodes;\n      return Option.from(cs[index]).map(Element.fromDom);\n    };\n    var firstChild = function (element) {\n      return child(element, 0);\n    };\n    var lastChild = function (element) {\n      return child(element, element.dom().childNodes.length - 1);\n    };\n    var spot = Immutable('element', 'offset');\n\n    var before = function (marker, element) {\n      var parent$1 = parent(marker);\n      parent$1.each(function (v) {\n        v.dom().insertBefore(element.dom(), marker.dom());\n      });\n    };\n    var append = function (parent, element) {\n      parent.dom().appendChild(element.dom());\n    };\n\n    var before$1 = function (marker, elements) {\n      each(elements, function (x) {\n        before(marker, x);\n      });\n    };\n    var append$1 = function (parent, elements) {\n      each(elements, function (x) {\n        append(parent, x);\n      });\n    };\n\n    var remove = function (element) {\n      var dom = element.dom();\n      if (dom.parentNode !== null) {\n        dom.parentNode.removeChild(dom);\n      }\n    };\n\n    var name = function (element) {\n      var r = element.dom().nodeName;\n      return r.toLowerCase();\n    };\n    var type = function (element) {\n      return element.dom().nodeType;\n    };\n    var isType$1 = function (t) {\n      return function (element) {\n        return type(element) === t;\n      };\n    };\n    var isElement = isType$1(ELEMENT);\n\n    var rawSet = function (dom, key, value) {\n      if (isString(value) || isBoolean(value) || isNumber(value)) {\n        dom.setAttribute(key, value + '');\n      } else {\n        domGlobals.console.error('Invalid call to Attr.set. Key ', key, ':: Value ', value, ':: Element ', dom);\n        throw new Error('Attribute value was not simple');\n      }\n    };\n    var setAll = function (element, attrs) {\n      var dom = element.dom();\n      each$1(attrs, function (v, k) {\n        rawSet(dom, k, v);\n      });\n    };\n    var clone = function (element) {\n      return foldl(element.dom().attributes, function (acc, attr) {\n        acc[attr.name] = attr.value;\n        return acc;\n      }, {});\n    };\n\n    var isSupported = function (dom) {\n      return dom.style !== undefined && isFunction(dom.style.getPropertyValue);\n    };\n\n    var internalSet = function (dom, property, value) {\n      if (!isString(value)) {\n        domGlobals.console.error('Invalid call to CSS.set. Property ', property, ':: Value ', value, ':: Element ', dom);\n        throw new Error('CSS value must be a string: ' + value);\n      }\n      if (isSupported(dom)) {\n        dom.style.setProperty(property, value);\n      }\n    };\n    var set = function (element, property, value) {\n      var dom = element.dom();\n      internalSet(dom, property, value);\n    };\n\n    var clone$1 = function (original, isDeep) {\n      return Element.fromDom(original.dom().cloneNode(isDeep));\n    };\n    var deep = function (original) {\n      return clone$1(original, true);\n    };\n    var shallowAs = function (original, tag) {\n      var nu = Element.fromTag(tag);\n      var attributes = clone(original);\n      setAll(nu, attributes);\n      return nu;\n    };\n    var mutate = function (original, tag) {\n      var nu = shallowAs(original, tag);\n      before(original, nu);\n      var children$1 = children(original);\n      append$1(nu, children$1);\n      remove(original);\n      return nu;\n    };\n\n    var joinSegment = function (parent, child) {\n      append(parent.item, child.list);\n    };\n    var joinSegments = function (segments) {\n      for (var i = 1; i < segments.length; i++) {\n        joinSegment(segments[i - 1], segments[i]);\n      }\n    };\n    var appendSegments = function (head$1, tail) {\n      lift2(last(head$1), head(tail), joinSegment);\n    };\n    var createSegment = function (scope, listType) {\n      var segment = {\n        list: Element.fromTag(listType, scope),\n        item: Element.fromTag('li', scope)\n      };\n      append(segment.list, segment.item);\n      return segment;\n    };\n    var createSegments = function (scope, entry, size) {\n      var segments = [];\n      for (var i = 0; i < size; i++) {\n        segments.push(createSegment(scope, entry.listType));\n      }\n      return segments;\n    };\n    var populateSegments = function (segments, entry) {\n      for (var i = 0; i < segments.length - 1; i++) {\n        set(segments[i].item, 'list-style-type', 'none');\n      }\n      last(segments).each(function (segment) {\n        setAll(segment.list, entry.listAttributes);\n        setAll(segment.item, entry.itemAttributes);\n        append$1(segment.item, entry.content);\n      });\n    };\n    var normalizeSegment = function (segment, entry) {\n      if (name(segment.list) !== entry.listType) {\n        segment.list = mutate(segment.list, entry.listType);\n      }\n      setAll(segment.list, entry.listAttributes);\n    };\n    var createItem = function (scope, attr, content) {\n      var item = Element.fromTag('li', scope);\n      setAll(item, attr);\n      append$1(item, content);\n      return item;\n    };\n    var appendItem = function (segment, item) {\n      append(segment.list, item);\n      segment.item = item;\n    };\n    var writeShallow = function (scope, cast, entry) {\n      var newCast = cast.slice(0, entry.depth);\n      last(newCast).each(function (segment) {\n        var item = createItem(scope, entry.itemAttributes, entry.content);\n        appendItem(segment, item);\n        normalizeSegment(segment, entry);\n      });\n      return newCast;\n    };\n    var writeDeep = function (scope, cast, entry) {\n      var segments = createSegments(scope, entry, entry.depth - cast.length);\n      joinSegments(segments);\n      populateSegments(segments, entry);\n      appendSegments(cast, segments);\n      return cast.concat(segments);\n    };\n    var composeList = function (scope, entries) {\n      var cast = foldl(entries, function (cast, entry) {\n        return entry.depth > cast.length ? writeDeep(scope, cast, entry) : writeShallow(scope, cast, entry);\n      }, []);\n      return head(cast).map(function (segment) {\n        return segment.list;\n      });\n    };\n\n    var isList$1 = function (el) {\n      return is$1(el, 'OL,UL');\n    };\n    var hasFirstChildList = function (el) {\n      return firstChild(el).map(isList$1).getOr(false);\n    };\n    var hasLastChildList = function (el) {\n      return lastChild(el).map(isList$1).getOr(false);\n    };\n\n    var isIndented = function (entry) {\n      return entry.depth > 0;\n    };\n    var isSelected = function (entry) {\n      return entry.isSelected;\n    };\n    var cloneItemContent = function (li) {\n      var children$1 = children(li);\n      var content = hasLastChildList(li) ? children$1.slice(0, -1) : children$1;\n      return map(content, deep);\n    };\n    var createEntry = function (li, depth, isSelected) {\n      return parent(li).filter(isElement).map(function (list) {\n        return {\n          depth: depth,\n          isSelected: isSelected,\n          content: cloneItemContent(li),\n          itemAttributes: clone(li),\n          listAttributes: clone(list),\n          listType: name(list)\n        };\n      });\n    };\n\n    var indentEntry = function (indentation, entry) {\n      switch (indentation) {\n      case 'Indent':\n        entry.depth++;\n        break;\n      case 'Outdent':\n        entry.depth--;\n        break;\n      case 'Flatten':\n        entry.depth = 0;\n      }\n    };\n\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var shallow = function (old, nu) {\n      return nu;\n    };\n    var baseMerge = function (merger) {\n      return function () {\n        var objects = new Array(arguments.length);\n        for (var i = 0; i < objects.length; i++) {\n          objects[i] = arguments[i];\n        }\n        if (objects.length === 0) {\n          throw new Error('Can\\'t merge zero objects');\n        }\n        var ret = {};\n        for (var j = 0; j < objects.length; j++) {\n          var curObject = objects[j];\n          for (var key in curObject) {\n            if (hasOwnProperty.call(curObject, key)) {\n              ret[key] = merger(ret[key], curObject[key]);\n            }\n          }\n        }\n        return ret;\n      };\n    };\n    var merge = baseMerge(shallow);\n\n    var cloneListProperties = function (target, source) {\n      target.listType = source.listType;\n      target.listAttributes = merge({}, source.listAttributes);\n    };\n    var previousSiblingEntry = function (entries, start) {\n      var depth = entries[start].depth;\n      for (var i = start - 1; i >= 0; i--) {\n        if (entries[i].depth === depth) {\n          return Option.some(entries[i]);\n        }\n        if (entries[i].depth < depth) {\n          break;\n        }\n      }\n      return Option.none();\n    };\n    var normalizeEntries = function (entries) {\n      each(entries, function (entry, i) {\n        previousSiblingEntry(entries, i).each(function (matchingEntry) {\n          cloneListProperties(entry, matchingEntry);\n        });\n      });\n    };\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      var clone = function () {\n        return Cell(get());\n      };\n      return {\n        get: get,\n        set: set,\n        clone: clone\n      };\n    };\n\n    var parseItem = function (depth, itemSelection, selectionState, item) {\n      return firstChild(item).filter(isList$1).fold(function () {\n        itemSelection.each(function (selection) {\n          if (eq(selection.start, item)) {\n            selectionState.set(true);\n          }\n        });\n        var currentItemEntry = createEntry(item, depth, selectionState.get());\n        itemSelection.each(function (selection) {\n          if (eq(selection.end, item)) {\n            selectionState.set(false);\n          }\n        });\n        var childListEntries = lastChild(item).filter(isList$1).map(function (list) {\n          return parseList(depth, itemSelection, selectionState, list);\n        }).getOr([]);\n        return currentItemEntry.toArray().concat(childListEntries);\n      }, function (list) {\n        return parseList(depth, itemSelection, selectionState, list);\n      });\n    };\n    var parseList = function (depth, itemSelection, selectionState, list) {\n      return bind(children(list), function (element) {\n        var parser = isList$1(element) ? parseList : parseItem;\n        var newDepth = depth + 1;\n        return parser(newDepth, itemSelection, selectionState, element);\n      });\n    };\n    var parseLists = function (lists, itemSelection) {\n      var selectionState = Cell(false);\n      var initialDepth = 0;\n      return map(lists, function (list) {\n        return {\n          sourceList: list,\n          entries: parseList(initialDepth, itemSelection, selectionState, list)\n        };\n      });\n    };\n\n    var global$8 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var createTextBlock = function (editor, contentNode) {\n      var dom = editor.dom;\n      var blockElements = editor.schema.getBlockElements();\n      var fragment = dom.createFragment();\n      var node, textBlock, blockName, hasContentNode;\n      if (editor.settings.forced_root_block) {\n        blockName = editor.settings.forced_root_block;\n      }\n      if (blockName) {\n        textBlock = dom.create(blockName);\n        if (textBlock.tagName === editor.settings.forced_root_block) {\n          dom.setAttribs(textBlock, editor.settings.forced_root_block_attrs);\n        }\n        if (!NodeType.isBlock(contentNode.firstChild, blockElements)) {\n          fragment.appendChild(textBlock);\n        }\n      }\n      if (contentNode) {\n        while (node = contentNode.firstChild) {\n          var nodeName = node.nodeName;\n          if (!hasContentNode && (nodeName !== 'SPAN' || node.getAttribute('data-mce-type') !== 'bookmark')) {\n            hasContentNode = true;\n          }\n          if (NodeType.isBlock(node, blockElements)) {\n            fragment.appendChild(node);\n            textBlock = null;\n          } else {\n            if (blockName) {\n              if (!textBlock) {\n                textBlock = dom.create(blockName);\n                fragment.appendChild(textBlock);\n              }\n              textBlock.appendChild(node);\n            } else {\n              fragment.appendChild(node);\n            }\n          }\n        }\n      }\n      if (!editor.settings.forced_root_block) {\n        fragment.appendChild(dom.create('br'));\n      } else {\n        if (!hasContentNode && (!global$8.ie || global$8.ie > 10)) {\n          textBlock.appendChild(dom.create('br', { 'data-mce-bogus': '1' }));\n        }\n      }\n      return fragment;\n    };\n\n    var outdentedComposer = function (editor, entries) {\n      return map(entries, function (entry) {\n        var content = fromElements(entry.content);\n        return Element.fromDom(createTextBlock(editor, content.dom()));\n      });\n    };\n    var indentedComposer = function (editor, entries) {\n      normalizeEntries(entries);\n      return composeList(editor.contentDocument, entries).toArray();\n    };\n    var composeEntries = function (editor, entries) {\n      return bind(groupBy(entries, isIndented), function (entries) {\n        var groupIsIndented = head(entries).map(isIndented).getOr(false);\n        return groupIsIndented ? indentedComposer(editor, entries) : outdentedComposer(editor, entries);\n      });\n    };\n    var indentSelectedEntries = function (entries, indentation) {\n      each(filter(entries, isSelected), function (entry) {\n        return indentEntry(indentation, entry);\n      });\n    };\n    var getItemSelection = function (editor) {\n      var selectedListItems = map(Selection.getSelectedListItems(editor), Element.fromDom);\n      return lift2(find(selectedListItems, not(hasFirstChildList)), find(reverse(selectedListItems), not(hasFirstChildList)), function (start, end) {\n        return {\n          start: start,\n          end: end\n        };\n      });\n    };\n    var listsIndentation = function (editor, lists, indentation) {\n      var entrySets = parseLists(lists, getItemSelection(editor));\n      each(entrySets, function (entrySet) {\n        indentSelectedEntries(entrySet.entries, indentation);\n        before$1(entrySet.sourceList, composeEntries(editor, entrySet.entries));\n        remove(entrySet.sourceList);\n      });\n    };\n\n    var DOM$1 = global$6.DOM;\n    var splitList = function (editor, ul, li) {\n      var tmpRng, fragment, bookmarks, node, newBlock;\n      var removeAndKeepBookmarks = function (targetNode) {\n        global$5.each(bookmarks, function (node) {\n          targetNode.parentNode.insertBefore(node, li.parentNode);\n        });\n        DOM$1.remove(targetNode);\n      };\n      bookmarks = DOM$1.select('span[data-mce-type=\"bookmark\"]', ul);\n      newBlock = createTextBlock(editor, li);\n      tmpRng = DOM$1.createRng();\n      tmpRng.setStartAfter(li);\n      tmpRng.setEndAfter(ul);\n      fragment = tmpRng.extractContents();\n      for (node = fragment.firstChild; node; node = node.firstChild) {\n        if (node.nodeName === 'LI' && editor.dom.isEmpty(node)) {\n          DOM$1.remove(node);\n          break;\n        }\n      }\n      if (!editor.dom.isEmpty(fragment)) {\n        DOM$1.insertAfter(fragment, ul);\n      }\n      DOM$1.insertAfter(newBlock, ul);\n      if (NodeType.isEmpty(editor.dom, li.parentNode)) {\n        removeAndKeepBookmarks(li.parentNode);\n      }\n      DOM$1.remove(li);\n      if (NodeType.isEmpty(editor.dom, ul)) {\n        DOM$1.remove(ul);\n      }\n    };\n    var SplitList = { splitList: splitList };\n\n    var outdentDlItem = function (editor, item) {\n      if (is$1(item, 'dd')) {\n        mutate(item, 'dt');\n      } else if (is$1(item, 'dt')) {\n        parent(item).each(function (dl) {\n          return SplitList.splitList(editor, dl.dom(), item.dom());\n        });\n      }\n    };\n    var indentDlItem = function (item) {\n      if (is$1(item, 'dt')) {\n        mutate(item, 'dd');\n      }\n    };\n    var dlIndentation = function (editor, indentation, dlItems) {\n      if (indentation === 'Indent') {\n        each(dlItems, indentDlItem);\n      } else {\n        each(dlItems, function (item) {\n          return outdentDlItem(editor, item);\n        });\n      }\n    };\n\n    var selectionIndentation = function (editor, indentation) {\n      var lists = map(Selection.getSelectedListRoots(editor), Element.fromDom);\n      var dlItems = map(Selection.getSelectedDlItems(editor), Element.fromDom);\n      var isHandled = false;\n      if (lists.length || dlItems.length) {\n        var bookmark = editor.selection.getBookmark();\n        listsIndentation(editor, lists, indentation);\n        dlIndentation(editor, indentation, dlItems);\n        editor.selection.moveToBookmark(bookmark);\n        editor.selection.setRng(Range.normalizeRange(editor.selection.getRng()));\n        editor.nodeChanged();\n        isHandled = true;\n      }\n      return isHandled;\n    };\n    var indentListSelection = function (editor) {\n      return selectionIndentation(editor, 'Indent');\n    };\n    var outdentListSelection = function (editor) {\n      return selectionIndentation(editor, 'Outdent');\n    };\n    var flattenListSelection = function (editor) {\n      return selectionIndentation(editor, 'Flatten');\n    };\n\n    var updateListStyle = function (dom, el, detail) {\n      var type = detail['list-style-type'] ? detail['list-style-type'] : null;\n      dom.setStyle(el, 'list-style-type', type);\n    };\n    var setAttribs = function (elm, attrs) {\n      global$5.each(attrs, function (value, key) {\n        elm.setAttribute(key, value);\n      });\n    };\n    var updateListAttrs = function (dom, el, detail) {\n      setAttribs(el, detail['list-attributes']);\n      global$5.each(dom.select('li', el), function (li) {\n        setAttribs(li, detail['list-item-attributes']);\n      });\n    };\n    var updateListWithDetails = function (dom, el, detail) {\n      updateListStyle(dom, el, detail);\n      updateListAttrs(dom, el, detail);\n    };\n    var removeStyles = function (dom, element, styles) {\n      global$5.each(styles, function (style) {\n        var _a;\n        return dom.setStyle(element, (_a = {}, _a[style] = '', _a));\n      });\n    };\n    var getEndPointNode = function (editor, rng, start, root) {\n      var container, offset;\n      container = rng[start ? 'startContainer' : 'endContainer'];\n      offset = rng[start ? 'startOffset' : 'endOffset'];\n      if (container.nodeType === 1) {\n        container = container.childNodes[Math.min(offset, container.childNodes.length - 1)] || container;\n      }\n      if (!start && NodeType.isBr(container.nextSibling)) {\n        container = container.nextSibling;\n      }\n      while (container.parentNode !== root) {\n        if (NodeType.isTextBlock(editor, container)) {\n          return container;\n        }\n        if (/^(TD|TH)$/.test(container.parentNode.nodeName)) {\n          return container;\n        }\n        container = container.parentNode;\n      }\n      return container;\n    };\n    var getSelectedTextBlocks = function (editor, rng, root) {\n      var textBlocks = [], dom = editor.dom;\n      var startNode = getEndPointNode(editor, rng, true, root);\n      var endNode = getEndPointNode(editor, rng, false, root);\n      var block;\n      var siblings = [];\n      for (var node = startNode; node; node = node.nextSibling) {\n        siblings.push(node);\n        if (node === endNode) {\n          break;\n        }\n      }\n      global$5.each(siblings, function (node) {\n        if (NodeType.isTextBlock(editor, node)) {\n          textBlocks.push(node);\n          block = null;\n          return;\n        }\n        if (dom.isBlock(node) || NodeType.isBr(node)) {\n          if (NodeType.isBr(node)) {\n            dom.remove(node);\n          }\n          block = null;\n          return;\n        }\n        var nextSibling = node.nextSibling;\n        if (global$4.isBookmarkNode(node)) {\n          if (NodeType.isTextBlock(editor, nextSibling) || !nextSibling && node.parentNode === root) {\n            block = null;\n            return;\n          }\n        }\n        if (!block) {\n          block = dom.create('p');\n          node.parentNode.insertBefore(block, node);\n          textBlocks.push(block);\n        }\n        block.appendChild(node);\n      });\n      return textBlocks;\n    };\n    var hasCompatibleStyle = function (dom, sib, detail) {\n      var sibStyle = dom.getStyle(sib, 'list-style-type');\n      var detailStyle = detail ? detail['list-style-type'] : '';\n      detailStyle = detailStyle === null ? '' : detailStyle;\n      return sibStyle === detailStyle;\n    };\n    var applyList = function (editor, listName, detail) {\n      if (detail === void 0) {\n        detail = {};\n      }\n      var rng = editor.selection.getRng(true);\n      var bookmark;\n      var listItemName = 'LI';\n      var root = Selection.getClosestListRootElm(editor, editor.selection.getStart(true));\n      var dom = editor.dom;\n      if (dom.getContentEditable(editor.selection.getNode()) === 'false') {\n        return;\n      }\n      listName = listName.toUpperCase();\n      if (listName === 'DL') {\n        listItemName = 'DT';\n      }\n      bookmark = Bookmark.createBookmark(rng);\n      global$5.each(getSelectedTextBlocks(editor, rng, root), function (block) {\n        var listBlock, sibling;\n        sibling = block.previousSibling;\n        if (sibling && NodeType.isListNode(sibling) && sibling.nodeName === listName && hasCompatibleStyle(dom, sibling, detail)) {\n          listBlock = sibling;\n          block = dom.rename(block, listItemName);\n          sibling.appendChild(block);\n        } else {\n          listBlock = dom.create(listName);\n          block.parentNode.insertBefore(listBlock, block);\n          listBlock.appendChild(block);\n          block = dom.rename(block, listItemName);\n        }\n        removeStyles(dom, block, [\n          'margin',\n          'margin-right',\n          'margin-bottom',\n          'margin-left',\n          'margin-top',\n          'padding',\n          'padding-right',\n          'padding-bottom',\n          'padding-left',\n          'padding-top'\n        ]);\n        updateListWithDetails(dom, listBlock, detail);\n        mergeWithAdjacentLists(editor.dom, listBlock);\n      });\n      editor.selection.setRng(Bookmark.resolveBookmark(bookmark));\n    };\n    var isValidLists = function (list1, list2) {\n      return list1 && list2 && NodeType.isListNode(list1) && list1.nodeName === list2.nodeName;\n    };\n    var hasSameListStyle = function (dom, list1, list2) {\n      var targetStyle = dom.getStyle(list1, 'list-style-type', true);\n      var style = dom.getStyle(list2, 'list-style-type', true);\n      return targetStyle === style;\n    };\n    var hasSameClasses = function (elm1, elm2) {\n      return elm1.className === elm2.className;\n    };\n    var shouldMerge = function (dom, list1, list2) {\n      return isValidLists(list1, list2) && hasSameListStyle(dom, list1, list2) && hasSameClasses(list1, list2);\n    };\n    var mergeWithAdjacentLists = function (dom, listBlock) {\n      var sibling, node;\n      sibling = listBlock.nextSibling;\n      if (shouldMerge(dom, listBlock, sibling)) {\n        while (node = sibling.firstChild) {\n          listBlock.appendChild(node);\n        }\n        dom.remove(sibling);\n      }\n      sibling = listBlock.previousSibling;\n      if (shouldMerge(dom, listBlock, sibling)) {\n        while (node = sibling.lastChild) {\n          listBlock.insertBefore(node, listBlock.firstChild);\n        }\n        dom.remove(sibling);\n      }\n    };\n    var updateList = function (dom, list, listName, detail) {\n      if (list.nodeName !== listName) {\n        var newList = dom.rename(list, listName);\n        updateListWithDetails(dom, newList, detail);\n      } else {\n        updateListWithDetails(dom, list, detail);\n      }\n    };\n    var toggleMultipleLists = function (editor, parentList, lists, listName, detail) {\n      if (parentList.nodeName === listName && !hasListStyleDetail(detail)) {\n        flattenListSelection(editor);\n      } else {\n        var bookmark = Bookmark.createBookmark(editor.selection.getRng(true));\n        global$5.each([parentList].concat(lists), function (elm) {\n          updateList(editor.dom, elm, listName, detail);\n        });\n        editor.selection.setRng(Bookmark.resolveBookmark(bookmark));\n      }\n    };\n    var hasListStyleDetail = function (detail) {\n      return 'list-style-type' in detail;\n    };\n    var toggleSingleList = function (editor, parentList, listName, detail) {\n      if (parentList === editor.getBody()) {\n        return;\n      }\n      if (parentList) {\n        if (parentList.nodeName === listName && !hasListStyleDetail(detail)) {\n          flattenListSelection(editor);\n        } else {\n          var bookmark = Bookmark.createBookmark(editor.selection.getRng(true));\n          updateListWithDetails(editor.dom, parentList, detail);\n          mergeWithAdjacentLists(editor.dom, editor.dom.rename(parentList, listName));\n          editor.selection.setRng(Bookmark.resolveBookmark(bookmark));\n        }\n      } else {\n        applyList(editor, listName, detail);\n      }\n    };\n    var toggleList = function (editor, listName, detail) {\n      var parentList = Selection.getParentList(editor);\n      var selectedSubLists = Selection.getSelectedSubLists(editor);\n      detail = detail ? detail : {};\n      if (parentList && selectedSubLists.length > 0) {\n        toggleMultipleLists(editor, parentList, selectedSubLists, listName, detail);\n      } else {\n        toggleSingleList(editor, parentList, listName, detail);\n      }\n    };\n    var ToggleList = {\n      toggleList: toggleList,\n      mergeWithAdjacentLists: mergeWithAdjacentLists\n    };\n\n    var DOM$2 = global$6.DOM;\n    var normalizeList = function (dom, ul) {\n      var sibling;\n      var parentNode = ul.parentNode;\n      if (parentNode.nodeName === 'LI' && parentNode.firstChild === ul) {\n        sibling = parentNode.previousSibling;\n        if (sibling && sibling.nodeName === 'LI') {\n          sibling.appendChild(ul);\n          if (NodeType.isEmpty(dom, parentNode)) {\n            DOM$2.remove(parentNode);\n          }\n        } else {\n          DOM$2.setStyle(parentNode, 'listStyleType', 'none');\n        }\n      }\n      if (NodeType.isListNode(parentNode)) {\n        sibling = parentNode.previousSibling;\n        if (sibling && sibling.nodeName === 'LI') {\n          sibling.appendChild(ul);\n        }\n      }\n    };\n    var normalizeLists = function (dom, element) {\n      global$5.each(global$5.grep(dom.select('ol,ul', element)), function (ul) {\n        normalizeList(dom, ul);\n      });\n    };\n    var NormalizeLists = {\n      normalizeList: normalizeList,\n      normalizeLists: normalizeLists\n    };\n\n    var findNextCaretContainer = function (editor, rng, isForward, root) {\n      var node = rng.startContainer;\n      var offset = rng.startOffset;\n      var nonEmptyBlocks, walker;\n      if (node.nodeType === 3 && (isForward ? offset < node.data.length : offset > 0)) {\n        return node;\n      }\n      nonEmptyBlocks = editor.schema.getNonEmptyElements();\n      if (node.nodeType === 1) {\n        node = global$1.getNode(node, offset);\n      }\n      walker = new global$2(node, root);\n      if (isForward) {\n        if (NodeType.isBogusBr(editor.dom, node)) {\n          walker.next();\n        }\n      }\n      while (node = walker[isForward ? 'next' : 'prev2']()) {\n        if (node.nodeName === 'LI' && !node.hasChildNodes()) {\n          return node;\n        }\n        if (nonEmptyBlocks[node.nodeName]) {\n          return node;\n        }\n        if (node.nodeType === 3 && node.data.length > 0) {\n          return node;\n        }\n      }\n    };\n    var hasOnlyOneBlockChild = function (dom, elm) {\n      var childNodes = elm.childNodes;\n      return childNodes.length === 1 && !NodeType.isListNode(childNodes[0]) && dom.isBlock(childNodes[0]);\n    };\n    var unwrapSingleBlockChild = function (dom, elm) {\n      if (hasOnlyOneBlockChild(dom, elm)) {\n        dom.remove(elm.firstChild, true);\n      }\n    };\n    var moveChildren = function (dom, fromElm, toElm) {\n      var node, targetElm;\n      targetElm = hasOnlyOneBlockChild(dom, toElm) ? toElm.firstChild : toElm;\n      unwrapSingleBlockChild(dom, fromElm);\n      if (!NodeType.isEmpty(dom, fromElm, true)) {\n        while (node = fromElm.firstChild) {\n          targetElm.appendChild(node);\n        }\n      }\n    };\n    var mergeLiElements = function (dom, fromElm, toElm) {\n      var node, listNode;\n      var ul = fromElm.parentNode;\n      if (!NodeType.isChildOfBody(dom, fromElm) || !NodeType.isChildOfBody(dom, toElm)) {\n        return;\n      }\n      if (NodeType.isListNode(toElm.lastChild)) {\n        listNode = toElm.lastChild;\n      }\n      if (ul === toElm.lastChild) {\n        if (NodeType.isBr(ul.previousSibling)) {\n          dom.remove(ul.previousSibling);\n        }\n      }\n      node = toElm.lastChild;\n      if (node && NodeType.isBr(node) && fromElm.hasChildNodes()) {\n        dom.remove(node);\n      }\n      if (NodeType.isEmpty(dom, toElm, true)) {\n        dom.$(toElm).empty();\n      }\n      moveChildren(dom, fromElm, toElm);\n      if (listNode) {\n        toElm.appendChild(listNode);\n      }\n      var contains = contains$1(Element.fromDom(toElm), Element.fromDom(fromElm));\n      var nestedLists = contains ? dom.getParents(fromElm, NodeType.isListNode, toElm) : [];\n      dom.remove(fromElm);\n      each(nestedLists, function (list) {\n        if (NodeType.isEmpty(dom, list) && list !== dom.getRoot()) {\n          dom.remove(list);\n        }\n      });\n    };\n    var mergeIntoEmptyLi = function (editor, fromLi, toLi) {\n      editor.dom.$(toLi).empty();\n      mergeLiElements(editor.dom, fromLi, toLi);\n      editor.selection.setCursorLocation(toLi);\n    };\n    var mergeForward = function (editor, rng, fromLi, toLi) {\n      var dom = editor.dom;\n      if (dom.isEmpty(toLi)) {\n        mergeIntoEmptyLi(editor, fromLi, toLi);\n      } else {\n        var bookmark = Bookmark.createBookmark(rng);\n        mergeLiElements(dom, fromLi, toLi);\n        editor.selection.setRng(Bookmark.resolveBookmark(bookmark));\n      }\n    };\n    var mergeBackward = function (editor, rng, fromLi, toLi) {\n      var bookmark = Bookmark.createBookmark(rng);\n      mergeLiElements(editor.dom, fromLi, toLi);\n      var resolvedBookmark = Bookmark.resolveBookmark(bookmark);\n      editor.selection.setRng(resolvedBookmark);\n    };\n    var backspaceDeleteFromListToListCaret = function (editor, isForward) {\n      var dom = editor.dom, selection = editor.selection;\n      var selectionStartElm = selection.getStart();\n      var root = Selection.getClosestListRootElm(editor, selectionStartElm);\n      var li = dom.getParent(selection.getStart(), 'LI', root);\n      var ul, rng, otherLi;\n      if (li) {\n        ul = li.parentNode;\n        if (ul === editor.getBody() && NodeType.isEmpty(dom, ul)) {\n          return true;\n        }\n        rng = Range.normalizeRange(selection.getRng(true));\n        otherLi = dom.getParent(findNextCaretContainer(editor, rng, isForward, root), 'LI', root);\n        if (otherLi && otherLi !== li) {\n          if (isForward) {\n            mergeForward(editor, rng, otherLi, li);\n          } else {\n            mergeBackward(editor, rng, li, otherLi);\n          }\n          return true;\n        } else if (!otherLi) {\n          if (!isForward) {\n            flattenListSelection(editor);\n            return true;\n          }\n        }\n      }\n      return false;\n    };\n    var removeBlock = function (dom, block, root) {\n      var parentBlock = dom.getParent(block.parentNode, dom.isBlock, root);\n      dom.remove(block);\n      if (parentBlock && dom.isEmpty(parentBlock)) {\n        dom.remove(parentBlock);\n      }\n    };\n    var backspaceDeleteIntoListCaret = function (editor, isForward) {\n      var dom = editor.dom;\n      var selectionStartElm = editor.selection.getStart();\n      var root = Selection.getClosestListRootElm(editor, selectionStartElm);\n      var block = dom.getParent(selectionStartElm, dom.isBlock, root);\n      if (block && dom.isEmpty(block)) {\n        var rng = Range.normalizeRange(editor.selection.getRng(true));\n        var otherLi_1 = dom.getParent(findNextCaretContainer(editor, rng, isForward, root), 'LI', root);\n        if (otherLi_1) {\n          editor.undoManager.transact(function () {\n            removeBlock(dom, block, root);\n            ToggleList.mergeWithAdjacentLists(dom, otherLi_1.parentNode);\n            editor.selection.select(otherLi_1, true);\n            editor.selection.collapse(isForward);\n          });\n          return true;\n        }\n      }\n      return false;\n    };\n    var backspaceDeleteCaret = function (editor, isForward) {\n      return backspaceDeleteFromListToListCaret(editor, isForward) || backspaceDeleteIntoListCaret(editor, isForward);\n    };\n    var backspaceDeleteRange = function (editor) {\n      var selectionStartElm = editor.selection.getStart();\n      var root = Selection.getClosestListRootElm(editor, selectionStartElm);\n      var startListParent = editor.dom.getParent(selectionStartElm, 'LI,DT,DD', root);\n      if (startListParent || Selection.getSelectedListItems(editor).length > 0) {\n        editor.undoManager.transact(function () {\n          editor.execCommand('Delete');\n          NormalizeLists.normalizeLists(editor.dom, editor.getBody());\n        });\n        return true;\n      }\n      return false;\n    };\n    var backspaceDelete = function (editor, isForward) {\n      return editor.selection.isCollapsed() ? backspaceDeleteCaret(editor, isForward) : backspaceDeleteRange(editor);\n    };\n    var setup = function (editor) {\n      editor.on('keydown', function (e) {\n        if (e.keyCode === global$3.BACKSPACE) {\n          if (backspaceDelete(editor, false)) {\n            e.preventDefault();\n          }\n        } else if (e.keyCode === global$3.DELETE) {\n          if (backspaceDelete(editor, true)) {\n            e.preventDefault();\n          }\n        }\n      });\n    };\n    var Delete = {\n      setup: setup,\n      backspaceDelete: backspaceDelete\n    };\n\n    var get = function (editor) {\n      return {\n        backspaceDelete: function (isForward) {\n          Delete.backspaceDelete(editor, isForward);\n        }\n      };\n    };\n    var Api = { get: get };\n\n    var queryListCommandState = function (editor, listName) {\n      return function () {\n        var parentList = editor.dom.getParent(editor.selection.getStart(), 'UL,OL,DL');\n        return parentList && parentList.nodeName === listName;\n      };\n    };\n    var register = function (editor) {\n      editor.on('BeforeExecCommand', function (e) {\n        var cmd = e.command.toLowerCase();\n        if (cmd === 'indent') {\n          indentListSelection(editor);\n        } else if (cmd === 'outdent') {\n          outdentListSelection(editor);\n        }\n      });\n      editor.addCommand('InsertUnorderedList', function (ui, detail) {\n        ToggleList.toggleList(editor, 'UL', detail);\n      });\n      editor.addCommand('InsertOrderedList', function (ui, detail) {\n        ToggleList.toggleList(editor, 'OL', detail);\n      });\n      editor.addCommand('InsertDefinitionList', function (ui, detail) {\n        ToggleList.toggleList(editor, 'DL', detail);\n      });\n      editor.addCommand('RemoveList', function () {\n        flattenListSelection(editor);\n      });\n      editor.addQueryStateHandler('InsertUnorderedList', queryListCommandState(editor, 'UL'));\n      editor.addQueryStateHandler('InsertOrderedList', queryListCommandState(editor, 'OL'));\n      editor.addQueryStateHandler('InsertDefinitionList', queryListCommandState(editor, 'DL'));\n    };\n    var Commands = { register: register };\n\n    var shouldIndentOnTab = function (editor) {\n      return editor.getParam('lists_indent_on_tab', true);\n    };\n    var Settings = { shouldIndentOnTab: shouldIndentOnTab };\n\n    var setupTabKey = function (editor) {\n      editor.on('keydown', function (e) {\n        if (e.keyCode !== global$3.TAB || global$3.metaKeyPressed(e)) {\n          return;\n        }\n        editor.undoManager.transact(function () {\n          if (e.shiftKey ? outdentListSelection(editor) : indentListSelection(editor)) {\n            e.preventDefault();\n          }\n        });\n      });\n    };\n    var setup$1 = function (editor) {\n      if (Settings.shouldIndentOnTab(editor)) {\n        setupTabKey(editor);\n      }\n      Delete.setup(editor);\n    };\n    var Keyboard = { setup: setup$1 };\n\n    var findIndex = function (list, predicate) {\n      for (var index = 0; index < list.length; index++) {\n        var element = list[index];\n        if (predicate(element)) {\n          return index;\n        }\n      }\n      return -1;\n    };\n    var listState = function (editor, listName) {\n      return function (e) {\n        var ctrl = e.control;\n        editor.on('NodeChange', function (e) {\n          var tableCellIndex = findIndex(e.parents, NodeType.isTableCellNode);\n          var parents = tableCellIndex !== -1 ? e.parents.slice(0, tableCellIndex) : e.parents;\n          var lists = global$5.grep(parents, NodeType.isListNode);\n          ctrl.active(lists.length > 0 && lists[0].nodeName === listName);\n        });\n      };\n    };\n    var register$1 = function (editor) {\n      var hasPlugin = function (editor, plugin) {\n        var plugins = editor.settings.plugins ? editor.settings.plugins : '';\n        return global$5.inArray(plugins.split(/[ ,]/), plugin) !== -1;\n      };\n      if (!hasPlugin(editor, 'advlist')) {\n        editor.addButton('numlist', {\n          active: false,\n          title: 'Numbered list',\n          cmd: 'InsertOrderedList',\n          onPostRender: listState(editor, 'OL')\n        });\n        editor.addButton('bullist', {\n          active: false,\n          title: 'Bullet list',\n          cmd: 'InsertUnorderedList',\n          onPostRender: listState(editor, 'UL')\n        });\n      }\n      editor.addButton('indent', {\n        icon: 'indent',\n        title: 'Increase indent',\n        cmd: 'Indent'\n      });\n    };\n    var Buttons = { register: register$1 };\n\n    global.add('lists', function (editor) {\n      Keyboard.setup(editor);\n      Buttons.register(editor);\n      Commands.register(editor);\n      return Api.get(editor);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}(window));\n})();\n\n\n/***/ }),\n\n/***/ \"f85y\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// Exports the \"lists\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/lists')\n//   ES2015:\n//     import 'tinymce/plugins/lists'\n__webpack_require__(\"Z3om\");\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/20.68514a0cc1fba5ce60aa.js","(function () {\nvar lists = (function (domGlobals) {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.dom.RangeUtils');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.dom.TreeWalker');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.dom.BookmarkManager');\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var global$6 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var isTextNode = function (node) {\n      return node && node.nodeType === 3;\n    };\n    var isListNode = function (node) {\n      return node && /^(OL|UL|DL)$/.test(node.nodeName);\n    };\n    var isOlUlNode = function (node) {\n      return node && /^(OL|UL)$/.test(node.nodeName);\n    };\n    var isListItemNode = function (node) {\n      return node && /^(LI|DT|DD)$/.test(node.nodeName);\n    };\n    var isDlItemNode = function (node) {\n      return node && /^(DT|DD)$/.test(node.nodeName);\n    };\n    var isTableCellNode = function (node) {\n      return node && /^(TH|TD)$/.test(node.nodeName);\n    };\n    var isBr = function (node) {\n      return node && node.nodeName === 'BR';\n    };\n    var isFirstChild = function (node) {\n      return node.parentNode.firstChild === node;\n    };\n    var isLastChild = function (node) {\n      return node.parentNode.lastChild === node;\n    };\n    var isTextBlock = function (editor, node) {\n      return node && !!editor.schema.getTextBlockElements()[node.nodeName];\n    };\n    var isBlock = function (node, blockElements) {\n      return node && node.nodeName in blockElements;\n    };\n    var isBogusBr = function (dom, node) {\n      if (!isBr(node)) {\n        return false;\n      }\n      if (dom.isBlock(node.nextSibling) && !isBr(node.previousSibling)) {\n        return true;\n      }\n      return false;\n    };\n    var isEmpty = function (dom, elm, keepBookmarks) {\n      var empty = dom.isEmpty(elm);\n      if (keepBookmarks && dom.select('span[data-mce-type=bookmark]', elm).length > 0) {\n        return false;\n      }\n      return empty;\n    };\n    var isChildOfBody = function (dom, elm) {\n      return dom.isChildOf(elm, dom.getRoot());\n    };\n    var NodeType = {\n      isTextNode: isTextNode,\n      isListNode: isListNode,\n      isOlUlNode: isOlUlNode,\n      isDlItemNode: isDlItemNode,\n      isListItemNode: isListItemNode,\n      isTableCellNode: isTableCellNode,\n      isBr: isBr,\n      isFirstChild: isFirstChild,\n      isLastChild: isLastChild,\n      isTextBlock: isTextBlock,\n      isBlock: isBlock,\n      isBogusBr: isBogusBr,\n      isEmpty: isEmpty,\n      isChildOfBody: isChildOfBody\n    };\n\n    var getNormalizedPoint = function (container, offset) {\n      if (NodeType.isTextNode(container)) {\n        return {\n          container: container,\n          offset: offset\n        };\n      }\n      var node = global$1.getNode(container, offset);\n      if (NodeType.isTextNode(node)) {\n        return {\n          container: node,\n          offset: offset >= container.childNodes.length ? node.data.length : 0\n        };\n      } else if (node.previousSibling && NodeType.isTextNode(node.previousSibling)) {\n        return {\n          container: node.previousSibling,\n          offset: node.previousSibling.data.length\n        };\n      } else if (node.nextSibling && NodeType.isTextNode(node.nextSibling)) {\n        return {\n          container: node.nextSibling,\n          offset: 0\n        };\n      }\n      return {\n        container: container,\n        offset: offset\n      };\n    };\n    var normalizeRange = function (rng) {\n      var outRng = rng.cloneRange();\n      var rangeStart = getNormalizedPoint(rng.startContainer, rng.startOffset);\n      outRng.setStart(rangeStart.container, rangeStart.offset);\n      var rangeEnd = getNormalizedPoint(rng.endContainer, rng.endOffset);\n      outRng.setEnd(rangeEnd.container, rangeEnd.offset);\n      return outRng;\n    };\n    var Range = {\n      getNormalizedPoint: getNormalizedPoint,\n      normalizeRange: normalizeRange\n    };\n\n    var DOM = global$6.DOM;\n    var createBookmark = function (rng) {\n      var bookmark = {};\n      var setupEndPoint = function (start) {\n        var offsetNode, container, offset;\n        container = rng[start ? 'startContainer' : 'endContainer'];\n        offset = rng[start ? 'startOffset' : 'endOffset'];\n        if (container.nodeType === 1) {\n          offsetNode = DOM.create('span', { 'data-mce-type': 'bookmark' });\n          if (container.hasChildNodes()) {\n            offset = Math.min(offset, container.childNodes.length - 1);\n            if (start) {\n              container.insertBefore(offsetNode, container.childNodes[offset]);\n            } else {\n              DOM.insertAfter(offsetNode, container.childNodes[offset]);\n            }\n          } else {\n            container.appendChild(offsetNode);\n          }\n          container = offsetNode;\n          offset = 0;\n        }\n        bookmark[start ? 'startContainer' : 'endContainer'] = container;\n        bookmark[start ? 'startOffset' : 'endOffset'] = offset;\n      };\n      setupEndPoint(true);\n      if (!rng.collapsed) {\n        setupEndPoint();\n      }\n      return bookmark;\n    };\n    var resolveBookmark = function (bookmark) {\n      function restoreEndPoint(start) {\n        var container, offset, node;\n        var nodeIndex = function (container) {\n          var node = container.parentNode.firstChild, idx = 0;\n          while (node) {\n            if (node === container) {\n              return idx;\n            }\n            if (node.nodeType !== 1 || node.getAttribute('data-mce-type') !== 'bookmark') {\n              idx++;\n            }\n            node = node.nextSibling;\n          }\n          return -1;\n        };\n        container = node = bookmark[start ? 'startContainer' : 'endContainer'];\n        offset = bookmark[start ? 'startOffset' : 'endOffset'];\n        if (!container) {\n          return;\n        }\n        if (container.nodeType === 1) {\n          offset = nodeIndex(container);\n          container = container.parentNode;\n          DOM.remove(node);\n          if (!container.hasChildNodes() && DOM.isBlock(container)) {\n            container.appendChild(DOM.create('br'));\n          }\n        }\n        bookmark[start ? 'startContainer' : 'endContainer'] = container;\n        bookmark[start ? 'startOffset' : 'endOffset'] = offset;\n      }\n      restoreEndPoint(true);\n      restoreEndPoint();\n      var rng = DOM.createRng();\n      rng.setStart(bookmark.startContainer, bookmark.startOffset);\n      if (bookmark.endContainer) {\n        rng.setEnd(bookmark.endContainer, bookmark.endOffset);\n      }\n      return Range.normalizeRange(rng);\n    };\n    var Bookmark = {\n      createBookmark: createBookmark,\n      resolveBookmark: resolveBookmark\n    };\n\n    var noop = function () {\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var not = function (f) {\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        return !f.apply(null, args);\n      };\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var none = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var eq = function (o) {\n        return o.isNone();\n      };\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = function (n) {\n        return n;\n      };\n      var me = {\n        fold: function (n, s) {\n          return n();\n        },\n        is: never,\n        isSome: never,\n        isNone: always,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: constant(null),\n        getOrUndefined: constant(undefined),\n        or: id,\n        orThunk: call,\n        map: none,\n        each: noop,\n        bind: none,\n        exists: never,\n        forall: always,\n        filter: none,\n        equals: eq,\n        equals_: eq,\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      if (Object.freeze) {\n        Object.freeze(me);\n      }\n      return me;\n    }();\n    var some = function (a) {\n      var constant_a = constant(a);\n      var self = function () {\n        return me;\n      };\n      var bind = function (f) {\n        return f(a);\n      };\n      var me = {\n        fold: function (n, s) {\n          return s(a);\n        },\n        is: function (v) {\n          return a === v;\n        },\n        isSome: always,\n        isNone: never,\n        getOr: constant_a,\n        getOrThunk: constant_a,\n        getOrDie: constant_a,\n        getOrNull: constant_a,\n        getOrUndefined: constant_a,\n        or: self,\n        orThunk: self,\n        map: function (f) {\n          return some(f(a));\n        },\n        each: function (f) {\n          f(a);\n        },\n        bind: bind,\n        exists: bind,\n        forall: bind,\n        filter: function (f) {\n          return f(a) ? me : NONE;\n        },\n        toArray: function () {\n          return [a];\n        },\n        toString: function () {\n          return 'some(' + a + ')';\n        },\n        equals: function (o) {\n          return o.is(a);\n        },\n        equals_: function (o, elementEq) {\n          return o.fold(never, function (b) {\n            return elementEq(a, b);\n          });\n        }\n      };\n      return me;\n    };\n    var from = function (value) {\n      return value === null || value === undefined ? NONE : some(value);\n    };\n    var Option = {\n      some: some,\n      none: none,\n      from: from\n    };\n\n    var typeOf = function (x) {\n      if (x === null) {\n        return 'null';\n      }\n      var t = typeof x;\n      if (t === 'object' && (Array.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'Array')) {\n        return 'array';\n      }\n      if (t === 'object' && (String.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'String')) {\n        return 'string';\n      }\n      return t;\n    };\n    var isType = function (type) {\n      return function (value) {\n        return typeOf(value) === type;\n      };\n    };\n    var isString = isType('string');\n    var isArray = isType('array');\n    var isBoolean = isType('boolean');\n    var isFunction = isType('function');\n    var isNumber = isType('number');\n\n    var nativeSlice = Array.prototype.slice;\n    var nativePush = Array.prototype.push;\n    var map = function (xs, f) {\n      var len = xs.length;\n      var r = new Array(len);\n      for (var i = 0; i < len; i++) {\n        var x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    var each = function (xs, f) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        f(x, i);\n      }\n    };\n    var filter = function (xs, pred) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          r.push(x);\n        }\n      }\n      return r;\n    };\n    var groupBy = function (xs, f) {\n      if (xs.length === 0) {\n        return [];\n      } else {\n        var wasType = f(xs[0]);\n        var r = [];\n        var group = [];\n        for (var i = 0, len = xs.length; i < len; i++) {\n          var x = xs[i];\n          var type = f(x);\n          if (type !== wasType) {\n            r.push(group);\n            group = [];\n          }\n          wasType = type;\n          group.push(x);\n        }\n        if (group.length !== 0) {\n          r.push(group);\n        }\n        return r;\n      }\n    };\n    var foldl = function (xs, f, acc) {\n      each(xs, function (x) {\n        acc = f(acc, x);\n      });\n      return acc;\n    };\n    var find = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          return Option.some(x);\n        }\n      }\n      return Option.none();\n    };\n    var flatten = function (xs) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; ++i) {\n        if (!isArray(xs[i])) {\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        }\n        nativePush.apply(r, xs[i]);\n      }\n      return r;\n    };\n    var bind = function (xs, f) {\n      var output = map(xs, f);\n      return flatten(output);\n    };\n    var reverse = function (xs) {\n      var r = nativeSlice.call(xs, 0);\n      r.reverse();\n      return r;\n    };\n    var head = function (xs) {\n      return xs.length === 0 ? Option.none() : Option.some(xs[0]);\n    };\n    var last = function (xs) {\n      return xs.length === 0 ? Option.none() : Option.some(xs[xs.length - 1]);\n    };\n    var from$1 = isFunction(Array.from) ? Array.from : function (x) {\n      return nativeSlice.call(x);\n    };\n\n    var Global = typeof domGlobals.window !== 'undefined' ? domGlobals.window : Function('return this;')();\n\n    var path = function (parts, scope) {\n      var o = scope !== undefined && scope !== null ? scope : Global;\n      for (var i = 0; i < parts.length && o !== undefined && o !== null; ++i) {\n        o = o[parts[i]];\n      }\n      return o;\n    };\n    var resolve = function (p, scope) {\n      var parts = p.split('.');\n      return path(parts, scope);\n    };\n\n    var unsafe = function (name, scope) {\n      return resolve(name, scope);\n    };\n    var getOrDie = function (name, scope) {\n      var actual = unsafe(name, scope);\n      if (actual === undefined || actual === null) {\n        throw new Error(name + ' not available on this browser');\n      }\n      return actual;\n    };\n    var Global$1 = { getOrDie: getOrDie };\n\n    var htmlElement = function (scope) {\n      return Global$1.getOrDie('HTMLElement', scope);\n    };\n    var isPrototypeOf = function (x) {\n      var scope = resolve('ownerDocument.defaultView', x);\n      return htmlElement(scope).prototype.isPrototypeOf(x);\n    };\n    var HTMLElement = { isPrototypeOf: isPrototypeOf };\n\n    var global$7 = tinymce.util.Tools.resolve('tinymce.dom.DomQuery');\n\n    var getParentList = function (editor) {\n      var selectionStart = editor.selection.getStart(true);\n      return editor.dom.getParent(selectionStart, 'OL,UL,DL', getClosestListRootElm(editor, selectionStart));\n    };\n    var isParentListSelected = function (parentList, selectedBlocks) {\n      return parentList && selectedBlocks.length === 1 && selectedBlocks[0] === parentList;\n    };\n    var findSubLists = function (parentList) {\n      return global$5.grep(parentList.querySelectorAll('ol,ul,dl'), function (elm) {\n        return NodeType.isListNode(elm);\n      });\n    };\n    var getSelectedSubLists = function (editor) {\n      var parentList = getParentList(editor);\n      var selectedBlocks = editor.selection.getSelectedBlocks();\n      if (isParentListSelected(parentList, selectedBlocks)) {\n        return findSubLists(parentList);\n      } else {\n        return global$5.grep(selectedBlocks, function (elm) {\n          return NodeType.isListNode(elm) && parentList !== elm;\n        });\n      }\n    };\n    var findParentListItemsNodes = function (editor, elms) {\n      var listItemsElms = global$5.map(elms, function (elm) {\n        var parentLi = editor.dom.getParent(elm, 'li,dd,dt', getClosestListRootElm(editor, elm));\n        return parentLi ? parentLi : elm;\n      });\n      return global$7.unique(listItemsElms);\n    };\n    var getSelectedListItems = function (editor) {\n      var selectedBlocks = editor.selection.getSelectedBlocks();\n      return global$5.grep(findParentListItemsNodes(editor, selectedBlocks), function (block) {\n        return NodeType.isListItemNode(block);\n      });\n    };\n    var getSelectedDlItems = function (editor) {\n      return filter(getSelectedListItems(editor), NodeType.isDlItemNode);\n    };\n    var getClosestListRootElm = function (editor, elm) {\n      var parentTableCell = editor.dom.getParents(elm, 'TD,TH');\n      var root = parentTableCell.length > 0 ? parentTableCell[0] : editor.getBody();\n      return root;\n    };\n    var findLastParentListNode = function (editor, elm) {\n      var parentLists = editor.dom.getParents(elm, 'ol,ul', getClosestListRootElm(editor, elm));\n      return last(parentLists);\n    };\n    var getSelectedLists = function (editor) {\n      var firstList = findLastParentListNode(editor, editor.selection.getStart());\n      var subsequentLists = filter(editor.selection.getSelectedBlocks(), NodeType.isOlUlNode);\n      return firstList.toArray().concat(subsequentLists);\n    };\n    var getSelectedListRoots = function (editor) {\n      var selectedLists = getSelectedLists(editor);\n      return getUniqueListRoots(editor, selectedLists);\n    };\n    var getUniqueListRoots = function (editor, lists) {\n      var listRoots = map(lists, function (list) {\n        return findLastParentListNode(editor, list).getOr(list);\n      });\n      return global$7.unique(listRoots);\n    };\n    var isList = function (editor) {\n      var list = getParentList(editor);\n      return HTMLElement.isPrototypeOf(list);\n    };\n    var Selection = {\n      isList: isList,\n      getParentList: getParentList,\n      getSelectedSubLists: getSelectedSubLists,\n      getSelectedListItems: getSelectedListItems,\n      getClosestListRootElm: getClosestListRootElm,\n      getSelectedDlItems: getSelectedDlItems,\n      getSelectedListRoots: getSelectedListRoots\n    };\n\n    var fromHtml = function (html, scope) {\n      var doc = scope || domGlobals.document;\n      var div = doc.createElement('div');\n      div.innerHTML = html;\n      if (!div.hasChildNodes() || div.childNodes.length > 1) {\n        domGlobals.console.error('HTML does not have a single root node', html);\n        throw new Error('HTML must have a single root node');\n      }\n      return fromDom(div.childNodes[0]);\n    };\n    var fromTag = function (tag, scope) {\n      var doc = scope || domGlobals.document;\n      var node = doc.createElement(tag);\n      return fromDom(node);\n    };\n    var fromText = function (text, scope) {\n      var doc = scope || domGlobals.document;\n      var node = doc.createTextNode(text);\n      return fromDom(node);\n    };\n    var fromDom = function (node) {\n      if (node === null || node === undefined) {\n        throw new Error('Node cannot be null or undefined');\n      }\n      return { dom: constant(node) };\n    };\n    var fromPoint = function (docElm, x, y) {\n      var doc = docElm.dom();\n      return Option.from(doc.elementFromPoint(x, y)).map(fromDom);\n    };\n    var Element = {\n      fromHtml: fromHtml,\n      fromTag: fromTag,\n      fromText: fromText,\n      fromDom: fromDom,\n      fromPoint: fromPoint\n    };\n\n    var lift2 = function (oa, ob, f) {\n      return oa.isSome() && ob.isSome() ? Option.some(f(oa.getOrDie(), ob.getOrDie())) : Option.none();\n    };\n\n    var fromElements = function (elements, scope) {\n      var doc = scope || domGlobals.document;\n      var fragment = doc.createDocumentFragment();\n      each(elements, function (element) {\n        fragment.appendChild(element.dom());\n      });\n      return Element.fromDom(fragment);\n    };\n\n    var Immutable = function () {\n      var fields = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        fields[_i] = arguments[_i];\n      }\n      return function () {\n        var values = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          values[_i] = arguments[_i];\n        }\n        if (fields.length !== values.length) {\n          throw new Error('Wrong number of arguments to struct. Expected \"[' + fields.length + ']\", got ' + values.length + ' arguments');\n        }\n        var struct = {};\n        each(fields, function (name, i) {\n          struct[name] = constant(values[i]);\n        });\n        return struct;\n      };\n    };\n\n    var keys = Object.keys;\n    var each$1 = function (obj, f) {\n      var props = keys(obj);\n      for (var k = 0, len = props.length; k < len; k++) {\n        var i = props[k];\n        var x = obj[i];\n        f(x, i);\n      }\n    };\n\n    var node = function () {\n      var f = Global$1.getOrDie('Node');\n      return f;\n    };\n    var compareDocumentPosition = function (a, b, match) {\n      return (a.compareDocumentPosition(b) & match) !== 0;\n    };\n    var documentPositionPreceding = function (a, b) {\n      return compareDocumentPosition(a, b, node().DOCUMENT_POSITION_PRECEDING);\n    };\n    var documentPositionContainedBy = function (a, b) {\n      return compareDocumentPosition(a, b, node().DOCUMENT_POSITION_CONTAINED_BY);\n    };\n    var Node = {\n      documentPositionPreceding: documentPositionPreceding,\n      documentPositionContainedBy: documentPositionContainedBy\n    };\n\n    var cached = function (f) {\n      var called = false;\n      var r;\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        if (!called) {\n          called = true;\n          r = f.apply(null, args);\n        }\n        return r;\n      };\n    };\n\n    var firstMatch = function (regexes, s) {\n      for (var i = 0; i < regexes.length; i++) {\n        var x = regexes[i];\n        if (x.test(s)) {\n          return x;\n        }\n      }\n      return undefined;\n    };\n    var find$1 = function (regexes, agent) {\n      var r = firstMatch(regexes, agent);\n      if (!r) {\n        return {\n          major: 0,\n          minor: 0\n        };\n      }\n      var group = function (i) {\n        return Number(agent.replace(r, '$' + i));\n      };\n      return nu(group(1), group(2));\n    };\n    var detect = function (versionRegexes, agent) {\n      var cleanedAgent = String(agent).toLowerCase();\n      if (versionRegexes.length === 0) {\n        return unknown();\n      }\n      return find$1(versionRegexes, cleanedAgent);\n    };\n    var unknown = function () {\n      return nu(0, 0);\n    };\n    var nu = function (major, minor) {\n      return {\n        major: major,\n        minor: minor\n      };\n    };\n    var Version = {\n      nu: nu,\n      detect: detect,\n      unknown: unknown\n    };\n\n    var edge = 'Edge';\n    var chrome = 'Chrome';\n    var ie = 'IE';\n    var opera = 'Opera';\n    var firefox = 'Firefox';\n    var safari = 'Safari';\n    var isBrowser = function (name, current) {\n      return function () {\n        return current === name;\n      };\n    };\n    var unknown$1 = function () {\n      return nu$1({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    var nu$1 = function (info) {\n      var current = info.current;\n      var version = info.version;\n      return {\n        current: current,\n        version: version,\n        isEdge: isBrowser(edge, current),\n        isChrome: isBrowser(chrome, current),\n        isIE: isBrowser(ie, current),\n        isOpera: isBrowser(opera, current),\n        isFirefox: isBrowser(firefox, current),\n        isSafari: isBrowser(safari, current)\n      };\n    };\n    var Browser = {\n      unknown: unknown$1,\n      nu: nu$1,\n      edge: constant(edge),\n      chrome: constant(chrome),\n      ie: constant(ie),\n      opera: constant(opera),\n      firefox: constant(firefox),\n      safari: constant(safari)\n    };\n\n    var windows = 'Windows';\n    var ios = 'iOS';\n    var android = 'Android';\n    var linux = 'Linux';\n    var osx = 'OSX';\n    var solaris = 'Solaris';\n    var freebsd = 'FreeBSD';\n    var isOS = function (name, current) {\n      return function () {\n        return current === name;\n      };\n    };\n    var unknown$2 = function () {\n      return nu$2({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    var nu$2 = function (info) {\n      var current = info.current;\n      var version = info.version;\n      return {\n        current: current,\n        version: version,\n        isWindows: isOS(windows, current),\n        isiOS: isOS(ios, current),\n        isAndroid: isOS(android, current),\n        isOSX: isOS(osx, current),\n        isLinux: isOS(linux, current),\n        isSolaris: isOS(solaris, current),\n        isFreeBSD: isOS(freebsd, current)\n      };\n    };\n    var OperatingSystem = {\n      unknown: unknown$2,\n      nu: nu$2,\n      windows: constant(windows),\n      ios: constant(ios),\n      android: constant(android),\n      linux: constant(linux),\n      osx: constant(osx),\n      solaris: constant(solaris),\n      freebsd: constant(freebsd)\n    };\n\n    var DeviceType = function (os, browser, userAgent) {\n      var isiPad = os.isiOS() && /ipad/i.test(userAgent) === true;\n      var isiPhone = os.isiOS() && !isiPad;\n      var isAndroid3 = os.isAndroid() && os.version.major === 3;\n      var isAndroid4 = os.isAndroid() && os.version.major === 4;\n      var isTablet = isiPad || isAndroid3 || isAndroid4 && /mobile/i.test(userAgent) === true;\n      var isTouch = os.isiOS() || os.isAndroid();\n      var isPhone = isTouch && !isTablet;\n      var iOSwebview = browser.isSafari() && os.isiOS() && /safari/i.test(userAgent) === false;\n      return {\n        isiPad: constant(isiPad),\n        isiPhone: constant(isiPhone),\n        isTablet: constant(isTablet),\n        isPhone: constant(isPhone),\n        isTouch: constant(isTouch),\n        isAndroid: os.isAndroid,\n        isiOS: os.isiOS,\n        isWebView: constant(iOSwebview)\n      };\n    };\n\n    var detect$1 = function (candidates, userAgent) {\n      var agent = String(userAgent).toLowerCase();\n      return find(candidates, function (candidate) {\n        return candidate.search(agent);\n      });\n    };\n    var detectBrowser = function (browsers, userAgent) {\n      return detect$1(browsers, userAgent).map(function (browser) {\n        var version = Version.detect(browser.versionRegexes, userAgent);\n        return {\n          current: browser.name,\n          version: version\n        };\n      });\n    };\n    var detectOs = function (oses, userAgent) {\n      return detect$1(oses, userAgent).map(function (os) {\n        var version = Version.detect(os.versionRegexes, userAgent);\n        return {\n          current: os.name,\n          version: version\n        };\n      });\n    };\n    var UaString = {\n      detectBrowser: detectBrowser,\n      detectOs: detectOs\n    };\n\n    var contains = function (str, substr) {\n      return str.indexOf(substr) !== -1;\n    };\n\n    var normalVersionRegex = /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/;\n    var checkContains = function (target) {\n      return function (uastring) {\n        return contains(uastring, target);\n      };\n    };\n    var browsers = [\n      {\n        name: 'Edge',\n        versionRegexes: [/.*?edge\\/ ?([0-9]+)\\.([0-9]+)$/],\n        search: function (uastring) {\n          return contains(uastring, 'edge/') && contains(uastring, 'chrome') && contains(uastring, 'safari') && contains(uastring, 'applewebkit');\n        }\n      },\n      {\n        name: 'Chrome',\n        versionRegexes: [\n          /.*?chrome\\/([0-9]+)\\.([0-9]+).*/,\n          normalVersionRegex\n        ],\n        search: function (uastring) {\n          return contains(uastring, 'chrome') && !contains(uastring, 'chromeframe');\n        }\n      },\n      {\n        name: 'IE',\n        versionRegexes: [\n          /.*?msie\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*?rv:([0-9]+)\\.([0-9]+).*/\n        ],\n        search: function (uastring) {\n          return contains(uastring, 'msie') || contains(uastring, 'trident');\n        }\n      },\n      {\n        name: 'Opera',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?opera\\/([0-9]+)\\.([0-9]+).*/\n        ],\n        search: checkContains('opera')\n      },\n      {\n        name: 'Firefox',\n        versionRegexes: [/.*?firefox\\/\\ ?([0-9]+)\\.([0-9]+).*/],\n        search: checkContains('firefox')\n      },\n      {\n        name: 'Safari',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?cpu os ([0-9]+)_([0-9]+).*/\n        ],\n        search: function (uastring) {\n          return (contains(uastring, 'safari') || contains(uastring, 'mobile/')) && contains(uastring, 'applewebkit');\n        }\n      }\n    ];\n    var oses = [\n      {\n        name: 'Windows',\n        search: checkContains('win'),\n        versionRegexes: [/.*?windows\\ nt\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'iOS',\n        search: function (uastring) {\n          return contains(uastring, 'iphone') || contains(uastring, 'ipad');\n        },\n        versionRegexes: [\n          /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*cpu os ([0-9]+)_([0-9]+).*/,\n          /.*cpu iphone os ([0-9]+)_([0-9]+).*/\n        ]\n      },\n      {\n        name: 'Android',\n        search: checkContains('android'),\n        versionRegexes: [/.*?android\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'OSX',\n        search: checkContains('os x'),\n        versionRegexes: [/.*?os\\ x\\ ?([0-9]+)_([0-9]+).*/]\n      },\n      {\n        name: 'Linux',\n        search: checkContains('linux'),\n        versionRegexes: []\n      },\n      {\n        name: 'Solaris',\n        search: checkContains('sunos'),\n        versionRegexes: []\n      },\n      {\n        name: 'FreeBSD',\n        search: checkContains('freebsd'),\n        versionRegexes: []\n      }\n    ];\n    var PlatformInfo = {\n      browsers: constant(browsers),\n      oses: constant(oses)\n    };\n\n    var detect$2 = function (userAgent) {\n      var browsers = PlatformInfo.browsers();\n      var oses = PlatformInfo.oses();\n      var browser = UaString.detectBrowser(browsers, userAgent).fold(Browser.unknown, Browser.nu);\n      var os = UaString.detectOs(oses, userAgent).fold(OperatingSystem.unknown, OperatingSystem.nu);\n      var deviceType = DeviceType(os, browser, userAgent);\n      return {\n        browser: browser,\n        os: os,\n        deviceType: deviceType\n      };\n    };\n    var PlatformDetection = { detect: detect$2 };\n\n    var detect$3 = cached(function () {\n      var userAgent = domGlobals.navigator.userAgent;\n      return PlatformDetection.detect(userAgent);\n    });\n    var PlatformDetection$1 = { detect: detect$3 };\n\n    var ATTRIBUTE = domGlobals.Node.ATTRIBUTE_NODE;\n    var CDATA_SECTION = domGlobals.Node.CDATA_SECTION_NODE;\n    var COMMENT = domGlobals.Node.COMMENT_NODE;\n    var DOCUMENT = domGlobals.Node.DOCUMENT_NODE;\n    var DOCUMENT_TYPE = domGlobals.Node.DOCUMENT_TYPE_NODE;\n    var DOCUMENT_FRAGMENT = domGlobals.Node.DOCUMENT_FRAGMENT_NODE;\n    var ELEMENT = domGlobals.Node.ELEMENT_NODE;\n    var TEXT = domGlobals.Node.TEXT_NODE;\n    var PROCESSING_INSTRUCTION = domGlobals.Node.PROCESSING_INSTRUCTION_NODE;\n    var ENTITY_REFERENCE = domGlobals.Node.ENTITY_REFERENCE_NODE;\n    var ENTITY = domGlobals.Node.ENTITY_NODE;\n    var NOTATION = domGlobals.Node.NOTATION_NODE;\n\n    var ELEMENT$1 = ELEMENT;\n    var is = function (element, selector) {\n      var dom = element.dom();\n      if (dom.nodeType !== ELEMENT$1) {\n        return false;\n      } else {\n        var elem = dom;\n        if (elem.matches !== undefined) {\n          return elem.matches(selector);\n        } else if (elem.msMatchesSelector !== undefined) {\n          return elem.msMatchesSelector(selector);\n        } else if (elem.webkitMatchesSelector !== undefined) {\n          return elem.webkitMatchesSelector(selector);\n        } else if (elem.mozMatchesSelector !== undefined) {\n          return elem.mozMatchesSelector(selector);\n        } else {\n          throw new Error('Browser lacks native selectors');\n        }\n      }\n    };\n\n    var eq = function (e1, e2) {\n      return e1.dom() === e2.dom();\n    };\n    var regularContains = function (e1, e2) {\n      var d1 = e1.dom();\n      var d2 = e2.dom();\n      return d1 === d2 ? false : d1.contains(d2);\n    };\n    var ieContains = function (e1, e2) {\n      return Node.documentPositionContainedBy(e1.dom(), e2.dom());\n    };\n    var browser = PlatformDetection$1.detect().browser;\n    var contains$1 = browser.isIE() ? ieContains : regularContains;\n    var is$1 = is;\n\n    var parent = function (element) {\n      return Option.from(element.dom().parentNode).map(Element.fromDom);\n    };\n    var children = function (element) {\n      return map(element.dom().childNodes, Element.fromDom);\n    };\n    var child = function (element, index) {\n      var cs = element.dom().childNodes;\n      return Option.from(cs[index]).map(Element.fromDom);\n    };\n    var firstChild = function (element) {\n      return child(element, 0);\n    };\n    var lastChild = function (element) {\n      return child(element, element.dom().childNodes.length - 1);\n    };\n    var spot = Immutable('element', 'offset');\n\n    var before = function (marker, element) {\n      var parent$1 = parent(marker);\n      parent$1.each(function (v) {\n        v.dom().insertBefore(element.dom(), marker.dom());\n      });\n    };\n    var append = function (parent, element) {\n      parent.dom().appendChild(element.dom());\n    };\n\n    var before$1 = function (marker, elements) {\n      each(elements, function (x) {\n        before(marker, x);\n      });\n    };\n    var append$1 = function (parent, elements) {\n      each(elements, function (x) {\n        append(parent, x);\n      });\n    };\n\n    var remove = function (element) {\n      var dom = element.dom();\n      if (dom.parentNode !== null) {\n        dom.parentNode.removeChild(dom);\n      }\n    };\n\n    var name = function (element) {\n      var r = element.dom().nodeName;\n      return r.toLowerCase();\n    };\n    var type = function (element) {\n      return element.dom().nodeType;\n    };\n    var isType$1 = function (t) {\n      return function (element) {\n        return type(element) === t;\n      };\n    };\n    var isElement = isType$1(ELEMENT);\n\n    var rawSet = function (dom, key, value) {\n      if (isString(value) || isBoolean(value) || isNumber(value)) {\n        dom.setAttribute(key, value + '');\n      } else {\n        domGlobals.console.error('Invalid call to Attr.set. Key ', key, ':: Value ', value, ':: Element ', dom);\n        throw new Error('Attribute value was not simple');\n      }\n    };\n    var setAll = function (element, attrs) {\n      var dom = element.dom();\n      each$1(attrs, function (v, k) {\n        rawSet(dom, k, v);\n      });\n    };\n    var clone = function (element) {\n      return foldl(element.dom().attributes, function (acc, attr) {\n        acc[attr.name] = attr.value;\n        return acc;\n      }, {});\n    };\n\n    var isSupported = function (dom) {\n      return dom.style !== undefined && isFunction(dom.style.getPropertyValue);\n    };\n\n    var internalSet = function (dom, property, value) {\n      if (!isString(value)) {\n        domGlobals.console.error('Invalid call to CSS.set. Property ', property, ':: Value ', value, ':: Element ', dom);\n        throw new Error('CSS value must be a string: ' + value);\n      }\n      if (isSupported(dom)) {\n        dom.style.setProperty(property, value);\n      }\n    };\n    var set = function (element, property, value) {\n      var dom = element.dom();\n      internalSet(dom, property, value);\n    };\n\n    var clone$1 = function (original, isDeep) {\n      return Element.fromDom(original.dom().cloneNode(isDeep));\n    };\n    var deep = function (original) {\n      return clone$1(original, true);\n    };\n    var shallowAs = function (original, tag) {\n      var nu = Element.fromTag(tag);\n      var attributes = clone(original);\n      setAll(nu, attributes);\n      return nu;\n    };\n    var mutate = function (original, tag) {\n      var nu = shallowAs(original, tag);\n      before(original, nu);\n      var children$1 = children(original);\n      append$1(nu, children$1);\n      remove(original);\n      return nu;\n    };\n\n    var joinSegment = function (parent, child) {\n      append(parent.item, child.list);\n    };\n    var joinSegments = function (segments) {\n      for (var i = 1; i < segments.length; i++) {\n        joinSegment(segments[i - 1], segments[i]);\n      }\n    };\n    var appendSegments = function (head$1, tail) {\n      lift2(last(head$1), head(tail), joinSegment);\n    };\n    var createSegment = function (scope, listType) {\n      var segment = {\n        list: Element.fromTag(listType, scope),\n        item: Element.fromTag('li', scope)\n      };\n      append(segment.list, segment.item);\n      return segment;\n    };\n    var createSegments = function (scope, entry, size) {\n      var segments = [];\n      for (var i = 0; i < size; i++) {\n        segments.push(createSegment(scope, entry.listType));\n      }\n      return segments;\n    };\n    var populateSegments = function (segments, entry) {\n      for (var i = 0; i < segments.length - 1; i++) {\n        set(segments[i].item, 'list-style-type', 'none');\n      }\n      last(segments).each(function (segment) {\n        setAll(segment.list, entry.listAttributes);\n        setAll(segment.item, entry.itemAttributes);\n        append$1(segment.item, entry.content);\n      });\n    };\n    var normalizeSegment = function (segment, entry) {\n      if (name(segment.list) !== entry.listType) {\n        segment.list = mutate(segment.list, entry.listType);\n      }\n      setAll(segment.list, entry.listAttributes);\n    };\n    var createItem = function (scope, attr, content) {\n      var item = Element.fromTag('li', scope);\n      setAll(item, attr);\n      append$1(item, content);\n      return item;\n    };\n    var appendItem = function (segment, item) {\n      append(segment.list, item);\n      segment.item = item;\n    };\n    var writeShallow = function (scope, cast, entry) {\n      var newCast = cast.slice(0, entry.depth);\n      last(newCast).each(function (segment) {\n        var item = createItem(scope, entry.itemAttributes, entry.content);\n        appendItem(segment, item);\n        normalizeSegment(segment, entry);\n      });\n      return newCast;\n    };\n    var writeDeep = function (scope, cast, entry) {\n      var segments = createSegments(scope, entry, entry.depth - cast.length);\n      joinSegments(segments);\n      populateSegments(segments, entry);\n      appendSegments(cast, segments);\n      return cast.concat(segments);\n    };\n    var composeList = function (scope, entries) {\n      var cast = foldl(entries, function (cast, entry) {\n        return entry.depth > cast.length ? writeDeep(scope, cast, entry) : writeShallow(scope, cast, entry);\n      }, []);\n      return head(cast).map(function (segment) {\n        return segment.list;\n      });\n    };\n\n    var isList$1 = function (el) {\n      return is$1(el, 'OL,UL');\n    };\n    var hasFirstChildList = function (el) {\n      return firstChild(el).map(isList$1).getOr(false);\n    };\n    var hasLastChildList = function (el) {\n      return lastChild(el).map(isList$1).getOr(false);\n    };\n\n    var isIndented = function (entry) {\n      return entry.depth > 0;\n    };\n    var isSelected = function (entry) {\n      return entry.isSelected;\n    };\n    var cloneItemContent = function (li) {\n      var children$1 = children(li);\n      var content = hasLastChildList(li) ? children$1.slice(0, -1) : children$1;\n      return map(content, deep);\n    };\n    var createEntry = function (li, depth, isSelected) {\n      return parent(li).filter(isElement).map(function (list) {\n        return {\n          depth: depth,\n          isSelected: isSelected,\n          content: cloneItemContent(li),\n          itemAttributes: clone(li),\n          listAttributes: clone(list),\n          listType: name(list)\n        };\n      });\n    };\n\n    var indentEntry = function (indentation, entry) {\n      switch (indentation) {\n      case 'Indent':\n        entry.depth++;\n        break;\n      case 'Outdent':\n        entry.depth--;\n        break;\n      case 'Flatten':\n        entry.depth = 0;\n      }\n    };\n\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var shallow = function (old, nu) {\n      return nu;\n    };\n    var baseMerge = function (merger) {\n      return function () {\n        var objects = new Array(arguments.length);\n        for (var i = 0; i < objects.length; i++) {\n          objects[i] = arguments[i];\n        }\n        if (objects.length === 0) {\n          throw new Error('Can\\'t merge zero objects');\n        }\n        var ret = {};\n        for (var j = 0; j < objects.length; j++) {\n          var curObject = objects[j];\n          for (var key in curObject) {\n            if (hasOwnProperty.call(curObject, key)) {\n              ret[key] = merger(ret[key], curObject[key]);\n            }\n          }\n        }\n        return ret;\n      };\n    };\n    var merge = baseMerge(shallow);\n\n    var cloneListProperties = function (target, source) {\n      target.listType = source.listType;\n      target.listAttributes = merge({}, source.listAttributes);\n    };\n    var previousSiblingEntry = function (entries, start) {\n      var depth = entries[start].depth;\n      for (var i = start - 1; i >= 0; i--) {\n        if (entries[i].depth === depth) {\n          return Option.some(entries[i]);\n        }\n        if (entries[i].depth < depth) {\n          break;\n        }\n      }\n      return Option.none();\n    };\n    var normalizeEntries = function (entries) {\n      each(entries, function (entry, i) {\n        previousSiblingEntry(entries, i).each(function (matchingEntry) {\n          cloneListProperties(entry, matchingEntry);\n        });\n      });\n    };\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      var clone = function () {\n        return Cell(get());\n      };\n      return {\n        get: get,\n        set: set,\n        clone: clone\n      };\n    };\n\n    var parseItem = function (depth, itemSelection, selectionState, item) {\n      return firstChild(item).filter(isList$1).fold(function () {\n        itemSelection.each(function (selection) {\n          if (eq(selection.start, item)) {\n            selectionState.set(true);\n          }\n        });\n        var currentItemEntry = createEntry(item, depth, selectionState.get());\n        itemSelection.each(function (selection) {\n          if (eq(selection.end, item)) {\n            selectionState.set(false);\n          }\n        });\n        var childListEntries = lastChild(item).filter(isList$1).map(function (list) {\n          return parseList(depth, itemSelection, selectionState, list);\n        }).getOr([]);\n        return currentItemEntry.toArray().concat(childListEntries);\n      }, function (list) {\n        return parseList(depth, itemSelection, selectionState, list);\n      });\n    };\n    var parseList = function (depth, itemSelection, selectionState, list) {\n      return bind(children(list), function (element) {\n        var parser = isList$1(element) ? parseList : parseItem;\n        var newDepth = depth + 1;\n        return parser(newDepth, itemSelection, selectionState, element);\n      });\n    };\n    var parseLists = function (lists, itemSelection) {\n      var selectionState = Cell(false);\n      var initialDepth = 0;\n      return map(lists, function (list) {\n        return {\n          sourceList: list,\n          entries: parseList(initialDepth, itemSelection, selectionState, list)\n        };\n      });\n    };\n\n    var global$8 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var createTextBlock = function (editor, contentNode) {\n      var dom = editor.dom;\n      var blockElements = editor.schema.getBlockElements();\n      var fragment = dom.createFragment();\n      var node, textBlock, blockName, hasContentNode;\n      if (editor.settings.forced_root_block) {\n        blockName = editor.settings.forced_root_block;\n      }\n      if (blockName) {\n        textBlock = dom.create(blockName);\n        if (textBlock.tagName === editor.settings.forced_root_block) {\n          dom.setAttribs(textBlock, editor.settings.forced_root_block_attrs);\n        }\n        if (!NodeType.isBlock(contentNode.firstChild, blockElements)) {\n          fragment.appendChild(textBlock);\n        }\n      }\n      if (contentNode) {\n        while (node = contentNode.firstChild) {\n          var nodeName = node.nodeName;\n          if (!hasContentNode && (nodeName !== 'SPAN' || node.getAttribute('data-mce-type') !== 'bookmark')) {\n            hasContentNode = true;\n          }\n          if (NodeType.isBlock(node, blockElements)) {\n            fragment.appendChild(node);\n            textBlock = null;\n          } else {\n            if (blockName) {\n              if (!textBlock) {\n                textBlock = dom.create(blockName);\n                fragment.appendChild(textBlock);\n              }\n              textBlock.appendChild(node);\n            } else {\n              fragment.appendChild(node);\n            }\n          }\n        }\n      }\n      if (!editor.settings.forced_root_block) {\n        fragment.appendChild(dom.create('br'));\n      } else {\n        if (!hasContentNode && (!global$8.ie || global$8.ie > 10)) {\n          textBlock.appendChild(dom.create('br', { 'data-mce-bogus': '1' }));\n        }\n      }\n      return fragment;\n    };\n\n    var outdentedComposer = function (editor, entries) {\n      return map(entries, function (entry) {\n        var content = fromElements(entry.content);\n        return Element.fromDom(createTextBlock(editor, content.dom()));\n      });\n    };\n    var indentedComposer = function (editor, entries) {\n      normalizeEntries(entries);\n      return composeList(editor.contentDocument, entries).toArray();\n    };\n    var composeEntries = function (editor, entries) {\n      return bind(groupBy(entries, isIndented), function (entries) {\n        var groupIsIndented = head(entries).map(isIndented).getOr(false);\n        return groupIsIndented ? indentedComposer(editor, entries) : outdentedComposer(editor, entries);\n      });\n    };\n    var indentSelectedEntries = function (entries, indentation) {\n      each(filter(entries, isSelected), function (entry) {\n        return indentEntry(indentation, entry);\n      });\n    };\n    var getItemSelection = function (editor) {\n      var selectedListItems = map(Selection.getSelectedListItems(editor), Element.fromDom);\n      return lift2(find(selectedListItems, not(hasFirstChildList)), find(reverse(selectedListItems), not(hasFirstChildList)), function (start, end) {\n        return {\n          start: start,\n          end: end\n        };\n      });\n    };\n    var listsIndentation = function (editor, lists, indentation) {\n      var entrySets = parseLists(lists, getItemSelection(editor));\n      each(entrySets, function (entrySet) {\n        indentSelectedEntries(entrySet.entries, indentation);\n        before$1(entrySet.sourceList, composeEntries(editor, entrySet.entries));\n        remove(entrySet.sourceList);\n      });\n    };\n\n    var DOM$1 = global$6.DOM;\n    var splitList = function (editor, ul, li) {\n      var tmpRng, fragment, bookmarks, node, newBlock;\n      var removeAndKeepBookmarks = function (targetNode) {\n        global$5.each(bookmarks, function (node) {\n          targetNode.parentNode.insertBefore(node, li.parentNode);\n        });\n        DOM$1.remove(targetNode);\n      };\n      bookmarks = DOM$1.select('span[data-mce-type=\"bookmark\"]', ul);\n      newBlock = createTextBlock(editor, li);\n      tmpRng = DOM$1.createRng();\n      tmpRng.setStartAfter(li);\n      tmpRng.setEndAfter(ul);\n      fragment = tmpRng.extractContents();\n      for (node = fragment.firstChild; node; node = node.firstChild) {\n        if (node.nodeName === 'LI' && editor.dom.isEmpty(node)) {\n          DOM$1.remove(node);\n          break;\n        }\n      }\n      if (!editor.dom.isEmpty(fragment)) {\n        DOM$1.insertAfter(fragment, ul);\n      }\n      DOM$1.insertAfter(newBlock, ul);\n      if (NodeType.isEmpty(editor.dom, li.parentNode)) {\n        removeAndKeepBookmarks(li.parentNode);\n      }\n      DOM$1.remove(li);\n      if (NodeType.isEmpty(editor.dom, ul)) {\n        DOM$1.remove(ul);\n      }\n    };\n    var SplitList = { splitList: splitList };\n\n    var outdentDlItem = function (editor, item) {\n      if (is$1(item, 'dd')) {\n        mutate(item, 'dt');\n      } else if (is$1(item, 'dt')) {\n        parent(item).each(function (dl) {\n          return SplitList.splitList(editor, dl.dom(), item.dom());\n        });\n      }\n    };\n    var indentDlItem = function (item) {\n      if (is$1(item, 'dt')) {\n        mutate(item, 'dd');\n      }\n    };\n    var dlIndentation = function (editor, indentation, dlItems) {\n      if (indentation === 'Indent') {\n        each(dlItems, indentDlItem);\n      } else {\n        each(dlItems, function (item) {\n          return outdentDlItem(editor, item);\n        });\n      }\n    };\n\n    var selectionIndentation = function (editor, indentation) {\n      var lists = map(Selection.getSelectedListRoots(editor), Element.fromDom);\n      var dlItems = map(Selection.getSelectedDlItems(editor), Element.fromDom);\n      var isHandled = false;\n      if (lists.length || dlItems.length) {\n        var bookmark = editor.selection.getBookmark();\n        listsIndentation(editor, lists, indentation);\n        dlIndentation(editor, indentation, dlItems);\n        editor.selection.moveToBookmark(bookmark);\n        editor.selection.setRng(Range.normalizeRange(editor.selection.getRng()));\n        editor.nodeChanged();\n        isHandled = true;\n      }\n      return isHandled;\n    };\n    var indentListSelection = function (editor) {\n      return selectionIndentation(editor, 'Indent');\n    };\n    var outdentListSelection = function (editor) {\n      return selectionIndentation(editor, 'Outdent');\n    };\n    var flattenListSelection = function (editor) {\n      return selectionIndentation(editor, 'Flatten');\n    };\n\n    var updateListStyle = function (dom, el, detail) {\n      var type = detail['list-style-type'] ? detail['list-style-type'] : null;\n      dom.setStyle(el, 'list-style-type', type);\n    };\n    var setAttribs = function (elm, attrs) {\n      global$5.each(attrs, function (value, key) {\n        elm.setAttribute(key, value);\n      });\n    };\n    var updateListAttrs = function (dom, el, detail) {\n      setAttribs(el, detail['list-attributes']);\n      global$5.each(dom.select('li', el), function (li) {\n        setAttribs(li, detail['list-item-attributes']);\n      });\n    };\n    var updateListWithDetails = function (dom, el, detail) {\n      updateListStyle(dom, el, detail);\n      updateListAttrs(dom, el, detail);\n    };\n    var removeStyles = function (dom, element, styles) {\n      global$5.each(styles, function (style) {\n        var _a;\n        return dom.setStyle(element, (_a = {}, _a[style] = '', _a));\n      });\n    };\n    var getEndPointNode = function (editor, rng, start, root) {\n      var container, offset;\n      container = rng[start ? 'startContainer' : 'endContainer'];\n      offset = rng[start ? 'startOffset' : 'endOffset'];\n      if (container.nodeType === 1) {\n        container = container.childNodes[Math.min(offset, container.childNodes.length - 1)] || container;\n      }\n      if (!start && NodeType.isBr(container.nextSibling)) {\n        container = container.nextSibling;\n      }\n      while (container.parentNode !== root) {\n        if (NodeType.isTextBlock(editor, container)) {\n          return container;\n        }\n        if (/^(TD|TH)$/.test(container.parentNode.nodeName)) {\n          return container;\n        }\n        container = container.parentNode;\n      }\n      return container;\n    };\n    var getSelectedTextBlocks = function (editor, rng, root) {\n      var textBlocks = [], dom = editor.dom;\n      var startNode = getEndPointNode(editor, rng, true, root);\n      var endNode = getEndPointNode(editor, rng, false, root);\n      var block;\n      var siblings = [];\n      for (var node = startNode; node; node = node.nextSibling) {\n        siblings.push(node);\n        if (node === endNode) {\n          break;\n        }\n      }\n      global$5.each(siblings, function (node) {\n        if (NodeType.isTextBlock(editor, node)) {\n          textBlocks.push(node);\n          block = null;\n          return;\n        }\n        if (dom.isBlock(node) || NodeType.isBr(node)) {\n          if (NodeType.isBr(node)) {\n            dom.remove(node);\n          }\n          block = null;\n          return;\n        }\n        var nextSibling = node.nextSibling;\n        if (global$4.isBookmarkNode(node)) {\n          if (NodeType.isTextBlock(editor, nextSibling) || !nextSibling && node.parentNode === root) {\n            block = null;\n            return;\n          }\n        }\n        if (!block) {\n          block = dom.create('p');\n          node.parentNode.insertBefore(block, node);\n          textBlocks.push(block);\n        }\n        block.appendChild(node);\n      });\n      return textBlocks;\n    };\n    var hasCompatibleStyle = function (dom, sib, detail) {\n      var sibStyle = dom.getStyle(sib, 'list-style-type');\n      var detailStyle = detail ? detail['list-style-type'] : '';\n      detailStyle = detailStyle === null ? '' : detailStyle;\n      return sibStyle === detailStyle;\n    };\n    var applyList = function (editor, listName, detail) {\n      if (detail === void 0) {\n        detail = {};\n      }\n      var rng = editor.selection.getRng(true);\n      var bookmark;\n      var listItemName = 'LI';\n      var root = Selection.getClosestListRootElm(editor, editor.selection.getStart(true));\n      var dom = editor.dom;\n      if (dom.getContentEditable(editor.selection.getNode()) === 'false') {\n        return;\n      }\n      listName = listName.toUpperCase();\n      if (listName === 'DL') {\n        listItemName = 'DT';\n      }\n      bookmark = Bookmark.createBookmark(rng);\n      global$5.each(getSelectedTextBlocks(editor, rng, root), function (block) {\n        var listBlock, sibling;\n        sibling = block.previousSibling;\n        if (sibling && NodeType.isListNode(sibling) && sibling.nodeName === listName && hasCompatibleStyle(dom, sibling, detail)) {\n          listBlock = sibling;\n          block = dom.rename(block, listItemName);\n          sibling.appendChild(block);\n        } else {\n          listBlock = dom.create(listName);\n          block.parentNode.insertBefore(listBlock, block);\n          listBlock.appendChild(block);\n          block = dom.rename(block, listItemName);\n        }\n        removeStyles(dom, block, [\n          'margin',\n          'margin-right',\n          'margin-bottom',\n          'margin-left',\n          'margin-top',\n          'padding',\n          'padding-right',\n          'padding-bottom',\n          'padding-left',\n          'padding-top'\n        ]);\n        updateListWithDetails(dom, listBlock, detail);\n        mergeWithAdjacentLists(editor.dom, listBlock);\n      });\n      editor.selection.setRng(Bookmark.resolveBookmark(bookmark));\n    };\n    var isValidLists = function (list1, list2) {\n      return list1 && list2 && NodeType.isListNode(list1) && list1.nodeName === list2.nodeName;\n    };\n    var hasSameListStyle = function (dom, list1, list2) {\n      var targetStyle = dom.getStyle(list1, 'list-style-type', true);\n      var style = dom.getStyle(list2, 'list-style-type', true);\n      return targetStyle === style;\n    };\n    var hasSameClasses = function (elm1, elm2) {\n      return elm1.className === elm2.className;\n    };\n    var shouldMerge = function (dom, list1, list2) {\n      return isValidLists(list1, list2) && hasSameListStyle(dom, list1, list2) && hasSameClasses(list1, list2);\n    };\n    var mergeWithAdjacentLists = function (dom, listBlock) {\n      var sibling, node;\n      sibling = listBlock.nextSibling;\n      if (shouldMerge(dom, listBlock, sibling)) {\n        while (node = sibling.firstChild) {\n          listBlock.appendChild(node);\n        }\n        dom.remove(sibling);\n      }\n      sibling = listBlock.previousSibling;\n      if (shouldMerge(dom, listBlock, sibling)) {\n        while (node = sibling.lastChild) {\n          listBlock.insertBefore(node, listBlock.firstChild);\n        }\n        dom.remove(sibling);\n      }\n    };\n    var updateList = function (dom, list, listName, detail) {\n      if (list.nodeName !== listName) {\n        var newList = dom.rename(list, listName);\n        updateListWithDetails(dom, newList, detail);\n      } else {\n        updateListWithDetails(dom, list, detail);\n      }\n    };\n    var toggleMultipleLists = function (editor, parentList, lists, listName, detail) {\n      if (parentList.nodeName === listName && !hasListStyleDetail(detail)) {\n        flattenListSelection(editor);\n      } else {\n        var bookmark = Bookmark.createBookmark(editor.selection.getRng(true));\n        global$5.each([parentList].concat(lists), function (elm) {\n          updateList(editor.dom, elm, listName, detail);\n        });\n        editor.selection.setRng(Bookmark.resolveBookmark(bookmark));\n      }\n    };\n    var hasListStyleDetail = function (detail) {\n      return 'list-style-type' in detail;\n    };\n    var toggleSingleList = function (editor, parentList, listName, detail) {\n      if (parentList === editor.getBody()) {\n        return;\n      }\n      if (parentList) {\n        if (parentList.nodeName === listName && !hasListStyleDetail(detail)) {\n          flattenListSelection(editor);\n        } else {\n          var bookmark = Bookmark.createBookmark(editor.selection.getRng(true));\n          updateListWithDetails(editor.dom, parentList, detail);\n          mergeWithAdjacentLists(editor.dom, editor.dom.rename(parentList, listName));\n          editor.selection.setRng(Bookmark.resolveBookmark(bookmark));\n        }\n      } else {\n        applyList(editor, listName, detail);\n      }\n    };\n    var toggleList = function (editor, listName, detail) {\n      var parentList = Selection.getParentList(editor);\n      var selectedSubLists = Selection.getSelectedSubLists(editor);\n      detail = detail ? detail : {};\n      if (parentList && selectedSubLists.length > 0) {\n        toggleMultipleLists(editor, parentList, selectedSubLists, listName, detail);\n      } else {\n        toggleSingleList(editor, parentList, listName, detail);\n      }\n    };\n    var ToggleList = {\n      toggleList: toggleList,\n      mergeWithAdjacentLists: mergeWithAdjacentLists\n    };\n\n    var DOM$2 = global$6.DOM;\n    var normalizeList = function (dom, ul) {\n      var sibling;\n      var parentNode = ul.parentNode;\n      if (parentNode.nodeName === 'LI' && parentNode.firstChild === ul) {\n        sibling = parentNode.previousSibling;\n        if (sibling && sibling.nodeName === 'LI') {\n          sibling.appendChild(ul);\n          if (NodeType.isEmpty(dom, parentNode)) {\n            DOM$2.remove(parentNode);\n          }\n        } else {\n          DOM$2.setStyle(parentNode, 'listStyleType', 'none');\n        }\n      }\n      if (NodeType.isListNode(parentNode)) {\n        sibling = parentNode.previousSibling;\n        if (sibling && sibling.nodeName === 'LI') {\n          sibling.appendChild(ul);\n        }\n      }\n    };\n    var normalizeLists = function (dom, element) {\n      global$5.each(global$5.grep(dom.select('ol,ul', element)), function (ul) {\n        normalizeList(dom, ul);\n      });\n    };\n    var NormalizeLists = {\n      normalizeList: normalizeList,\n      normalizeLists: normalizeLists\n    };\n\n    var findNextCaretContainer = function (editor, rng, isForward, root) {\n      var node = rng.startContainer;\n      var offset = rng.startOffset;\n      var nonEmptyBlocks, walker;\n      if (node.nodeType === 3 && (isForward ? offset < node.data.length : offset > 0)) {\n        return node;\n      }\n      nonEmptyBlocks = editor.schema.getNonEmptyElements();\n      if (node.nodeType === 1) {\n        node = global$1.getNode(node, offset);\n      }\n      walker = new global$2(node, root);\n      if (isForward) {\n        if (NodeType.isBogusBr(editor.dom, node)) {\n          walker.next();\n        }\n      }\n      while (node = walker[isForward ? 'next' : 'prev2']()) {\n        if (node.nodeName === 'LI' && !node.hasChildNodes()) {\n          return node;\n        }\n        if (nonEmptyBlocks[node.nodeName]) {\n          return node;\n        }\n        if (node.nodeType === 3 && node.data.length > 0) {\n          return node;\n        }\n      }\n    };\n    var hasOnlyOneBlockChild = function (dom, elm) {\n      var childNodes = elm.childNodes;\n      return childNodes.length === 1 && !NodeType.isListNode(childNodes[0]) && dom.isBlock(childNodes[0]);\n    };\n    var unwrapSingleBlockChild = function (dom, elm) {\n      if (hasOnlyOneBlockChild(dom, elm)) {\n        dom.remove(elm.firstChild, true);\n      }\n    };\n    var moveChildren = function (dom, fromElm, toElm) {\n      var node, targetElm;\n      targetElm = hasOnlyOneBlockChild(dom, toElm) ? toElm.firstChild : toElm;\n      unwrapSingleBlockChild(dom, fromElm);\n      if (!NodeType.isEmpty(dom, fromElm, true)) {\n        while (node = fromElm.firstChild) {\n          targetElm.appendChild(node);\n        }\n      }\n    };\n    var mergeLiElements = function (dom, fromElm, toElm) {\n      var node, listNode;\n      var ul = fromElm.parentNode;\n      if (!NodeType.isChildOfBody(dom, fromElm) || !NodeType.isChildOfBody(dom, toElm)) {\n        return;\n      }\n      if (NodeType.isListNode(toElm.lastChild)) {\n        listNode = toElm.lastChild;\n      }\n      if (ul === toElm.lastChild) {\n        if (NodeType.isBr(ul.previousSibling)) {\n          dom.remove(ul.previousSibling);\n        }\n      }\n      node = toElm.lastChild;\n      if (node && NodeType.isBr(node) && fromElm.hasChildNodes()) {\n        dom.remove(node);\n      }\n      if (NodeType.isEmpty(dom, toElm, true)) {\n        dom.$(toElm).empty();\n      }\n      moveChildren(dom, fromElm, toElm);\n      if (listNode) {\n        toElm.appendChild(listNode);\n      }\n      var contains = contains$1(Element.fromDom(toElm), Element.fromDom(fromElm));\n      var nestedLists = contains ? dom.getParents(fromElm, NodeType.isListNode, toElm) : [];\n      dom.remove(fromElm);\n      each(nestedLists, function (list) {\n        if (NodeType.isEmpty(dom, list) && list !== dom.getRoot()) {\n          dom.remove(list);\n        }\n      });\n    };\n    var mergeIntoEmptyLi = function (editor, fromLi, toLi) {\n      editor.dom.$(toLi).empty();\n      mergeLiElements(editor.dom, fromLi, toLi);\n      editor.selection.setCursorLocation(toLi);\n    };\n    var mergeForward = function (editor, rng, fromLi, toLi) {\n      var dom = editor.dom;\n      if (dom.isEmpty(toLi)) {\n        mergeIntoEmptyLi(editor, fromLi, toLi);\n      } else {\n        var bookmark = Bookmark.createBookmark(rng);\n        mergeLiElements(dom, fromLi, toLi);\n        editor.selection.setRng(Bookmark.resolveBookmark(bookmark));\n      }\n    };\n    var mergeBackward = function (editor, rng, fromLi, toLi) {\n      var bookmark = Bookmark.createBookmark(rng);\n      mergeLiElements(editor.dom, fromLi, toLi);\n      var resolvedBookmark = Bookmark.resolveBookmark(bookmark);\n      editor.selection.setRng(resolvedBookmark);\n    };\n    var backspaceDeleteFromListToListCaret = function (editor, isForward) {\n      var dom = editor.dom, selection = editor.selection;\n      var selectionStartElm = selection.getStart();\n      var root = Selection.getClosestListRootElm(editor, selectionStartElm);\n      var li = dom.getParent(selection.getStart(), 'LI', root);\n      var ul, rng, otherLi;\n      if (li) {\n        ul = li.parentNode;\n        if (ul === editor.getBody() && NodeType.isEmpty(dom, ul)) {\n          return true;\n        }\n        rng = Range.normalizeRange(selection.getRng(true));\n        otherLi = dom.getParent(findNextCaretContainer(editor, rng, isForward, root), 'LI', root);\n        if (otherLi && otherLi !== li) {\n          if (isForward) {\n            mergeForward(editor, rng, otherLi, li);\n          } else {\n            mergeBackward(editor, rng, li, otherLi);\n          }\n          return true;\n        } else if (!otherLi) {\n          if (!isForward) {\n            flattenListSelection(editor);\n            return true;\n          }\n        }\n      }\n      return false;\n    };\n    var removeBlock = function (dom, block, root) {\n      var parentBlock = dom.getParent(block.parentNode, dom.isBlock, root);\n      dom.remove(block);\n      if (parentBlock && dom.isEmpty(parentBlock)) {\n        dom.remove(parentBlock);\n      }\n    };\n    var backspaceDeleteIntoListCaret = function (editor, isForward) {\n      var dom = editor.dom;\n      var selectionStartElm = editor.selection.getStart();\n      var root = Selection.getClosestListRootElm(editor, selectionStartElm);\n      var block = dom.getParent(selectionStartElm, dom.isBlock, root);\n      if (block && dom.isEmpty(block)) {\n        var rng = Range.normalizeRange(editor.selection.getRng(true));\n        var otherLi_1 = dom.getParent(findNextCaretContainer(editor, rng, isForward, root), 'LI', root);\n        if (otherLi_1) {\n          editor.undoManager.transact(function () {\n            removeBlock(dom, block, root);\n            ToggleList.mergeWithAdjacentLists(dom, otherLi_1.parentNode);\n            editor.selection.select(otherLi_1, true);\n            editor.selection.collapse(isForward);\n          });\n          return true;\n        }\n      }\n      return false;\n    };\n    var backspaceDeleteCaret = function (editor, isForward) {\n      return backspaceDeleteFromListToListCaret(editor, isForward) || backspaceDeleteIntoListCaret(editor, isForward);\n    };\n    var backspaceDeleteRange = function (editor) {\n      var selectionStartElm = editor.selection.getStart();\n      var root = Selection.getClosestListRootElm(editor, selectionStartElm);\n      var startListParent = editor.dom.getParent(selectionStartElm, 'LI,DT,DD', root);\n      if (startListParent || Selection.getSelectedListItems(editor).length > 0) {\n        editor.undoManager.transact(function () {\n          editor.execCommand('Delete');\n          NormalizeLists.normalizeLists(editor.dom, editor.getBody());\n        });\n        return true;\n      }\n      return false;\n    };\n    var backspaceDelete = function (editor, isForward) {\n      return editor.selection.isCollapsed() ? backspaceDeleteCaret(editor, isForward) : backspaceDeleteRange(editor);\n    };\n    var setup = function (editor) {\n      editor.on('keydown', function (e) {\n        if (e.keyCode === global$3.BACKSPACE) {\n          if (backspaceDelete(editor, false)) {\n            e.preventDefault();\n          }\n        } else if (e.keyCode === global$3.DELETE) {\n          if (backspaceDelete(editor, true)) {\n            e.preventDefault();\n          }\n        }\n      });\n    };\n    var Delete = {\n      setup: setup,\n      backspaceDelete: backspaceDelete\n    };\n\n    var get = function (editor) {\n      return {\n        backspaceDelete: function (isForward) {\n          Delete.backspaceDelete(editor, isForward);\n        }\n      };\n    };\n    var Api = { get: get };\n\n    var queryListCommandState = function (editor, listName) {\n      return function () {\n        var parentList = editor.dom.getParent(editor.selection.getStart(), 'UL,OL,DL');\n        return parentList && parentList.nodeName === listName;\n      };\n    };\n    var register = function (editor) {\n      editor.on('BeforeExecCommand', function (e) {\n        var cmd = e.command.toLowerCase();\n        if (cmd === 'indent') {\n          indentListSelection(editor);\n        } else if (cmd === 'outdent') {\n          outdentListSelection(editor);\n        }\n      });\n      editor.addCommand('InsertUnorderedList', function (ui, detail) {\n        ToggleList.toggleList(editor, 'UL', detail);\n      });\n      editor.addCommand('InsertOrderedList', function (ui, detail) {\n        ToggleList.toggleList(editor, 'OL', detail);\n      });\n      editor.addCommand('InsertDefinitionList', function (ui, detail) {\n        ToggleList.toggleList(editor, 'DL', detail);\n      });\n      editor.addCommand('RemoveList', function () {\n        flattenListSelection(editor);\n      });\n      editor.addQueryStateHandler('InsertUnorderedList', queryListCommandState(editor, 'UL'));\n      editor.addQueryStateHandler('InsertOrderedList', queryListCommandState(editor, 'OL'));\n      editor.addQueryStateHandler('InsertDefinitionList', queryListCommandState(editor, 'DL'));\n    };\n    var Commands = { register: register };\n\n    var shouldIndentOnTab = function (editor) {\n      return editor.getParam('lists_indent_on_tab', true);\n    };\n    var Settings = { shouldIndentOnTab: shouldIndentOnTab };\n\n    var setupTabKey = function (editor) {\n      editor.on('keydown', function (e) {\n        if (e.keyCode !== global$3.TAB || global$3.metaKeyPressed(e)) {\n          return;\n        }\n        editor.undoManager.transact(function () {\n          if (e.shiftKey ? outdentListSelection(editor) : indentListSelection(editor)) {\n            e.preventDefault();\n          }\n        });\n      });\n    };\n    var setup$1 = function (editor) {\n      if (Settings.shouldIndentOnTab(editor)) {\n        setupTabKey(editor);\n      }\n      Delete.setup(editor);\n    };\n    var Keyboard = { setup: setup$1 };\n\n    var findIndex = function (list, predicate) {\n      for (var index = 0; index < list.length; index++) {\n        var element = list[index];\n        if (predicate(element)) {\n          return index;\n        }\n      }\n      return -1;\n    };\n    var listState = function (editor, listName) {\n      return function (e) {\n        var ctrl = e.control;\n        editor.on('NodeChange', function (e) {\n          var tableCellIndex = findIndex(e.parents, NodeType.isTableCellNode);\n          var parents = tableCellIndex !== -1 ? e.parents.slice(0, tableCellIndex) : e.parents;\n          var lists = global$5.grep(parents, NodeType.isListNode);\n          ctrl.active(lists.length > 0 && lists[0].nodeName === listName);\n        });\n      };\n    };\n    var register$1 = function (editor) {\n      var hasPlugin = function (editor, plugin) {\n        var plugins = editor.settings.plugins ? editor.settings.plugins : '';\n        return global$5.inArray(plugins.split(/[ ,]/), plugin) !== -1;\n      };\n      if (!hasPlugin(editor, 'advlist')) {\n        editor.addButton('numlist', {\n          active: false,\n          title: 'Numbered list',\n          cmd: 'InsertOrderedList',\n          onPostRender: listState(editor, 'OL')\n        });\n        editor.addButton('bullist', {\n          active: false,\n          title: 'Bullet list',\n          cmd: 'InsertUnorderedList',\n          onPostRender: listState(editor, 'UL')\n        });\n      }\n      editor.addButton('indent', {\n        icon: 'indent',\n        title: 'Increase indent',\n        cmd: 'Indent'\n      });\n    };\n    var Buttons = { register: register$1 };\n\n    global.add('lists', function (editor) {\n      Keyboard.setup(editor);\n      Buttons.register(editor);\n      Commands.register(editor);\n      return Api.get(editor);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}(window));\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tinymce/plugins/lists/plugin.js\n// module id = Z3om\n// module chunks = 20","// Exports the \"lists\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/lists')\n//   ES2015:\n//     import 'tinymce/plugins/lists'\nrequire('./plugin.js');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tinymce/plugins/lists/index.js\n// module id = f85y\n// module chunks = 20"],"sourceRoot":""}