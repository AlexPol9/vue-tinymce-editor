{"version":3,"sources":["webpack:///static/js/45.61f5634d7b8ffe8fce37.js","webpack:///./~/tinymce/themes/modern/theme.js"],"names":["webpackJsonp","o5MN","module","exports","domGlobals","calculateRelativePosition","ctrl","targetElm","rel","ctrlElm","pos","x","y","selfW","selfH","targetW","targetH","viewport","size","getWindowViewPort","funcs","getPos","UiContainer","getUiContainer","isFixed","isStatic","document","body","getEl","getSize","width","height","split","Math","round","w","h","noop$1","ClassList","onchange","this","cls","_map","prefix","unique","array","item","uniqueItems","i","length","__checked","push","isNode","node","nodeType","isEqual","a","b","k","checked","global$2","isArray","getEventDispatcher","obj","_eventDispatcher","global$b","scope","toggleEvent","name","state","isNative","_nativeEvents","get","bindPendingEvents","eventCtrl","delegate","e","control","getParentCtrl","target","fire","type","mouseLeaveHandler","eventRootCtrl","_lastHoverCtrl","parents","each","mouseEnterHandler","lastParents","lastCtrl","idx","toArray","reverse","fixWheelEvent","preventDefault","deltaY","wheelDelta","wheelDeltaX","deltaX","detail","l","nativeEvents","unshift","_eventsRoot","eventRootDelegates","_delegates","hasWheelEventSupport","_hasMouseEnter","global$9","on","hasMouseWheelEventSupport","KeyboardNavigation","settings","isElement","getRole","elm","focusedElement","getAttribute","getParentRole","role","parent","parentNode","getAriaProp","isTextInputElement","tagName","toUpperCase","canFocus","hidden","hasTabstopData","test","getFocusElements","collect","style","display","disabled","elements","childNodes","root","getNavigationRoot","targetControl","navigationRoot","controls","focusedControl","ariaRoot","focusFirst","focusElements","ariaRemember","moveFocusToIndex","lastAriaIndex","focus","moveFocus","dir","left","submenu","cancel","right","parentRole","enter","up","down","key","tab","shiftKey","aria","activeElement","ex","handleNonTabOrEscEvent","handler","isDefaultPrevented","keyCode","getDocumentSize","doc","documentElement","scrollWidth","clientWidth","offsetWidth","scrollHeight","clientHeight","offsetHeight","max","updateWithTouchData","keys","changedTouches","DragHelper","id","$eventOverlay","downButton","start","stop","drag","startX","startY","handleElement","getElementById","handle","handleElm","cursor","docSize","button","screenX","screenY","window","getComputedStyle","getPropertyValue","runtimeStyle","css","position","top","zIndex","opacity","appendTo","off","remove","destroy","isChildOf","skipOrHidePanels","visiblePanels","panel","clickCtrl","autohide","hide","bindDocumentClickHandler","documentClickHandler","bindDocumentScrollHandler","documentScrollHandler","repositionPanel","bindWindowResizeHandler","windowResizeHandler","docElm_1","clientWidth_1","clientHeight_1","all","FloatPanel","hideAll","toggleFixedChildPanels","fixed","moveBy","repaint","scrollY","getViewPort","autofix","_autoFixY","layoutRect","addRemove","add","topModal","zOrder","splice","modal","modalBlockEl","classPrefix","getContainerElm","removeChild","hasModal","currentZIndex","removeVisiblePanel","Throbber","inline","timer","self","Control$1","show","time","callback","render","append","global$7","setTimeout","child","lastChild","clearTimeout","className","indexOf","NotificationManagerImpl","editor","getEditorContainer","getElement","getContentAreaContainer","getContainerWidth","container","prePositionNotifications","notifications","notification","moveTo","positionNotifications","firstItem","slice","moveRel","index","reposition","open","args","closeCallback","extendedArgs","extend","maxWidth","notif","Notification","timeout","close","renderTo","getArgs","toggleFullScreenState","contentValue","global$8","overrideViewPort","createElement","setAttribute","getElementsByTagName","appendChild","oldMetaValue","toggleBodyFullScreenClasses","checkFullscreenWindows","removeClass","windows","_fullscreen","WindowManagerImpl","params","win","title","url","file","parseInt","items","defaults","bodyType","data","callbacks","commands","buttons","text","subtype","onclick","find","submit","Window","value","features","reflow","alert","message","choiceCallback","MessageBox","confirm","getParams","setParams","isChildOf$1","createOptions","options","strOptions","constrain","minVal","maxVal","setAriaProp","el","updateSliderHandle","maxHandlePos","shortSizeName","sizeName","stylePosName","styleValue","handleEl","orientation","_minValue","_maxValue","previewFilter","Theme","global","tinymce","util","Tools","resolve","global$1","isBrandingEnabled","getParam","hasMenubar","getMenubar","hasStatusbar","getToolbarSize","isReadOnly","getFixedToolbarContainer","getInlineToolbarPositionHandler","getMenu","getRemovedMenuItems","getMinWidth","getMinHeight","getMaxWidth","getMaxHeight","isSkinDisabled","skin","isInline","getResize","resize","getSkinUrl","skinUrl","skin_url","skinName","documentBaseURI","toAbsolute","baseURL","getIndexedToolbars","defaultToolbar","toolbars","toolbar","mainToolbar","getToolbars","grep","global$3","global$4","global$5","fireSkinLoaded","fireResizeEditor","fireBeforeRenderUI","Events","addKeys","shortcuts","A11y","global$6","noop","constant","never","always","none","NONE","eq","o","isNone","call","thunk","n","me","fold","s","is","isSome","getOr","getOrThunk","getOrDie","msg","Error","getOrNull","getOrUndefined","undefined","or","orThunk","map","bind","exists","forall","filter","equals","equals_","toString","Object","freeze","some","constant_a","f","v","elementEq","from","Option","getUiContainerDelta","uiContainer","DOM","getStyle","containerPos","dx","scrollLeft","dy","scrollTop","setUiContainer","select","ui_container","getRoot","inheritUiContainer","fromCtrl","toCtrl","createToolbar","buttonGroup","toolbarItems","itemName","bindSelectorChanged","selection","stateSelector","selectorChanged","active","disabledStateSelector","create","initialized","layout","createToolbars","addToolbar","classes","Toolbar","toClientRect","geomRect","bottom","hideAllFloatingPanels","contextToolbars","movePanelTo","togglePositionClass","relPos","predicate","substr","t","toggle","r","userConstrain","elementRect","contentAreaRect","panelRect","addContextualToolbars","scrollContainer","getContextToolbars","getElementRect","targetRect","dom","getRect","nodeName","ownerDocument","match","shouldShow","relRect","testPositions","smallElementWidthThreshold","removed","element","getBody","delta","clientRect","getBoundingClientRect","getDoc","controlSelection","isResizable","inflate","findBestRelativePosition","clamp","relativePosition","intersect","pos1","pos2","repositionHandler","execute","findFrontMostMatch","getNode","requestAnimationFrame","bindScrollEvent","reposition_1","uiContainer_1","getScrollContainer","getWin","unbind","showContextToolbar","ariaLabel","direction","align","border","oncancel","hideAllContextToolbars","parentsAndSelf","$","setEditorTimeout","ContextToolbars","typeOf","Array","prototype","isPrototypeOf","constructor","String","isType","isFunction","isNumber","nativeSlice","nativeIndexOf","nativePush","rawIndexOf","ts","xs","pred","len","foldl","acc","findIndex","flatten","apply","defaultMenus","edit","view","insert","format","tools","table","help","delimiterMenuNamePair","createMenuNameItemPair","menuItem","hasItemName","namedMenuItems","namedMenuItem","isSeparator","cleanupMenu","removedMenuItems","menuItemsPass1","hasOwnProperty","menuItemsPass2","createMenu","editorMenuItems","menus","context","menuButton","menu","isUserDefined","separator","prependToContext","getDefaultMenubar","defaultMenuBar","createMenuButtons","menuButtons","makeMap","menubar","enabledMenuNames","menuItems","Menubar","DOM$1","resizeTo","containerElm","iframeElm","containerSize","iframeSize","getContainer","firstChild","min","setStyle","resizeBy","dw","dh","Resize","api","trigger","sidebar","callbackName","hidePanels","sidebars","visible","deactivateButtons","findSidebar","showPanel","btnCtrl","html","prepend","isModernBrowser","ie","hasSidebar","createSidebar","icon","image","tooltip","Sidebar","fireSkinLoaded$1","done","_skinLoaded","SkinLoaded","DOM$2","switchMode","mode","editArea","editAreaContainer","theme","resizeHandleCtrl","startSize","skinUiCss","styleSheetLoader","load","onResizeStart","onResize","translate","brandingLabel","renderBefore","targetNode","setMode","iframeContainer","editorContainer","Iframe","count","attrs","children","setAttribs","innerHTML","createFragment","getWindowSize","rect","addClass","hasClass","toggleClass","getRuntimeStyle","innerHtml","setHTML","getUiContainerViewPort","customUiContainer","pageXOffset","pageYOffset","innerWidth","innerHeight","getViewPortRect","Movable","testMoveRel","rels","viewPortRect","constrainToViewport","global$a","BoxUtils","parseBox","measureBox","defaultView","computedStyle","replace","currentStyle","getSide","val","parseFloat","isNaN","contains","_change","curState","clsValue","Collection","Collection$1","proto","expression","chunker","whiteSpace","Selector","init","selector","compileNameFilter","toLowerCase","compileIdFilter","_name","compileClassesFilter","compileAttrFilter","cmp","check","compilePsuedoFilter","notSelectors","exec","parseChunks","compile","filters","direct","parts","pseudo","selectors","extra","matches","_selectors","si","sl","fi","fl","siblings","set","arguments","prop","Collection$2","Binding","model","otherModel","otherName","bindings","fromSelfToOther","fromOtherToSelf","_bindings","animationFrameRequested","Control","global$c","ObservableObject","Mixins","oldValue","has","dirtyCtrls","ReflowQueue","_layout","_id","idCounter","proto$1","Statics","isRtl","rtl","applyClasses","defaultClasses","Defaults","_aria","_elmCache","borderBox","paddingBox","padding","marginBox","margin","Properties","lookup","controlIdLookup","initLayoutRect","minWidth","minHeight","autoResize","startMinWidth","startMinHeight","initialSize","deltaW","deltaH","maxW","maxH","maxHeight","_layoutRect","contentW","contentH","innerW","innerH","minW","minH","scrollW","_lastLayoutRect","newRect","lastLayoutRect","deltaWidth","deltaHeight","repaintControls","curRect","bodyStyle","bodyElm","borderW","borderH","lastRepaintRect","createRange","_lastRepaintRect","_hasBody","updateLayoutRect","_lastRect","action","bubble","isPropagationStopped","hasEventListeners","next","parentControls","prev","$el","suffix","blur","ariaTarget","encode","charCodeAt","before","after","newItems","renderHtml","postRender","preRender","box","parentEventsRoot","cssText","bindStates","parentCtrl","scrollIntoView","parentWidth","parentHeight","parentElm","rootElm","offsetLeft","offsetTop","offsetParent","rootControl","selectorCache","Container","_super","_items","bodyClasses","containerCls","keyboard","focusCtrl","keyboardNav","statusbar","autofocus","oldItem","newItem","ctrlItems","defaultType","renderNew","hasChildNodes","concat","curItems","beforeItems","afterItems","fromJSON","toJSON","recalc","lastRect","Scrollable","renderScroll","repaintScroll","repaintAxis","axisName","posName","contentSizeName","hasScroll","ax","scrollBarElm","scrollThumbElm","scrollSize","ratio","posNameLower","sizeNameLower","hasScrollH","hasScrollV","autoScroll","_hasScroll","addScrollAxis","deltaPosName","scrollStart","axisId","draghelper","bodyEl","Panel","_preBodyHtml","Resizable","resizeToContent","$modalBlockEl_1","prefix_1","popover","describedBy","bodyRole","isFixed$1","inlineToolbarContainer","render$1","fixedToolbarContainer","_fixed","bodyPos","scrollContainerPos","nodeChanged","content_editable","Inline","setup","throbber","ProgressState","renderUI","contentCSS","Render","Tooltip","Widget","tooltips","_tooltip","disable","Progress","setValue","updateLiveRegion","ctx","textContent","progressBar","color","closeButton","notificationStyle","spacing","pack","closeClass","needsRecalc","headerW","headEl","headerH","headerHtml","footerHtml","fullscreen","slowRendering","_timer","Date","getTime","_initial","startPos","dragHelper","getContentWindow","ifr","contentWindow","desktop","lastSize_1","setInterval","multiline","OK","OK_CANCEL","YES_NO","YES_NO_CANCEL","msgBox","createButton","status","primary","onClick","onPostRender","onClose","onCancel","getNotificationManagerImpl","getWindowManagerImpl","ThemeApi","Layout","firstControlClass","lastControlClass","containerClass","firstClass","lastClass","lastItem","controlClass","AbsoluteLayout","Button","btnStyle","btnElm","ariaPressed","textHtml","getSelection","setButtonText","$span","textCls","iconElm","insertBefore","BrowseButton","multiple","accept","input","files","stopPropagation","click","ButtonGroup","Checkbox","global$d","ComboBox","subinput","values","showMenu","newValue","statusLevel","statusMessage","lineHeight","openElm","innerPadding","inputElm","documentMode","openBtnHtml","extraAttrs","statusHtml","spellcheck","maxLength","placeholder","showAutoComplete","term","hideMenu","previewUrl","statusIconElm","focusIdx","DOWN","UP","ColorBox","onaction","repaintColor","background","PanelButton","panelSettings","hidePanel","rtlRels","ltrRels","popoverAlign","isTop","DOM$3","ColorButton","_color","backgroundColor","resetColor","onClickHandler","getParent","stopImmediatePropagation","global$e","ColorPicker","event","pageX","pageY","updateColor","hsv","hueUpdate","hue","huePointElm","svPointElm","svRootElm","toHex","parse","updateSaturationAndValue","updateHue","hueRootElm","toHsv","_repaint","_svdraghelper","_hdraghelper","rgb","toRgb","_rendered","hueHtml","stops","gradientPrefix","stopsList","DropZone","cfg","hidefocus","outerHTML","toggleDragClass","re","RegExp","join","dataTransfer","Path","delimiter","row","_getDataPathHtml","ElementPath","isHidden","elementpath","outParents","FormItem","flex","Form","labelGap","formItemDefaults","formItem","label","forId","recalcLabels","maxLabelWidth","labels","labelGapCalc","labelCtrl","labelWidth","FieldSet","unique$1","generate","date","random","floor","fromHtml","div","console","error","fromDom","fromTag","tag","fromText","createTextNode","fromPoint","docElm","elementFromPoint","Element","DOCUMENT","Node","ATTRIBUTE_NODE","CDATA_SECTION_NODE","COMMENT_NODE","DOCUMENT_NODE","ELEMENT","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","ELEMENT_NODE","Global","TEXT_NODE","PROCESSING_INSTRUCTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","NOTATION_NODE","Function","path","p","unsafe","actual","Global$1","compareDocumentPosition","documentPositionPreceding","DOCUMENT_POSITION_PRECEDING","documentPositionContainedBy","DOCUMENT_POSITION_CONTAINED_BY","firstMatch","regexes","find$1","agent","major","minor","group","Number","nu","detect","versionRegexes","cleanedAgent","unknown","Version","isBrowser","current","unknown$1","nu$1","version","info","isEdge","isChrome","isIE","isOpera","isFirefox","isSafari","Browser","edge","chrome","opera","firefox","safari","isOS","unknown$2","nu$2","isWindows","isiOS","isAndroid","isOSX","isLinux","isSolaris","isFreeBSD","OperatingSystem","ios","android","linux","osx","solaris","freebsd","DeviceType","os","browser","userAgent","isiPad","isiPhone","isAndroid3","isAndroid4","isTablet","isTouch","isPhone","iOSwebview","isWebView","detect$1","candidates","candidate","search","detectBrowser","browsers","detectOs","oses","UaString","str","normalVersionRegex","checkContains","uastring","PlatformInfo","detect$2","deviceType","PlatformDetection","detect$3","called","_i","navigator","PlatformDetection$1","ELEMENT$1","DOCUMENT$1","bypassSelector","childElementCount","base","querySelectorAll","one","querySelector","regularContains","e1","e2","d1","d2","ieContains","descendants","fields","trim","hasContentEditableState","contentEditable","isContentEditableTrue","isContentEditableFalse","level","attach","isChildOfContentEditableTrue","getElementText","innerText","getOrGenerateId","isAnchor","isValidAnchor","isEditable","isHeader","isValidHeader","getLevel","headerTarget","headerId","anchorTarget","anchorId","anchorText","getHeaderTargets","elms","getAnchorTargets","getTargetElements","hasTitle","find$2","LinkTargets","getActiveEditor","activeEditor","history","clearHistory","toMenuItem","raw","toMenuItems","targets","staticMenuItem","isUniqueUrl","getSetting","editorSettings","defaultValue","createMenuItems","fileType","fromHistoryMenuItems","historyItems","uniqueHistory","fromMenuItems","filteredTargets","typeahead_urls","filterByQuery","anchorMenuItems","topAnchor","bottomAchor","addToHistory","lowerCaseTerm","result","getTitle","linkDetails","setupAutoCompleteHandler","autocomplete","linkTargets","meta","alt","statusToUiState","setupLinkValidatorHandler","validatorHandler","filepicker_validator_handler","validateUrl_1","uiState","FilePicker","actionCallback","fileBrowserCallback","fileBrowserCallbackTypes","filetype","file_picker_types","file_browser_callback_types","file_picker_callback","file_browser_callback","FitLayout","contLayoutRect","FlexLayout","contPaddingBox","contSettings","totalFlex","availableSpace","ctrlLayoutRect","ctrlSettings","maxSize","maxAlignEndPos","minSizeName","maxSizeName","beforeName","innerSizeName","deltaSizeName","alignAxisName","alignInnerSizeName","alignSizeName","alignMinSizeName","alignBeforeName","alignAfterName","alignDeltaSizeName","alignContentSizeName","maxSizeItems","maxFlexSize","FlowLayout","endClass","descendant","toggleFormat","fmt","execCommand","addFormatChangedListener","changed","formatter","formatChanged","postRenderFormatToggle","register","alignFormats","alignMenuItems","addMenuItem","addButton","onShowMenu","formatName","alignleft","aligncenter","alignright","alignjustify","alignnone","cmd","Align","getFirstFont","fontFamily","findMatchingValue","font","createFontNameListBoxChangeHandler","queryCommandValue","createFormats","formats","getFontItems","fonts","font_formats","textStyle","registerButtons","fixedWidth","onselect","register$1","FontSelect","number","precision","factor","pow","toPt","fontSize","findMatchingValue$1","pt","px","createFontSizeListBoxChangeHandler","getFontSizeItems","fontsizeFormats","fontsize_formats","registerButtons$1","register$2","FontSizeSelect","hideMenuObjects","canApply","hideFormatMenuItems","createFormatMenu","newFormats","defaultStyleFormats","style_formats_merge","style_formats","itemDefaults","preview","getCssText","command","queryCommandState","registerMenuItems","formatMenu","registerButtons$2","style_formats_autohide","register$3","Formats","createFormats$1","createListBoxChangeHandler","matchNode","lazyFormatSelectBoxItems","blocks","block","buildMenuItems","register$4","block_formats","FormatSelect","createCustomMenuItems","names","nameList","isSeparator$1","trimMenuItems","menuItems2","createContextMenuItems","outputMenuItems","createInsertMenu","insertButtonItems","insert_button_items","registerButtons$3","oncreatemenu","register$5","InsertButton","registerFormatButtons","bold","italic","underline","strikethrough","subscript","superscript","registerCommandButtons","outdent","indent","cut","copy","paste","selectall","visualaid","newdocument","removeformat","registerCommandToggleButtons","blockquote","registerButtons$4","registerMenuItems$1","shortcut","register$6","SimpleControls","toggleUndoRedoState","checkState","typeFn","undoManager","readonly","registerMenuItems$2","registerButtons$5","register$7","UndoRedo","toggleVisualAidState","hasVisual","registerMenuItems$3","selectable","register$8","VisualAid","setupEnvironment","iOS","setupUiContainer","setupRtlMode","setupHideFloatPanels","setup$1","FormatControls","GridLayout","rows","cols","posX","posY","spacingH","spacingV","alignH","alignV","maxX","maxY","ctrlMinWidth","ctrlMinHeight","availableWidth","availableHeight","reverseRows","colWidths","rowHeights","columns","ceil","sqrt","flexV","packV","flexWidths","Iframe$1","src","InfoBox","severity","Label","strong","startMinH","targetCtrl","forName","Toolbar$1","MenuBar","MenuButton","_renderOpen","animate","activeMenu","menuLayoutRect","selfBottom","offset","hasVisibleSiblingMenu","overCtrl","Menu","itemsFactory","hideThrobber","factory","requestTime","_hasIcons","ListBox","setSelected","menuValues","selected","selectedText","lastItemCtrl","_values","lastControl","valueExists","activateMenuItemsByValue","hasMenus","getSelectedItem","selectedItem","toggleTextStyle","_textStyle","textElm","MenuItem","ariaHideMenu","_parentMenu","_lastRel","escapeRegExp","markMatches","boldMatches","iconHtml","mac","shift","hover","Radio","ResizeHandle","resizeDragHelper","SelectBox","_options","Slider","minValue","maxValue","_initValue","reset","toFraction","fromFraction","screenCordName","alter","startHandlePos","handlePos","_dragHelper","Spacer","SplitButton","mainButtonElm","menuButtonElm","_menuBtnText","StackLayout","TabPanel","activateTab","activeTabElm","activeTabId","tabsHtml","activeTab","targetParent","headH","TextBox","getApi","Factory","ui","ref","registerToFactory","Api"],"mappings":"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","file":"static/js/45.61f5634d7b8ffe8fce37.js","sourcesContent":["webpackJsonp([45],{\n\n/***/ \"o5MN\":\n/***/ (function(module, exports) {\n\n(function () {\nvar modern = (function (domGlobals) {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.ThemeManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.EditorManager');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var isBrandingEnabled = function (editor) {\n      return editor.getParam('branding', true, 'boolean');\n    };\n    var hasMenubar = function (editor) {\n      return getMenubar(editor) !== false;\n    };\n    var getMenubar = function (editor) {\n      return editor.getParam('menubar');\n    };\n    var hasStatusbar = function (editor) {\n      return editor.getParam('statusbar', true, 'boolean');\n    };\n    var getToolbarSize = function (editor) {\n      return editor.getParam('toolbar_items_size');\n    };\n    var isReadOnly = function (editor) {\n      return editor.getParam('readonly', false, 'boolean');\n    };\n    var getFixedToolbarContainer = function (editor) {\n      return editor.getParam('fixed_toolbar_container');\n    };\n    var getInlineToolbarPositionHandler = function (editor) {\n      return editor.getParam('inline_toolbar_position_handler');\n    };\n    var getMenu = function (editor) {\n      return editor.getParam('menu');\n    };\n    var getRemovedMenuItems = function (editor) {\n      return editor.getParam('removed_menuitems', '');\n    };\n    var getMinWidth = function (editor) {\n      return editor.getParam('min_width', 100, 'number');\n    };\n    var getMinHeight = function (editor) {\n      return editor.getParam('min_height', 100, 'number');\n    };\n    var getMaxWidth = function (editor) {\n      return editor.getParam('max_width', 65535, 'number');\n    };\n    var getMaxHeight = function (editor) {\n      return editor.getParam('max_height', 65535, 'number');\n    };\n    var isSkinDisabled = function (editor) {\n      return editor.settings.skin === false;\n    };\n    var isInline = function (editor) {\n      return editor.getParam('inline', false, 'boolean');\n    };\n    var getResize = function (editor) {\n      var resize = editor.getParam('resize', 'vertical');\n      if (resize === false) {\n        return 'none';\n      } else if (resize === 'both') {\n        return 'both';\n      } else {\n        return 'vertical';\n      }\n    };\n    var getSkinUrl = function (editor) {\n      var settings = editor.settings;\n      var skin = settings.skin;\n      var skinUrl = settings.skin_url;\n      if (skin !== false) {\n        var skinName = skin ? skin : 'lightgray';\n        if (skinUrl) {\n          skinUrl = editor.documentBaseURI.toAbsolute(skinUrl);\n        } else {\n          skinUrl = global$1.baseURL + '/skins/' + skinName;\n        }\n      }\n      return skinUrl;\n    };\n    var getIndexedToolbars = function (settings, defaultToolbar) {\n      var toolbars = [];\n      for (var i = 1; i < 10; i++) {\n        var toolbar = settings['toolbar' + i];\n        if (!toolbar) {\n          break;\n        }\n        toolbars.push(toolbar);\n      }\n      var mainToolbar = settings.toolbar ? [settings.toolbar] : [defaultToolbar];\n      return toolbars.length > 0 ? toolbars : mainToolbar;\n    };\n    var getToolbars = function (editor) {\n      var toolbar = editor.getParam('toolbar');\n      var defaultToolbar = 'undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image';\n      if (toolbar === false) {\n        return [];\n      } else if (global$2.isArray(toolbar)) {\n        return global$2.grep(toolbar, function (toolbar) {\n          return toolbar.length > 0;\n        });\n      } else {\n        return getIndexedToolbars(editor.settings, defaultToolbar);\n      }\n    };\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.ui.Factory');\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.util.I18n');\n\n    var fireSkinLoaded = function (editor) {\n      return editor.fire('SkinLoaded');\n    };\n    var fireResizeEditor = function (editor) {\n      return editor.fire('ResizeEditor');\n    };\n    var fireBeforeRenderUI = function (editor) {\n      return editor.fire('BeforeRenderUI');\n    };\n    var Events = {\n      fireSkinLoaded: fireSkinLoaded,\n      fireResizeEditor: fireResizeEditor,\n      fireBeforeRenderUI: fireBeforeRenderUI\n    };\n\n    var focus = function (panel, type) {\n      return function () {\n        var item = panel.find(type)[0];\n        if (item) {\n          item.focus(true);\n        }\n      };\n    };\n    var addKeys = function (editor, panel) {\n      editor.shortcuts.add('Alt+F9', '', focus(panel, 'menubar'));\n      editor.shortcuts.add('Alt+F10,F10', '', focus(panel, 'toolbar'));\n      editor.shortcuts.add('Alt+F11', '', focus(panel, 'elementpath'));\n      panel.on('cancel', function () {\n        editor.focus();\n      });\n    };\n    var A11y = { addKeys: addKeys };\n\n    var global$6 = tinymce.util.Tools.resolve('tinymce.geom.Rect');\n\n    var global$7 = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n    var noop = function () {\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var none = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var eq = function (o) {\n        return o.isNone();\n      };\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = function (n) {\n        return n;\n      };\n      var me = {\n        fold: function (n, s) {\n          return n();\n        },\n        is: never,\n        isSome: never,\n        isNone: always,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: constant(null),\n        getOrUndefined: constant(undefined),\n        or: id,\n        orThunk: call,\n        map: none,\n        each: noop,\n        bind: none,\n        exists: never,\n        forall: always,\n        filter: none,\n        equals: eq,\n        equals_: eq,\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      if (Object.freeze) {\n        Object.freeze(me);\n      }\n      return me;\n    }();\n    var some = function (a) {\n      var constant_a = constant(a);\n      var self = function () {\n        return me;\n      };\n      var bind = function (f) {\n        return f(a);\n      };\n      var me = {\n        fold: function (n, s) {\n          return s(a);\n        },\n        is: function (v) {\n          return a === v;\n        },\n        isSome: always,\n        isNone: never,\n        getOr: constant_a,\n        getOrThunk: constant_a,\n        getOrDie: constant_a,\n        getOrNull: constant_a,\n        getOrUndefined: constant_a,\n        or: self,\n        orThunk: self,\n        map: function (f) {\n          return some(f(a));\n        },\n        each: function (f) {\n          f(a);\n        },\n        bind: bind,\n        exists: bind,\n        forall: bind,\n        filter: function (f) {\n          return f(a) ? me : NONE;\n        },\n        toArray: function () {\n          return [a];\n        },\n        toString: function () {\n          return 'some(' + a + ')';\n        },\n        equals: function (o) {\n          return o.is(a);\n        },\n        equals_: function (o, elementEq) {\n          return o.fold(never, function (b) {\n            return elementEq(a, b);\n          });\n        }\n      };\n      return me;\n    };\n    var from = function (value) {\n      return value === null || value === undefined ? NONE : some(value);\n    };\n    var Option = {\n      some: some,\n      none: none,\n      from: from\n    };\n\n    var getUiContainerDelta = function (ctrl) {\n      var uiContainer = getUiContainer(ctrl);\n      if (uiContainer && global$3.DOM.getStyle(uiContainer, 'position', true) !== 'static') {\n        var containerPos = global$3.DOM.getPos(uiContainer);\n        var dx = uiContainer.scrollLeft - containerPos.x;\n        var dy = uiContainer.scrollTop - containerPos.y;\n        return Option.some({\n          x: dx,\n          y: dy\n        });\n      } else {\n        return Option.none();\n      }\n    };\n    var setUiContainer = function (editor, ctrl) {\n      var uiContainer = global$3.DOM.select(editor.settings.ui_container)[0];\n      ctrl.getRoot().uiContainer = uiContainer;\n    };\n    var getUiContainer = function (ctrl) {\n      return ctrl ? ctrl.getRoot().uiContainer : null;\n    };\n    var inheritUiContainer = function (fromCtrl, toCtrl) {\n      return toCtrl.uiContainer = getUiContainer(fromCtrl);\n    };\n    var UiContainer = {\n      getUiContainerDelta: getUiContainerDelta,\n      setUiContainer: setUiContainer,\n      getUiContainer: getUiContainer,\n      inheritUiContainer: inheritUiContainer\n    };\n\n    var createToolbar = function (editor, items, size) {\n      var toolbarItems = [];\n      var buttonGroup;\n      if (!items) {\n        return;\n      }\n      global$2.each(items.split(/[ ,]/), function (item) {\n        var itemName;\n        var bindSelectorChanged = function () {\n          var selection = editor.selection;\n          if (item.settings.stateSelector) {\n            selection.selectorChanged(item.settings.stateSelector, function (state) {\n              item.active(state);\n            }, true);\n          }\n          if (item.settings.disabledStateSelector) {\n            selection.selectorChanged(item.settings.disabledStateSelector, function (state) {\n              item.disabled(state);\n            });\n          }\n        };\n        if (item === '|') {\n          buttonGroup = null;\n        } else {\n          if (!buttonGroup) {\n            buttonGroup = {\n              type: 'buttongroup',\n              items: []\n            };\n            toolbarItems.push(buttonGroup);\n          }\n          if (editor.buttons[item]) {\n            itemName = item;\n            item = editor.buttons[itemName];\n            if (typeof item === 'function') {\n              item = item();\n            }\n            item.type = item.type || 'button';\n            item.size = size;\n            item = global$4.create(item);\n            buttonGroup.items.push(item);\n            if (editor.initialized) {\n              bindSelectorChanged();\n            } else {\n              editor.on('init', bindSelectorChanged);\n            }\n          }\n        }\n      });\n      return {\n        type: 'toolbar',\n        layout: 'flow',\n        items: toolbarItems\n      };\n    };\n    var createToolbars = function (editor, size) {\n      var toolbars = [];\n      var addToolbar = function (items) {\n        if (items) {\n          toolbars.push(createToolbar(editor, items, size));\n        }\n      };\n      global$2.each(getToolbars(editor), function (toolbar) {\n        addToolbar(toolbar);\n      });\n      if (toolbars.length) {\n        return {\n          type: 'panel',\n          layout: 'stack',\n          classes: 'toolbar-grp',\n          ariaRoot: true,\n          ariaRemember: true,\n          items: toolbars\n        };\n      }\n    };\n    var Toolbar = {\n      createToolbar: createToolbar,\n      createToolbars: createToolbars\n    };\n\n    var DOM = global$3.DOM;\n    var toClientRect = function (geomRect) {\n      return {\n        left: geomRect.x,\n        top: geomRect.y,\n        width: geomRect.w,\n        height: geomRect.h,\n        right: geomRect.x + geomRect.w,\n        bottom: geomRect.y + geomRect.h\n      };\n    };\n    var hideAllFloatingPanels = function (editor) {\n      global$2.each(editor.contextToolbars, function (toolbar) {\n        if (toolbar.panel) {\n          toolbar.panel.hide();\n        }\n      });\n    };\n    var movePanelTo = function (panel, pos) {\n      panel.moveTo(pos.left, pos.top);\n    };\n    var togglePositionClass = function (panel, relPos, predicate) {\n      relPos = relPos ? relPos.substr(0, 2) : '';\n      global$2.each({\n        t: 'down',\n        b: 'up'\n      }, function (cls, pos) {\n        panel.classes.toggle('arrow-' + cls, predicate(pos, relPos.substr(0, 1)));\n      });\n      global$2.each({\n        l: 'left',\n        r: 'right'\n      }, function (cls, pos) {\n        panel.classes.toggle('arrow-' + cls, predicate(pos, relPos.substr(1, 1)));\n      });\n    };\n    var userConstrain = function (handler, x, y, elementRect, contentAreaRect, panelRect) {\n      panelRect = toClientRect({\n        x: x,\n        y: y,\n        w: panelRect.w,\n        h: panelRect.h\n      });\n      if (handler) {\n        panelRect = handler({\n          elementRect: toClientRect(elementRect),\n          contentAreaRect: toClientRect(contentAreaRect),\n          panelRect: panelRect\n        });\n      }\n      return panelRect;\n    };\n    var addContextualToolbars = function (editor) {\n      var scrollContainer;\n      var getContextToolbars = function () {\n        return editor.contextToolbars || [];\n      };\n      var getElementRect = function (elm) {\n        var pos, targetRect, root;\n        pos = DOM.getPos(editor.getContentAreaContainer());\n        targetRect = editor.dom.getRect(elm);\n        root = editor.dom.getRoot();\n        if (root.nodeName === 'BODY') {\n          targetRect.x -= root.ownerDocument.documentElement.scrollLeft || root.scrollLeft;\n          targetRect.y -= root.ownerDocument.documentElement.scrollTop || root.scrollTop;\n        }\n        targetRect.x += pos.x;\n        targetRect.y += pos.y;\n        return targetRect;\n      };\n      var reposition = function (match, shouldShow) {\n        var relPos, panelRect, elementRect, contentAreaRect, panel, relRect, testPositions, smallElementWidthThreshold;\n        var handler = getInlineToolbarPositionHandler(editor);\n        if (editor.removed) {\n          return;\n        }\n        if (!match || !match.toolbar.panel) {\n          hideAllFloatingPanels(editor);\n          return;\n        }\n        testPositions = [\n          'bc-tc',\n          'tc-bc',\n          'tl-bl',\n          'bl-tl',\n          'tr-br',\n          'br-tr'\n        ];\n        panel = match.toolbar.panel;\n        if (shouldShow) {\n          panel.show();\n        }\n        elementRect = getElementRect(match.element);\n        panelRect = DOM.getRect(panel.getEl());\n        contentAreaRect = DOM.getRect(editor.getContentAreaContainer() || editor.getBody());\n        var delta = UiContainer.getUiContainerDelta(panel).getOr({\n          x: 0,\n          y: 0\n        });\n        elementRect.x += delta.x;\n        elementRect.y += delta.y;\n        panelRect.x += delta.x;\n        panelRect.y += delta.y;\n        contentAreaRect.x += delta.x;\n        contentAreaRect.y += delta.y;\n        smallElementWidthThreshold = 25;\n        if (DOM.getStyle(match.element, 'display', true) !== 'inline') {\n          var clientRect = match.element.getBoundingClientRect();\n          elementRect.w = clientRect.width;\n          elementRect.h = clientRect.height;\n        }\n        if (!editor.inline) {\n          contentAreaRect.w = editor.getDoc().documentElement.offsetWidth;\n        }\n        if (editor.selection.controlSelection.isResizable(match.element) && elementRect.w < smallElementWidthThreshold) {\n          elementRect = global$6.inflate(elementRect, 0, 8);\n        }\n        relPos = global$6.findBestRelativePosition(panelRect, elementRect, contentAreaRect, testPositions);\n        elementRect = global$6.clamp(elementRect, contentAreaRect);\n        if (relPos) {\n          relRect = global$6.relativePosition(panelRect, elementRect, relPos);\n          movePanelTo(panel, userConstrain(handler, relRect.x, relRect.y, elementRect, contentAreaRect, panelRect));\n        } else {\n          contentAreaRect.h += panelRect.h;\n          elementRect = global$6.intersect(contentAreaRect, elementRect);\n          if (elementRect) {\n            relPos = global$6.findBestRelativePosition(panelRect, elementRect, contentAreaRect, [\n              'bc-tc',\n              'bl-tl',\n              'br-tr'\n            ]);\n            if (relPos) {\n              relRect = global$6.relativePosition(panelRect, elementRect, relPos);\n              movePanelTo(panel, userConstrain(handler, relRect.x, relRect.y, elementRect, contentAreaRect, panelRect));\n            } else {\n              movePanelTo(panel, userConstrain(handler, elementRect.x, elementRect.y, elementRect, contentAreaRect, panelRect));\n            }\n          } else {\n            panel.hide();\n          }\n        }\n        togglePositionClass(panel, relPos, function (pos1, pos2) {\n          return pos1 === pos2;\n        });\n      };\n      var repositionHandler = function (show) {\n        return function () {\n          var execute = function () {\n            if (editor.selection) {\n              reposition(findFrontMostMatch(editor.selection.getNode()), show);\n            }\n          };\n          global$7.requestAnimationFrame(execute);\n        };\n      };\n      var bindScrollEvent = function (panel) {\n        if (!scrollContainer) {\n          var reposition_1 = repositionHandler(true);\n          var uiContainer_1 = UiContainer.getUiContainer(panel);\n          scrollContainer = editor.selection.getScrollContainer() || editor.getWin();\n          DOM.bind(scrollContainer, 'scroll', reposition_1);\n          DOM.bind(uiContainer_1, 'scroll', reposition_1);\n          editor.on('remove', function () {\n            DOM.unbind(scrollContainer, 'scroll', reposition_1);\n            DOM.unbind(uiContainer_1, 'scroll', reposition_1);\n          });\n        }\n      };\n      var showContextToolbar = function (match) {\n        var panel;\n        if (match.toolbar.panel) {\n          match.toolbar.panel.show();\n          reposition(match);\n          return;\n        }\n        panel = global$4.create({\n          type: 'floatpanel',\n          role: 'dialog',\n          classes: 'tinymce tinymce-inline arrow',\n          ariaLabel: 'Inline toolbar',\n          layout: 'flex',\n          direction: 'column',\n          align: 'stretch',\n          autohide: false,\n          autofix: true,\n          fixed: true,\n          border: 1,\n          items: Toolbar.createToolbar(editor, match.toolbar.items),\n          oncancel: function () {\n            editor.focus();\n          }\n        });\n        UiContainer.setUiContainer(editor, panel);\n        bindScrollEvent(panel);\n        match.toolbar.panel = panel;\n        panel.renderTo().reflow();\n        reposition(match);\n      };\n      var hideAllContextToolbars = function () {\n        global$2.each(getContextToolbars(), function (toolbar) {\n          if (toolbar.panel) {\n            toolbar.panel.hide();\n          }\n        });\n      };\n      var findFrontMostMatch = function (targetElm) {\n        var i, y, parentsAndSelf;\n        var toolbars = getContextToolbars();\n        parentsAndSelf = editor.$(targetElm).parents().add(targetElm);\n        for (i = parentsAndSelf.length - 1; i >= 0; i--) {\n          for (y = toolbars.length - 1; y >= 0; y--) {\n            if (toolbars[y].predicate(parentsAndSelf[i])) {\n              return {\n                toolbar: toolbars[y],\n                element: parentsAndSelf[i]\n              };\n            }\n          }\n        }\n        return null;\n      };\n      editor.on('click keyup setContent ObjectResized', function (e) {\n        if (e.type === 'setcontent' && !e.selection) {\n          return;\n        }\n        global$7.setEditorTimeout(editor, function () {\n          var match;\n          match = findFrontMostMatch(editor.selection.getNode());\n          if (match) {\n            hideAllContextToolbars();\n            showContextToolbar(match);\n          } else {\n            hideAllContextToolbars();\n          }\n        });\n      });\n      editor.on('blur hide contextmenu', hideAllContextToolbars);\n      editor.on('ObjectResizeStart', function () {\n        var match = findFrontMostMatch(editor.selection.getNode());\n        if (match && match.toolbar.panel) {\n          match.toolbar.panel.hide();\n        }\n      });\n      editor.on('ResizeEditor ResizeWindow', repositionHandler(true));\n      editor.on('nodeChange', repositionHandler(false));\n      editor.on('remove', function () {\n        global$2.each(getContextToolbars(), function (toolbar) {\n          if (toolbar.panel) {\n            toolbar.panel.remove();\n          }\n        });\n        editor.contextToolbars = {};\n      });\n      editor.shortcuts.add('ctrl+F9', '', function () {\n        var match = findFrontMostMatch(editor.selection.getNode());\n        if (match && match.toolbar.panel) {\n          match.toolbar.panel.items()[0].focus();\n        }\n      });\n    };\n    var ContextToolbars = { addContextualToolbars: addContextualToolbars };\n\n    var typeOf = function (x) {\n      if (x === null) {\n        return 'null';\n      }\n      var t = typeof x;\n      if (t === 'object' && (Array.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'Array')) {\n        return 'array';\n      }\n      if (t === 'object' && (String.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'String')) {\n        return 'string';\n      }\n      return t;\n    };\n    var isType = function (type) {\n      return function (value) {\n        return typeOf(value) === type;\n      };\n    };\n    var isArray = isType('array');\n    var isFunction = isType('function');\n    var isNumber = isType('number');\n\n    var nativeSlice = Array.prototype.slice;\n    var nativeIndexOf = Array.prototype.indexOf;\n    var nativePush = Array.prototype.push;\n    var rawIndexOf = function (ts, t) {\n      return nativeIndexOf.call(ts, t);\n    };\n    var indexOf = function (xs, x) {\n      var r = rawIndexOf(xs, x);\n      return r === -1 ? Option.none() : Option.some(r);\n    };\n    var exists = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    var map = function (xs, f) {\n      var len = xs.length;\n      var r = new Array(len);\n      for (var i = 0; i < len; i++) {\n        var x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    var each = function (xs, f) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        f(x, i);\n      }\n    };\n    var filter = function (xs, pred) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          r.push(x);\n        }\n      }\n      return r;\n    };\n    var foldl = function (xs, f, acc) {\n      each(xs, function (x) {\n        acc = f(acc, x);\n      });\n      return acc;\n    };\n    var find = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          return Option.some(x);\n        }\n      }\n      return Option.none();\n    };\n    var findIndex = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          return Option.some(i);\n        }\n      }\n      return Option.none();\n    };\n    var flatten = function (xs) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; ++i) {\n        if (!isArray(xs[i])) {\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        }\n        nativePush.apply(r, xs[i]);\n      }\n      return r;\n    };\n    var from$1 = isFunction(Array.from) ? Array.from : function (x) {\n      return nativeSlice.call(x);\n    };\n\n    var defaultMenus = {\n      file: {\n        title: 'File',\n        items: 'newdocument restoredraft | preview | print'\n      },\n      edit: {\n        title: 'Edit',\n        items: 'undo redo | cut copy paste pastetext | selectall'\n      },\n      view: {\n        title: 'View',\n        items: 'code | visualaid visualchars visualblocks | spellchecker | preview fullscreen'\n      },\n      insert: {\n        title: 'Insert',\n        items: 'image link media template codesample inserttable | charmap hr | pagebreak nonbreaking anchor toc | insertdatetime'\n      },\n      format: {\n        title: 'Format',\n        items: 'bold italic underline strikethrough superscript subscript codeformat | blockformats align | removeformat'\n      },\n      tools: {\n        title: 'Tools',\n        items: 'spellchecker spellcheckerlanguage | a11ycheck code'\n      },\n      table: { title: 'Table' },\n      help: { title: 'Help' }\n    };\n    var delimiterMenuNamePair = function () {\n      return {\n        name: '|',\n        item: { text: '|' }\n      };\n    };\n    var createMenuNameItemPair = function (name, item) {\n      var menuItem = item ? {\n        name: name,\n        item: item\n      } : null;\n      return name === '|' ? delimiterMenuNamePair() : menuItem;\n    };\n    var hasItemName = function (namedMenuItems, name) {\n      return findIndex(namedMenuItems, function (namedMenuItem) {\n        return namedMenuItem.name === name;\n      }).isSome();\n    };\n    var isSeparator = function (namedMenuItem) {\n      return namedMenuItem && namedMenuItem.item.text === '|';\n    };\n    var cleanupMenu = function (namedMenuItems, removedMenuItems) {\n      var menuItemsPass1 = filter(namedMenuItems, function (namedMenuItem) {\n        return removedMenuItems.hasOwnProperty(namedMenuItem.name) === false;\n      });\n      var menuItemsPass2 = filter(menuItemsPass1, function (namedMenuItem, i) {\n        return !isSeparator(namedMenuItem) || !isSeparator(menuItemsPass1[i - 1]);\n      });\n      return filter(menuItemsPass2, function (namedMenuItem, i) {\n        return !isSeparator(namedMenuItem) || i > 0 && i < menuItemsPass2.length - 1;\n      });\n    };\n    var createMenu = function (editorMenuItems, menus, removedMenuItems, context) {\n      var menuButton, menu, namedMenuItems, isUserDefined;\n      if (menus) {\n        menu = menus[context];\n        isUserDefined = true;\n      } else {\n        menu = defaultMenus[context];\n      }\n      if (menu) {\n        menuButton = { text: menu.title };\n        namedMenuItems = [];\n        global$2.each((menu.items || '').split(/[ ,]/), function (name) {\n          var namedMenuItem = createMenuNameItemPair(name, editorMenuItems[name]);\n          if (namedMenuItem) {\n            namedMenuItems.push(namedMenuItem);\n          }\n        });\n        if (!isUserDefined) {\n          global$2.each(editorMenuItems, function (item, name) {\n            if (item.context === context && !hasItemName(namedMenuItems, name)) {\n              if (item.separator === 'before') {\n                namedMenuItems.push(delimiterMenuNamePair());\n              }\n              if (item.prependToContext) {\n                namedMenuItems.unshift(createMenuNameItemPair(name, item));\n              } else {\n                namedMenuItems.push(createMenuNameItemPair(name, item));\n              }\n              if (item.separator === 'after') {\n                namedMenuItems.push(delimiterMenuNamePair());\n              }\n            }\n          });\n        }\n        menuButton.menu = map(cleanupMenu(namedMenuItems, removedMenuItems), function (menuItem) {\n          return menuItem.item;\n        });\n        if (!menuButton.menu.length) {\n          return null;\n        }\n      }\n      return menuButton;\n    };\n    var getDefaultMenubar = function (editor) {\n      var name;\n      var defaultMenuBar = [];\n      var menu = getMenu(editor);\n      if (menu) {\n        for (name in menu) {\n          defaultMenuBar.push(name);\n        }\n      } else {\n        for (name in defaultMenus) {\n          defaultMenuBar.push(name);\n        }\n      }\n      return defaultMenuBar;\n    };\n    var createMenuButtons = function (editor) {\n      var menuButtons = [];\n      var defaultMenuBar = getDefaultMenubar(editor);\n      var removedMenuItems = global$2.makeMap(getRemovedMenuItems(editor).split(/[ ,]/));\n      var menubar = getMenubar(editor);\n      var enabledMenuNames = typeof menubar === 'string' ? menubar.split(/[ ,]/) : defaultMenuBar;\n      for (var i = 0; i < enabledMenuNames.length; i++) {\n        var menuItems = enabledMenuNames[i];\n        var menu = createMenu(editor.menuItems, getMenu(editor), removedMenuItems, menuItems);\n        if (menu) {\n          menuButtons.push(menu);\n        }\n      }\n      return menuButtons;\n    };\n    var Menubar = { createMenuButtons: createMenuButtons };\n\n    var DOM$1 = global$3.DOM;\n    var getSize = function (elm) {\n      return {\n        width: elm.clientWidth,\n        height: elm.clientHeight\n      };\n    };\n    var resizeTo = function (editor, width, height) {\n      var containerElm, iframeElm, containerSize, iframeSize;\n      containerElm = editor.getContainer();\n      iframeElm = editor.getContentAreaContainer().firstChild;\n      containerSize = getSize(containerElm);\n      iframeSize = getSize(iframeElm);\n      if (width !== null) {\n        width = Math.max(getMinWidth(editor), width);\n        width = Math.min(getMaxWidth(editor), width);\n        DOM$1.setStyle(containerElm, 'width', width + (containerSize.width - iframeSize.width));\n        DOM$1.setStyle(iframeElm, 'width', width);\n      }\n      height = Math.max(getMinHeight(editor), height);\n      height = Math.min(getMaxHeight(editor), height);\n      DOM$1.setStyle(iframeElm, 'height', height);\n      Events.fireResizeEditor(editor);\n    };\n    var resizeBy = function (editor, dw, dh) {\n      var elm = editor.getContentAreaContainer();\n      resizeTo(editor, elm.clientWidth + dw, elm.clientHeight + dh);\n    };\n    var Resize = {\n      resizeTo: resizeTo,\n      resizeBy: resizeBy\n    };\n\n    var global$8 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var api = function (elm) {\n      return {\n        element: function () {\n          return elm;\n        }\n      };\n    };\n    var trigger = function (sidebar, panel, callbackName) {\n      var callback = sidebar.settings[callbackName];\n      if (callback) {\n        callback(api(panel.getEl('body')));\n      }\n    };\n    var hidePanels = function (name, container, sidebars) {\n      global$2.each(sidebars, function (sidebar) {\n        var panel = container.items().filter('#' + sidebar.name)[0];\n        if (panel && panel.visible() && sidebar.name !== name) {\n          trigger(sidebar, panel, 'onhide');\n          panel.visible(false);\n        }\n      });\n    };\n    var deactivateButtons = function (toolbar) {\n      toolbar.items().each(function (ctrl) {\n        ctrl.active(false);\n      });\n    };\n    var findSidebar = function (sidebars, name) {\n      return global$2.grep(sidebars, function (sidebar) {\n        return sidebar.name === name;\n      })[0];\n    };\n    var showPanel = function (editor, name, sidebars) {\n      return function (e) {\n        var btnCtrl = e.control;\n        var container = btnCtrl.parents().filter('panel')[0];\n        var panel = container.find('#' + name)[0];\n        var sidebar = findSidebar(sidebars, name);\n        hidePanels(name, container, sidebars);\n        deactivateButtons(btnCtrl.parent());\n        if (panel && panel.visible()) {\n          trigger(sidebar, panel, 'onhide');\n          panel.hide();\n          btnCtrl.active(false);\n        } else {\n          if (panel) {\n            panel.show();\n            trigger(sidebar, panel, 'onshow');\n          } else {\n            panel = global$4.create({\n              type: 'container',\n              name: name,\n              layout: 'stack',\n              classes: 'sidebar-panel',\n              html: ''\n            });\n            container.prepend(panel);\n            trigger(sidebar, panel, 'onrender');\n            trigger(sidebar, panel, 'onshow');\n          }\n          btnCtrl.active(true);\n        }\n        Events.fireResizeEditor(editor);\n      };\n    };\n    var isModernBrowser = function () {\n      return !global$8.ie || global$8.ie >= 11;\n    };\n    var hasSidebar = function (editor) {\n      return isModernBrowser() && editor.sidebars ? editor.sidebars.length > 0 : false;\n    };\n    var createSidebar = function (editor) {\n      var buttons = global$2.map(editor.sidebars, function (sidebar) {\n        var settings = sidebar.settings;\n        return {\n          type: 'button',\n          icon: settings.icon,\n          image: settings.image,\n          tooltip: settings.tooltip,\n          onclick: showPanel(editor, sidebar.name, editor.sidebars)\n        };\n      });\n      return {\n        type: 'panel',\n        name: 'sidebar',\n        layout: 'stack',\n        classes: 'sidebar',\n        items: [{\n            type: 'toolbar',\n            layout: 'stack',\n            classes: 'sidebar-toolbar',\n            items: buttons\n          }]\n      };\n    };\n    var Sidebar = {\n      hasSidebar: hasSidebar,\n      createSidebar: createSidebar\n    };\n\n    var fireSkinLoaded$1 = function (editor) {\n      var done = function () {\n        editor._skinLoaded = true;\n        Events.fireSkinLoaded(editor);\n      };\n      return function () {\n        if (editor.initialized) {\n          done();\n        } else {\n          editor.on('init', done);\n        }\n      };\n    };\n    var SkinLoaded = { fireSkinLoaded: fireSkinLoaded$1 };\n\n    var DOM$2 = global$3.DOM;\n    var switchMode = function (panel) {\n      return function (e) {\n        panel.find('*').disabled(e.mode === 'readonly');\n      };\n    };\n    var editArea = function (border) {\n      return {\n        type: 'panel',\n        name: 'iframe',\n        layout: 'stack',\n        classes: 'edit-area',\n        border: border,\n        html: ''\n      };\n    };\n    var editAreaContainer = function (editor) {\n      return {\n        type: 'panel',\n        layout: 'stack',\n        classes: 'edit-aria-container',\n        border: '1 0 0 0',\n        items: [\n          editArea('0'),\n          Sidebar.createSidebar(editor)\n        ]\n      };\n    };\n    var render = function (editor, theme, args) {\n      var panel, resizeHandleCtrl, startSize;\n      if (isSkinDisabled(editor) === false && args.skinUiCss) {\n        DOM$2.styleSheetLoader.load(args.skinUiCss, SkinLoaded.fireSkinLoaded(editor));\n      } else {\n        SkinLoaded.fireSkinLoaded(editor)();\n      }\n      panel = theme.panel = global$4.create({\n        type: 'panel',\n        role: 'application',\n        classes: 'tinymce',\n        style: 'visibility: hidden',\n        layout: 'stack',\n        border: 1,\n        items: [\n          {\n            type: 'container',\n            classes: 'top-part',\n            items: [\n              hasMenubar(editor) === false ? null : {\n                type: 'menubar',\n                border: '0 0 1 0',\n                items: Menubar.createMenuButtons(editor)\n              },\n              Toolbar.createToolbars(editor, getToolbarSize(editor))\n            ]\n          },\n          Sidebar.hasSidebar(editor) ? editAreaContainer(editor) : editArea('1 0 0 0')\n        ]\n      });\n      UiContainer.setUiContainer(editor, panel);\n      if (getResize(editor) !== 'none') {\n        resizeHandleCtrl = {\n          type: 'resizehandle',\n          direction: getResize(editor),\n          onResizeStart: function () {\n            var elm = editor.getContentAreaContainer().firstChild;\n            startSize = {\n              width: elm.clientWidth,\n              height: elm.clientHeight\n            };\n          },\n          onResize: function (e) {\n            if (getResize(editor) === 'both') {\n              Resize.resizeTo(editor, startSize.width + e.deltaX, startSize.height + e.deltaY);\n            } else {\n              Resize.resizeTo(editor, null, startSize.height + e.deltaY);\n            }\n          }\n        };\n      }\n      if (hasStatusbar(editor)) {\n        var linkHtml = '<a href=\"https://www.tiny.cloud/?utm_campaign=editor_referral&amp;utm_medium=poweredby&amp;utm_source=tinymce\" rel=\"noopener\" target=\"_blank\" role=\"presentation\" tabindex=\"-1\">Tiny</a>';\n        var html = global$5.translate([\n          'Powered by {0}',\n          linkHtml\n        ]);\n        var brandingLabel = isBrandingEnabled(editor) ? {\n          type: 'label',\n          classes: 'branding',\n          html: ' ' + html\n        } : null;\n        panel.add({\n          type: 'panel',\n          name: 'statusbar',\n          classes: 'statusbar',\n          layout: 'flow',\n          border: '1 0 0 0',\n          ariaRoot: true,\n          items: [\n            {\n              type: 'elementpath',\n              editor: editor\n            },\n            resizeHandleCtrl,\n            brandingLabel\n          ]\n        });\n      }\n      Events.fireBeforeRenderUI(editor);\n      editor.on('SwitchMode', switchMode(panel));\n      panel.renderBefore(args.targetNode).reflow();\n      if (isReadOnly(editor)) {\n        editor.setMode('readonly');\n      }\n      if (args.width) {\n        DOM$2.setStyle(panel.getEl(), 'width', args.width);\n      }\n      editor.on('remove', function () {\n        panel.remove();\n        panel = null;\n      });\n      A11y.addKeys(editor, panel);\n      ContextToolbars.addContextualToolbars(editor);\n      return {\n        iframeContainer: panel.find('#iframe')[0].getEl(),\n        editorContainer: panel.getEl()\n      };\n    };\n    var Iframe = { render: render };\n\n    var global$9 = tinymce.util.Tools.resolve('tinymce.dom.DomQuery');\n\n    var count = 0;\n    var funcs = {\n      id: function () {\n        return 'mceu_' + count++;\n      },\n      create: function (name, attrs, children) {\n        var elm = domGlobals.document.createElement(name);\n        global$3.DOM.setAttribs(elm, attrs);\n        if (typeof children === 'string') {\n          elm.innerHTML = children;\n        } else {\n          global$2.each(children, function (child) {\n            if (child.nodeType) {\n              elm.appendChild(child);\n            }\n          });\n        }\n        return elm;\n      },\n      createFragment: function (html) {\n        return global$3.DOM.createFragment(html);\n      },\n      getWindowSize: function () {\n        return global$3.DOM.getViewPort();\n      },\n      getSize: function (elm) {\n        var width, height;\n        if (elm.getBoundingClientRect) {\n          var rect = elm.getBoundingClientRect();\n          width = Math.max(rect.width || rect.right - rect.left, elm.offsetWidth);\n          height = Math.max(rect.height || rect.bottom - rect.bottom, elm.offsetHeight);\n        } else {\n          width = elm.offsetWidth;\n          height = elm.offsetHeight;\n        }\n        return {\n          width: width,\n          height: height\n        };\n      },\n      getPos: function (elm, root) {\n        return global$3.DOM.getPos(elm, root || funcs.getContainer());\n      },\n      getContainer: function () {\n        return global$8.container ? global$8.container : domGlobals.document.body;\n      },\n      getViewPort: function (win) {\n        return global$3.DOM.getViewPort(win);\n      },\n      get: function (id) {\n        return domGlobals.document.getElementById(id);\n      },\n      addClass: function (elm, cls) {\n        return global$3.DOM.addClass(elm, cls);\n      },\n      removeClass: function (elm, cls) {\n        return global$3.DOM.removeClass(elm, cls);\n      },\n      hasClass: function (elm, cls) {\n        return global$3.DOM.hasClass(elm, cls);\n      },\n      toggleClass: function (elm, cls, state) {\n        return global$3.DOM.toggleClass(elm, cls, state);\n      },\n      css: function (elm, name, value) {\n        return global$3.DOM.setStyle(elm, name, value);\n      },\n      getRuntimeStyle: function (elm, name) {\n        return global$3.DOM.getStyle(elm, name, true);\n      },\n      on: function (target, name, callback, scope) {\n        return global$3.DOM.bind(target, name, callback, scope);\n      },\n      off: function (target, name, callback) {\n        return global$3.DOM.unbind(target, name, callback);\n      },\n      fire: function (target, name, args) {\n        return global$3.DOM.fire(target, name, args);\n      },\n      innerHtml: function (elm, html) {\n        global$3.DOM.setHTML(elm, html);\n      }\n    };\n\n    var isStatic = function (elm) {\n      return funcs.getRuntimeStyle(elm, 'position') === 'static';\n    };\n    var isFixed = function (ctrl) {\n      return ctrl.state.get('fixed');\n    };\n    function calculateRelativePosition(ctrl, targetElm, rel) {\n      var ctrlElm, pos, x, y, selfW, selfH, targetW, targetH, viewport, size;\n      viewport = getWindowViewPort();\n      pos = funcs.getPos(targetElm, UiContainer.getUiContainer(ctrl));\n      x = pos.x;\n      y = pos.y;\n      if (isFixed(ctrl) && isStatic(domGlobals.document.body)) {\n        x -= viewport.x;\n        y -= viewport.y;\n      }\n      ctrlElm = ctrl.getEl();\n      size = funcs.getSize(ctrlElm);\n      selfW = size.width;\n      selfH = size.height;\n      size = funcs.getSize(targetElm);\n      targetW = size.width;\n      targetH = size.height;\n      rel = (rel || '').split('');\n      if (rel[0] === 'b') {\n        y += targetH;\n      }\n      if (rel[1] === 'r') {\n        x += targetW;\n      }\n      if (rel[0] === 'c') {\n        y += Math.round(targetH / 2);\n      }\n      if (rel[1] === 'c') {\n        x += Math.round(targetW / 2);\n      }\n      if (rel[3] === 'b') {\n        y -= selfH;\n      }\n      if (rel[4] === 'r') {\n        x -= selfW;\n      }\n      if (rel[3] === 'c') {\n        y -= Math.round(selfH / 2);\n      }\n      if (rel[4] === 'c') {\n        x -= Math.round(selfW / 2);\n      }\n      return {\n        x: x,\n        y: y,\n        w: selfW,\n        h: selfH\n      };\n    }\n    var getUiContainerViewPort = function (customUiContainer) {\n      return {\n        x: 0,\n        y: 0,\n        w: customUiContainer.scrollWidth - 1,\n        h: customUiContainer.scrollHeight - 1\n      };\n    };\n    var getWindowViewPort = function () {\n      var win = domGlobals.window;\n      var x = Math.max(win.pageXOffset, domGlobals.document.body.scrollLeft, domGlobals.document.documentElement.scrollLeft);\n      var y = Math.max(win.pageYOffset, domGlobals.document.body.scrollTop, domGlobals.document.documentElement.scrollTop);\n      var w = win.innerWidth || domGlobals.document.documentElement.clientWidth;\n      var h = win.innerHeight || domGlobals.document.documentElement.clientHeight;\n      return {\n        x: x,\n        y: y,\n        w: w,\n        h: h\n      };\n    };\n    var getViewPortRect = function (ctrl) {\n      var customUiContainer = UiContainer.getUiContainer(ctrl);\n      return customUiContainer && !isFixed(ctrl) ? getUiContainerViewPort(customUiContainer) : getWindowViewPort();\n    };\n    var Movable = {\n      testMoveRel: function (elm, rels) {\n        var viewPortRect = getViewPortRect(this);\n        for (var i = 0; i < rels.length; i++) {\n          var pos = calculateRelativePosition(this, elm, rels[i]);\n          if (isFixed(this)) {\n            if (pos.x > 0 && pos.x + pos.w < viewPortRect.w && pos.y > 0 && pos.y + pos.h < viewPortRect.h) {\n              return rels[i];\n            }\n          } else {\n            if (pos.x > viewPortRect.x && pos.x + pos.w < viewPortRect.w + viewPortRect.x && pos.y > viewPortRect.y && pos.y + pos.h < viewPortRect.h + viewPortRect.y) {\n              return rels[i];\n            }\n          }\n        }\n        return rels[0];\n      },\n      moveRel: function (elm, rel) {\n        if (typeof rel !== 'string') {\n          rel = this.testMoveRel(elm, rel);\n        }\n        var pos = calculateRelativePosition(this, elm, rel);\n        return this.moveTo(pos.x, pos.y);\n      },\n      moveBy: function (dx, dy) {\n        var self = this, rect = self.layoutRect();\n        self.moveTo(rect.x + dx, rect.y + dy);\n        return self;\n      },\n      moveTo: function (x, y) {\n        var self = this;\n        function constrain(value, max, size) {\n          if (value < 0) {\n            return 0;\n          }\n          if (value + size > max) {\n            value = max - size;\n            return value < 0 ? 0 : value;\n          }\n          return value;\n        }\n        if (self.settings.constrainToViewport) {\n          var viewPortRect = getViewPortRect(this);\n          var layoutRect = self.layoutRect();\n          x = constrain(x, viewPortRect.w + viewPortRect.x, layoutRect.w);\n          y = constrain(y, viewPortRect.h + viewPortRect.y, layoutRect.h);\n        }\n        var uiContainer = UiContainer.getUiContainer(self);\n        if (uiContainer && isStatic(uiContainer) && !isFixed(self)) {\n          x -= uiContainer.scrollLeft;\n          y -= uiContainer.scrollTop;\n        }\n        if (uiContainer) {\n          x += 1;\n          y += 1;\n        }\n        if (self.state.get('rendered')) {\n          self.layoutRect({\n            x: x,\n            y: y\n          }).repaint();\n        } else {\n          self.settings.x = x;\n          self.settings.y = y;\n        }\n        self.fire('move', {\n          x: x,\n          y: y\n        });\n        return self;\n      }\n    };\n\n    var global$a = tinymce.util.Tools.resolve('tinymce.util.Class');\n\n    var global$b = tinymce.util.Tools.resolve('tinymce.util.EventDispatcher');\n\n    var BoxUtils = {\n      parseBox: function (value) {\n        var len;\n        var radix = 10;\n        if (!value) {\n          return;\n        }\n        if (typeof value === 'number') {\n          value = value || 0;\n          return {\n            top: value,\n            left: value,\n            bottom: value,\n            right: value\n          };\n        }\n        value = value.split(' ');\n        len = value.length;\n        if (len === 1) {\n          value[1] = value[2] = value[3] = value[0];\n        } else if (len === 2) {\n          value[2] = value[0];\n          value[3] = value[1];\n        } else if (len === 3) {\n          value[3] = value[1];\n        }\n        return {\n          top: parseInt(value[0], radix) || 0,\n          right: parseInt(value[1], radix) || 0,\n          bottom: parseInt(value[2], radix) || 0,\n          left: parseInt(value[3], radix) || 0\n        };\n      },\n      measureBox: function (elm, prefix) {\n        function getStyle(name) {\n          var defaultView = elm.ownerDocument.defaultView;\n          if (defaultView) {\n            var computedStyle = defaultView.getComputedStyle(elm, null);\n            if (computedStyle) {\n              name = name.replace(/[A-Z]/g, function (a) {\n                return '-' + a;\n              });\n              return computedStyle.getPropertyValue(name);\n            } else {\n              return null;\n            }\n          }\n          return elm.currentStyle[name];\n        }\n        function getSide(name) {\n          var val = parseFloat(getStyle(name));\n          return isNaN(val) ? 0 : val;\n        }\n        return {\n          top: getSide(prefix + 'TopWidth'),\n          right: getSide(prefix + 'RightWidth'),\n          bottom: getSide(prefix + 'BottomWidth'),\n          left: getSide(prefix + 'LeftWidth')\n        };\n      }\n    };\n\n    function noop$1() {\n    }\n    function ClassList(onchange) {\n      this.cls = [];\n      this.cls._map = {};\n      this.onchange = onchange || noop$1;\n      this.prefix = '';\n    }\n    global$2.extend(ClassList.prototype, {\n      add: function (cls) {\n        if (cls && !this.contains(cls)) {\n          this.cls._map[cls] = true;\n          this.cls.push(cls);\n          this._change();\n        }\n        return this;\n      },\n      remove: function (cls) {\n        if (this.contains(cls)) {\n          var i = void 0;\n          for (i = 0; i < this.cls.length; i++) {\n            if (this.cls[i] === cls) {\n              break;\n            }\n          }\n          this.cls.splice(i, 1);\n          delete this.cls._map[cls];\n          this._change();\n        }\n        return this;\n      },\n      toggle: function (cls, state) {\n        var curState = this.contains(cls);\n        if (curState !== state) {\n          if (curState) {\n            this.remove(cls);\n          } else {\n            this.add(cls);\n          }\n          this._change();\n        }\n        return this;\n      },\n      contains: function (cls) {\n        return !!this.cls._map[cls];\n      },\n      _change: function () {\n        delete this.clsValue;\n        this.onchange.call(this);\n      }\n    });\n    ClassList.prototype.toString = function () {\n      var value;\n      if (this.clsValue) {\n        return this.clsValue;\n      }\n      value = '';\n      for (var i = 0; i < this.cls.length; i++) {\n        if (i > 0) {\n          value += ' ';\n        }\n        value += this.prefix + this.cls[i];\n      }\n      return value;\n    };\n\n    function unique(array) {\n      var uniqueItems = [];\n      var i = array.length, item;\n      while (i--) {\n        item = array[i];\n        if (!item.__checked) {\n          uniqueItems.push(item);\n          item.__checked = 1;\n        }\n      }\n      i = uniqueItems.length;\n      while (i--) {\n        delete uniqueItems[i].__checked;\n      }\n      return uniqueItems;\n    }\n    var expression = /^([\\w\\\\*]+)?(?:#([\\w\\-\\\\]+))?(?:\\.([\\w\\\\\\.]+))?(?:\\[\\@?([\\w\\\\]+)([\\^\\$\\*!~]?=)([\\w\\\\]+)\\])?(?:\\:(.+))?/i;\n    var chunker = /((?:\\((?:\\([^()]+\\)|[^()]+)+\\)|\\[(?:\\[[^\\[\\]]*\\]|['\"][^'\"]*['\"]|[^\\[\\]'\"]+)+\\]|\\\\.|[^ >+~,(\\[\\\\]+)+|[>+~])(\\s*,\\s*)?((?:.|\\r|\\n)*)/g;\n    var whiteSpace = /^\\s*|\\s*$/g;\n    var Collection;\n    var Selector = global$a.extend({\n      init: function (selector) {\n        var match = this.match;\n        function compileNameFilter(name) {\n          if (name) {\n            name = name.toLowerCase();\n            return function (item) {\n              return name === '*' || item.type === name;\n            };\n          }\n        }\n        function compileIdFilter(id) {\n          if (id) {\n            return function (item) {\n              return item._name === id;\n            };\n          }\n        }\n        function compileClassesFilter(classes) {\n          if (classes) {\n            classes = classes.split('.');\n            return function (item) {\n              var i = classes.length;\n              while (i--) {\n                if (!item.classes.contains(classes[i])) {\n                  return false;\n                }\n              }\n              return true;\n            };\n          }\n        }\n        function compileAttrFilter(name, cmp, check) {\n          if (name) {\n            return function (item) {\n              var value = item[name] ? item[name]() : '';\n              return !cmp ? !!check : cmp === '=' ? value === check : cmp === '*=' ? value.indexOf(check) >= 0 : cmp === '~=' ? (' ' + value + ' ').indexOf(' ' + check + ' ') >= 0 : cmp === '!=' ? value !== check : cmp === '^=' ? value.indexOf(check) === 0 : cmp === '$=' ? value.substr(value.length - check.length) === check : false;\n            };\n          }\n        }\n        function compilePsuedoFilter(name) {\n          var notSelectors;\n          if (name) {\n            name = /(?:not\\((.+)\\))|(.+)/i.exec(name);\n            if (!name[1]) {\n              name = name[2];\n              return function (item, index, length) {\n                return name === 'first' ? index === 0 : name === 'last' ? index === length - 1 : name === 'even' ? index % 2 === 0 : name === 'odd' ? index % 2 === 1 : item[name] ? item[name]() : false;\n              };\n            }\n            notSelectors = parseChunks(name[1], []);\n            return function (item) {\n              return !match(item, notSelectors);\n            };\n          }\n        }\n        function compile(selector, filters, direct) {\n          var parts;\n          function add(filter) {\n            if (filter) {\n              filters.push(filter);\n            }\n          }\n          parts = expression.exec(selector.replace(whiteSpace, ''));\n          add(compileNameFilter(parts[1]));\n          add(compileIdFilter(parts[2]));\n          add(compileClassesFilter(parts[3]));\n          add(compileAttrFilter(parts[4], parts[5], parts[6]));\n          add(compilePsuedoFilter(parts[7]));\n          filters.pseudo = !!parts[7];\n          filters.direct = direct;\n          return filters;\n        }\n        function parseChunks(selector, selectors) {\n          var parts = [];\n          var extra, matches, i;\n          do {\n            chunker.exec('');\n            matches = chunker.exec(selector);\n            if (matches) {\n              selector = matches[3];\n              parts.push(matches[1]);\n              if (matches[2]) {\n                extra = matches[3];\n                break;\n              }\n            }\n          } while (matches);\n          if (extra) {\n            parseChunks(extra, selectors);\n          }\n          selector = [];\n          for (i = 0; i < parts.length; i++) {\n            if (parts[i] !== '>') {\n              selector.push(compile(parts[i], [], parts[i - 1] === '>'));\n            }\n          }\n          selectors.push(selector);\n          return selectors;\n        }\n        this._selectors = parseChunks(selector, []);\n      },\n      match: function (control, selectors) {\n        var i, l, si, sl, selector, fi, fl, filters, index, length, siblings, count, item;\n        selectors = selectors || this._selectors;\n        for (i = 0, l = selectors.length; i < l; i++) {\n          selector = selectors[i];\n          sl = selector.length;\n          item = control;\n          count = 0;\n          for (si = sl - 1; si >= 0; si--) {\n            filters = selector[si];\n            while (item) {\n              if (filters.pseudo) {\n                siblings = item.parent().items();\n                index = length = siblings.length;\n                while (index--) {\n                  if (siblings[index] === item) {\n                    break;\n                  }\n                }\n              }\n              for (fi = 0, fl = filters.length; fi < fl; fi++) {\n                if (!filters[fi](item, index, length)) {\n                  fi = fl + 1;\n                  break;\n                }\n              }\n              if (fi === fl) {\n                count++;\n                break;\n              } else {\n                if (si === sl - 1) {\n                  break;\n                }\n              }\n              item = item.parent();\n            }\n          }\n          if (count === sl) {\n            return true;\n          }\n        }\n        return false;\n      },\n      find: function (container) {\n        var matches = [], i, l;\n        var selectors = this._selectors;\n        function collect(items, selector, index) {\n          var i, l, fi, fl, item;\n          var filters = selector[index];\n          for (i = 0, l = items.length; i < l; i++) {\n            item = items[i];\n            for (fi = 0, fl = filters.length; fi < fl; fi++) {\n              if (!filters[fi](item, i, l)) {\n                fi = fl + 1;\n                break;\n              }\n            }\n            if (fi === fl) {\n              if (index === selector.length - 1) {\n                matches.push(item);\n              } else {\n                if (item.items) {\n                  collect(item.items(), selector, index + 1);\n                }\n              }\n            } else if (filters.direct) {\n              return;\n            }\n            if (item.items) {\n              collect(item.items(), selector, index);\n            }\n          }\n        }\n        if (container.items) {\n          for (i = 0, l = selectors.length; i < l; i++) {\n            collect(container.items(), selectors[i], 0);\n          }\n          if (l > 1) {\n            matches = unique(matches);\n          }\n        }\n        if (!Collection) {\n          Collection = Selector.Collection;\n        }\n        return new Collection(matches);\n      }\n    });\n\n    var Collection$1, proto;\n    var push = Array.prototype.push, slice = Array.prototype.slice;\n    proto = {\n      length: 0,\n      init: function (items) {\n        if (items) {\n          this.add(items);\n        }\n      },\n      add: function (items) {\n        var self = this;\n        if (!global$2.isArray(items)) {\n          if (items instanceof Collection$1) {\n            self.add(items.toArray());\n          } else {\n            push.call(self, items);\n          }\n        } else {\n          push.apply(self, items);\n        }\n        return self;\n      },\n      set: function (items) {\n        var self = this;\n        var len = self.length;\n        var i;\n        self.length = 0;\n        self.add(items);\n        for (i = self.length; i < len; i++) {\n          delete self[i];\n        }\n        return self;\n      },\n      filter: function (selector) {\n        var self = this;\n        var i, l;\n        var matches = [];\n        var item, match;\n        if (typeof selector === 'string') {\n          selector = new Selector(selector);\n          match = function (item) {\n            return selector.match(item);\n          };\n        } else {\n          match = selector;\n        }\n        for (i = 0, l = self.length; i < l; i++) {\n          item = self[i];\n          if (match(item)) {\n            matches.push(item);\n          }\n        }\n        return new Collection$1(matches);\n      },\n      slice: function () {\n        return new Collection$1(slice.apply(this, arguments));\n      },\n      eq: function (index) {\n        return index === -1 ? this.slice(index) : this.slice(index, +index + 1);\n      },\n      each: function (callback) {\n        global$2.each(this, callback);\n        return this;\n      },\n      toArray: function () {\n        return global$2.toArray(this);\n      },\n      indexOf: function (ctrl) {\n        var self = this;\n        var i = self.length;\n        while (i--) {\n          if (self[i] === ctrl) {\n            break;\n          }\n        }\n        return i;\n      },\n      reverse: function () {\n        return new Collection$1(global$2.toArray(this).reverse());\n      },\n      hasClass: function (cls) {\n        return this[0] ? this[0].classes.contains(cls) : false;\n      },\n      prop: function (name, value) {\n        var self = this;\n        var item;\n        if (value !== undefined) {\n          self.each(function (item) {\n            if (item[name]) {\n              item[name](value);\n            }\n          });\n          return self;\n        }\n        item = self[0];\n        if (item && item[name]) {\n          return item[name]();\n        }\n      },\n      exec: function (name) {\n        var self = this, args = global$2.toArray(arguments).slice(1);\n        self.each(function (item) {\n          if (item[name]) {\n            item[name].apply(item, args);\n          }\n        });\n        return self;\n      },\n      remove: function () {\n        var i = this.length;\n        while (i--) {\n          this[i].remove();\n        }\n        return this;\n      },\n      addClass: function (cls) {\n        return this.each(function (item) {\n          item.classes.add(cls);\n        });\n      },\n      removeClass: function (cls) {\n        return this.each(function (item) {\n          item.classes.remove(cls);\n        });\n      }\n    };\n    global$2.each('fire on off show hide append prepend before after reflow'.split(' '), function (name) {\n      proto[name] = function () {\n        var args = global$2.toArray(arguments);\n        this.each(function (ctrl) {\n          if (name in ctrl) {\n            ctrl[name].apply(ctrl, args);\n          }\n        });\n        return this;\n      };\n    });\n    global$2.each('text name disabled active selected checked visible parent value data'.split(' '), function (name) {\n      proto[name] = function (value) {\n        return this.prop(name, value);\n      };\n    });\n    Collection$1 = global$a.extend(proto);\n    Selector.Collection = Collection$1;\n    var Collection$2 = Collection$1;\n\n    var Binding = function (settings) {\n      this.create = settings.create;\n    };\n    Binding.create = function (model, name) {\n      return new Binding({\n        create: function (otherModel, otherName) {\n          var bindings;\n          var fromSelfToOther = function (e) {\n            otherModel.set(otherName, e.value);\n          };\n          var fromOtherToSelf = function (e) {\n            model.set(name, e.value);\n          };\n          otherModel.on('change:' + otherName, fromOtherToSelf);\n          model.on('change:' + name, fromSelfToOther);\n          bindings = otherModel._bindings;\n          if (!bindings) {\n            bindings = otherModel._bindings = [];\n            otherModel.on('destroy', function () {\n              var i = bindings.length;\n              while (i--) {\n                bindings[i]();\n              }\n            });\n          }\n          bindings.push(function () {\n            model.off('change:' + name, fromSelfToOther);\n          });\n          return model.get(name);\n        }\n      });\n    };\n\n    var global$c = tinymce.util.Tools.resolve('tinymce.util.Observable');\n\n    function isNode(node) {\n      return node.nodeType > 0;\n    }\n    function isEqual(a, b) {\n      var k, checked;\n      if (a === b) {\n        return true;\n      }\n      if (a === null || b === null) {\n        return a === b;\n      }\n      if (typeof a !== 'object' || typeof b !== 'object') {\n        return a === b;\n      }\n      if (global$2.isArray(b)) {\n        if (a.length !== b.length) {\n          return false;\n        }\n        k = a.length;\n        while (k--) {\n          if (!isEqual(a[k], b[k])) {\n            return false;\n          }\n        }\n      }\n      if (isNode(a) || isNode(b)) {\n        return a === b;\n      }\n      checked = {};\n      for (k in b) {\n        if (!isEqual(a[k], b[k])) {\n          return false;\n        }\n        checked[k] = true;\n      }\n      for (k in a) {\n        if (!checked[k] && !isEqual(a[k], b[k])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    var ObservableObject = global$a.extend({\n      Mixins: [global$c],\n      init: function (data) {\n        var name, value;\n        data = data || {};\n        for (name in data) {\n          value = data[name];\n          if (value instanceof Binding) {\n            data[name] = value.create(this, name);\n          }\n        }\n        this.data = data;\n      },\n      set: function (name, value) {\n        var key, args;\n        var oldValue = this.data[name];\n        if (value instanceof Binding) {\n          value = value.create(this, name);\n        }\n        if (typeof name === 'object') {\n          for (key in name) {\n            this.set(key, name[key]);\n          }\n          return this;\n        }\n        if (!isEqual(oldValue, value)) {\n          this.data[name] = value;\n          args = {\n            target: this,\n            name: name,\n            value: value,\n            oldValue: oldValue\n          };\n          this.fire('change:' + name, args);\n          this.fire('change', args);\n        }\n        return this;\n      },\n      get: function (name) {\n        return this.data[name];\n      },\n      has: function (name) {\n        return name in this.data;\n      },\n      bind: function (name) {\n        return Binding.create(this, name);\n      },\n      destroy: function () {\n        this.fire('destroy');\n      }\n    });\n\n    var dirtyCtrls = {}, animationFrameRequested;\n    var ReflowQueue = {\n      add: function (ctrl) {\n        var parent = ctrl.parent();\n        if (parent) {\n          if (!parent._layout || parent._layout.isNative()) {\n            return;\n          }\n          if (!dirtyCtrls[parent._id]) {\n            dirtyCtrls[parent._id] = parent;\n          }\n          if (!animationFrameRequested) {\n            animationFrameRequested = true;\n            global$7.requestAnimationFrame(function () {\n              var id, ctrl;\n              animationFrameRequested = false;\n              for (id in dirtyCtrls) {\n                ctrl = dirtyCtrls[id];\n                if (ctrl.state.get('rendered')) {\n                  ctrl.reflow();\n                }\n              }\n              dirtyCtrls = {};\n            }, domGlobals.document.body);\n          }\n        }\n      },\n      remove: function (ctrl) {\n        if (dirtyCtrls[ctrl._id]) {\n          delete dirtyCtrls[ctrl._id];\n        }\n      }\n    };\n\n    var hasMouseWheelEventSupport = 'onmousewheel' in domGlobals.document;\n    var hasWheelEventSupport = false;\n    var classPrefix = 'mce-';\n    var Control, idCounter = 0;\n    var proto$1 = {\n      Statics: { classPrefix: classPrefix },\n      isRtl: function () {\n        return Control.rtl;\n      },\n      classPrefix: classPrefix,\n      init: function (settings) {\n        var self = this;\n        var classes, defaultClasses;\n        function applyClasses(classes) {\n          var i;\n          classes = classes.split(' ');\n          for (i = 0; i < classes.length; i++) {\n            self.classes.add(classes[i]);\n          }\n        }\n        self.settings = settings = global$2.extend({}, self.Defaults, settings);\n        self._id = settings.id || 'mceu_' + idCounter++;\n        self._aria = { role: settings.role };\n        self._elmCache = {};\n        self.$ = global$9;\n        self.state = new ObservableObject({\n          visible: true,\n          active: false,\n          disabled: false,\n          value: ''\n        });\n        self.data = new ObservableObject(settings.data);\n        self.classes = new ClassList(function () {\n          if (self.state.get('rendered')) {\n            self.getEl().className = this.toString();\n          }\n        });\n        self.classes.prefix = self.classPrefix;\n        classes = settings.classes;\n        if (classes) {\n          if (self.Defaults) {\n            defaultClasses = self.Defaults.classes;\n            if (defaultClasses && classes !== defaultClasses) {\n              applyClasses(defaultClasses);\n            }\n          }\n          applyClasses(classes);\n        }\n        global$2.each('title text name visible disabled active value'.split(' '), function (name) {\n          if (name in settings) {\n            self[name](settings[name]);\n          }\n        });\n        self.on('click', function () {\n          if (self.disabled()) {\n            return false;\n          }\n        });\n        self.settings = settings;\n        self.borderBox = BoxUtils.parseBox(settings.border);\n        self.paddingBox = BoxUtils.parseBox(settings.padding);\n        self.marginBox = BoxUtils.parseBox(settings.margin);\n        if (settings.hidden) {\n          self.hide();\n        }\n      },\n      Properties: 'parent,name',\n      getContainerElm: function () {\n        var uiContainer = UiContainer.getUiContainer(this);\n        return uiContainer ? uiContainer : funcs.getContainer();\n      },\n      getParentCtrl: function (elm) {\n        var ctrl;\n        var lookup = this.getRoot().controlIdLookup;\n        while (elm && lookup) {\n          ctrl = lookup[elm.id];\n          if (ctrl) {\n            break;\n          }\n          elm = elm.parentNode;\n        }\n        return ctrl;\n      },\n      initLayoutRect: function () {\n        var self = this;\n        var settings = self.settings;\n        var borderBox, layoutRect;\n        var elm = self.getEl();\n        var width, height, minWidth, minHeight, autoResize;\n        var startMinWidth, startMinHeight, initialSize;\n        borderBox = self.borderBox = self.borderBox || BoxUtils.measureBox(elm, 'border');\n        self.paddingBox = self.paddingBox || BoxUtils.measureBox(elm, 'padding');\n        self.marginBox = self.marginBox || BoxUtils.measureBox(elm, 'margin');\n        initialSize = funcs.getSize(elm);\n        startMinWidth = settings.minWidth;\n        startMinHeight = settings.minHeight;\n        minWidth = startMinWidth || initialSize.width;\n        minHeight = startMinHeight || initialSize.height;\n        width = settings.width;\n        height = settings.height;\n        autoResize = settings.autoResize;\n        autoResize = typeof autoResize !== 'undefined' ? autoResize : !width && !height;\n        width = width || minWidth;\n        height = height || minHeight;\n        var deltaW = borderBox.left + borderBox.right;\n        var deltaH = borderBox.top + borderBox.bottom;\n        var maxW = settings.maxWidth || 65535;\n        var maxH = settings.maxHeight || 65535;\n        self._layoutRect = layoutRect = {\n          x: settings.x || 0,\n          y: settings.y || 0,\n          w: width,\n          h: height,\n          deltaW: deltaW,\n          deltaH: deltaH,\n          contentW: width - deltaW,\n          contentH: height - deltaH,\n          innerW: width - deltaW,\n          innerH: height - deltaH,\n          startMinWidth: startMinWidth || 0,\n          startMinHeight: startMinHeight || 0,\n          minW: Math.min(minWidth, maxW),\n          minH: Math.min(minHeight, maxH),\n          maxW: maxW,\n          maxH: maxH,\n          autoResize: autoResize,\n          scrollW: 0\n        };\n        self._lastLayoutRect = {};\n        return layoutRect;\n      },\n      layoutRect: function (newRect) {\n        var self = this;\n        var curRect = self._layoutRect, lastLayoutRect, size, deltaWidth, deltaHeight, repaintControls;\n        if (!curRect) {\n          curRect = self.initLayoutRect();\n        }\n        if (newRect) {\n          deltaWidth = curRect.deltaW;\n          deltaHeight = curRect.deltaH;\n          if (newRect.x !== undefined) {\n            curRect.x = newRect.x;\n          }\n          if (newRect.y !== undefined) {\n            curRect.y = newRect.y;\n          }\n          if (newRect.minW !== undefined) {\n            curRect.minW = newRect.minW;\n          }\n          if (newRect.minH !== undefined) {\n            curRect.minH = newRect.minH;\n          }\n          size = newRect.w;\n          if (size !== undefined) {\n            size = size < curRect.minW ? curRect.minW : size;\n            size = size > curRect.maxW ? curRect.maxW : size;\n            curRect.w = size;\n            curRect.innerW = size - deltaWidth;\n          }\n          size = newRect.h;\n          if (size !== undefined) {\n            size = size < curRect.minH ? curRect.minH : size;\n            size = size > curRect.maxH ? curRect.maxH : size;\n            curRect.h = size;\n            curRect.innerH = size - deltaHeight;\n          }\n          size = newRect.innerW;\n          if (size !== undefined) {\n            size = size < curRect.minW - deltaWidth ? curRect.minW - deltaWidth : size;\n            size = size > curRect.maxW - deltaWidth ? curRect.maxW - deltaWidth : size;\n            curRect.innerW = size;\n            curRect.w = size + deltaWidth;\n          }\n          size = newRect.innerH;\n          if (size !== undefined) {\n            size = size < curRect.minH - deltaHeight ? curRect.minH - deltaHeight : size;\n            size = size > curRect.maxH - deltaHeight ? curRect.maxH - deltaHeight : size;\n            curRect.innerH = size;\n            curRect.h = size + deltaHeight;\n          }\n          if (newRect.contentW !== undefined) {\n            curRect.contentW = newRect.contentW;\n          }\n          if (newRect.contentH !== undefined) {\n            curRect.contentH = newRect.contentH;\n          }\n          lastLayoutRect = self._lastLayoutRect;\n          if (lastLayoutRect.x !== curRect.x || lastLayoutRect.y !== curRect.y || lastLayoutRect.w !== curRect.w || lastLayoutRect.h !== curRect.h) {\n            repaintControls = Control.repaintControls;\n            if (repaintControls) {\n              if (repaintControls.map && !repaintControls.map[self._id]) {\n                repaintControls.push(self);\n                repaintControls.map[self._id] = true;\n              }\n            }\n            lastLayoutRect.x = curRect.x;\n            lastLayoutRect.y = curRect.y;\n            lastLayoutRect.w = curRect.w;\n            lastLayoutRect.h = curRect.h;\n          }\n          return self;\n        }\n        return curRect;\n      },\n      repaint: function () {\n        var self = this;\n        var style, bodyStyle, bodyElm, rect, borderBox;\n        var borderW, borderH, lastRepaintRect, round, value;\n        round = !domGlobals.document.createRange ? Math.round : function (value) {\n          return value;\n        };\n        style = self.getEl().style;\n        rect = self._layoutRect;\n        lastRepaintRect = self._lastRepaintRect || {};\n        borderBox = self.borderBox;\n        borderW = borderBox.left + borderBox.right;\n        borderH = borderBox.top + borderBox.bottom;\n        if (rect.x !== lastRepaintRect.x) {\n          style.left = round(rect.x) + 'px';\n          lastRepaintRect.x = rect.x;\n        }\n        if (rect.y !== lastRepaintRect.y) {\n          style.top = round(rect.y) + 'px';\n          lastRepaintRect.y = rect.y;\n        }\n        if (rect.w !== lastRepaintRect.w) {\n          value = round(rect.w - borderW);\n          style.width = (value >= 0 ? value : 0) + 'px';\n          lastRepaintRect.w = rect.w;\n        }\n        if (rect.h !== lastRepaintRect.h) {\n          value = round(rect.h - borderH);\n          style.height = (value >= 0 ? value : 0) + 'px';\n          lastRepaintRect.h = rect.h;\n        }\n        if (self._hasBody && rect.innerW !== lastRepaintRect.innerW) {\n          value = round(rect.innerW);\n          bodyElm = self.getEl('body');\n          if (bodyElm) {\n            bodyStyle = bodyElm.style;\n            bodyStyle.width = (value >= 0 ? value : 0) + 'px';\n          }\n          lastRepaintRect.innerW = rect.innerW;\n        }\n        if (self._hasBody && rect.innerH !== lastRepaintRect.innerH) {\n          value = round(rect.innerH);\n          bodyElm = bodyElm || self.getEl('body');\n          if (bodyElm) {\n            bodyStyle = bodyStyle || bodyElm.style;\n            bodyStyle.height = (value >= 0 ? value : 0) + 'px';\n          }\n          lastRepaintRect.innerH = rect.innerH;\n        }\n        self._lastRepaintRect = lastRepaintRect;\n        self.fire('repaint', {}, false);\n      },\n      updateLayoutRect: function () {\n        var self = this;\n        self.parent()._lastRect = null;\n        funcs.css(self.getEl(), {\n          width: '',\n          height: ''\n        });\n        self._layoutRect = self._lastRepaintRect = self._lastLayoutRect = null;\n        self.initLayoutRect();\n      },\n      on: function (name, callback) {\n        var self = this;\n        function resolveCallbackName(name) {\n          var callback, scope;\n          if (typeof name !== 'string') {\n            return name;\n          }\n          return function (e) {\n            if (!callback) {\n              self.parentsAndSelf().each(function (ctrl) {\n                var callbacks = ctrl.settings.callbacks;\n                if (callbacks && (callback = callbacks[name])) {\n                  scope = ctrl;\n                  return false;\n                }\n              });\n            }\n            if (!callback) {\n              e.action = name;\n              this.fire('execute', e);\n              return;\n            }\n            return callback.call(scope, e);\n          };\n        }\n        getEventDispatcher(self).on(name, resolveCallbackName(callback));\n        return self;\n      },\n      off: function (name, callback) {\n        getEventDispatcher(this).off(name, callback);\n        return this;\n      },\n      fire: function (name, args, bubble) {\n        var self = this;\n        args = args || {};\n        if (!args.control) {\n          args.control = self;\n        }\n        args = getEventDispatcher(self).fire(name, args);\n        if (bubble !== false && self.parent) {\n          var parent = self.parent();\n          while (parent && !args.isPropagationStopped()) {\n            parent.fire(name, args, false);\n            parent = parent.parent();\n          }\n        }\n        return args;\n      },\n      hasEventListeners: function (name) {\n        return getEventDispatcher(this).has(name);\n      },\n      parents: function (selector) {\n        var self = this;\n        var ctrl, parents = new Collection$2();\n        for (ctrl = self.parent(); ctrl; ctrl = ctrl.parent()) {\n          parents.add(ctrl);\n        }\n        if (selector) {\n          parents = parents.filter(selector);\n        }\n        return parents;\n      },\n      parentsAndSelf: function (selector) {\n        return new Collection$2(this).add(this.parents(selector));\n      },\n      next: function () {\n        var parentControls = this.parent().items();\n        return parentControls[parentControls.indexOf(this) + 1];\n      },\n      prev: function () {\n        var parentControls = this.parent().items();\n        return parentControls[parentControls.indexOf(this) - 1];\n      },\n      innerHtml: function (html) {\n        this.$el.html(html);\n        return this;\n      },\n      getEl: function (suffix) {\n        var id = suffix ? this._id + '-' + suffix : this._id;\n        if (!this._elmCache[id]) {\n          this._elmCache[id] = global$9('#' + id)[0];\n        }\n        return this._elmCache[id];\n      },\n      show: function () {\n        return this.visible(true);\n      },\n      hide: function () {\n        return this.visible(false);\n      },\n      focus: function () {\n        try {\n          this.getEl().focus();\n        } catch (ex) {\n        }\n        return this;\n      },\n      blur: function () {\n        this.getEl().blur();\n        return this;\n      },\n      aria: function (name, value) {\n        var self = this, elm = self.getEl(self.ariaTarget);\n        if (typeof value === 'undefined') {\n          return self._aria[name];\n        }\n        self._aria[name] = value;\n        if (self.state.get('rendered')) {\n          elm.setAttribute(name === 'role' ? name : 'aria-' + name, value);\n        }\n        return self;\n      },\n      encode: function (text, translate) {\n        if (translate !== false) {\n          text = this.translate(text);\n        }\n        return (text || '').replace(/[&<>\"]/g, function (match) {\n          return '&#' + match.charCodeAt(0) + ';';\n        });\n      },\n      translate: function (text) {\n        return Control.translate ? Control.translate(text) : text;\n      },\n      before: function (items) {\n        var self = this, parent = self.parent();\n        if (parent) {\n          parent.insert(items, parent.items().indexOf(self), true);\n        }\n        return self;\n      },\n      after: function (items) {\n        var self = this, parent = self.parent();\n        if (parent) {\n          parent.insert(items, parent.items().indexOf(self));\n        }\n        return self;\n      },\n      remove: function () {\n        var self = this;\n        var elm = self.getEl();\n        var parent = self.parent();\n        var newItems, i;\n        if (self.items) {\n          var controls = self.items().toArray();\n          i = controls.length;\n          while (i--) {\n            controls[i].remove();\n          }\n        }\n        if (parent && parent.items) {\n          newItems = [];\n          parent.items().each(function (item) {\n            if (item !== self) {\n              newItems.push(item);\n            }\n          });\n          parent.items().set(newItems);\n          parent._lastRect = null;\n        }\n        if (self._eventsRoot && self._eventsRoot === self) {\n          global$9(elm).off();\n        }\n        var lookup = self.getRoot().controlIdLookup;\n        if (lookup) {\n          delete lookup[self._id];\n        }\n        if (elm && elm.parentNode) {\n          elm.parentNode.removeChild(elm);\n        }\n        self.state.set('rendered', false);\n        self.state.destroy();\n        self.fire('remove');\n        return self;\n      },\n      renderBefore: function (elm) {\n        global$9(elm).before(this.renderHtml());\n        this.postRender();\n        return this;\n      },\n      renderTo: function (elm) {\n        global$9(elm || this.getContainerElm()).append(this.renderHtml());\n        this.postRender();\n        return this;\n      },\n      preRender: function () {\n      },\n      render: function () {\n      },\n      renderHtml: function () {\n        return '<div id=\"' + this._id + '\" class=\"' + this.classes + '\"></div>';\n      },\n      postRender: function () {\n        var self = this;\n        var settings = self.settings;\n        var elm, box, parent, name, parentEventsRoot;\n        self.$el = global$9(self.getEl());\n        self.state.set('rendered', true);\n        for (name in settings) {\n          if (name.indexOf('on') === 0) {\n            self.on(name.substr(2), settings[name]);\n          }\n        }\n        if (self._eventsRoot) {\n          for (parent = self.parent(); !parentEventsRoot && parent; parent = parent.parent()) {\n            parentEventsRoot = parent._eventsRoot;\n          }\n          if (parentEventsRoot) {\n            for (name in parentEventsRoot._nativeEvents) {\n              self._nativeEvents[name] = true;\n            }\n          }\n        }\n        bindPendingEvents(self);\n        if (settings.style) {\n          elm = self.getEl();\n          if (elm) {\n            elm.setAttribute('style', settings.style);\n            elm.style.cssText = settings.style;\n          }\n        }\n        if (self.settings.border) {\n          box = self.borderBox;\n          self.$el.css({\n            'border-top-width': box.top,\n            'border-right-width': box.right,\n            'border-bottom-width': box.bottom,\n            'border-left-width': box.left\n          });\n        }\n        var root = self.getRoot();\n        if (!root.controlIdLookup) {\n          root.controlIdLookup = {};\n        }\n        root.controlIdLookup[self._id] = self;\n        for (var key in self._aria) {\n          self.aria(key, self._aria[key]);\n        }\n        if (self.state.get('visible') === false) {\n          self.getEl().style.display = 'none';\n        }\n        self.bindStates();\n        self.state.on('change:visible', function (e) {\n          var state = e.value;\n          var parentCtrl;\n          if (self.state.get('rendered')) {\n            self.getEl().style.display = state === false ? 'none' : '';\n            self.getEl().getBoundingClientRect();\n          }\n          parentCtrl = self.parent();\n          if (parentCtrl) {\n            parentCtrl._lastRect = null;\n          }\n          self.fire(state ? 'show' : 'hide');\n          ReflowQueue.add(self);\n        });\n        self.fire('postrender', {}, false);\n      },\n      bindStates: function () {\n      },\n      scrollIntoView: function (align) {\n        function getOffset(elm, rootElm) {\n          var x, y, parent = elm;\n          x = y = 0;\n          while (parent && parent !== rootElm && parent.nodeType) {\n            x += parent.offsetLeft || 0;\n            y += parent.offsetTop || 0;\n            parent = parent.offsetParent;\n          }\n          return {\n            x: x,\n            y: y\n          };\n        }\n        var elm = this.getEl(), parentElm = elm.parentNode;\n        var x, y, width, height, parentWidth, parentHeight;\n        var pos = getOffset(elm, parentElm);\n        x = pos.x;\n        y = pos.y;\n        width = elm.offsetWidth;\n        height = elm.offsetHeight;\n        parentWidth = parentElm.clientWidth;\n        parentHeight = parentElm.clientHeight;\n        if (align === 'end') {\n          x -= parentWidth - width;\n          y -= parentHeight - height;\n        } else if (align === 'center') {\n          x -= parentWidth / 2 - width / 2;\n          y -= parentHeight / 2 - height / 2;\n        }\n        parentElm.scrollLeft = x;\n        parentElm.scrollTop = y;\n        return this;\n      },\n      getRoot: function () {\n        var ctrl = this, rootControl;\n        var parents = [];\n        while (ctrl) {\n          if (ctrl.rootControl) {\n            rootControl = ctrl.rootControl;\n            break;\n          }\n          parents.push(ctrl);\n          rootControl = ctrl;\n          ctrl = ctrl.parent();\n        }\n        if (!rootControl) {\n          rootControl = this;\n        }\n        var i = parents.length;\n        while (i--) {\n          parents[i].rootControl = rootControl;\n        }\n        return rootControl;\n      },\n      reflow: function () {\n        ReflowQueue.remove(this);\n        var parent = this.parent();\n        if (parent && parent._layout && !parent._layout.isNative()) {\n          parent.reflow();\n        }\n        return this;\n      }\n    };\n    global$2.each('text title visible disabled active value'.split(' '), function (name) {\n      proto$1[name] = function (value) {\n        if (arguments.length === 0) {\n          return this.state.get(name);\n        }\n        if (typeof value !== 'undefined') {\n          this.state.set(name, value);\n        }\n        return this;\n      };\n    });\n    Control = global$a.extend(proto$1);\n    function getEventDispatcher(obj) {\n      if (!obj._eventDispatcher) {\n        obj._eventDispatcher = new global$b({\n          scope: obj,\n          toggleEvent: function (name, state) {\n            if (state && global$b.isNative(name)) {\n              if (!obj._nativeEvents) {\n                obj._nativeEvents = {};\n              }\n              obj._nativeEvents[name] = true;\n              if (obj.state.get('rendered')) {\n                bindPendingEvents(obj);\n              }\n            }\n          }\n        });\n      }\n      return obj._eventDispatcher;\n    }\n    function bindPendingEvents(eventCtrl) {\n      var i, l, parents, eventRootCtrl, nativeEvents, name;\n      function delegate(e) {\n        var control = eventCtrl.getParentCtrl(e.target);\n        if (control) {\n          control.fire(e.type, e);\n        }\n      }\n      function mouseLeaveHandler() {\n        var ctrl = eventRootCtrl._lastHoverCtrl;\n        if (ctrl) {\n          ctrl.fire('mouseleave', { target: ctrl.getEl() });\n          ctrl.parents().each(function (ctrl) {\n            ctrl.fire('mouseleave', { target: ctrl.getEl() });\n          });\n          eventRootCtrl._lastHoverCtrl = null;\n        }\n      }\n      function mouseEnterHandler(e) {\n        var ctrl = eventCtrl.getParentCtrl(e.target), lastCtrl = eventRootCtrl._lastHoverCtrl, idx = 0, i, parents, lastParents;\n        if (ctrl !== lastCtrl) {\n          eventRootCtrl._lastHoverCtrl = ctrl;\n          parents = ctrl.parents().toArray().reverse();\n          parents.push(ctrl);\n          if (lastCtrl) {\n            lastParents = lastCtrl.parents().toArray().reverse();\n            lastParents.push(lastCtrl);\n            for (idx = 0; idx < lastParents.length; idx++) {\n              if (parents[idx] !== lastParents[idx]) {\n                break;\n              }\n            }\n            for (i = lastParents.length - 1; i >= idx; i--) {\n              lastCtrl = lastParents[i];\n              lastCtrl.fire('mouseleave', { target: lastCtrl.getEl() });\n            }\n          }\n          for (i = idx; i < parents.length; i++) {\n            ctrl = parents[i];\n            ctrl.fire('mouseenter', { target: ctrl.getEl() });\n          }\n        }\n      }\n      function fixWheelEvent(e) {\n        e.preventDefault();\n        if (e.type === 'mousewheel') {\n          e.deltaY = -1 / 40 * e.wheelDelta;\n          if (e.wheelDeltaX) {\n            e.deltaX = -1 / 40 * e.wheelDeltaX;\n          }\n        } else {\n          e.deltaX = 0;\n          e.deltaY = e.detail;\n        }\n        e = eventCtrl.fire('wheel', e);\n      }\n      nativeEvents = eventCtrl._nativeEvents;\n      if (nativeEvents) {\n        parents = eventCtrl.parents().toArray();\n        parents.unshift(eventCtrl);\n        for (i = 0, l = parents.length; !eventRootCtrl && i < l; i++) {\n          eventRootCtrl = parents[i]._eventsRoot;\n        }\n        if (!eventRootCtrl) {\n          eventRootCtrl = parents[parents.length - 1] || eventCtrl;\n        }\n        eventCtrl._eventsRoot = eventRootCtrl;\n        for (l = i, i = 0; i < l; i++) {\n          parents[i]._eventsRoot = eventRootCtrl;\n        }\n        var eventRootDelegates = eventRootCtrl._delegates;\n        if (!eventRootDelegates) {\n          eventRootDelegates = eventRootCtrl._delegates = {};\n        }\n        for (name in nativeEvents) {\n          if (!nativeEvents) {\n            return false;\n          }\n          if (name === 'wheel' && !hasWheelEventSupport) {\n            if (hasMouseWheelEventSupport) {\n              global$9(eventCtrl.getEl()).on('mousewheel', fixWheelEvent);\n            } else {\n              global$9(eventCtrl.getEl()).on('DOMMouseScroll', fixWheelEvent);\n            }\n            continue;\n          }\n          if (name === 'mouseenter' || name === 'mouseleave') {\n            if (!eventRootCtrl._hasMouseEnter) {\n              global$9(eventRootCtrl.getEl()).on('mouseleave', mouseLeaveHandler).on('mouseover', mouseEnterHandler);\n              eventRootCtrl._hasMouseEnter = 1;\n            }\n          } else if (!eventRootDelegates[name]) {\n            global$9(eventRootCtrl.getEl()).on(name, delegate);\n            eventRootDelegates[name] = true;\n          }\n          nativeEvents[name] = false;\n        }\n      }\n    }\n    var Control$1 = Control;\n\n    var hasTabstopData = function (elm) {\n      return elm.getAttribute('data-mce-tabstop') ? true : false;\n    };\n    function KeyboardNavigation (settings) {\n      var root = settings.root;\n      var focusedElement, focusedControl;\n      function isElement(node) {\n        return node && node.nodeType === 1;\n      }\n      try {\n        focusedElement = domGlobals.document.activeElement;\n      } catch (ex) {\n        focusedElement = domGlobals.document.body;\n      }\n      focusedControl = root.getParentCtrl(focusedElement);\n      function getRole(elm) {\n        elm = elm || focusedElement;\n        if (isElement(elm)) {\n          return elm.getAttribute('role');\n        }\n        return null;\n      }\n      function getParentRole(elm) {\n        var role, parent = elm || focusedElement;\n        while (parent = parent.parentNode) {\n          if (role = getRole(parent)) {\n            return role;\n          }\n        }\n      }\n      function getAriaProp(name) {\n        var elm = focusedElement;\n        if (isElement(elm)) {\n          return elm.getAttribute('aria-' + name);\n        }\n      }\n      function isTextInputElement(elm) {\n        var tagName = elm.tagName.toUpperCase();\n        return tagName === 'INPUT' || tagName === 'TEXTAREA' || tagName === 'SELECT';\n      }\n      function canFocus(elm) {\n        if (isTextInputElement(elm) && !elm.hidden) {\n          return true;\n        }\n        if (hasTabstopData(elm)) {\n          return true;\n        }\n        if (/^(button|menuitem|checkbox|tab|menuitemcheckbox|option|gridcell|slider)$/.test(getRole(elm))) {\n          return true;\n        }\n        return false;\n      }\n      function getFocusElements(elm) {\n        var elements = [];\n        function collect(elm) {\n          if (elm.nodeType !== 1 || elm.style.display === 'none' || elm.disabled) {\n            return;\n          }\n          if (canFocus(elm)) {\n            elements.push(elm);\n          }\n          for (var i = 0; i < elm.childNodes.length; i++) {\n            collect(elm.childNodes[i]);\n          }\n        }\n        collect(elm || root.getEl());\n        return elements;\n      }\n      function getNavigationRoot(targetControl) {\n        var navigationRoot, controls;\n        targetControl = targetControl || focusedControl;\n        controls = targetControl.parents().toArray();\n        controls.unshift(targetControl);\n        for (var i = 0; i < controls.length; i++) {\n          navigationRoot = controls[i];\n          if (navigationRoot.settings.ariaRoot) {\n            break;\n          }\n        }\n        return navigationRoot;\n      }\n      function focusFirst(targetControl) {\n        var navigationRoot = getNavigationRoot(targetControl);\n        var focusElements = getFocusElements(navigationRoot.getEl());\n        if (navigationRoot.settings.ariaRemember && 'lastAriaIndex' in navigationRoot) {\n          moveFocusToIndex(navigationRoot.lastAriaIndex, focusElements);\n        } else {\n          moveFocusToIndex(0, focusElements);\n        }\n      }\n      function moveFocusToIndex(idx, elements) {\n        if (idx < 0) {\n          idx = elements.length - 1;\n        } else if (idx >= elements.length) {\n          idx = 0;\n        }\n        if (elements[idx]) {\n          elements[idx].focus();\n        }\n        return idx;\n      }\n      function moveFocus(dir, elements) {\n        var idx = -1;\n        var navigationRoot = getNavigationRoot();\n        elements = elements || getFocusElements(navigationRoot.getEl());\n        for (var i = 0; i < elements.length; i++) {\n          if (elements[i] === focusedElement) {\n            idx = i;\n          }\n        }\n        idx += dir;\n        navigationRoot.lastAriaIndex = moveFocusToIndex(idx, elements);\n      }\n      function left() {\n        var parentRole = getParentRole();\n        if (parentRole === 'tablist') {\n          moveFocus(-1, getFocusElements(focusedElement.parentNode));\n        } else if (focusedControl.parent().submenu) {\n          cancel();\n        } else {\n          moveFocus(-1);\n        }\n      }\n      function right() {\n        var role = getRole(), parentRole = getParentRole();\n        if (parentRole === 'tablist') {\n          moveFocus(1, getFocusElements(focusedElement.parentNode));\n        } else if (role === 'menuitem' && parentRole === 'menu' && getAriaProp('haspopup')) {\n          enter();\n        } else {\n          moveFocus(1);\n        }\n      }\n      function up() {\n        moveFocus(-1);\n      }\n      function down() {\n        var role = getRole(), parentRole = getParentRole();\n        if (role === 'menuitem' && parentRole === 'menubar') {\n          enter();\n        } else if (role === 'button' && getAriaProp('haspopup')) {\n          enter({ key: 'down' });\n        } else {\n          moveFocus(1);\n        }\n      }\n      function tab(e) {\n        var parentRole = getParentRole();\n        if (parentRole === 'tablist') {\n          var elm = getFocusElements(focusedControl.getEl('body'))[0];\n          if (elm) {\n            elm.focus();\n          }\n        } else {\n          moveFocus(e.shiftKey ? -1 : 1);\n        }\n      }\n      function cancel() {\n        focusedControl.fire('cancel');\n      }\n      function enter(aria) {\n        aria = aria || {};\n        focusedControl.fire('click', {\n          target: focusedElement,\n          aria: aria\n        });\n      }\n      root.on('keydown', function (e) {\n        function handleNonTabOrEscEvent(e, handler) {\n          if (isTextInputElement(focusedElement) || hasTabstopData(focusedElement)) {\n            return;\n          }\n          if (getRole(focusedElement) === 'slider') {\n            return;\n          }\n          if (handler(e) !== false) {\n            e.preventDefault();\n          }\n        }\n        if (e.isDefaultPrevented()) {\n          return;\n        }\n        switch (e.keyCode) {\n        case 37:\n          handleNonTabOrEscEvent(e, left);\n          break;\n        case 39:\n          handleNonTabOrEscEvent(e, right);\n          break;\n        case 38:\n          handleNonTabOrEscEvent(e, up);\n          break;\n        case 40:\n          handleNonTabOrEscEvent(e, down);\n          break;\n        case 27:\n          cancel();\n          break;\n        case 14:\n        case 13:\n        case 32:\n          handleNonTabOrEscEvent(e, enter);\n          break;\n        case 9:\n          tab(e);\n          e.preventDefault();\n          break;\n        }\n      });\n      root.on('focusin', function (e) {\n        focusedElement = e.target;\n        focusedControl = e.control;\n      });\n      return { focusFirst: focusFirst };\n    }\n\n    var selectorCache = {};\n    var Container = Control$1.extend({\n      init: function (settings) {\n        var self = this;\n        self._super(settings);\n        settings = self.settings;\n        if (settings.fixed) {\n          self.state.set('fixed', true);\n        }\n        self._items = new Collection$2();\n        if (self.isRtl()) {\n          self.classes.add('rtl');\n        }\n        self.bodyClasses = new ClassList(function () {\n          if (self.state.get('rendered')) {\n            self.getEl('body').className = this.toString();\n          }\n        });\n        self.bodyClasses.prefix = self.classPrefix;\n        self.classes.add('container');\n        self.bodyClasses.add('container-body');\n        if (settings.containerCls) {\n          self.classes.add(settings.containerCls);\n        }\n        self._layout = global$4.create((settings.layout || '') + 'layout');\n        if (self.settings.items) {\n          self.add(self.settings.items);\n        } else {\n          self.add(self.render());\n        }\n        self._hasBody = true;\n      },\n      items: function () {\n        return this._items;\n      },\n      find: function (selector) {\n        selector = selectorCache[selector] = selectorCache[selector] || new Selector(selector);\n        return selector.find(this);\n      },\n      add: function (items) {\n        var self = this;\n        self.items().add(self.create(items)).parent(self);\n        return self;\n      },\n      focus: function (keyboard) {\n        var self = this;\n        var focusCtrl, keyboardNav, items;\n        if (keyboard) {\n          keyboardNav = self.keyboardNav || self.parents().eq(-1)[0].keyboardNav;\n          if (keyboardNav) {\n            keyboardNav.focusFirst(self);\n            return;\n          }\n        }\n        items = self.find('*');\n        if (self.statusbar) {\n          items.add(self.statusbar.items());\n        }\n        items.each(function (ctrl) {\n          if (ctrl.settings.autofocus) {\n            focusCtrl = null;\n            return false;\n          }\n          if (ctrl.canFocus) {\n            focusCtrl = focusCtrl || ctrl;\n          }\n        });\n        if (focusCtrl) {\n          focusCtrl.focus();\n        }\n        return self;\n      },\n      replace: function (oldItem, newItem) {\n        var ctrlElm;\n        var items = this.items();\n        var i = items.length;\n        while (i--) {\n          if (items[i] === oldItem) {\n            items[i] = newItem;\n            break;\n          }\n        }\n        if (i >= 0) {\n          ctrlElm = newItem.getEl();\n          if (ctrlElm) {\n            ctrlElm.parentNode.removeChild(ctrlElm);\n          }\n          ctrlElm = oldItem.getEl();\n          if (ctrlElm) {\n            ctrlElm.parentNode.removeChild(ctrlElm);\n          }\n        }\n        newItem.parent(this);\n      },\n      create: function (items) {\n        var self = this;\n        var settings;\n        var ctrlItems = [];\n        if (!global$2.isArray(items)) {\n          items = [items];\n        }\n        global$2.each(items, function (item) {\n          if (item) {\n            if (!(item instanceof Control$1)) {\n              if (typeof item === 'string') {\n                item = { type: item };\n              }\n              settings = global$2.extend({}, self.settings.defaults, item);\n              item.type = settings.type = settings.type || item.type || self.settings.defaultType || (settings.defaults ? settings.defaults.type : null);\n              item = global$4.create(settings);\n            }\n            ctrlItems.push(item);\n          }\n        });\n        return ctrlItems;\n      },\n      renderNew: function () {\n        var self = this;\n        self.items().each(function (ctrl, index) {\n          var containerElm;\n          ctrl.parent(self);\n          if (!ctrl.state.get('rendered')) {\n            containerElm = self.getEl('body');\n            if (containerElm.hasChildNodes() && index <= containerElm.childNodes.length - 1) {\n              global$9(containerElm.childNodes[index]).before(ctrl.renderHtml());\n            } else {\n              global$9(containerElm).append(ctrl.renderHtml());\n            }\n            ctrl.postRender();\n            ReflowQueue.add(ctrl);\n          }\n        });\n        self._layout.applyClasses(self.items().filter(':visible'));\n        self._lastRect = null;\n        return self;\n      },\n      append: function (items) {\n        return this.add(items).renderNew();\n      },\n      prepend: function (items) {\n        var self = this;\n        self.items().set(self.create(items).concat(self.items().toArray()));\n        return self.renderNew();\n      },\n      insert: function (items, index, before) {\n        var self = this;\n        var curItems, beforeItems, afterItems;\n        items = self.create(items);\n        curItems = self.items();\n        if (!before && index < curItems.length - 1) {\n          index += 1;\n        }\n        if (index >= 0 && index < curItems.length) {\n          beforeItems = curItems.slice(0, index).toArray();\n          afterItems = curItems.slice(index).toArray();\n          curItems.set(beforeItems.concat(items, afterItems));\n        }\n        return self.renderNew();\n      },\n      fromJSON: function (data) {\n        var self = this;\n        for (var name in data) {\n          self.find('#' + name).value(data[name]);\n        }\n        return self;\n      },\n      toJSON: function () {\n        var self = this, data = {};\n        self.find('*').each(function (ctrl) {\n          var name = ctrl.name(), value = ctrl.value();\n          if (name && typeof value !== 'undefined') {\n            data[name] = value;\n          }\n        });\n        return data;\n      },\n      renderHtml: function () {\n        var self = this, layout = self._layout, role = this.settings.role;\n        self.preRender();\n        layout.preRender(self);\n        return '<div id=\"' + self._id + '\" class=\"' + self.classes + '\"' + (role ? ' role=\"' + this.settings.role + '\"' : '') + '>' + '<div id=\"' + self._id + '-body\" class=\"' + self.bodyClasses + '\">' + (self.settings.html || '') + layout.renderHtml(self) + '</div>' + '</div>';\n      },\n      postRender: function () {\n        var self = this;\n        var box;\n        self.items().exec('postRender');\n        self._super();\n        self._layout.postRender(self);\n        self.state.set('rendered', true);\n        if (self.settings.style) {\n          self.$el.css(self.settings.style);\n        }\n        if (self.settings.border) {\n          box = self.borderBox;\n          self.$el.css({\n            'border-top-width': box.top,\n            'border-right-width': box.right,\n            'border-bottom-width': box.bottom,\n            'border-left-width': box.left\n          });\n        }\n        if (!self.parent()) {\n          self.keyboardNav = KeyboardNavigation({ root: self });\n        }\n        return self;\n      },\n      initLayoutRect: function () {\n        var self = this, layoutRect = self._super();\n        self._layout.recalc(self);\n        return layoutRect;\n      },\n      recalc: function () {\n        var self = this;\n        var rect = self._layoutRect;\n        var lastRect = self._lastRect;\n        if (!lastRect || lastRect.w !== rect.w || lastRect.h !== rect.h) {\n          self._layout.recalc(self);\n          rect = self.layoutRect();\n          self._lastRect = {\n            x: rect.x,\n            y: rect.y,\n            w: rect.w,\n            h: rect.h\n          };\n          return true;\n        }\n      },\n      reflow: function () {\n        var i;\n        ReflowQueue.remove(this);\n        if (this.visible()) {\n          Control$1.repaintControls = [];\n          Control$1.repaintControls.map = {};\n          this.recalc();\n          i = Control$1.repaintControls.length;\n          while (i--) {\n            Control$1.repaintControls[i].repaint();\n          }\n          if (this.settings.layout !== 'flow' && this.settings.layout !== 'stack') {\n            this.repaint();\n          }\n          Control$1.repaintControls = [];\n        }\n        return this;\n      }\n    });\n\n    function getDocumentSize(doc) {\n      var documentElement, body, scrollWidth, clientWidth;\n      var offsetWidth, scrollHeight, clientHeight, offsetHeight;\n      var max = Math.max;\n      documentElement = doc.documentElement;\n      body = doc.body;\n      scrollWidth = max(documentElement.scrollWidth, body.scrollWidth);\n      clientWidth = max(documentElement.clientWidth, body.clientWidth);\n      offsetWidth = max(documentElement.offsetWidth, body.offsetWidth);\n      scrollHeight = max(documentElement.scrollHeight, body.scrollHeight);\n      clientHeight = max(documentElement.clientHeight, body.clientHeight);\n      offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\n      return {\n        width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\n        height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\n      };\n    }\n    function updateWithTouchData(e) {\n      var keys, i;\n      if (e.changedTouches) {\n        keys = 'screenX screenY pageX pageY clientX clientY'.split(' ');\n        for (i = 0; i < keys.length; i++) {\n          e[keys[i]] = e.changedTouches[0][keys[i]];\n        }\n      }\n    }\n    function DragHelper (id, settings) {\n      var $eventOverlay;\n      var doc = settings.document || domGlobals.document;\n      var downButton;\n      var start, stop, drag, startX, startY;\n      settings = settings || {};\n      var handleElement = doc.getElementById(settings.handle || id);\n      start = function (e) {\n        var docSize = getDocumentSize(doc);\n        var handleElm, cursor;\n        updateWithTouchData(e);\n        e.preventDefault();\n        downButton = e.button;\n        handleElm = handleElement;\n        startX = e.screenX;\n        startY = e.screenY;\n        if (domGlobals.window.getComputedStyle) {\n          cursor = domGlobals.window.getComputedStyle(handleElm, null).getPropertyValue('cursor');\n        } else {\n          cursor = handleElm.runtimeStyle.cursor;\n        }\n        $eventOverlay = global$9('<div></div>').css({\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: docSize.width,\n          height: docSize.height,\n          zIndex: 2147483647,\n          opacity: 0.0001,\n          cursor: cursor\n        }).appendTo(doc.body);\n        global$9(doc).on('mousemove touchmove', drag).on('mouseup touchend', stop);\n        settings.start(e);\n      };\n      drag = function (e) {\n        updateWithTouchData(e);\n        if (e.button !== downButton) {\n          return stop(e);\n        }\n        e.deltaX = e.screenX - startX;\n        e.deltaY = e.screenY - startY;\n        e.preventDefault();\n        settings.drag(e);\n      };\n      stop = function (e) {\n        updateWithTouchData(e);\n        global$9(doc).off('mousemove touchmove', drag).off('mouseup touchend', stop);\n        $eventOverlay.remove();\n        if (settings.stop) {\n          settings.stop(e);\n        }\n      };\n      this.destroy = function () {\n        global$9(handleElement).off();\n      };\n      global$9(handleElement).on('mousedown touchstart', start);\n    }\n\n    var Scrollable = {\n      init: function () {\n        var self = this;\n        self.on('repaint', self.renderScroll);\n      },\n      renderScroll: function () {\n        var self = this, margin = 2;\n        function repaintScroll() {\n          var hasScrollH, hasScrollV, bodyElm;\n          function repaintAxis(axisName, posName, sizeName, contentSizeName, hasScroll, ax) {\n            var containerElm, scrollBarElm, scrollThumbElm;\n            var containerSize, scrollSize, ratio, rect;\n            var posNameLower, sizeNameLower;\n            scrollBarElm = self.getEl('scroll' + axisName);\n            if (scrollBarElm) {\n              posNameLower = posName.toLowerCase();\n              sizeNameLower = sizeName.toLowerCase();\n              global$9(self.getEl('absend')).css(posNameLower, self.layoutRect()[contentSizeName] - 1);\n              if (!hasScroll) {\n                global$9(scrollBarElm).css('display', 'none');\n                return;\n              }\n              global$9(scrollBarElm).css('display', 'block');\n              containerElm = self.getEl('body');\n              scrollThumbElm = self.getEl('scroll' + axisName + 't');\n              containerSize = containerElm['client' + sizeName] - margin * 2;\n              containerSize -= hasScrollH && hasScrollV ? scrollBarElm['client' + ax] : 0;\n              scrollSize = containerElm['scroll' + sizeName];\n              ratio = containerSize / scrollSize;\n              rect = {};\n              rect[posNameLower] = containerElm['offset' + posName] + margin;\n              rect[sizeNameLower] = containerSize;\n              global$9(scrollBarElm).css(rect);\n              rect = {};\n              rect[posNameLower] = containerElm['scroll' + posName] * ratio;\n              rect[sizeNameLower] = containerSize * ratio;\n              global$9(scrollThumbElm).css(rect);\n            }\n          }\n          bodyElm = self.getEl('body');\n          hasScrollH = bodyElm.scrollWidth > bodyElm.clientWidth;\n          hasScrollV = bodyElm.scrollHeight > bodyElm.clientHeight;\n          repaintAxis('h', 'Left', 'Width', 'contentW', hasScrollH, 'Height');\n          repaintAxis('v', 'Top', 'Height', 'contentH', hasScrollV, 'Width');\n        }\n        function addScroll() {\n          function addScrollAxis(axisName, posName, sizeName, deltaPosName, ax) {\n            var scrollStart;\n            var axisId = self._id + '-scroll' + axisName, prefix = self.classPrefix;\n            global$9(self.getEl()).append('<div id=\"' + axisId + '\" class=\"' + prefix + 'scrollbar ' + prefix + 'scrollbar-' + axisName + '\">' + '<div id=\"' + axisId + 't\" class=\"' + prefix + 'scrollbar-thumb\"></div>' + '</div>');\n            self.draghelper = new DragHelper(axisId + 't', {\n              start: function () {\n                scrollStart = self.getEl('body')['scroll' + posName];\n                global$9('#' + axisId).addClass(prefix + 'active');\n              },\n              drag: function (e) {\n                var ratio, hasScrollH, hasScrollV, containerSize;\n                var layoutRect = self.layoutRect();\n                hasScrollH = layoutRect.contentW > layoutRect.innerW;\n                hasScrollV = layoutRect.contentH > layoutRect.innerH;\n                containerSize = self.getEl('body')['client' + sizeName] - margin * 2;\n                containerSize -= hasScrollH && hasScrollV ? self.getEl('scroll' + axisName)['client' + ax] : 0;\n                ratio = containerSize / self.getEl('body')['scroll' + sizeName];\n                self.getEl('body')['scroll' + posName] = scrollStart + e['delta' + deltaPosName] / ratio;\n              },\n              stop: function () {\n                global$9('#' + axisId).removeClass(prefix + 'active');\n              }\n            });\n          }\n          self.classes.add('scroll');\n          addScrollAxis('v', 'Top', 'Height', 'Y', 'Width');\n          addScrollAxis('h', 'Left', 'Width', 'X', 'Height');\n        }\n        if (self.settings.autoScroll) {\n          if (!self._hasScroll) {\n            self._hasScroll = true;\n            addScroll();\n            self.on('wheel', function (e) {\n              var bodyEl = self.getEl('body');\n              bodyEl.scrollLeft += (e.deltaX || 0) * 10;\n              bodyEl.scrollTop += e.deltaY * 10;\n              repaintScroll();\n            });\n            global$9(self.getEl('body')).on('scroll', repaintScroll);\n          }\n          repaintScroll();\n        }\n      }\n    };\n\n    var Panel = Container.extend({\n      Defaults: {\n        layout: 'fit',\n        containerCls: 'panel'\n      },\n      Mixins: [Scrollable],\n      renderHtml: function () {\n        var self = this;\n        var layout = self._layout;\n        var innerHtml = self.settings.html;\n        self.preRender();\n        layout.preRender(self);\n        if (typeof innerHtml === 'undefined') {\n          innerHtml = '<div id=\"' + self._id + '-body\" class=\"' + self.bodyClasses + '\">' + layout.renderHtml(self) + '</div>';\n        } else {\n          if (typeof innerHtml === 'function') {\n            innerHtml = innerHtml.call(self);\n          }\n          self._hasBody = false;\n        }\n        return '<div id=\"' + self._id + '\" class=\"' + self.classes + '\" hidefocus=\"1\" tabindex=\"-1\" role=\"group\">' + (self._preBodyHtml || '') + innerHtml + '</div>';\n      }\n    });\n\n    var Resizable = {\n      resizeToContent: function () {\n        this._layoutRect.autoResize = true;\n        this._lastRect = null;\n        this.reflow();\n      },\n      resizeTo: function (w, h) {\n        if (w <= 1 || h <= 1) {\n          var rect = funcs.getWindowSize();\n          w = w <= 1 ? w * rect.w : w;\n          h = h <= 1 ? h * rect.h : h;\n        }\n        this._layoutRect.autoResize = false;\n        return this.layoutRect({\n          minW: w,\n          minH: h,\n          w: w,\n          h: h\n        }).reflow();\n      },\n      resizeBy: function (dw, dh) {\n        var self = this, rect = self.layoutRect();\n        return self.resizeTo(rect.w + dw, rect.h + dh);\n      }\n    };\n\n    var documentClickHandler, documentScrollHandler, windowResizeHandler;\n    var visiblePanels = [];\n    var zOrder = [];\n    var hasModal;\n    function isChildOf(ctrl, parent) {\n      while (ctrl) {\n        if (ctrl === parent) {\n          return true;\n        }\n        ctrl = ctrl.parent();\n      }\n    }\n    function skipOrHidePanels(e) {\n      var i = visiblePanels.length;\n      while (i--) {\n        var panel = visiblePanels[i], clickCtrl = panel.getParentCtrl(e.target);\n        if (panel.settings.autohide) {\n          if (clickCtrl) {\n            if (isChildOf(clickCtrl, panel) || panel.parent() === clickCtrl) {\n              continue;\n            }\n          }\n          e = panel.fire('autohide', { target: e.target });\n          if (!e.isDefaultPrevented()) {\n            panel.hide();\n          }\n        }\n      }\n    }\n    function bindDocumentClickHandler() {\n      if (!documentClickHandler) {\n        documentClickHandler = function (e) {\n          if (e.button === 2) {\n            return;\n          }\n          skipOrHidePanels(e);\n        };\n        global$9(domGlobals.document).on('click touchstart', documentClickHandler);\n      }\n    }\n    function bindDocumentScrollHandler() {\n      if (!documentScrollHandler) {\n        documentScrollHandler = function () {\n          var i;\n          i = visiblePanels.length;\n          while (i--) {\n            repositionPanel(visiblePanels[i]);\n          }\n        };\n        global$9(domGlobals.window).on('scroll', documentScrollHandler);\n      }\n    }\n    function bindWindowResizeHandler() {\n      if (!windowResizeHandler) {\n        var docElm_1 = domGlobals.document.documentElement;\n        var clientWidth_1 = docElm_1.clientWidth, clientHeight_1 = docElm_1.clientHeight;\n        windowResizeHandler = function () {\n          if (!domGlobals.document.all || clientWidth_1 !== docElm_1.clientWidth || clientHeight_1 !== docElm_1.clientHeight) {\n            clientWidth_1 = docElm_1.clientWidth;\n            clientHeight_1 = docElm_1.clientHeight;\n            FloatPanel.hideAll();\n          }\n        };\n        global$9(domGlobals.window).on('resize', windowResizeHandler);\n      }\n    }\n    function repositionPanel(panel) {\n      var scrollY = funcs.getViewPort().y;\n      function toggleFixedChildPanels(fixed, deltaY) {\n        var parent;\n        for (var i = 0; i < visiblePanels.length; i++) {\n          if (visiblePanels[i] !== panel) {\n            parent = visiblePanels[i].parent();\n            while (parent && (parent = parent.parent())) {\n              if (parent === panel) {\n                visiblePanels[i].fixed(fixed).moveBy(0, deltaY).repaint();\n              }\n            }\n          }\n        }\n      }\n      if (panel.settings.autofix) {\n        if (!panel.state.get('fixed')) {\n          panel._autoFixY = panel.layoutRect().y;\n          if (panel._autoFixY < scrollY) {\n            panel.fixed(true).layoutRect({ y: 0 }).repaint();\n            toggleFixedChildPanels(true, scrollY - panel._autoFixY);\n          }\n        } else {\n          if (panel._autoFixY > scrollY) {\n            panel.fixed(false).layoutRect({ y: panel._autoFixY }).repaint();\n            toggleFixedChildPanels(false, panel._autoFixY - scrollY);\n          }\n        }\n      }\n    }\n    function addRemove(add, ctrl) {\n      var i, zIndex = FloatPanel.zIndex || 65535, topModal;\n      if (add) {\n        zOrder.push(ctrl);\n      } else {\n        i = zOrder.length;\n        while (i--) {\n          if (zOrder[i] === ctrl) {\n            zOrder.splice(i, 1);\n          }\n        }\n      }\n      if (zOrder.length) {\n        for (i = 0; i < zOrder.length; i++) {\n          if (zOrder[i].modal) {\n            zIndex++;\n            topModal = zOrder[i];\n          }\n          zOrder[i].getEl().style.zIndex = zIndex;\n          zOrder[i].zIndex = zIndex;\n          zIndex++;\n        }\n      }\n      var modalBlockEl = global$9('#' + ctrl.classPrefix + 'modal-block', ctrl.getContainerElm())[0];\n      if (topModal) {\n        global$9(modalBlockEl).css('z-index', topModal.zIndex - 1);\n      } else if (modalBlockEl) {\n        modalBlockEl.parentNode.removeChild(modalBlockEl);\n        hasModal = false;\n      }\n      FloatPanel.currentZIndex = zIndex;\n    }\n    var FloatPanel = Panel.extend({\n      Mixins: [\n        Movable,\n        Resizable\n      ],\n      init: function (settings) {\n        var self = this;\n        self._super(settings);\n        self._eventsRoot = self;\n        self.classes.add('floatpanel');\n        if (settings.autohide) {\n          bindDocumentClickHandler();\n          bindWindowResizeHandler();\n          visiblePanels.push(self);\n        }\n        if (settings.autofix) {\n          bindDocumentScrollHandler();\n          self.on('move', function () {\n            repositionPanel(this);\n          });\n        }\n        self.on('postrender show', function (e) {\n          if (e.control === self) {\n            var $modalBlockEl_1;\n            var prefix_1 = self.classPrefix;\n            if (self.modal && !hasModal) {\n              $modalBlockEl_1 = global$9('#' + prefix_1 + 'modal-block', self.getContainerElm());\n              if (!$modalBlockEl_1[0]) {\n                $modalBlockEl_1 = global$9('<div id=\"' + prefix_1 + 'modal-block\" class=\"' + prefix_1 + 'reset ' + prefix_1 + 'fade\"></div>').appendTo(self.getContainerElm());\n              }\n              global$7.setTimeout(function () {\n                $modalBlockEl_1.addClass(prefix_1 + 'in');\n                global$9(self.getEl()).addClass(prefix_1 + 'in');\n              });\n              hasModal = true;\n            }\n            addRemove(true, self);\n          }\n        });\n        self.on('show', function () {\n          self.parents().each(function (ctrl) {\n            if (ctrl.state.get('fixed')) {\n              self.fixed(true);\n              return false;\n            }\n          });\n        });\n        if (settings.popover) {\n          self._preBodyHtml = '<div class=\"' + self.classPrefix + 'arrow\"></div>';\n          self.classes.add('popover').add('bottom').add(self.isRtl() ? 'end' : 'start');\n        }\n        self.aria('label', settings.ariaLabel);\n        self.aria('labelledby', self._id);\n        self.aria('describedby', self.describedBy || self._id + '-none');\n      },\n      fixed: function (state) {\n        var self = this;\n        if (self.state.get('fixed') !== state) {\n          if (self.state.get('rendered')) {\n            var viewport = funcs.getViewPort();\n            if (state) {\n              self.layoutRect().y -= viewport.y;\n            } else {\n              self.layoutRect().y += viewport.y;\n            }\n          }\n          self.classes.toggle('fixed', state);\n          self.state.set('fixed', state);\n        }\n        return self;\n      },\n      show: function () {\n        var self = this;\n        var i;\n        var state = self._super();\n        i = visiblePanels.length;\n        while (i--) {\n          if (visiblePanels[i] === self) {\n            break;\n          }\n        }\n        if (i === -1) {\n          visiblePanels.push(self);\n        }\n        return state;\n      },\n      hide: function () {\n        removeVisiblePanel(this);\n        addRemove(false, this);\n        return this._super();\n      },\n      hideAll: function () {\n        FloatPanel.hideAll();\n      },\n      close: function () {\n        var self = this;\n        if (!self.fire('close').isDefaultPrevented()) {\n          self.remove();\n          addRemove(false, self);\n        }\n        return self;\n      },\n      remove: function () {\n        removeVisiblePanel(this);\n        this._super();\n      },\n      postRender: function () {\n        var self = this;\n        if (self.settings.bodyRole) {\n          this.getEl('body').setAttribute('role', self.settings.bodyRole);\n        }\n        return self._super();\n      }\n    });\n    FloatPanel.hideAll = function () {\n      var i = visiblePanels.length;\n      while (i--) {\n        var panel = visiblePanels[i];\n        if (panel && panel.settings.autohide) {\n          panel.hide();\n          visiblePanels.splice(i, 1);\n        }\n      }\n    };\n    function removeVisiblePanel(panel) {\n      var i;\n      i = visiblePanels.length;\n      while (i--) {\n        if (visiblePanels[i] === panel) {\n          visiblePanels.splice(i, 1);\n        }\n      }\n      i = zOrder.length;\n      while (i--) {\n        if (zOrder[i] === panel) {\n          zOrder.splice(i, 1);\n        }\n      }\n    }\n\n    var isFixed$1 = function (inlineToolbarContainer, editor) {\n      return !!(inlineToolbarContainer && !editor.settings.ui_container);\n    };\n    var render$1 = function (editor, theme, args) {\n      var panel, inlineToolbarContainer;\n      var DOM = global$3.DOM;\n      var fixedToolbarContainer = getFixedToolbarContainer(editor);\n      if (fixedToolbarContainer) {\n        inlineToolbarContainer = DOM.select(fixedToolbarContainer)[0];\n      }\n      var reposition = function () {\n        if (panel && panel.moveRel && panel.visible() && !panel._fixed) {\n          var scrollContainer = editor.selection.getScrollContainer(), body = editor.getBody();\n          var deltaX = 0, deltaY = 0;\n          if (scrollContainer) {\n            var bodyPos = DOM.getPos(body), scrollContainerPos = DOM.getPos(scrollContainer);\n            deltaX = Math.max(0, scrollContainerPos.x - bodyPos.x);\n            deltaY = Math.max(0, scrollContainerPos.y - bodyPos.y);\n          }\n          panel.fixed(false).moveRel(body, editor.rtl ? [\n            'tr-br',\n            'br-tr'\n          ] : [\n            'tl-bl',\n            'bl-tl',\n            'tr-br'\n          ]).moveBy(deltaX, deltaY);\n        }\n      };\n      var show = function () {\n        if (panel) {\n          panel.show();\n          reposition();\n          DOM.addClass(editor.getBody(), 'mce-edit-focus');\n        }\n      };\n      var hide = function () {\n        if (panel) {\n          panel.hide();\n          FloatPanel.hideAll();\n          DOM.removeClass(editor.getBody(), 'mce-edit-focus');\n        }\n      };\n      var render = function () {\n        if (panel) {\n          if (!panel.visible()) {\n            show();\n          }\n          return;\n        }\n        panel = theme.panel = global$4.create({\n          type: inlineToolbarContainer ? 'panel' : 'floatpanel',\n          role: 'application',\n          classes: 'tinymce tinymce-inline',\n          layout: 'flex',\n          direction: 'column',\n          align: 'stretch',\n          autohide: false,\n          autofix: true,\n          fixed: isFixed$1(inlineToolbarContainer, editor),\n          border: 1,\n          items: [\n            hasMenubar(editor) === false ? null : {\n              type: 'menubar',\n              border: '0 0 1 0',\n              items: Menubar.createMenuButtons(editor)\n            },\n            Toolbar.createToolbars(editor, getToolbarSize(editor))\n          ]\n        });\n        UiContainer.setUiContainer(editor, panel);\n        Events.fireBeforeRenderUI(editor);\n        if (inlineToolbarContainer) {\n          panel.renderTo(inlineToolbarContainer).reflow();\n        } else {\n          panel.renderTo().reflow();\n        }\n        A11y.addKeys(editor, panel);\n        show();\n        ContextToolbars.addContextualToolbars(editor);\n        editor.on('nodeChange', reposition);\n        editor.on('ResizeWindow', reposition);\n        editor.on('activate', show);\n        editor.on('deactivate', hide);\n        editor.nodeChanged();\n      };\n      editor.settings.content_editable = true;\n      editor.on('focus', function () {\n        if (isSkinDisabled(editor) === false && args.skinUiCss) {\n          DOM.styleSheetLoader.load(args.skinUiCss, render, render);\n        } else {\n          render();\n        }\n      });\n      editor.on('blur hide', hide);\n      editor.on('remove', function () {\n        if (panel) {\n          panel.remove();\n          panel = null;\n        }\n      });\n      if (isSkinDisabled(editor) === false && args.skinUiCss) {\n        DOM.styleSheetLoader.load(args.skinUiCss, SkinLoaded.fireSkinLoaded(editor));\n      } else {\n        SkinLoaded.fireSkinLoaded(editor)();\n      }\n      return {};\n    };\n    var Inline = { render: render$1 };\n\n    function Throbber (elm, inline) {\n      var self = this;\n      var state;\n      var classPrefix = Control$1.classPrefix;\n      var timer;\n      self.show = function (time, callback) {\n        function render() {\n          if (state) {\n            global$9(elm).append('<div class=\"' + classPrefix + 'throbber' + (inline ? ' ' + classPrefix + 'throbber-inline' : '') + '\"></div>');\n            if (callback) {\n              callback();\n            }\n          }\n        }\n        self.hide();\n        state = true;\n        if (time) {\n          timer = global$7.setTimeout(render, time);\n        } else {\n          render();\n        }\n        return self;\n      };\n      self.hide = function () {\n        var child = elm.lastChild;\n        global$7.clearTimeout(timer);\n        if (child && child.className.indexOf('throbber') !== -1) {\n          child.parentNode.removeChild(child);\n        }\n        state = false;\n        return self;\n      };\n    }\n\n    var setup = function (editor, theme) {\n      var throbber;\n      editor.on('ProgressState', function (e) {\n        throbber = throbber || new Throbber(theme.panel.getEl('body'));\n        if (e.state) {\n          throbber.show(e.time);\n        } else {\n          throbber.hide();\n        }\n      });\n    };\n    var ProgressState = { setup: setup };\n\n    var renderUI = function (editor, theme, args) {\n      var skinUrl = getSkinUrl(editor);\n      if (skinUrl) {\n        args.skinUiCss = skinUrl + '/skin.min.css';\n        editor.contentCSS.push(skinUrl + '/content' + (editor.inline ? '.inline' : '') + '.min.css');\n      }\n      ProgressState.setup(editor, theme);\n      return isInline(editor) ? Inline.render(editor, theme, args) : Iframe.render(editor, theme, args);\n    };\n    var Render = { renderUI: renderUI };\n\n    var Tooltip = Control$1.extend({\n      Mixins: [Movable],\n      Defaults: { classes: 'widget tooltip tooltip-n' },\n      renderHtml: function () {\n        var self = this, prefix = self.classPrefix;\n        return '<div id=\"' + self._id + '\" class=\"' + self.classes + '\" role=\"presentation\">' + '<div class=\"' + prefix + 'tooltip-arrow\"></div>' + '<div class=\"' + prefix + 'tooltip-inner\">' + self.encode(self.state.get('text')) + '</div>' + '</div>';\n      },\n      bindStates: function () {\n        var self = this;\n        self.state.on('change:text', function (e) {\n          self.getEl().lastChild.innerHTML = self.encode(e.value);\n        });\n        return self._super();\n      },\n      repaint: function () {\n        var self = this;\n        var style, rect;\n        style = self.getEl().style;\n        rect = self._layoutRect;\n        style.left = rect.x + 'px';\n        style.top = rect.y + 'px';\n        style.zIndex = 65535 + 65535;\n      }\n    });\n\n    var Widget = Control$1.extend({\n      init: function (settings) {\n        var self = this;\n        self._super(settings);\n        settings = self.settings;\n        self.canFocus = true;\n        if (settings.tooltip && Widget.tooltips !== false) {\n          self.on('mouseenter', function (e) {\n            var tooltip = self.tooltip().moveTo(-65535);\n            if (e.control === self) {\n              var rel = tooltip.text(settings.tooltip).show().testMoveRel(self.getEl(), [\n                'bc-tc',\n                'bc-tl',\n                'bc-tr'\n              ]);\n              tooltip.classes.toggle('tooltip-n', rel === 'bc-tc');\n              tooltip.classes.toggle('tooltip-nw', rel === 'bc-tl');\n              tooltip.classes.toggle('tooltip-ne', rel === 'bc-tr');\n              tooltip.moveRel(self.getEl(), rel);\n            } else {\n              tooltip.hide();\n            }\n          });\n          self.on('mouseleave mousedown click', function () {\n            self.tooltip().remove();\n            self._tooltip = null;\n          });\n        }\n        self.aria('label', settings.ariaLabel || settings.tooltip);\n      },\n      tooltip: function () {\n        if (!this._tooltip) {\n          this._tooltip = new Tooltip({ type: 'tooltip' });\n          UiContainer.inheritUiContainer(this, this._tooltip);\n          this._tooltip.renderTo();\n        }\n        return this._tooltip;\n      },\n      postRender: function () {\n        var self = this, settings = self.settings;\n        self._super();\n        if (!self.parent() && (settings.width || settings.height)) {\n          self.initLayoutRect();\n          self.repaint();\n        }\n        if (settings.autofocus) {\n          self.focus();\n        }\n      },\n      bindStates: function () {\n        var self = this;\n        function disable(state) {\n          self.aria('disabled', state);\n          self.classes.toggle('disabled', state);\n        }\n        function active(state) {\n          self.aria('pressed', state);\n          self.classes.toggle('active', state);\n        }\n        self.state.on('change:disabled', function (e) {\n          disable(e.value);\n        });\n        self.state.on('change:active', function (e) {\n          active(e.value);\n        });\n        if (self.state.get('disabled')) {\n          disable(true);\n        }\n        if (self.state.get('active')) {\n          active(true);\n        }\n        return self._super();\n      },\n      remove: function () {\n        this._super();\n        if (this._tooltip) {\n          this._tooltip.remove();\n          this._tooltip = null;\n        }\n      }\n    });\n\n    var Progress = Widget.extend({\n      Defaults: { value: 0 },\n      init: function (settings) {\n        var self = this;\n        self._super(settings);\n        self.classes.add('progress');\n        if (!self.settings.filter) {\n          self.settings.filter = function (value) {\n            return Math.round(value);\n          };\n        }\n      },\n      renderHtml: function () {\n        var self = this, id = self._id, prefix = this.classPrefix;\n        return '<div id=\"' + id + '\" class=\"' + self.classes + '\">' + '<div class=\"' + prefix + 'bar-container\">' + '<div class=\"' + prefix + 'bar\"></div>' + '</div>' + '<div class=\"' + prefix + 'text\">0%</div>' + '</div>';\n      },\n      postRender: function () {\n        var self = this;\n        self._super();\n        self.value(self.settings.value);\n        return self;\n      },\n      bindStates: function () {\n        var self = this;\n        function setValue(value) {\n          value = self.settings.filter(value);\n          self.getEl().lastChild.innerHTML = value + '%';\n          self.getEl().firstChild.firstChild.style.width = value + '%';\n        }\n        self.state.on('change:value', function (e) {\n          setValue(e.value);\n        });\n        setValue(self.state.get('value'));\n        return self._super();\n      }\n    });\n\n    var updateLiveRegion = function (ctx, text) {\n      ctx.getEl().lastChild.textContent = text + (ctx.progressBar ? ' ' + ctx.progressBar.value() + '%' : '');\n    };\n    var Notification = Control$1.extend({\n      Mixins: [Movable],\n      Defaults: { classes: 'widget notification' },\n      init: function (settings) {\n        var self = this;\n        self._super(settings);\n        self.maxWidth = settings.maxWidth;\n        if (settings.text) {\n          self.text(settings.text);\n        }\n        if (settings.icon) {\n          self.icon = settings.icon;\n        }\n        if (settings.color) {\n          self.color = settings.color;\n        }\n        if (settings.type) {\n          self.classes.add('notification-' + settings.type);\n        }\n        if (settings.timeout && (settings.timeout < 0 || settings.timeout > 0) && !settings.closeButton) {\n          self.closeButton = false;\n        } else {\n          self.classes.add('has-close');\n          self.closeButton = true;\n        }\n        if (settings.progressBar) {\n          self.progressBar = new Progress();\n        }\n        self.on('click', function (e) {\n          if (e.target.className.indexOf(self.classPrefix + 'close') !== -1) {\n            self.close();\n          }\n        });\n      },\n      renderHtml: function () {\n        var self = this;\n        var prefix = self.classPrefix;\n        var icon = '', closeButton = '', progressBar = '', notificationStyle = '';\n        if (self.icon) {\n          icon = '<i class=\"' + prefix + 'ico' + ' ' + prefix + 'i-' + self.icon + '\"></i>';\n        }\n        notificationStyle = ' style=\"max-width: ' + self.maxWidth + 'px;' + (self.color ? 'background-color: ' + self.color + ';\"' : '\"');\n        if (self.closeButton) {\n          closeButton = '<button type=\"button\" class=\"' + prefix + 'close\" aria-hidden=\"true\">\\xD7</button>';\n        }\n        if (self.progressBar) {\n          progressBar = self.progressBar.renderHtml();\n        }\n        return '<div id=\"' + self._id + '\" class=\"' + self.classes + '\"' + notificationStyle + ' role=\"presentation\">' + icon + '<div class=\"' + prefix + 'notification-inner\">' + self.state.get('text') + '</div>' + progressBar + closeButton + '<div style=\"clip: rect(1px, 1px, 1px, 1px);height: 1px;overflow: hidden;position: absolute;width: 1px;\"' + ' aria-live=\"assertive\" aria-relevant=\"additions\" aria-atomic=\"true\"></div>' + '</div>';\n      },\n      postRender: function () {\n        var self = this;\n        global$7.setTimeout(function () {\n          self.$el.addClass(self.classPrefix + 'in');\n          updateLiveRegion(self, self.state.get('text'));\n        }, 100);\n        return self._super();\n      },\n      bindStates: function () {\n        var self = this;\n        self.state.on('change:text', function (e) {\n          self.getEl().firstChild.innerHTML = e.value;\n          updateLiveRegion(self, e.value);\n        });\n        if (self.progressBar) {\n          self.progressBar.bindStates();\n          self.progressBar.state.on('change:value', function (e) {\n            updateLiveRegion(self, self.state.get('text'));\n          });\n        }\n        return self._super();\n      },\n      close: function () {\n        var self = this;\n        if (!self.fire('close').isDefaultPrevented()) {\n          self.remove();\n        }\n        return self;\n      },\n      repaint: function () {\n        var self = this;\n        var style, rect;\n        style = self.getEl().style;\n        rect = self._layoutRect;\n        style.left = rect.x + 'px';\n        style.top = rect.y + 'px';\n        style.zIndex = 65535 - 1;\n      }\n    });\n\n    function NotificationManagerImpl (editor) {\n      var getEditorContainer = function (editor) {\n        return editor.inline ? editor.getElement() : editor.getContentAreaContainer();\n      };\n      var getContainerWidth = function () {\n        var container = getEditorContainer(editor);\n        return funcs.getSize(container).width;\n      };\n      var prePositionNotifications = function (notifications) {\n        each(notifications, function (notification) {\n          notification.moveTo(0, 0);\n        });\n      };\n      var positionNotifications = function (notifications) {\n        if (notifications.length > 0) {\n          var firstItem = notifications.slice(0, 1)[0];\n          var container = getEditorContainer(editor);\n          firstItem.moveRel(container, 'tc-tc');\n          each(notifications, function (notification, index) {\n            if (index > 0) {\n              notification.moveRel(notifications[index - 1].getEl(), 'bc-tc');\n            }\n          });\n        }\n      };\n      var reposition = function (notifications) {\n        prePositionNotifications(notifications);\n        positionNotifications(notifications);\n      };\n      var open = function (args, closeCallback) {\n        var extendedArgs = global$2.extend(args, { maxWidth: getContainerWidth() });\n        var notif = new Notification(extendedArgs);\n        notif.args = extendedArgs;\n        if (extendedArgs.timeout > 0) {\n          notif.timer = setTimeout(function () {\n            notif.close();\n            closeCallback();\n          }, extendedArgs.timeout);\n        }\n        notif.on('close', function () {\n          closeCallback();\n        });\n        notif.renderTo();\n        return notif;\n      };\n      var close = function (notification) {\n        notification.close();\n      };\n      var getArgs = function (notification) {\n        return notification.args;\n      };\n      return {\n        open: open,\n        close: close,\n        reposition: reposition,\n        getArgs: getArgs\n      };\n    }\n\n    var windows = [];\n    var oldMetaValue = '';\n    function toggleFullScreenState(state) {\n      var noScaleMetaValue = 'width=device-width,initial-scale=1.0,user-scalable=0,minimum-scale=1.0,maximum-scale=1.0';\n      var viewport = global$9('meta[name=viewport]')[0], contentValue;\n      if (global$8.overrideViewPort === false) {\n        return;\n      }\n      if (!viewport) {\n        viewport = domGlobals.document.createElement('meta');\n        viewport.setAttribute('name', 'viewport');\n        domGlobals.document.getElementsByTagName('head')[0].appendChild(viewport);\n      }\n      contentValue = viewport.getAttribute('content');\n      if (contentValue && typeof oldMetaValue !== 'undefined') {\n        oldMetaValue = contentValue;\n      }\n      viewport.setAttribute('content', state ? noScaleMetaValue : oldMetaValue);\n    }\n    function toggleBodyFullScreenClasses(classPrefix, state) {\n      if (checkFullscreenWindows() && state === false) {\n        global$9([\n          domGlobals.document.documentElement,\n          domGlobals.document.body\n        ]).removeClass(classPrefix + 'fullscreen');\n      }\n    }\n    function checkFullscreenWindows() {\n      for (var i = 0; i < windows.length; i++) {\n        if (windows[i]._fullscreen) {\n          return true;\n        }\n      }\n      return false;\n    }\n    function handleWindowResize() {\n      if (!global$8.desktop) {\n        var lastSize_1 = {\n          w: domGlobals.window.innerWidth,\n          h: domGlobals.window.innerHeight\n        };\n        global$7.setInterval(function () {\n          var w = domGlobals.window.innerWidth, h = domGlobals.window.innerHeight;\n          if (lastSize_1.w !== w || lastSize_1.h !== h) {\n            lastSize_1 = {\n              w: w,\n              h: h\n            };\n            global$9(domGlobals.window).trigger('resize');\n          }\n        }, 100);\n      }\n      function reposition() {\n        var i;\n        var rect = funcs.getWindowSize();\n        var layoutRect;\n        for (i = 0; i < windows.length; i++) {\n          layoutRect = windows[i].layoutRect();\n          windows[i].moveTo(windows[i].settings.x || Math.max(0, rect.w / 2 - layoutRect.w / 2), windows[i].settings.y || Math.max(0, rect.h / 2 - layoutRect.h / 2));\n        }\n      }\n      global$9(domGlobals.window).on('resize', reposition);\n    }\n    var Window = FloatPanel.extend({\n      modal: true,\n      Defaults: {\n        border: 1,\n        layout: 'flex',\n        containerCls: 'panel',\n        role: 'dialog',\n        callbacks: {\n          submit: function () {\n            this.fire('submit', { data: this.toJSON() });\n          },\n          close: function () {\n            this.close();\n          }\n        }\n      },\n      init: function (settings) {\n        var self = this;\n        self._super(settings);\n        if (self.isRtl()) {\n          self.classes.add('rtl');\n        }\n        self.classes.add('window');\n        self.bodyClasses.add('window-body');\n        self.state.set('fixed', true);\n        if (settings.buttons) {\n          self.statusbar = new Panel({\n            layout: 'flex',\n            border: '1 0 0 0',\n            spacing: 3,\n            padding: 10,\n            align: 'center',\n            pack: self.isRtl() ? 'start' : 'end',\n            defaults: { type: 'button' },\n            items: settings.buttons\n          });\n          self.statusbar.classes.add('foot');\n          self.statusbar.parent(self);\n        }\n        self.on('click', function (e) {\n          var closeClass = self.classPrefix + 'close';\n          if (funcs.hasClass(e.target, closeClass) || funcs.hasClass(e.target.parentNode, closeClass)) {\n            self.close();\n          }\n        });\n        self.on('cancel', function () {\n          self.close();\n        });\n        self.on('move', function (e) {\n          if (e.control === self) {\n            FloatPanel.hideAll();\n          }\n        });\n        self.aria('describedby', self.describedBy || self._id + '-none');\n        self.aria('label', settings.title);\n        self._fullscreen = false;\n      },\n      recalc: function () {\n        var self = this;\n        var statusbar = self.statusbar;\n        var layoutRect, width, x, needsRecalc;\n        if (self._fullscreen) {\n          self.layoutRect(funcs.getWindowSize());\n          self.layoutRect().contentH = self.layoutRect().innerH;\n        }\n        self._super();\n        layoutRect = self.layoutRect();\n        if (self.settings.title && !self._fullscreen) {\n          width = layoutRect.headerW;\n          if (width > layoutRect.w) {\n            x = layoutRect.x - Math.max(0, width / 2);\n            self.layoutRect({\n              w: width,\n              x: x\n            });\n            needsRecalc = true;\n          }\n        }\n        if (statusbar) {\n          statusbar.layoutRect({ w: self.layoutRect().innerW }).recalc();\n          width = statusbar.layoutRect().minW + layoutRect.deltaW;\n          if (width > layoutRect.w) {\n            x = layoutRect.x - Math.max(0, width - layoutRect.w);\n            self.layoutRect({\n              w: width,\n              x: x\n            });\n            needsRecalc = true;\n          }\n        }\n        if (needsRecalc) {\n          self.recalc();\n        }\n      },\n      initLayoutRect: function () {\n        var self = this;\n        var layoutRect = self._super();\n        var deltaH = 0, headEl;\n        if (self.settings.title && !self._fullscreen) {\n          headEl = self.getEl('head');\n          var size = funcs.getSize(headEl);\n          layoutRect.headerW = size.width;\n          layoutRect.headerH = size.height;\n          deltaH += layoutRect.headerH;\n        }\n        if (self.statusbar) {\n          deltaH += self.statusbar.layoutRect().h;\n        }\n        layoutRect.deltaH += deltaH;\n        layoutRect.minH += deltaH;\n        layoutRect.h += deltaH;\n        var rect = funcs.getWindowSize();\n        layoutRect.x = self.settings.x || Math.max(0, rect.w / 2 - layoutRect.w / 2);\n        layoutRect.y = self.settings.y || Math.max(0, rect.h / 2 - layoutRect.h / 2);\n        return layoutRect;\n      },\n      renderHtml: function () {\n        var self = this, layout = self._layout, id = self._id, prefix = self.classPrefix;\n        var settings = self.settings;\n        var headerHtml = '', footerHtml = '', html = settings.html;\n        self.preRender();\n        layout.preRender(self);\n        if (settings.title) {\n          headerHtml = '<div id=\"' + id + '-head\" class=\"' + prefix + 'window-head\">' + '<div id=\"' + id + '-title\" class=\"' + prefix + 'title\">' + self.encode(settings.title) + '</div>' + '<div id=\"' + id + '-dragh\" class=\"' + prefix + 'dragh\"></div>' + '<button type=\"button\" class=\"' + prefix + 'close\" aria-hidden=\"true\">' + '<i class=\"mce-ico mce-i-remove\"></i>' + '</button>' + '</div>';\n        }\n        if (settings.url) {\n          html = '<iframe src=\"' + settings.url + '\" tabindex=\"-1\"></iframe>';\n        }\n        if (typeof html === 'undefined') {\n          html = layout.renderHtml(self);\n        }\n        if (self.statusbar) {\n          footerHtml = self.statusbar.renderHtml();\n        }\n        return '<div id=\"' + id + '\" class=\"' + self.classes + '\" hidefocus=\"1\">' + '<div class=\"' + self.classPrefix + 'reset\" role=\"application\">' + headerHtml + '<div id=\"' + id + '-body\" class=\"' + self.bodyClasses + '\">' + html + '</div>' + footerHtml + '</div>' + '</div>';\n      },\n      fullscreen: function (state) {\n        var self = this;\n        var documentElement = domGlobals.document.documentElement;\n        var slowRendering;\n        var prefix = self.classPrefix;\n        var layoutRect;\n        if (state !== self._fullscreen) {\n          global$9(domGlobals.window).on('resize', function () {\n            var time;\n            if (self._fullscreen) {\n              if (!slowRendering) {\n                time = new Date().getTime();\n                var rect = funcs.getWindowSize();\n                self.moveTo(0, 0).resizeTo(rect.w, rect.h);\n                if (new Date().getTime() - time > 50) {\n                  slowRendering = true;\n                }\n              } else {\n                if (!self._timer) {\n                  self._timer = global$7.setTimeout(function () {\n                    var rect = funcs.getWindowSize();\n                    self.moveTo(0, 0).resizeTo(rect.w, rect.h);\n                    self._timer = 0;\n                  }, 50);\n                }\n              }\n            }\n          });\n          layoutRect = self.layoutRect();\n          self._fullscreen = state;\n          if (!state) {\n            self.borderBox = BoxUtils.parseBox(self.settings.border);\n            self.getEl('head').style.display = '';\n            layoutRect.deltaH += layoutRect.headerH;\n            global$9([\n              documentElement,\n              domGlobals.document.body\n            ]).removeClass(prefix + 'fullscreen');\n            self.classes.remove('fullscreen');\n            self.moveTo(self._initial.x, self._initial.y).resizeTo(self._initial.w, self._initial.h);\n          } else {\n            self._initial = {\n              x: layoutRect.x,\n              y: layoutRect.y,\n              w: layoutRect.w,\n              h: layoutRect.h\n            };\n            self.borderBox = BoxUtils.parseBox('0');\n            self.getEl('head').style.display = 'none';\n            layoutRect.deltaH -= layoutRect.headerH + 2;\n            global$9([\n              documentElement,\n              domGlobals.document.body\n            ]).addClass(prefix + 'fullscreen');\n            self.classes.add('fullscreen');\n            var rect = funcs.getWindowSize();\n            self.moveTo(0, 0).resizeTo(rect.w, rect.h);\n          }\n        }\n        return self.reflow();\n      },\n      postRender: function () {\n        var self = this;\n        var startPos;\n        setTimeout(function () {\n          self.classes.add('in');\n          self.fire('open');\n        }, 0);\n        self._super();\n        if (self.statusbar) {\n          self.statusbar.postRender();\n        }\n        self.focus();\n        this.dragHelper = new DragHelper(self._id + '-dragh', {\n          start: function () {\n            startPos = {\n              x: self.layoutRect().x,\n              y: self.layoutRect().y\n            };\n          },\n          drag: function (e) {\n            self.moveTo(startPos.x + e.deltaX, startPos.y + e.deltaY);\n          }\n        });\n        self.on('submit', function (e) {\n          if (!e.isDefaultPrevented()) {\n            self.close();\n          }\n        });\n        windows.push(self);\n        toggleFullScreenState(true);\n      },\n      submit: function () {\n        return this.fire('submit', { data: this.toJSON() });\n      },\n      remove: function () {\n        var self = this;\n        var i;\n        self.dragHelper.destroy();\n        self._super();\n        if (self.statusbar) {\n          this.statusbar.remove();\n        }\n        toggleBodyFullScreenClasses(self.classPrefix, false);\n        i = windows.length;\n        while (i--) {\n          if (windows[i] === self) {\n            windows.splice(i, 1);\n          }\n        }\n        toggleFullScreenState(windows.length > 0);\n      },\n      getContentWindow: function () {\n        var ifr = this.getEl().getElementsByTagName('iframe')[0];\n        return ifr ? ifr.contentWindow : null;\n      }\n    });\n    handleWindowResize();\n\n    var MessageBox = Window.extend({\n      init: function (settings) {\n        settings = {\n          border: 1,\n          padding: 20,\n          layout: 'flex',\n          pack: 'center',\n          align: 'center',\n          containerCls: 'panel',\n          autoScroll: true,\n          buttons: {\n            type: 'button',\n            text: 'Ok',\n            action: 'ok'\n          },\n          items: {\n            type: 'label',\n            multiline: true,\n            maxWidth: 500,\n            maxHeight: 200\n          }\n        };\n        this._super(settings);\n      },\n      Statics: {\n        OK: 1,\n        OK_CANCEL: 2,\n        YES_NO: 3,\n        YES_NO_CANCEL: 4,\n        msgBox: function (settings) {\n          var buttons;\n          var callback = settings.callback || function () {\n          };\n          function createButton(text, status, primary) {\n            return {\n              type: 'button',\n              text: text,\n              subtype: primary ? 'primary' : '',\n              onClick: function (e) {\n                e.control.parents()[1].close();\n                callback(status);\n              }\n            };\n          }\n          switch (settings.buttons) {\n          case MessageBox.OK_CANCEL:\n            buttons = [\n              createButton('Ok', true, true),\n              createButton('Cancel', false)\n            ];\n            break;\n          case MessageBox.YES_NO:\n          case MessageBox.YES_NO_CANCEL:\n            buttons = [\n              createButton('Yes', 1, true),\n              createButton('No', 0)\n            ];\n            if (settings.buttons === MessageBox.YES_NO_CANCEL) {\n              buttons.push(createButton('Cancel', -1));\n            }\n            break;\n          default:\n            buttons = [createButton('Ok', true, true)];\n            break;\n          }\n          return new Window({\n            padding: 20,\n            x: settings.x,\n            y: settings.y,\n            minWidth: 300,\n            minHeight: 100,\n            layout: 'flex',\n            pack: 'center',\n            align: 'center',\n            buttons: buttons,\n            title: settings.title,\n            role: 'alertdialog',\n            items: {\n              type: 'label',\n              multiline: true,\n              maxWidth: 500,\n              maxHeight: 200,\n              text: settings.text\n            },\n            onPostRender: function () {\n              this.aria('describedby', this.items()[0]._id);\n            },\n            onClose: settings.onClose,\n            onCancel: function () {\n              callback(false);\n            }\n          }).renderTo(domGlobals.document.body).reflow();\n        },\n        alert: function (settings, callback) {\n          if (typeof settings === 'string') {\n            settings = { text: settings };\n          }\n          settings.callback = callback;\n          return MessageBox.msgBox(settings);\n        },\n        confirm: function (settings, callback) {\n          if (typeof settings === 'string') {\n            settings = { text: settings };\n          }\n          settings.callback = callback;\n          settings.buttons = MessageBox.OK_CANCEL;\n          return MessageBox.msgBox(settings);\n        }\n      }\n    });\n\n    function WindowManagerImpl (editor) {\n      var open = function (args, params, closeCallback) {\n        var win;\n        args.title = args.title || ' ';\n        args.url = args.url || args.file;\n        if (args.url) {\n          args.width = parseInt(args.width || 320, 10);\n          args.height = parseInt(args.height || 240, 10);\n        }\n        if (args.body) {\n          args.items = {\n            defaults: args.defaults,\n            type: args.bodyType || 'form',\n            items: args.body,\n            data: args.data,\n            callbacks: args.commands\n          };\n        }\n        if (!args.url && !args.buttons) {\n          args.buttons = [\n            {\n              text: 'Ok',\n              subtype: 'primary',\n              onclick: function () {\n                win.find('form')[0].submit();\n              }\n            },\n            {\n              text: 'Cancel',\n              onclick: function () {\n                win.close();\n              }\n            }\n          ];\n        }\n        win = new Window(args);\n        win.on('close', function () {\n          closeCallback(win);\n        });\n        if (args.data) {\n          win.on('postRender', function () {\n            this.find('*').each(function (ctrl) {\n              var name = ctrl.name();\n              if (name in args.data) {\n                ctrl.value(args.data[name]);\n              }\n            });\n          });\n        }\n        win.features = args || {};\n        win.params = params || {};\n        win = win.renderTo(domGlobals.document.body).reflow();\n        return win;\n      };\n      var alert = function (message, choiceCallback, closeCallback) {\n        var win;\n        win = MessageBox.alert(message, function () {\n          choiceCallback();\n        });\n        win.on('close', function () {\n          closeCallback(win);\n        });\n        return win;\n      };\n      var confirm = function (message, choiceCallback, closeCallback) {\n        var win;\n        win = MessageBox.confirm(message, function (state) {\n          choiceCallback(state);\n        });\n        win.on('close', function () {\n          closeCallback(win);\n        });\n        return win;\n      };\n      var close = function (window) {\n        window.close();\n      };\n      var getParams = function (window) {\n        return window.params;\n      };\n      var setParams = function (window, params) {\n        window.params = params;\n      };\n      return {\n        open: open,\n        alert: alert,\n        confirm: confirm,\n        close: close,\n        getParams: getParams,\n        setParams: setParams\n      };\n    }\n\n    var get = function (editor) {\n      var renderUI = function (args) {\n        return Render.renderUI(editor, this, args);\n      };\n      var resizeTo = function (w, h) {\n        return Resize.resizeTo(editor, w, h);\n      };\n      var resizeBy = function (dw, dh) {\n        return Resize.resizeBy(editor, dw, dh);\n      };\n      var getNotificationManagerImpl = function () {\n        return NotificationManagerImpl(editor);\n      };\n      var getWindowManagerImpl = function () {\n        return WindowManagerImpl();\n      };\n      return {\n        renderUI: renderUI,\n        resizeTo: resizeTo,\n        resizeBy: resizeBy,\n        getNotificationManagerImpl: getNotificationManagerImpl,\n        getWindowManagerImpl: getWindowManagerImpl\n      };\n    };\n    var ThemeApi = { get: get };\n\n    var Layout = global$a.extend({\n      Defaults: {\n        firstControlClass: 'first',\n        lastControlClass: 'last'\n      },\n      init: function (settings) {\n        this.settings = global$2.extend({}, this.Defaults, settings);\n      },\n      preRender: function (container) {\n        container.bodyClasses.add(this.settings.containerClass);\n      },\n      applyClasses: function (items) {\n        var self = this;\n        var settings = self.settings;\n        var firstClass, lastClass, firstItem, lastItem;\n        firstClass = settings.firstControlClass;\n        lastClass = settings.lastControlClass;\n        items.each(function (item) {\n          item.classes.remove(firstClass).remove(lastClass).add(settings.controlClass);\n          if (item.visible()) {\n            if (!firstItem) {\n              firstItem = item;\n            }\n            lastItem = item;\n          }\n        });\n        if (firstItem) {\n          firstItem.classes.add(firstClass);\n        }\n        if (lastItem) {\n          lastItem.classes.add(lastClass);\n        }\n      },\n      renderHtml: function (container) {\n        var self = this;\n        var html = '';\n        self.applyClasses(container.items());\n        container.items().each(function (item) {\n          html += item.renderHtml();\n        });\n        return html;\n      },\n      recalc: function () {\n      },\n      postRender: function () {\n      },\n      isNative: function () {\n        return false;\n      }\n    });\n\n    var AbsoluteLayout = Layout.extend({\n      Defaults: {\n        containerClass: 'abs-layout',\n        controlClass: 'abs-layout-item'\n      },\n      recalc: function (container) {\n        container.items().filter(':visible').each(function (ctrl) {\n          var settings = ctrl.settings;\n          ctrl.layoutRect({\n            x: settings.x,\n            y: settings.y,\n            w: settings.w,\n            h: settings.h\n          });\n          if (ctrl.recalc) {\n            ctrl.recalc();\n          }\n        });\n      },\n      renderHtml: function (container) {\n        return '<div id=\"' + container._id + '-absend\" class=\"' + container.classPrefix + 'abs-end\"></div>' + this._super(container);\n      }\n    });\n\n    var Button = Widget.extend({\n      Defaults: {\n        classes: 'widget btn',\n        role: 'button'\n      },\n      init: function (settings) {\n        var self = this;\n        var size;\n        self._super(settings);\n        settings = self.settings;\n        size = self.settings.size;\n        self.on('click mousedown', function (e) {\n          e.preventDefault();\n        });\n        self.on('touchstart', function (e) {\n          self.fire('click', e);\n          e.preventDefault();\n        });\n        if (settings.subtype) {\n          self.classes.add(settings.subtype);\n        }\n        if (size) {\n          self.classes.add('btn-' + size);\n        }\n        if (settings.icon) {\n          self.icon(settings.icon);\n        }\n      },\n      icon: function (icon) {\n        if (!arguments.length) {\n          return this.state.get('icon');\n        }\n        this.state.set('icon', icon);\n        return this;\n      },\n      repaint: function () {\n        var btnElm = this.getEl().firstChild;\n        var btnStyle;\n        if (btnElm) {\n          btnStyle = btnElm.style;\n          btnStyle.width = btnStyle.height = '100%';\n        }\n        this._super();\n      },\n      renderHtml: function () {\n        var self = this, id = self._id, prefix = self.classPrefix;\n        var icon = self.state.get('icon'), image;\n        var text = self.state.get('text');\n        var textHtml = '';\n        var ariaPressed;\n        var settings = self.settings;\n        image = settings.image;\n        if (image) {\n          icon = 'none';\n          if (typeof image !== 'string') {\n            image = domGlobals.window.getSelection ? image[0] : image[1];\n          }\n          image = ' style=\"background-image: url(\\'' + image + '\\')\"';\n        } else {\n          image = '';\n        }\n        if (text) {\n          self.classes.add('btn-has-text');\n          textHtml = '<span class=\"' + prefix + 'txt\">' + self.encode(text) + '</span>';\n        }\n        icon = icon ? prefix + 'ico ' + prefix + 'i-' + icon : '';\n        ariaPressed = typeof settings.active === 'boolean' ? ' aria-pressed=\"' + settings.active + '\"' : '';\n        return '<div id=\"' + id + '\" class=\"' + self.classes + '\" tabindex=\"-1\"' + ariaPressed + '>' + '<button id=\"' + id + '-button\" role=\"presentation\" type=\"button\" tabindex=\"-1\">' + (icon ? '<i class=\"' + icon + '\"' + image + '></i>' : '') + textHtml + '</button>' + '</div>';\n      },\n      bindStates: function () {\n        var self = this, $ = self.$, textCls = self.classPrefix + 'txt';\n        function setButtonText(text) {\n          var $span = $('span.' + textCls, self.getEl());\n          if (text) {\n            if (!$span[0]) {\n              $('button:first', self.getEl()).append('<span class=\"' + textCls + '\"></span>');\n              $span = $('span.' + textCls, self.getEl());\n            }\n            $span.html(self.encode(text));\n          } else {\n            $span.remove();\n          }\n          self.classes.toggle('btn-has-text', !!text);\n        }\n        self.state.on('change:text', function (e) {\n          setButtonText(e.value);\n        });\n        self.state.on('change:icon', function (e) {\n          var icon = e.value;\n          var prefix = self.classPrefix;\n          self.settings.icon = icon;\n          icon = icon ? prefix + 'ico ' + prefix + 'i-' + self.settings.icon : '';\n          var btnElm = self.getEl().firstChild;\n          var iconElm = btnElm.getElementsByTagName('i')[0];\n          if (icon) {\n            if (!iconElm || iconElm !== btnElm.firstChild) {\n              iconElm = domGlobals.document.createElement('i');\n              btnElm.insertBefore(iconElm, btnElm.firstChild);\n            }\n            iconElm.className = icon;\n          } else if (iconElm) {\n            btnElm.removeChild(iconElm);\n          }\n          setButtonText(self.state.get('text'));\n        });\n        return self._super();\n      }\n    });\n\n    var BrowseButton = Button.extend({\n      init: function (settings) {\n        var self = this;\n        settings = global$2.extend({\n          text: 'Browse...',\n          multiple: false,\n          accept: null\n        }, settings);\n        self._super(settings);\n        self.classes.add('browsebutton');\n        if (settings.multiple) {\n          self.classes.add('multiple');\n        }\n      },\n      postRender: function () {\n        var self = this;\n        var input = funcs.create('input', {\n          type: 'file',\n          id: self._id + '-browse',\n          accept: self.settings.accept\n        });\n        self._super();\n        global$9(input).on('change', function (e) {\n          var files = e.target.files;\n          self.value = function () {\n            if (!files.length) {\n              return null;\n            } else if (self.settings.multiple) {\n              return files;\n            } else {\n              return files[0];\n            }\n          };\n          e.preventDefault();\n          if (files.length) {\n            self.fire('change', e);\n          }\n        });\n        global$9(input).on('click', function (e) {\n          e.stopPropagation();\n        });\n        global$9(self.getEl('button')).on('click touchstart', function (e) {\n          e.stopPropagation();\n          input.click();\n          e.preventDefault();\n        });\n        self.getEl().appendChild(input);\n      },\n      remove: function () {\n        global$9(this.getEl('button')).off();\n        global$9(this.getEl('input')).off();\n        this._super();\n      }\n    });\n\n    var ButtonGroup = Container.extend({\n      Defaults: {\n        defaultType: 'button',\n        role: 'group'\n      },\n      renderHtml: function () {\n        var self = this, layout = self._layout;\n        self.classes.add('btn-group');\n        self.preRender();\n        layout.preRender(self);\n        return '<div id=\"' + self._id + '\" class=\"' + self.classes + '\">' + '<div id=\"' + self._id + '-body\">' + (self.settings.html || '') + layout.renderHtml(self) + '</div>' + '</div>';\n      }\n    });\n\n    var Checkbox = Widget.extend({\n      Defaults: {\n        classes: 'checkbox',\n        role: 'checkbox',\n        checked: false\n      },\n      init: function (settings) {\n        var self = this;\n        self._super(settings);\n        self.on('click mousedown', function (e) {\n          e.preventDefault();\n        });\n        self.on('click', function (e) {\n          e.preventDefault();\n          if (!self.disabled()) {\n            self.checked(!self.checked());\n          }\n        });\n        self.checked(self.settings.checked);\n      },\n      checked: function (state) {\n        if (!arguments.length) {\n          return this.state.get('checked');\n        }\n        this.state.set('checked', state);\n        return this;\n      },\n      value: function (state) {\n        if (!arguments.length) {\n          return this.checked();\n        }\n        return this.checked(state);\n      },\n      renderHtml: function () {\n        var self = this, id = self._id, prefix = self.classPrefix;\n        return '<div id=\"' + id + '\" class=\"' + self.classes + '\" unselectable=\"on\" aria-labelledby=\"' + id + '-al\" tabindex=\"-1\">' + '<i class=\"' + prefix + 'ico ' + prefix + 'i-checkbox\"></i>' + '<span id=\"' + id + '-al\" class=\"' + prefix + 'label\">' + self.encode(self.state.get('text')) + '</span>' + '</div>';\n      },\n      bindStates: function () {\n        var self = this;\n        function checked(state) {\n          self.classes.toggle('checked', state);\n          self.aria('checked', state);\n        }\n        self.state.on('change:text', function (e) {\n          self.getEl('al').firstChild.data = self.translate(e.value);\n        });\n        self.state.on('change:checked change:value', function (e) {\n          self.fire('change');\n          checked(e.value);\n        });\n        self.state.on('change:icon', function (e) {\n          var icon = e.value;\n          var prefix = self.classPrefix;\n          if (typeof icon === 'undefined') {\n            return self.settings.icon;\n          }\n          self.settings.icon = icon;\n          icon = icon ? prefix + 'ico ' + prefix + 'i-' + self.settings.icon : '';\n          var btnElm = self.getEl().firstChild;\n          var iconElm = btnElm.getElementsByTagName('i')[0];\n          if (icon) {\n            if (!iconElm || iconElm !== btnElm.firstChild) {\n              iconElm = domGlobals.document.createElement('i');\n              btnElm.insertBefore(iconElm, btnElm.firstChild);\n            }\n            iconElm.className = icon;\n          } else if (iconElm) {\n            btnElm.removeChild(iconElm);\n          }\n        });\n        if (self.state.get('checked')) {\n          checked(true);\n        }\n        return self._super();\n      }\n    });\n\n    var global$d = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n    var ComboBox = Widget.extend({\n      init: function (settings) {\n        var self = this;\n        self._super(settings);\n        settings = self.settings;\n        self.classes.add('combobox');\n        self.subinput = true;\n        self.ariaTarget = 'inp';\n        settings.menu = settings.menu || settings.values;\n        if (settings.menu) {\n          settings.icon = 'caret';\n        }\n        self.on('click', function (e) {\n          var elm = e.target;\n          var root = self.getEl();\n          if (!global$9.contains(root, elm) && elm !== root) {\n            return;\n          }\n          while (elm && elm !== root) {\n            if (elm.id && elm.id.indexOf('-open') !== -1) {\n              self.fire('action');\n              if (settings.menu) {\n                self.showMenu();\n                if (e.aria) {\n                  self.menu.items()[0].focus();\n                }\n              }\n            }\n            elm = elm.parentNode;\n          }\n        });\n        self.on('keydown', function (e) {\n          var rootControl;\n          if (e.keyCode === 13 && e.target.nodeName === 'INPUT') {\n            e.preventDefault();\n            self.parents().reverse().each(function (ctrl) {\n              if (ctrl.toJSON) {\n                rootControl = ctrl;\n                return false;\n              }\n            });\n            self.fire('submit', { data: rootControl.toJSON() });\n          }\n        });\n        self.on('keyup', function (e) {\n          if (e.target.nodeName === 'INPUT') {\n            var oldValue = self.state.get('value');\n            var newValue = e.target.value;\n            if (newValue !== oldValue) {\n              self.state.set('value', newValue);\n              self.fire('autocomplete', e);\n            }\n          }\n        });\n        self.on('mouseover', function (e) {\n          var tooltip = self.tooltip().moveTo(-65535);\n          if (self.statusLevel() && e.target.className.indexOf(self.classPrefix + 'status') !== -1) {\n            var statusMessage = self.statusMessage() || 'Ok';\n            var rel = tooltip.text(statusMessage).show().testMoveRel(e.target, [\n              'bc-tc',\n              'bc-tl',\n              'bc-tr'\n            ]);\n            tooltip.classes.toggle('tooltip-n', rel === 'bc-tc');\n            tooltip.classes.toggle('tooltip-nw', rel === 'bc-tl');\n            tooltip.classes.toggle('tooltip-ne', rel === 'bc-tr');\n            tooltip.moveRel(e.target, rel);\n          }\n        });\n      },\n      statusLevel: function (value) {\n        if (arguments.length > 0) {\n          this.state.set('statusLevel', value);\n        }\n        return this.state.get('statusLevel');\n      },\n      statusMessage: function (value) {\n        if (arguments.length > 0) {\n          this.state.set('statusMessage', value);\n        }\n        return this.state.get('statusMessage');\n      },\n      showMenu: function () {\n        var self = this;\n        var settings = self.settings;\n        var menu;\n        if (!self.menu) {\n          menu = settings.menu || [];\n          if (menu.length) {\n            menu = {\n              type: 'menu',\n              items: menu\n            };\n          } else {\n            menu.type = menu.type || 'menu';\n          }\n          self.menu = global$4.create(menu).parent(self).renderTo(self.getContainerElm());\n          self.fire('createmenu');\n          self.menu.reflow();\n          self.menu.on('cancel', function (e) {\n            if (e.control === self.menu) {\n              self.focus();\n            }\n          });\n          self.menu.on('show hide', function (e) {\n            e.control.items().each(function (ctrl) {\n              ctrl.active(ctrl.value() === self.value());\n            });\n          }).fire('show');\n          self.menu.on('select', function (e) {\n            self.value(e.control.value());\n          });\n          self.on('focusin', function (e) {\n            if (e.target.tagName.toUpperCase() === 'INPUT') {\n              self.menu.hide();\n            }\n          });\n          self.aria('expanded', true);\n        }\n        self.menu.show();\n        self.menu.layoutRect({ w: self.layoutRect().w });\n        self.menu.moveRel(self.getEl(), self.isRtl() ? [\n          'br-tr',\n          'tr-br'\n        ] : [\n          'bl-tl',\n          'tl-bl'\n        ]);\n      },\n      focus: function () {\n        this.getEl('inp').focus();\n      },\n      repaint: function () {\n        var self = this, elm = self.getEl(), openElm = self.getEl('open'), rect = self.layoutRect();\n        var width, lineHeight, innerPadding = 0;\n        var inputElm = elm.firstChild;\n        if (self.statusLevel() && self.statusLevel() !== 'none') {\n          innerPadding = parseInt(funcs.getRuntimeStyle(inputElm, 'padding-right'), 10) - parseInt(funcs.getRuntimeStyle(inputElm, 'padding-left'), 10);\n        }\n        if (openElm) {\n          width = rect.w - funcs.getSize(openElm).width - 10;\n        } else {\n          width = rect.w - 10;\n        }\n        var doc = domGlobals.document;\n        if (doc.all && (!doc.documentMode || doc.documentMode <= 8)) {\n          lineHeight = self.layoutRect().h - 2 + 'px';\n        }\n        global$9(inputElm).css({\n          width: width - innerPadding,\n          lineHeight: lineHeight\n        });\n        self._super();\n        return self;\n      },\n      postRender: function () {\n        var self = this;\n        global$9(this.getEl('inp')).on('change', function (e) {\n          self.state.set('value', e.target.value);\n          self.fire('change', e);\n        });\n        return self._super();\n      },\n      renderHtml: function () {\n        var self = this, id = self._id, settings = self.settings, prefix = self.classPrefix;\n        var value = self.state.get('value') || '';\n        var icon, text, openBtnHtml = '', extraAttrs = '', statusHtml = '';\n        if ('spellcheck' in settings) {\n          extraAttrs += ' spellcheck=\"' + settings.spellcheck + '\"';\n        }\n        if (settings.maxLength) {\n          extraAttrs += ' maxlength=\"' + settings.maxLength + '\"';\n        }\n        if (settings.size) {\n          extraAttrs += ' size=\"' + settings.size + '\"';\n        }\n        if (settings.subtype) {\n          extraAttrs += ' type=\"' + settings.subtype + '\"';\n        }\n        statusHtml = '<i id=\"' + id + '-status\" class=\"mce-status mce-ico\" style=\"display: none\"></i>';\n        if (self.disabled()) {\n          extraAttrs += ' disabled=\"disabled\"';\n        }\n        icon = settings.icon;\n        if (icon && icon !== 'caret') {\n          icon = prefix + 'ico ' + prefix + 'i-' + settings.icon;\n        }\n        text = self.state.get('text');\n        if (icon || text) {\n          openBtnHtml = '<div id=\"' + id + '-open\" class=\"' + prefix + 'btn ' + prefix + 'open\" tabIndex=\"-1\" role=\"button\">' + '<button id=\"' + id + '-action\" type=\"button\" hidefocus=\"1\" tabindex=\"-1\">' + (icon !== 'caret' ? '<i class=\"' + icon + '\"></i>' : '<i class=\"' + prefix + 'caret\"></i>') + (text ? (icon ? ' ' : '') + text : '') + '</button>' + '</div>';\n          self.classes.add('has-open');\n        }\n        return '<div id=\"' + id + '\" class=\"' + self.classes + '\">' + '<input id=\"' + id + '-inp\" class=\"' + prefix + 'textbox\" value=\"' + self.encode(value, false) + '\" hidefocus=\"1\"' + extraAttrs + ' placeholder=\"' + self.encode(settings.placeholder) + '\" />' + statusHtml + openBtnHtml + '</div>';\n      },\n      value: function (value) {\n        if (arguments.length) {\n          this.state.set('value', value);\n          return this;\n        }\n        if (this.state.get('rendered')) {\n          this.state.set('value', this.getEl('inp').value);\n        }\n        return this.state.get('value');\n      },\n      showAutoComplete: function (items, term) {\n        var self = this;\n        if (items.length === 0) {\n          self.hideMenu();\n          return;\n        }\n        var insert = function (value, title) {\n          return function () {\n            self.fire('selectitem', {\n              title: title,\n              value: value\n            });\n          };\n        };\n        if (self.menu) {\n          self.menu.items().remove();\n        } else {\n          self.menu = global$4.create({\n            type: 'menu',\n            classes: 'combobox-menu',\n            layout: 'flow'\n          }).parent(self).renderTo();\n        }\n        global$2.each(items, function (item) {\n          self.menu.add({\n            text: item.title,\n            url: item.previewUrl,\n            match: term,\n            classes: 'menu-item-ellipsis',\n            onclick: insert(item.value, item.title)\n          });\n        });\n        self.menu.renderNew();\n        self.hideMenu();\n        self.menu.on('cancel', function (e) {\n          if (e.control.parent() === self.menu) {\n            e.stopPropagation();\n            self.focus();\n            self.hideMenu();\n          }\n        });\n        self.menu.on('select', function () {\n          self.focus();\n        });\n        var maxW = self.layoutRect().w;\n        self.menu.layoutRect({\n          w: maxW,\n          minW: 0,\n          maxW: maxW\n        });\n        self.menu.repaint();\n        self.menu.reflow();\n        self.menu.show();\n        self.menu.moveRel(self.getEl(), self.isRtl() ? [\n          'br-tr',\n          'tr-br'\n        ] : [\n          'bl-tl',\n          'tl-bl'\n        ]);\n      },\n      hideMenu: function () {\n        if (this.menu) {\n          this.menu.hide();\n        }\n      },\n      bindStates: function () {\n        var self = this;\n        self.state.on('change:value', function (e) {\n          if (self.getEl('inp').value !== e.value) {\n            self.getEl('inp').value = e.value;\n          }\n        });\n        self.state.on('change:disabled', function (e) {\n          self.getEl('inp').disabled = e.value;\n        });\n        self.state.on('change:statusLevel', function (e) {\n          var statusIconElm = self.getEl('status');\n          var prefix = self.classPrefix, value = e.value;\n          funcs.css(statusIconElm, 'display', value === 'none' ? 'none' : '');\n          funcs.toggleClass(statusIconElm, prefix + 'i-checkmark', value === 'ok');\n          funcs.toggleClass(statusIconElm, prefix + 'i-warning', value === 'warn');\n          funcs.toggleClass(statusIconElm, prefix + 'i-error', value === 'error');\n          self.classes.toggle('has-status', value !== 'none');\n          self.repaint();\n        });\n        funcs.on(self.getEl('status'), 'mouseleave', function () {\n          self.tooltip().hide();\n        });\n        self.on('cancel', function (e) {\n          if (self.menu && self.menu.visible()) {\n            e.stopPropagation();\n            self.hideMenu();\n          }\n        });\n        var focusIdx = function (idx, menu) {\n          if (menu && menu.items().length > 0) {\n            menu.items().eq(idx)[0].focus();\n          }\n        };\n        self.on('keydown', function (e) {\n          var keyCode = e.keyCode;\n          if (e.target.nodeName === 'INPUT') {\n            if (keyCode === global$d.DOWN) {\n              e.preventDefault();\n              self.fire('autocomplete');\n              focusIdx(0, self.menu);\n            } else if (keyCode === global$d.UP) {\n              e.preventDefault();\n              focusIdx(-1, self.menu);\n            }\n          }\n        });\n        return self._super();\n      },\n      remove: function () {\n        global$9(this.getEl('inp')).off();\n        if (this.menu) {\n          this.menu.remove();\n        }\n        this._super();\n      }\n    });\n\n    var ColorBox = ComboBox.extend({\n      init: function (settings) {\n        var self = this;\n        settings.spellcheck = false;\n        if (settings.onaction) {\n          settings.icon = 'none';\n        }\n        self._super(settings);\n        self.classes.add('colorbox');\n        self.on('change keyup postrender', function () {\n          self.repaintColor(self.value());\n        });\n      },\n      repaintColor: function (value) {\n        var openElm = this.getEl('open');\n        var elm = openElm ? openElm.getElementsByTagName('i')[0] : null;\n        if (elm) {\n          try {\n            elm.style.background = value;\n          } catch (ex) {\n          }\n        }\n      },\n      bindStates: function () {\n        var self = this;\n        self.state.on('change:value', function (e) {\n          if (self.state.get('rendered')) {\n            self.repaintColor(e.value);\n          }\n        });\n        return self._super();\n      }\n    });\n\n    var PanelButton = Button.extend({\n      showPanel: function () {\n        var self = this, settings = self.settings;\n        self.classes.add('opened');\n        if (!self.panel) {\n          var panelSettings = settings.panel;\n          if (panelSettings.type) {\n            panelSettings = {\n              layout: 'grid',\n              items: panelSettings\n            };\n          }\n          panelSettings.role = panelSettings.role || 'dialog';\n          panelSettings.popover = true;\n          panelSettings.autohide = true;\n          panelSettings.ariaRoot = true;\n          self.panel = new FloatPanel(panelSettings).on('hide', function () {\n            self.classes.remove('opened');\n          }).on('cancel', function (e) {\n            e.stopPropagation();\n            self.focus();\n            self.hidePanel();\n          }).parent(self).renderTo(self.getContainerElm());\n          self.panel.fire('show');\n          self.panel.reflow();\n        } else {\n          self.panel.show();\n        }\n        var rtlRels = [\n          'bc-tc',\n          'bc-tl',\n          'bc-tr'\n        ];\n        var ltrRels = [\n          'bc-tc',\n          'bc-tr',\n          'bc-tl',\n          'tc-bc',\n          'tc-br',\n          'tc-bl'\n        ];\n        var rel = self.panel.testMoveRel(self.getEl(), settings.popoverAlign || (self.isRtl() ? rtlRels : ltrRels));\n        self.panel.classes.toggle('start', rel.substr(-1) === 'l');\n        self.panel.classes.toggle('end', rel.substr(-1) === 'r');\n        var isTop = rel.substr(0, 1) === 't';\n        self.panel.classes.toggle('bottom', !isTop);\n        self.panel.classes.toggle('top', isTop);\n        self.panel.moveRel(self.getEl(), rel);\n      },\n      hidePanel: function () {\n        var self = this;\n        if (self.panel) {\n          self.panel.hide();\n        }\n      },\n      postRender: function () {\n        var self = this;\n        self.aria('haspopup', true);\n        self.on('click', function (e) {\n          if (e.control === self) {\n            if (self.panel && self.panel.visible()) {\n              self.hidePanel();\n            } else {\n              self.showPanel();\n              self.panel.focus(!!e.aria);\n            }\n          }\n        });\n        return self._super();\n      },\n      remove: function () {\n        if (this.panel) {\n          this.panel.remove();\n          this.panel = null;\n        }\n        return this._super();\n      }\n    });\n\n    var DOM$3 = global$3.DOM;\n    var ColorButton = PanelButton.extend({\n      init: function (settings) {\n        this._super(settings);\n        this.classes.add('splitbtn');\n        this.classes.add('colorbutton');\n      },\n      color: function (color) {\n        if (color) {\n          this._color = color;\n          this.getEl('preview').style.backgroundColor = color;\n          return this;\n        }\n        return this._color;\n      },\n      resetColor: function () {\n        this._color = null;\n        this.getEl('preview').style.backgroundColor = null;\n        return this;\n      },\n      renderHtml: function () {\n        var self = this, id = self._id, prefix = self.classPrefix, text = self.state.get('text');\n        var icon = self.settings.icon ? prefix + 'ico ' + prefix + 'i-' + self.settings.icon : '';\n        var image = self.settings.image ? ' style=\"background-image: url(\\'' + self.settings.image + '\\')\"' : '';\n        var textHtml = '';\n        if (text) {\n          self.classes.add('btn-has-text');\n          textHtml = '<span class=\"' + prefix + 'txt\">' + self.encode(text) + '</span>';\n        }\n        return '<div id=\"' + id + '\" class=\"' + self.classes + '\" role=\"button\" tabindex=\"-1\" aria-haspopup=\"true\">' + '<button role=\"presentation\" hidefocus=\"1\" type=\"button\" tabindex=\"-1\">' + (icon ? '<i class=\"' + icon + '\"' + image + '></i>' : '') + '<span id=\"' + id + '-preview\" class=\"' + prefix + 'preview\"></span>' + textHtml + '</button>' + '<button type=\"button\" class=\"' + prefix + 'open\" hidefocus=\"1\" tabindex=\"-1\">' + ' <i class=\"' + prefix + 'caret\"></i>' + '</button>' + '</div>';\n      },\n      postRender: function () {\n        var self = this, onClickHandler = self.settings.onclick;\n        self.on('click', function (e) {\n          if (e.aria && e.aria.key === 'down') {\n            return;\n          }\n          if (e.control === self && !DOM$3.getParent(e.target, '.' + self.classPrefix + 'open')) {\n            e.stopImmediatePropagation();\n            onClickHandler.call(self, e);\n          }\n        });\n        delete self.settings.onclick;\n        return self._super();\n      }\n    });\n\n    var global$e = tinymce.util.Tools.resolve('tinymce.util.Color');\n\n    var ColorPicker = Widget.extend({\n      Defaults: { classes: 'widget colorpicker' },\n      init: function (settings) {\n        this._super(settings);\n      },\n      postRender: function () {\n        var self = this;\n        var color = self.color();\n        var hsv, hueRootElm, huePointElm, svRootElm, svPointElm;\n        hueRootElm = self.getEl('h');\n        huePointElm = self.getEl('hp');\n        svRootElm = self.getEl('sv');\n        svPointElm = self.getEl('svp');\n        function getPos(elm, event) {\n          var pos = funcs.getPos(elm);\n          var x, y;\n          x = event.pageX - pos.x;\n          y = event.pageY - pos.y;\n          x = Math.max(0, Math.min(x / elm.clientWidth, 1));\n          y = Math.max(0, Math.min(y / elm.clientHeight, 1));\n          return {\n            x: x,\n            y: y\n          };\n        }\n        function updateColor(hsv, hueUpdate) {\n          var hue = (360 - hsv.h) / 360;\n          funcs.css(huePointElm, { top: hue * 100 + '%' });\n          if (!hueUpdate) {\n            funcs.css(svPointElm, {\n              left: hsv.s + '%',\n              top: 100 - hsv.v + '%'\n            });\n          }\n          svRootElm.style.background = global$e({\n            s: 100,\n            v: 100,\n            h: hsv.h\n          }).toHex();\n          self.color().parse({\n            s: hsv.s,\n            v: hsv.v,\n            h: hsv.h\n          });\n        }\n        function updateSaturationAndValue(e) {\n          var pos;\n          pos = getPos(svRootElm, e);\n          hsv.s = pos.x * 100;\n          hsv.v = (1 - pos.y) * 100;\n          updateColor(hsv);\n          self.fire('change');\n        }\n        function updateHue(e) {\n          var pos;\n          pos = getPos(hueRootElm, e);\n          hsv = color.toHsv();\n          hsv.h = (1 - pos.y) * 360;\n          updateColor(hsv, true);\n          self.fire('change');\n        }\n        self._repaint = function () {\n          hsv = color.toHsv();\n          updateColor(hsv);\n        };\n        self._super();\n        self._svdraghelper = new DragHelper(self._id + '-sv', {\n          start: updateSaturationAndValue,\n          drag: updateSaturationAndValue\n        });\n        self._hdraghelper = new DragHelper(self._id + '-h', {\n          start: updateHue,\n          drag: updateHue\n        });\n        self._repaint();\n      },\n      rgb: function () {\n        return this.color().toRgb();\n      },\n      value: function (value) {\n        var self = this;\n        if (arguments.length) {\n          self.color().parse(value);\n          if (self._rendered) {\n            self._repaint();\n          }\n        } else {\n          return self.color().toHex();\n        }\n      },\n      color: function () {\n        if (!this._color) {\n          this._color = global$e();\n        }\n        return this._color;\n      },\n      renderHtml: function () {\n        var self = this;\n        var id = self._id;\n        var prefix = self.classPrefix;\n        var hueHtml;\n        var stops = '#ff0000,#ff0080,#ff00ff,#8000ff,#0000ff,#0080ff,#00ffff,#00ff80,#00ff00,#80ff00,#ffff00,#ff8000,#ff0000';\n        function getOldIeFallbackHtml() {\n          var i, l, html = '', gradientPrefix, stopsList;\n          gradientPrefix = 'filter:progid:DXImageTransform.Microsoft.gradient(GradientType=0,startColorstr=';\n          stopsList = stops.split(',');\n          for (i = 0, l = stopsList.length - 1; i < l; i++) {\n            html += '<div class=\"' + prefix + 'colorpicker-h-chunk\" style=\"' + 'height:' + 100 / l + '%;' + gradientPrefix + stopsList[i] + ',endColorstr=' + stopsList[i + 1] + ');' + '-ms-' + gradientPrefix + stopsList[i] + ',endColorstr=' + stopsList[i + 1] + ')' + '\"></div>';\n          }\n          return html;\n        }\n        var gradientCssText = 'background: -ms-linear-gradient(top,' + stops + ');' + 'background: linear-gradient(to bottom,' + stops + ');';\n        hueHtml = '<div id=\"' + id + '-h\" class=\"' + prefix + 'colorpicker-h\" style=\"' + gradientCssText + '\">' + getOldIeFallbackHtml() + '<div id=\"' + id + '-hp\" class=\"' + prefix + 'colorpicker-h-marker\"></div>' + '</div>';\n        return '<div id=\"' + id + '\" class=\"' + self.classes + '\">' + '<div id=\"' + id + '-sv\" class=\"' + prefix + 'colorpicker-sv\">' + '<div class=\"' + prefix + 'colorpicker-overlay1\">' + '<div class=\"' + prefix + 'colorpicker-overlay2\">' + '<div id=\"' + id + '-svp\" class=\"' + prefix + 'colorpicker-selector1\">' + '<div class=\"' + prefix + 'colorpicker-selector2\"></div>' + '</div>' + '</div>' + '</div>' + '</div>' + hueHtml + '</div>';\n      }\n    });\n\n    var DropZone = Widget.extend({\n      init: function (settings) {\n        var self = this;\n        settings = global$2.extend({\n          height: 100,\n          text: 'Drop an image here',\n          multiple: false,\n          accept: null\n        }, settings);\n        self._super(settings);\n        self.classes.add('dropzone');\n        if (settings.multiple) {\n          self.classes.add('multiple');\n        }\n      },\n      renderHtml: function () {\n        var self = this;\n        var attrs, elm;\n        var cfg = self.settings;\n        attrs = {\n          id: self._id,\n          hidefocus: '1'\n        };\n        elm = funcs.create('div', attrs, '<span>' + this.translate(cfg.text) + '</span>');\n        if (cfg.height) {\n          funcs.css(elm, 'height', cfg.height + 'px');\n        }\n        if (cfg.width) {\n          funcs.css(elm, 'width', cfg.width + 'px');\n        }\n        elm.className = self.classes;\n        return elm.outerHTML;\n      },\n      postRender: function () {\n        var self = this;\n        var toggleDragClass = function (e) {\n          e.preventDefault();\n          self.classes.toggle('dragenter');\n          self.getEl().className = self.classes;\n        };\n        var filter = function (files) {\n          var accept = self.settings.accept;\n          if (typeof accept !== 'string') {\n            return files;\n          }\n          var re = new RegExp('(' + accept.split(/\\s*,\\s*/).join('|') + ')$', 'i');\n          return global$2.grep(files, function (file) {\n            return re.test(file.name);\n          });\n        };\n        self._super();\n        self.$el.on('dragover', function (e) {\n          e.preventDefault();\n        });\n        self.$el.on('dragenter', toggleDragClass);\n        self.$el.on('dragleave', toggleDragClass);\n        self.$el.on('drop', function (e) {\n          e.preventDefault();\n          if (self.state.get('disabled')) {\n            return;\n          }\n          var files = filter(e.dataTransfer.files);\n          self.value = function () {\n            if (!files.length) {\n              return null;\n            } else if (self.settings.multiple) {\n              return files;\n            } else {\n              return files[0];\n            }\n          };\n          if (files.length) {\n            self.fire('change', e);\n          }\n        });\n      },\n      remove: function () {\n        this.$el.off();\n        this._super();\n      }\n    });\n\n    var Path = Widget.extend({\n      init: function (settings) {\n        var self = this;\n        if (!settings.delimiter) {\n          settings.delimiter = '\\xBB';\n        }\n        self._super(settings);\n        self.classes.add('path');\n        self.canFocus = true;\n        self.on('click', function (e) {\n          var index;\n          var target = e.target;\n          if (index = target.getAttribute('data-index')) {\n            self.fire('select', {\n              value: self.row()[index],\n              index: index\n            });\n          }\n        });\n        self.row(self.settings.row);\n      },\n      focus: function () {\n        var self = this;\n        self.getEl().firstChild.focus();\n        return self;\n      },\n      row: function (row) {\n        if (!arguments.length) {\n          return this.state.get('row');\n        }\n        this.state.set('row', row);\n        return this;\n      },\n      renderHtml: function () {\n        var self = this;\n        return '<div id=\"' + self._id + '\" class=\"' + self.classes + '\">' + self._getDataPathHtml(self.state.get('row')) + '</div>';\n      },\n      bindStates: function () {\n        var self = this;\n        self.state.on('change:row', function (e) {\n          self.innerHtml(self._getDataPathHtml(e.value));\n        });\n        return self._super();\n      },\n      _getDataPathHtml: function (data) {\n        var self = this;\n        var parts = data || [];\n        var i, l, html = '';\n        var prefix = self.classPrefix;\n        for (i = 0, l = parts.length; i < l; i++) {\n          html += (i > 0 ? '<div class=\"' + prefix + 'divider\" aria-hidden=\"true\"> ' + self.settings.delimiter + ' </div>' : '') + '<div role=\"button\" class=\"' + prefix + 'path-item' + (i === l - 1 ? ' ' + prefix + 'last' : '') + '\" data-index=\"' + i + '\" tabindex=\"-1\" id=\"' + self._id + '-' + i + '\" aria-level=\"' + (i + 1) + '\">' + parts[i].name + '</div>';\n        }\n        if (!html) {\n          html = '<div class=\"' + prefix + 'path-item\">\\xA0</div>';\n        }\n        return html;\n      }\n    });\n\n    var ElementPath = Path.extend({\n      postRender: function () {\n        var self = this, editor = self.settings.editor;\n        function isHidden(elm) {\n          if (elm.nodeType === 1) {\n            if (elm.nodeName === 'BR' || !!elm.getAttribute('data-mce-bogus')) {\n              return true;\n            }\n            if (elm.getAttribute('data-mce-type') === 'bookmark') {\n              return true;\n            }\n          }\n          return false;\n        }\n        if (editor.settings.elementpath !== false) {\n          self.on('select', function (e) {\n            editor.focus();\n            editor.selection.select(this.row()[e.index].element);\n            editor.nodeChanged();\n          });\n          editor.on('nodeChange', function (e) {\n            var outParents = [];\n            var parents = e.parents;\n            var i = parents.length;\n            while (i--) {\n              if (parents[i].nodeType === 1 && !isHidden(parents[i])) {\n                var args = editor.fire('ResolveName', {\n                  name: parents[i].nodeName.toLowerCase(),\n                  target: parents[i]\n                });\n                if (!args.isDefaultPrevented()) {\n                  outParents.push({\n                    name: args.name,\n                    element: parents[i]\n                  });\n                }\n                if (args.isPropagationStopped()) {\n                  break;\n                }\n              }\n            }\n            self.row(outParents);\n          });\n        }\n        return self._super();\n      }\n    });\n\n    var FormItem = Container.extend({\n      Defaults: {\n        layout: 'flex',\n        align: 'center',\n        defaults: { flex: 1 }\n      },\n      renderHtml: function () {\n        var self = this, layout = self._layout, prefix = self.classPrefix;\n        self.classes.add('formitem');\n        layout.preRender(self);\n        return '<div id=\"' + self._id + '\" class=\"' + self.classes + '\" hidefocus=\"1\" tabindex=\"-1\">' + (self.settings.title ? '<div id=\"' + self._id + '-title\" class=\"' + prefix + 'title\">' + self.settings.title + '</div>' : '') + '<div id=\"' + self._id + '-body\" class=\"' + self.bodyClasses + '\">' + (self.settings.html || '') + layout.renderHtml(self) + '</div>' + '</div>';\n      }\n    });\n\n    var Form = Container.extend({\n      Defaults: {\n        containerCls: 'form',\n        layout: 'flex',\n        direction: 'column',\n        align: 'stretch',\n        flex: 1,\n        padding: 15,\n        labelGap: 30,\n        spacing: 10,\n        callbacks: {\n          submit: function () {\n            this.submit();\n          }\n        }\n      },\n      preRender: function () {\n        var self = this, items = self.items();\n        if (!self.settings.formItemDefaults) {\n          self.settings.formItemDefaults = {\n            layout: 'flex',\n            autoResize: 'overflow',\n            defaults: { flex: 1 }\n          };\n        }\n        items.each(function (ctrl) {\n          var formItem;\n          var label = ctrl.settings.label;\n          if (label) {\n            formItem = new FormItem(global$2.extend({\n              items: {\n                type: 'label',\n                id: ctrl._id + '-l',\n                text: label,\n                flex: 0,\n                forId: ctrl._id,\n                disabled: ctrl.disabled()\n              }\n            }, self.settings.formItemDefaults));\n            formItem.type = 'formitem';\n            ctrl.aria('labelledby', ctrl._id + '-l');\n            if (typeof ctrl.settings.flex === 'undefined') {\n              ctrl.settings.flex = 1;\n            }\n            self.replace(ctrl, formItem);\n            formItem.add(ctrl);\n          }\n        });\n      },\n      submit: function () {\n        return this.fire('submit', { data: this.toJSON() });\n      },\n      postRender: function () {\n        var self = this;\n        self._super();\n        self.fromJSON(self.settings.data);\n      },\n      bindStates: function () {\n        var self = this;\n        self._super();\n        function recalcLabels() {\n          var maxLabelWidth = 0;\n          var labels = [];\n          var i, labelGap, items;\n          if (self.settings.labelGapCalc === false) {\n            return;\n          }\n          if (self.settings.labelGapCalc === 'children') {\n            items = self.find('formitem');\n          } else {\n            items = self.items();\n          }\n          items.filter('formitem').each(function (item) {\n            var labelCtrl = item.items()[0], labelWidth = labelCtrl.getEl().clientWidth;\n            maxLabelWidth = labelWidth > maxLabelWidth ? labelWidth : maxLabelWidth;\n            labels.push(labelCtrl);\n          });\n          labelGap = self.settings.labelGap || 0;\n          i = labels.length;\n          while (i--) {\n            labels[i].settings.minWidth = maxLabelWidth + labelGap;\n          }\n        }\n        self.on('show', recalcLabels);\n        recalcLabels();\n      }\n    });\n\n    var FieldSet = Form.extend({\n      Defaults: {\n        containerCls: 'fieldset',\n        layout: 'flex',\n        direction: 'column',\n        align: 'stretch',\n        flex: 1,\n        padding: '25 15 5 15',\n        labelGap: 30,\n        spacing: 10,\n        border: 1\n      },\n      renderHtml: function () {\n        var self = this, layout = self._layout, prefix = self.classPrefix;\n        self.preRender();\n        layout.preRender(self);\n        return '<fieldset id=\"' + self._id + '\" class=\"' + self.classes + '\" hidefocus=\"1\" tabindex=\"-1\">' + (self.settings.title ? '<legend id=\"' + self._id + '-title\" class=\"' + prefix + 'fieldset-title\">' + self.settings.title + '</legend>' : '') + '<div id=\"' + self._id + '-body\" class=\"' + self.bodyClasses + '\">' + (self.settings.html || '') + layout.renderHtml(self) + '</div>' + '</fieldset>';\n      }\n    });\n\n    var unique$1 = 0;\n    var generate = function (prefix) {\n      var date = new Date();\n      var time = date.getTime();\n      var random = Math.floor(Math.random() * 1000000000);\n      unique$1++;\n      return prefix + '_' + random + unique$1 + String(time);\n    };\n\n    var fromHtml = function (html, scope) {\n      var doc = scope || domGlobals.document;\n      var div = doc.createElement('div');\n      div.innerHTML = html;\n      if (!div.hasChildNodes() || div.childNodes.length > 1) {\n        domGlobals.console.error('HTML does not have a single root node', html);\n        throw new Error('HTML must have a single root node');\n      }\n      return fromDom(div.childNodes[0]);\n    };\n    var fromTag = function (tag, scope) {\n      var doc = scope || domGlobals.document;\n      var node = doc.createElement(tag);\n      return fromDom(node);\n    };\n    var fromText = function (text, scope) {\n      var doc = scope || domGlobals.document;\n      var node = doc.createTextNode(text);\n      return fromDom(node);\n    };\n    var fromDom = function (node) {\n      if (node === null || node === undefined) {\n        throw new Error('Node cannot be null or undefined');\n      }\n      return { dom: constant(node) };\n    };\n    var fromPoint = function (docElm, x, y) {\n      var doc = docElm.dom();\n      return Option.from(doc.elementFromPoint(x, y)).map(fromDom);\n    };\n    var Element = {\n      fromHtml: fromHtml,\n      fromTag: fromTag,\n      fromText: fromText,\n      fromDom: fromDom,\n      fromPoint: fromPoint\n    };\n\n    var cached = function (f) {\n      var called = false;\n      var r;\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        if (!called) {\n          called = true;\n          r = f.apply(null, args);\n        }\n        return r;\n      };\n    };\n\n    var ATTRIBUTE = domGlobals.Node.ATTRIBUTE_NODE;\n    var CDATA_SECTION = domGlobals.Node.CDATA_SECTION_NODE;\n    var COMMENT = domGlobals.Node.COMMENT_NODE;\n    var DOCUMENT = domGlobals.Node.DOCUMENT_NODE;\n    var DOCUMENT_TYPE = domGlobals.Node.DOCUMENT_TYPE_NODE;\n    var DOCUMENT_FRAGMENT = domGlobals.Node.DOCUMENT_FRAGMENT_NODE;\n    var ELEMENT = domGlobals.Node.ELEMENT_NODE;\n    var TEXT = domGlobals.Node.TEXT_NODE;\n    var PROCESSING_INSTRUCTION = domGlobals.Node.PROCESSING_INSTRUCTION_NODE;\n    var ENTITY_REFERENCE = domGlobals.Node.ENTITY_REFERENCE_NODE;\n    var ENTITY = domGlobals.Node.ENTITY_NODE;\n    var NOTATION = domGlobals.Node.NOTATION_NODE;\n\n    var Global = typeof domGlobals.window !== 'undefined' ? domGlobals.window : Function('return this;')();\n\n    var path = function (parts, scope) {\n      var o = scope !== undefined && scope !== null ? scope : Global;\n      for (var i = 0; i < parts.length && o !== undefined && o !== null; ++i) {\n        o = o[parts[i]];\n      }\n      return o;\n    };\n    var resolve = function (p, scope) {\n      var parts = p.split('.');\n      return path(parts, scope);\n    };\n\n    var unsafe = function (name, scope) {\n      return resolve(name, scope);\n    };\n    var getOrDie = function (name, scope) {\n      var actual = unsafe(name, scope);\n      if (actual === undefined || actual === null) {\n        throw new Error(name + ' not available on this browser');\n      }\n      return actual;\n    };\n    var Global$1 = { getOrDie: getOrDie };\n\n    var Immutable = function () {\n      var fields = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        fields[_i] = arguments[_i];\n      }\n      return function () {\n        var values = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          values[_i] = arguments[_i];\n        }\n        if (fields.length !== values.length) {\n          throw new Error('Wrong number of arguments to struct. Expected \"[' + fields.length + ']\", got ' + values.length + ' arguments');\n        }\n        var struct = {};\n        each(fields, function (name, i) {\n          struct[name] = constant(values[i]);\n        });\n        return struct;\n      };\n    };\n\n    var node = function () {\n      var f = Global$1.getOrDie('Node');\n      return f;\n    };\n    var compareDocumentPosition = function (a, b, match) {\n      return (a.compareDocumentPosition(b) & match) !== 0;\n    };\n    var documentPositionPreceding = function (a, b) {\n      return compareDocumentPosition(a, b, node().DOCUMENT_POSITION_PRECEDING);\n    };\n    var documentPositionContainedBy = function (a, b) {\n      return compareDocumentPosition(a, b, node().DOCUMENT_POSITION_CONTAINED_BY);\n    };\n    var Node = {\n      documentPositionPreceding: documentPositionPreceding,\n      documentPositionContainedBy: documentPositionContainedBy\n    };\n\n    var firstMatch = function (regexes, s) {\n      for (var i = 0; i < regexes.length; i++) {\n        var x = regexes[i];\n        if (x.test(s)) {\n          return x;\n        }\n      }\n      return undefined;\n    };\n    var find$1 = function (regexes, agent) {\n      var r = firstMatch(regexes, agent);\n      if (!r) {\n        return {\n          major: 0,\n          minor: 0\n        };\n      }\n      var group = function (i) {\n        return Number(agent.replace(r, '$' + i));\n      };\n      return nu(group(1), group(2));\n    };\n    var detect = function (versionRegexes, agent) {\n      var cleanedAgent = String(agent).toLowerCase();\n      if (versionRegexes.length === 0) {\n        return unknown();\n      }\n      return find$1(versionRegexes, cleanedAgent);\n    };\n    var unknown = function () {\n      return nu(0, 0);\n    };\n    var nu = function (major, minor) {\n      return {\n        major: major,\n        minor: minor\n      };\n    };\n    var Version = {\n      nu: nu,\n      detect: detect,\n      unknown: unknown\n    };\n\n    var edge = 'Edge';\n    var chrome = 'Chrome';\n    var ie = 'IE';\n    var opera = 'Opera';\n    var firefox = 'Firefox';\n    var safari = 'Safari';\n    var isBrowser = function (name, current) {\n      return function () {\n        return current === name;\n      };\n    };\n    var unknown$1 = function () {\n      return nu$1({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    var nu$1 = function (info) {\n      var current = info.current;\n      var version = info.version;\n      return {\n        current: current,\n        version: version,\n        isEdge: isBrowser(edge, current),\n        isChrome: isBrowser(chrome, current),\n        isIE: isBrowser(ie, current),\n        isOpera: isBrowser(opera, current),\n        isFirefox: isBrowser(firefox, current),\n        isSafari: isBrowser(safari, current)\n      };\n    };\n    var Browser = {\n      unknown: unknown$1,\n      nu: nu$1,\n      edge: constant(edge),\n      chrome: constant(chrome),\n      ie: constant(ie),\n      opera: constant(opera),\n      firefox: constant(firefox),\n      safari: constant(safari)\n    };\n\n    var windows$1 = 'Windows';\n    var ios = 'iOS';\n    var android = 'Android';\n    var linux = 'Linux';\n    var osx = 'OSX';\n    var solaris = 'Solaris';\n    var freebsd = 'FreeBSD';\n    var isOS = function (name, current) {\n      return function () {\n        return current === name;\n      };\n    };\n    var unknown$2 = function () {\n      return nu$2({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    var nu$2 = function (info) {\n      var current = info.current;\n      var version = info.version;\n      return {\n        current: current,\n        version: version,\n        isWindows: isOS(windows$1, current),\n        isiOS: isOS(ios, current),\n        isAndroid: isOS(android, current),\n        isOSX: isOS(osx, current),\n        isLinux: isOS(linux, current),\n        isSolaris: isOS(solaris, current),\n        isFreeBSD: isOS(freebsd, current)\n      };\n    };\n    var OperatingSystem = {\n      unknown: unknown$2,\n      nu: nu$2,\n      windows: constant(windows$1),\n      ios: constant(ios),\n      android: constant(android),\n      linux: constant(linux),\n      osx: constant(osx),\n      solaris: constant(solaris),\n      freebsd: constant(freebsd)\n    };\n\n    var DeviceType = function (os, browser, userAgent) {\n      var isiPad = os.isiOS() && /ipad/i.test(userAgent) === true;\n      var isiPhone = os.isiOS() && !isiPad;\n      var isAndroid3 = os.isAndroid() && os.version.major === 3;\n      var isAndroid4 = os.isAndroid() && os.version.major === 4;\n      var isTablet = isiPad || isAndroid3 || isAndroid4 && /mobile/i.test(userAgent) === true;\n      var isTouch = os.isiOS() || os.isAndroid();\n      var isPhone = isTouch && !isTablet;\n      var iOSwebview = browser.isSafari() && os.isiOS() && /safari/i.test(userAgent) === false;\n      return {\n        isiPad: constant(isiPad),\n        isiPhone: constant(isiPhone),\n        isTablet: constant(isTablet),\n        isPhone: constant(isPhone),\n        isTouch: constant(isTouch),\n        isAndroid: os.isAndroid,\n        isiOS: os.isiOS,\n        isWebView: constant(iOSwebview)\n      };\n    };\n\n    var detect$1 = function (candidates, userAgent) {\n      var agent = String(userAgent).toLowerCase();\n      return find(candidates, function (candidate) {\n        return candidate.search(agent);\n      });\n    };\n    var detectBrowser = function (browsers, userAgent) {\n      return detect$1(browsers, userAgent).map(function (browser) {\n        var version = Version.detect(browser.versionRegexes, userAgent);\n        return {\n          current: browser.name,\n          version: version\n        };\n      });\n    };\n    var detectOs = function (oses, userAgent) {\n      return detect$1(oses, userAgent).map(function (os) {\n        var version = Version.detect(os.versionRegexes, userAgent);\n        return {\n          current: os.name,\n          version: version\n        };\n      });\n    };\n    var UaString = {\n      detectBrowser: detectBrowser,\n      detectOs: detectOs\n    };\n\n    var contains = function (str, substr) {\n      return str.indexOf(substr) !== -1;\n    };\n\n    var normalVersionRegex = /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/;\n    var checkContains = function (target) {\n      return function (uastring) {\n        return contains(uastring, target);\n      };\n    };\n    var browsers = [\n      {\n        name: 'Edge',\n        versionRegexes: [/.*?edge\\/ ?([0-9]+)\\.([0-9]+)$/],\n        search: function (uastring) {\n          return contains(uastring, 'edge/') && contains(uastring, 'chrome') && contains(uastring, 'safari') && contains(uastring, 'applewebkit');\n        }\n      },\n      {\n        name: 'Chrome',\n        versionRegexes: [\n          /.*?chrome\\/([0-9]+)\\.([0-9]+).*/,\n          normalVersionRegex\n        ],\n        search: function (uastring) {\n          return contains(uastring, 'chrome') && !contains(uastring, 'chromeframe');\n        }\n      },\n      {\n        name: 'IE',\n        versionRegexes: [\n          /.*?msie\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*?rv:([0-9]+)\\.([0-9]+).*/\n        ],\n        search: function (uastring) {\n          return contains(uastring, 'msie') || contains(uastring, 'trident');\n        }\n      },\n      {\n        name: 'Opera',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?opera\\/([0-9]+)\\.([0-9]+).*/\n        ],\n        search: checkContains('opera')\n      },\n      {\n        name: 'Firefox',\n        versionRegexes: [/.*?firefox\\/\\ ?([0-9]+)\\.([0-9]+).*/],\n        search: checkContains('firefox')\n      },\n      {\n        name: 'Safari',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?cpu os ([0-9]+)_([0-9]+).*/\n        ],\n        search: function (uastring) {\n          return (contains(uastring, 'safari') || contains(uastring, 'mobile/')) && contains(uastring, 'applewebkit');\n        }\n      }\n    ];\n    var oses = [\n      {\n        name: 'Windows',\n        search: checkContains('win'),\n        versionRegexes: [/.*?windows\\ nt\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'iOS',\n        search: function (uastring) {\n          return contains(uastring, 'iphone') || contains(uastring, 'ipad');\n        },\n        versionRegexes: [\n          /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*cpu os ([0-9]+)_([0-9]+).*/,\n          /.*cpu iphone os ([0-9]+)_([0-9]+).*/\n        ]\n      },\n      {\n        name: 'Android',\n        search: checkContains('android'),\n        versionRegexes: [/.*?android\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'OSX',\n        search: checkContains('os x'),\n        versionRegexes: [/.*?os\\ x\\ ?([0-9]+)_([0-9]+).*/]\n      },\n      {\n        name: 'Linux',\n        search: checkContains('linux'),\n        versionRegexes: []\n      },\n      {\n        name: 'Solaris',\n        search: checkContains('sunos'),\n        versionRegexes: []\n      },\n      {\n        name: 'FreeBSD',\n        search: checkContains('freebsd'),\n        versionRegexes: []\n      }\n    ];\n    var PlatformInfo = {\n      browsers: constant(browsers),\n      oses: constant(oses)\n    };\n\n    var detect$2 = function (userAgent) {\n      var browsers = PlatformInfo.browsers();\n      var oses = PlatformInfo.oses();\n      var browser = UaString.detectBrowser(browsers, userAgent).fold(Browser.unknown, Browser.nu);\n      var os = UaString.detectOs(oses, userAgent).fold(OperatingSystem.unknown, OperatingSystem.nu);\n      var deviceType = DeviceType(os, browser, userAgent);\n      return {\n        browser: browser,\n        os: os,\n        deviceType: deviceType\n      };\n    };\n    var PlatformDetection = { detect: detect$2 };\n\n    var detect$3 = cached(function () {\n      var userAgent = domGlobals.navigator.userAgent;\n      return PlatformDetection.detect(userAgent);\n    });\n    var PlatformDetection$1 = { detect: detect$3 };\n\n    var ELEMENT$1 = ELEMENT;\n    var DOCUMENT$1 = DOCUMENT;\n    var bypassSelector = function (dom) {\n      return dom.nodeType !== ELEMENT$1 && dom.nodeType !== DOCUMENT$1 || dom.childElementCount === 0;\n    };\n    var all = function (selector, scope) {\n      var base = scope === undefined ? domGlobals.document : scope.dom();\n      return bypassSelector(base) ? [] : map(base.querySelectorAll(selector), Element.fromDom);\n    };\n    var one = function (selector, scope) {\n      var base = scope === undefined ? domGlobals.document : scope.dom();\n      return bypassSelector(base) ? Option.none() : Option.from(base.querySelector(selector)).map(Element.fromDom);\n    };\n\n    var regularContains = function (e1, e2) {\n      var d1 = e1.dom();\n      var d2 = e2.dom();\n      return d1 === d2 ? false : d1.contains(d2);\n    };\n    var ieContains = function (e1, e2) {\n      return Node.documentPositionContainedBy(e1.dom(), e2.dom());\n    };\n    var browser = PlatformDetection$1.detect().browser;\n    var contains$1 = browser.isIE() ? ieContains : regularContains;\n\n    var spot = Immutable('element', 'offset');\n\n    var descendants = function (scope, selector) {\n      return all(selector, scope);\n    };\n\n    var trim = global$2.trim;\n    var hasContentEditableState = function (value) {\n      return function (node) {\n        if (node && node.nodeType === 1) {\n          if (node.contentEditable === value) {\n            return true;\n          }\n          if (node.getAttribute('data-mce-contenteditable') === value) {\n            return true;\n          }\n        }\n        return false;\n      };\n    };\n    var isContentEditableTrue = hasContentEditableState('true');\n    var isContentEditableFalse = hasContentEditableState('false');\n    var create = function (type, title, url, level, attach) {\n      return {\n        type: type,\n        title: title,\n        url: url,\n        level: level,\n        attach: attach\n      };\n    };\n    var isChildOfContentEditableTrue = function (node) {\n      while (node = node.parentNode) {\n        var value = node.contentEditable;\n        if (value && value !== 'inherit') {\n          return isContentEditableTrue(node);\n        }\n      }\n      return false;\n    };\n    var select = function (selector, root) {\n      return map(descendants(Element.fromDom(root), selector), function (element) {\n        return element.dom();\n      });\n    };\n    var getElementText = function (elm) {\n      return elm.innerText || elm.textContent;\n    };\n    var getOrGenerateId = function (elm) {\n      return elm.id ? elm.id : generate('h');\n    };\n    var isAnchor = function (elm) {\n      return elm && elm.nodeName === 'A' && (elm.id || elm.name);\n    };\n    var isValidAnchor = function (elm) {\n      return isAnchor(elm) && isEditable(elm);\n    };\n    var isHeader = function (elm) {\n      return elm && /^(H[1-6])$/.test(elm.nodeName);\n    };\n    var isEditable = function (elm) {\n      return isChildOfContentEditableTrue(elm) && !isContentEditableFalse(elm);\n    };\n    var isValidHeader = function (elm) {\n      return isHeader(elm) && isEditable(elm);\n    };\n    var getLevel = function (elm) {\n      return isHeader(elm) ? parseInt(elm.nodeName.substr(1), 10) : 0;\n    };\n    var headerTarget = function (elm) {\n      var headerId = getOrGenerateId(elm);\n      var attach = function () {\n        elm.id = headerId;\n      };\n      return create('header', getElementText(elm), '#' + headerId, getLevel(elm), attach);\n    };\n    var anchorTarget = function (elm) {\n      var anchorId = elm.id || elm.name;\n      var anchorText = getElementText(elm);\n      return create('anchor', anchorText ? anchorText : '#' + anchorId, '#' + anchorId, 0, noop);\n    };\n    var getHeaderTargets = function (elms) {\n      return map(filter(elms, isValidHeader), headerTarget);\n    };\n    var getAnchorTargets = function (elms) {\n      return map(filter(elms, isValidAnchor), anchorTarget);\n    };\n    var getTargetElements = function (elm) {\n      var elms = select('h1,h2,h3,h4,h5,h6,a:not([href])', elm);\n      return elms;\n    };\n    var hasTitle = function (target) {\n      return trim(target.title).length > 0;\n    };\n    var find$2 = function (elm) {\n      var elms = getTargetElements(elm);\n      return filter(getHeaderTargets(elms).concat(getAnchorTargets(elms)), hasTitle);\n    };\n    var LinkTargets = { find: find$2 };\n\n    var getActiveEditor = function () {\n      return window.tinymce ? window.tinymce.activeEditor : global$1.activeEditor;\n    };\n    var history = {};\n    var HISTORY_LENGTH = 5;\n    var clearHistory = function () {\n      history = {};\n    };\n    var toMenuItem = function (target) {\n      return {\n        title: target.title,\n        value: {\n          title: { raw: target.title },\n          url: target.url,\n          attach: target.attach\n        }\n      };\n    };\n    var toMenuItems = function (targets) {\n      return global$2.map(targets, toMenuItem);\n    };\n    var staticMenuItem = function (title, url) {\n      return {\n        title: title,\n        value: {\n          title: title,\n          url: url,\n          attach: noop\n        }\n      };\n    };\n    var isUniqueUrl = function (url, targets) {\n      var foundTarget = exists(targets, function (target) {\n        return target.url === url;\n      });\n      return !foundTarget;\n    };\n    var getSetting = function (editorSettings, name, defaultValue) {\n      var value = name in editorSettings ? editorSettings[name] : defaultValue;\n      return value === false ? null : value;\n    };\n    var createMenuItems = function (term, targets, fileType, editorSettings) {\n      var separator = { title: '-' };\n      var fromHistoryMenuItems = function (history) {\n        var historyItems = history.hasOwnProperty(fileType) ? history[fileType] : [];\n        var uniqueHistory = filter(historyItems, function (url) {\n          return isUniqueUrl(url, targets);\n        });\n        return global$2.map(uniqueHistory, function (url) {\n          return {\n            title: url,\n            value: {\n              title: url,\n              url: url,\n              attach: noop\n            }\n          };\n        });\n      };\n      var fromMenuItems = function (type) {\n        var filteredTargets = filter(targets, function (target) {\n          return target.type === type;\n        });\n        return toMenuItems(filteredTargets);\n      };\n      var anchorMenuItems = function () {\n        var anchorMenuItems = fromMenuItems('anchor');\n        var topAnchor = getSetting(editorSettings, 'anchor_top', '#top');\n        var bottomAchor = getSetting(editorSettings, 'anchor_bottom', '#bottom');\n        if (topAnchor !== null) {\n          anchorMenuItems.unshift(staticMenuItem('<top>', topAnchor));\n        }\n        if (bottomAchor !== null) {\n          anchorMenuItems.push(staticMenuItem('<bottom>', bottomAchor));\n        }\n        return anchorMenuItems;\n      };\n      var join = function (items) {\n        return foldl(items, function (a, b) {\n          var bothEmpty = a.length === 0 || b.length === 0;\n          return bothEmpty ? a.concat(b) : a.concat(separator, b);\n        }, []);\n      };\n      if (editorSettings.typeahead_urls === false) {\n        return [];\n      }\n      return fileType === 'file' ? join([\n        filterByQuery(term, fromHistoryMenuItems(history)),\n        filterByQuery(term, fromMenuItems('header')),\n        filterByQuery(term, anchorMenuItems())\n      ]) : filterByQuery(term, fromHistoryMenuItems(history));\n    };\n    var addToHistory = function (url, fileType) {\n      var items = history[fileType];\n      if (!/^https?/.test(url)) {\n        return;\n      }\n      if (items) {\n        if (indexOf(items, url).isNone()) {\n          history[fileType] = items.slice(0, HISTORY_LENGTH).concat(url);\n        }\n      } else {\n        history[fileType] = [url];\n      }\n    };\n    var filterByQuery = function (term, menuItems) {\n      var lowerCaseTerm = term.toLowerCase();\n      var result = global$2.grep(menuItems, function (item) {\n        return item.title.toLowerCase().indexOf(lowerCaseTerm) !== -1;\n      });\n      return result.length === 1 && result[0].title === term ? [] : result;\n    };\n    var getTitle = function (linkDetails) {\n      var title = linkDetails.title;\n      return title.raw ? title.raw : title;\n    };\n    var setupAutoCompleteHandler = function (ctrl, editorSettings, bodyElm, fileType) {\n      var autocomplete = function (term) {\n        var linkTargets = LinkTargets.find(bodyElm);\n        var menuItems = createMenuItems(term, linkTargets, fileType, editorSettings);\n        ctrl.showAutoComplete(menuItems, term);\n      };\n      ctrl.on('autocomplete', function () {\n        autocomplete(ctrl.value());\n      });\n      ctrl.on('selectitem', function (e) {\n        var linkDetails = e.value;\n        ctrl.value(linkDetails.url);\n        var title = getTitle(linkDetails);\n        if (fileType === 'image') {\n          ctrl.fire('change', {\n            meta: {\n              alt: title,\n              attach: linkDetails.attach\n            }\n          });\n        } else {\n          ctrl.fire('change', {\n            meta: {\n              text: title,\n              attach: linkDetails.attach\n            }\n          });\n        }\n        ctrl.focus();\n      });\n      ctrl.on('click', function (e) {\n        if (ctrl.value().length === 0 && e.target.nodeName === 'INPUT') {\n          autocomplete('');\n        }\n      });\n      ctrl.on('PostRender', function () {\n        ctrl.getRoot().on('submit', function (e) {\n          if (!e.isDefaultPrevented()) {\n            addToHistory(ctrl.value(), fileType);\n          }\n        });\n      });\n    };\n    var statusToUiState = function (result) {\n      var status = result.status, message = result.message;\n      if (status === 'valid') {\n        return {\n          status: 'ok',\n          message: message\n        };\n      } else if (status === 'unknown') {\n        return {\n          status: 'warn',\n          message: message\n        };\n      } else if (status === 'invalid') {\n        return {\n          status: 'warn',\n          message: message\n        };\n      } else {\n        return {\n          status: 'none',\n          message: ''\n        };\n      }\n    };\n    var setupLinkValidatorHandler = function (ctrl, editorSettings, fileType) {\n      var validatorHandler = editorSettings.filepicker_validator_handler;\n      if (validatorHandler) {\n        var validateUrl_1 = function (url) {\n          if (url.length === 0) {\n            ctrl.statusLevel('none');\n            return;\n          }\n          validatorHandler({\n            url: url,\n            type: fileType\n          }, function (result) {\n            var uiState = statusToUiState(result);\n            ctrl.statusMessage(uiState.message);\n            ctrl.statusLevel(uiState.status);\n          });\n        };\n        ctrl.state.on('change:value', function (e) {\n          validateUrl_1(e.value);\n        });\n      }\n    };\n    var FilePicker = ComboBox.extend({\n      Statics: { clearHistory: clearHistory },\n      init: function (settings) {\n        var self = this, editor = getActiveEditor(), editorSettings = editor.settings;\n        var actionCallback, fileBrowserCallback, fileBrowserCallbackTypes;\n        var fileType = settings.filetype;\n        settings.spellcheck = false;\n        fileBrowserCallbackTypes = editorSettings.file_picker_types || editorSettings.file_browser_callback_types;\n        if (fileBrowserCallbackTypes) {\n          fileBrowserCallbackTypes = global$2.makeMap(fileBrowserCallbackTypes, /[, ]/);\n        }\n        if (!fileBrowserCallbackTypes || fileBrowserCallbackTypes[fileType]) {\n          fileBrowserCallback = editorSettings.file_picker_callback;\n          if (fileBrowserCallback && (!fileBrowserCallbackTypes || fileBrowserCallbackTypes[fileType])) {\n            actionCallback = function () {\n              var meta = self.fire('beforecall').meta;\n              meta = global$2.extend({ filetype: fileType }, meta);\n              fileBrowserCallback.call(editor, function (value, meta) {\n                self.value(value).fire('change', { meta: meta });\n              }, self.value(), meta);\n            };\n          } else {\n            fileBrowserCallback = editorSettings.file_browser_callback;\n            if (fileBrowserCallback && (!fileBrowserCallbackTypes || fileBrowserCallbackTypes[fileType])) {\n              actionCallback = function () {\n                fileBrowserCallback(self.getEl('inp').id, self.value(), fileType, window);\n              };\n            }\n          }\n        }\n        if (actionCallback) {\n          settings.icon = 'browse';\n          settings.onaction = actionCallback;\n        }\n        self._super(settings);\n        self.classes.add('filepicker');\n        setupAutoCompleteHandler(self, editorSettings, editor.getBody(), fileType);\n        setupLinkValidatorHandler(self, editorSettings, fileType);\n      }\n    });\n\n    var FitLayout = AbsoluteLayout.extend({\n      recalc: function (container) {\n        var contLayoutRect = container.layoutRect(), paddingBox = container.paddingBox;\n        container.items().filter(':visible').each(function (ctrl) {\n          ctrl.layoutRect({\n            x: paddingBox.left,\n            y: paddingBox.top,\n            w: contLayoutRect.innerW - paddingBox.right - paddingBox.left,\n            h: contLayoutRect.innerH - paddingBox.top - paddingBox.bottom\n          });\n          if (ctrl.recalc) {\n            ctrl.recalc();\n          }\n        });\n      }\n    });\n\n    var FlexLayout = AbsoluteLayout.extend({\n      recalc: function (container) {\n        var i, l, items, contLayoutRect, contPaddingBox, contSettings, align, pack, spacing, totalFlex, availableSpace, direction;\n        var ctrl, ctrlLayoutRect, ctrlSettings, flex;\n        var maxSizeItems = [];\n        var size, maxSize, ratio, rect, pos, maxAlignEndPos;\n        var sizeName, minSizeName, posName, maxSizeName, beforeName, innerSizeName, deltaSizeName, contentSizeName;\n        var alignAxisName, alignInnerSizeName, alignSizeName, alignMinSizeName, alignBeforeName, alignAfterName;\n        var alignDeltaSizeName, alignContentSizeName;\n        var max = Math.max, min = Math.min;\n        items = container.items().filter(':visible');\n        contLayoutRect = container.layoutRect();\n        contPaddingBox = container.paddingBox;\n        contSettings = container.settings;\n        direction = container.isRtl() ? contSettings.direction || 'row-reversed' : contSettings.direction;\n        align = contSettings.align;\n        pack = container.isRtl() ? contSettings.pack || 'end' : contSettings.pack;\n        spacing = contSettings.spacing || 0;\n        if (direction === 'row-reversed' || direction === 'column-reverse') {\n          items = items.set(items.toArray().reverse());\n          direction = direction.split('-')[0];\n        }\n        if (direction === 'column') {\n          posName = 'y';\n          sizeName = 'h';\n          minSizeName = 'minH';\n          maxSizeName = 'maxH';\n          innerSizeName = 'innerH';\n          beforeName = 'top';\n          deltaSizeName = 'deltaH';\n          contentSizeName = 'contentH';\n          alignBeforeName = 'left';\n          alignSizeName = 'w';\n          alignAxisName = 'x';\n          alignInnerSizeName = 'innerW';\n          alignMinSizeName = 'minW';\n          alignAfterName = 'right';\n          alignDeltaSizeName = 'deltaW';\n          alignContentSizeName = 'contentW';\n        } else {\n          posName = 'x';\n          sizeName = 'w';\n          minSizeName = 'minW';\n          maxSizeName = 'maxW';\n          innerSizeName = 'innerW';\n          beforeName = 'left';\n          deltaSizeName = 'deltaW';\n          contentSizeName = 'contentW';\n          alignBeforeName = 'top';\n          alignSizeName = 'h';\n          alignAxisName = 'y';\n          alignInnerSizeName = 'innerH';\n          alignMinSizeName = 'minH';\n          alignAfterName = 'bottom';\n          alignDeltaSizeName = 'deltaH';\n          alignContentSizeName = 'contentH';\n        }\n        availableSpace = contLayoutRect[innerSizeName] - contPaddingBox[beforeName] - contPaddingBox[beforeName];\n        maxAlignEndPos = totalFlex = 0;\n        for (i = 0, l = items.length; i < l; i++) {\n          ctrl = items[i];\n          ctrlLayoutRect = ctrl.layoutRect();\n          ctrlSettings = ctrl.settings;\n          flex = ctrlSettings.flex;\n          availableSpace -= i < l - 1 ? spacing : 0;\n          if (flex > 0) {\n            totalFlex += flex;\n            if (ctrlLayoutRect[maxSizeName]) {\n              maxSizeItems.push(ctrl);\n            }\n            ctrlLayoutRect.flex = flex;\n          }\n          availableSpace -= ctrlLayoutRect[minSizeName];\n          size = contPaddingBox[alignBeforeName] + ctrlLayoutRect[alignMinSizeName] + contPaddingBox[alignAfterName];\n          if (size > maxAlignEndPos) {\n            maxAlignEndPos = size;\n          }\n        }\n        rect = {};\n        if (availableSpace < 0) {\n          rect[minSizeName] = contLayoutRect[minSizeName] - availableSpace + contLayoutRect[deltaSizeName];\n        } else {\n          rect[minSizeName] = contLayoutRect[innerSizeName] - availableSpace + contLayoutRect[deltaSizeName];\n        }\n        rect[alignMinSizeName] = maxAlignEndPos + contLayoutRect[alignDeltaSizeName];\n        rect[contentSizeName] = contLayoutRect[innerSizeName] - availableSpace;\n        rect[alignContentSizeName] = maxAlignEndPos;\n        rect.minW = min(rect.minW, contLayoutRect.maxW);\n        rect.minH = min(rect.minH, contLayoutRect.maxH);\n        rect.minW = max(rect.minW, contLayoutRect.startMinWidth);\n        rect.minH = max(rect.minH, contLayoutRect.startMinHeight);\n        if (contLayoutRect.autoResize && (rect.minW !== contLayoutRect.minW || rect.minH !== contLayoutRect.minH)) {\n          rect.w = rect.minW;\n          rect.h = rect.minH;\n          container.layoutRect(rect);\n          this.recalc(container);\n          if (container._lastRect === null) {\n            var parentCtrl = container.parent();\n            if (parentCtrl) {\n              parentCtrl._lastRect = null;\n              parentCtrl.recalc();\n            }\n          }\n          return;\n        }\n        ratio = availableSpace / totalFlex;\n        for (i = 0, l = maxSizeItems.length; i < l; i++) {\n          ctrl = maxSizeItems[i];\n          ctrlLayoutRect = ctrl.layoutRect();\n          maxSize = ctrlLayoutRect[maxSizeName];\n          size = ctrlLayoutRect[minSizeName] + ctrlLayoutRect.flex * ratio;\n          if (size > maxSize) {\n            availableSpace -= ctrlLayoutRect[maxSizeName] - ctrlLayoutRect[minSizeName];\n            totalFlex -= ctrlLayoutRect.flex;\n            ctrlLayoutRect.flex = 0;\n            ctrlLayoutRect.maxFlexSize = maxSize;\n          } else {\n            ctrlLayoutRect.maxFlexSize = 0;\n          }\n        }\n        ratio = availableSpace / totalFlex;\n        pos = contPaddingBox[beforeName];\n        rect = {};\n        if (totalFlex === 0) {\n          if (pack === 'end') {\n            pos = availableSpace + contPaddingBox[beforeName];\n          } else if (pack === 'center') {\n            pos = Math.round(contLayoutRect[innerSizeName] / 2 - (contLayoutRect[innerSizeName] - availableSpace) / 2) + contPaddingBox[beforeName];\n            if (pos < 0) {\n              pos = contPaddingBox[beforeName];\n            }\n          } else if (pack === 'justify') {\n            pos = contPaddingBox[beforeName];\n            spacing = Math.floor(availableSpace / (items.length - 1));\n          }\n        }\n        rect[alignAxisName] = contPaddingBox[alignBeforeName];\n        for (i = 0, l = items.length; i < l; i++) {\n          ctrl = items[i];\n          ctrlLayoutRect = ctrl.layoutRect();\n          size = ctrlLayoutRect.maxFlexSize || ctrlLayoutRect[minSizeName];\n          if (align === 'center') {\n            rect[alignAxisName] = Math.round(contLayoutRect[alignInnerSizeName] / 2 - ctrlLayoutRect[alignSizeName] / 2);\n          } else if (align === 'stretch') {\n            rect[alignSizeName] = max(ctrlLayoutRect[alignMinSizeName] || 0, contLayoutRect[alignInnerSizeName] - contPaddingBox[alignBeforeName] - contPaddingBox[alignAfterName]);\n            rect[alignAxisName] = contPaddingBox[alignBeforeName];\n          } else if (align === 'end') {\n            rect[alignAxisName] = contLayoutRect[alignInnerSizeName] - ctrlLayoutRect[alignSizeName] - contPaddingBox.top;\n          }\n          if (ctrlLayoutRect.flex > 0) {\n            size += ctrlLayoutRect.flex * ratio;\n          }\n          rect[sizeName] = size;\n          rect[posName] = pos;\n          ctrl.layoutRect(rect);\n          if (ctrl.recalc) {\n            ctrl.recalc();\n          }\n          pos += size + spacing;\n        }\n      }\n    });\n\n    var FlowLayout = Layout.extend({\n      Defaults: {\n        containerClass: 'flow-layout',\n        controlClass: 'flow-layout-item',\n        endClass: 'break'\n      },\n      recalc: function (container) {\n        container.items().filter(':visible').each(function (ctrl) {\n          if (ctrl.recalc) {\n            ctrl.recalc();\n          }\n        });\n      },\n      isNative: function () {\n        return true;\n      }\n    });\n\n    var descendant = function (scope, selector) {\n      return one(selector, scope);\n    };\n\n    var toggleFormat = function (editor, fmt) {\n      return function () {\n        editor.execCommand('mceToggleFormat', false, fmt);\n      };\n    };\n    var addFormatChangedListener = function (editor, name, changed) {\n      var handler = function (state) {\n        changed(state, name);\n      };\n      if (editor.formatter) {\n        editor.formatter.formatChanged(name, handler);\n      } else {\n        editor.on('init', function () {\n          editor.formatter.formatChanged(name, handler);\n        });\n      }\n    };\n    var postRenderFormatToggle = function (editor, name) {\n      return function (e) {\n        addFormatChangedListener(editor, name, function (state) {\n          e.control.active(state);\n        });\n      };\n    };\n\n    var register = function (editor) {\n      var alignFormats = [\n        'alignleft',\n        'aligncenter',\n        'alignright',\n        'alignjustify'\n      ];\n      var defaultAlign = 'alignleft';\n      var alignMenuItems = [\n        {\n          text: 'Left',\n          icon: 'alignleft',\n          onclick: toggleFormat(editor, 'alignleft')\n        },\n        {\n          text: 'Center',\n          icon: 'aligncenter',\n          onclick: toggleFormat(editor, 'aligncenter')\n        },\n        {\n          text: 'Right',\n          icon: 'alignright',\n          onclick: toggleFormat(editor, 'alignright')\n        },\n        {\n          text: 'Justify',\n          icon: 'alignjustify',\n          onclick: toggleFormat(editor, 'alignjustify')\n        }\n      ];\n      editor.addMenuItem('align', {\n        text: 'Align',\n        menu: alignMenuItems\n      });\n      editor.addButton('align', {\n        type: 'menubutton',\n        icon: defaultAlign,\n        menu: alignMenuItems,\n        onShowMenu: function (e) {\n          var menu = e.control.menu;\n          global$2.each(alignFormats, function (formatName, idx) {\n            menu.items().eq(idx).each(function (item) {\n              return item.active(editor.formatter.match(formatName));\n            });\n          });\n        },\n        onPostRender: function (e) {\n          var ctrl = e.control;\n          global$2.each(alignFormats, function (formatName, idx) {\n            addFormatChangedListener(editor, formatName, function (state) {\n              ctrl.icon(defaultAlign);\n              if (state) {\n                ctrl.icon(formatName);\n              }\n            });\n          });\n        }\n      });\n      global$2.each({\n        alignleft: [\n          'Align left',\n          'JustifyLeft'\n        ],\n        aligncenter: [\n          'Align center',\n          'JustifyCenter'\n        ],\n        alignright: [\n          'Align right',\n          'JustifyRight'\n        ],\n        alignjustify: [\n          'Justify',\n          'JustifyFull'\n        ],\n        alignnone: [\n          'No alignment',\n          'JustifyNone'\n        ]\n      }, function (item, name) {\n        editor.addButton(name, {\n          active: false,\n          tooltip: item[0],\n          cmd: item[1],\n          onPostRender: postRenderFormatToggle(editor, name)\n        });\n      });\n    };\n    var Align = { register: register };\n\n    var getFirstFont = function (fontFamily) {\n      return fontFamily ? fontFamily.split(',')[0] : '';\n    };\n    var findMatchingValue = function (items, fontFamily) {\n      var font = fontFamily ? fontFamily.toLowerCase() : '';\n      var value;\n      global$2.each(items, function (item) {\n        if (item.value.toLowerCase() === font) {\n          value = item.value;\n        }\n      });\n      global$2.each(items, function (item) {\n        if (!value && getFirstFont(item.value).toLowerCase() === getFirstFont(font).toLowerCase()) {\n          value = item.value;\n        }\n      });\n      return value;\n    };\n    var createFontNameListBoxChangeHandler = function (editor, items) {\n      return function () {\n        var self = this;\n        self.state.set('value', null);\n        editor.on('init nodeChange', function (e) {\n          var fontFamily = editor.queryCommandValue('FontName');\n          var match = findMatchingValue(items, fontFamily);\n          self.value(match ? match : null);\n          if (!match && fontFamily) {\n            self.text(getFirstFont(fontFamily));\n          }\n        });\n      };\n    };\n    var createFormats = function (formats) {\n      formats = formats.replace(/;$/, '').split(';');\n      var i = formats.length;\n      while (i--) {\n        formats[i] = formats[i].split('=');\n      }\n      return formats;\n    };\n    var getFontItems = function (editor) {\n      var defaultFontsFormats = 'Andale Mono=andale mono,monospace;' + 'Arial=arial,helvetica,sans-serif;' + 'Arial Black=arial black,sans-serif;' + 'Book Antiqua=book antiqua,palatino,serif;' + 'Comic Sans MS=comic sans ms,sans-serif;' + 'Courier New=courier new,courier,monospace;' + 'Georgia=georgia,palatino,serif;' + 'Helvetica=helvetica,arial,sans-serif;' + 'Impact=impact,sans-serif;' + 'Symbol=symbol;' + 'Tahoma=tahoma,arial,helvetica,sans-serif;' + 'Terminal=terminal,monaco,monospace;' + 'Times New Roman=times new roman,times,serif;' + 'Trebuchet MS=trebuchet ms,geneva,sans-serif;' + 'Verdana=verdana,geneva,sans-serif;' + 'Webdings=webdings;' + 'Wingdings=wingdings,zapf dingbats';\n      var fonts = createFormats(editor.settings.font_formats || defaultFontsFormats);\n      return global$2.map(fonts, function (font) {\n        return {\n          text: { raw: font[0] },\n          value: font[1],\n          textStyle: font[1].indexOf('dings') === -1 ? 'font-family:' + font[1] : ''\n        };\n      });\n    };\n    var registerButtons = function (editor) {\n      editor.addButton('fontselect', function () {\n        var items = getFontItems(editor);\n        return {\n          type: 'listbox',\n          text: 'Font Family',\n          tooltip: 'Font Family',\n          values: items,\n          fixedWidth: true,\n          onPostRender: createFontNameListBoxChangeHandler(editor, items),\n          onselect: function (e) {\n            if (e.control.settings.value) {\n              editor.execCommand('FontName', false, e.control.settings.value);\n            }\n          }\n        };\n      });\n    };\n    var register$1 = function (editor) {\n      registerButtons(editor);\n    };\n    var FontSelect = { register: register$1 };\n\n    var round = function (number, precision) {\n      var factor = Math.pow(10, precision);\n      return Math.round(number * factor) / factor;\n    };\n    var toPt = function (fontSize, precision) {\n      if (/[0-9.]+px$/.test(fontSize)) {\n        return round(parseInt(fontSize, 10) * 72 / 96, precision || 0) + 'pt';\n      }\n      return fontSize;\n    };\n    var findMatchingValue$1 = function (items, pt, px) {\n      var value;\n      global$2.each(items, function (item) {\n        if (item.value === px) {\n          value = px;\n        } else if (item.value === pt) {\n          value = pt;\n        }\n      });\n      return value;\n    };\n    var createFontSizeListBoxChangeHandler = function (editor, items) {\n      return function () {\n        var self = this;\n        editor.on('init nodeChange', function (e) {\n          var px, pt, precision, match;\n          px = editor.queryCommandValue('FontSize');\n          if (px) {\n            for (precision = 3; !match && precision >= 0; precision--) {\n              pt = toPt(px, precision);\n              match = findMatchingValue$1(items, pt, px);\n            }\n          }\n          self.value(match ? match : null);\n          if (!match) {\n            self.text(pt);\n          }\n        });\n      };\n    };\n    var getFontSizeItems = function (editor) {\n      var defaultFontsizeFormats = '8pt 10pt 12pt 14pt 18pt 24pt 36pt';\n      var fontsizeFormats = editor.settings.fontsize_formats || defaultFontsizeFormats;\n      return global$2.map(fontsizeFormats.split(' '), function (item) {\n        var text = item, value = item;\n        var values = item.split('=');\n        if (values.length > 1) {\n          text = values[0];\n          value = values[1];\n        }\n        return {\n          text: text,\n          value: value\n        };\n      });\n    };\n    var registerButtons$1 = function (editor) {\n      editor.addButton('fontsizeselect', function () {\n        var items = getFontSizeItems(editor);\n        return {\n          type: 'listbox',\n          text: 'Font Sizes',\n          tooltip: 'Font Sizes',\n          values: items,\n          fixedWidth: true,\n          onPostRender: createFontSizeListBoxChangeHandler(editor, items),\n          onclick: function (e) {\n            if (e.control.settings.value) {\n              editor.execCommand('FontSize', false, e.control.settings.value);\n            }\n          }\n        };\n      });\n    };\n    var register$2 = function (editor) {\n      registerButtons$1(editor);\n    };\n    var FontSizeSelect = { register: register$2 };\n\n    var hideMenuObjects = function (editor, menu) {\n      var count = menu.length;\n      global$2.each(menu, function (item) {\n        if (item.menu) {\n          item.hidden = hideMenuObjects(editor, item.menu) === 0;\n        }\n        var formatName = item.format;\n        if (formatName) {\n          item.hidden = !editor.formatter.canApply(formatName);\n        }\n        if (item.hidden) {\n          count--;\n        }\n      });\n      return count;\n    };\n    var hideFormatMenuItems = function (editor, menu) {\n      var count = menu.items().length;\n      menu.items().each(function (item) {\n        if (item.menu) {\n          item.visible(hideFormatMenuItems(editor, item.menu) > 0);\n        }\n        if (!item.menu && item.settings.menu) {\n          item.visible(hideMenuObjects(editor, item.settings.menu) > 0);\n        }\n        var formatName = item.settings.format;\n        if (formatName) {\n          item.visible(editor.formatter.canApply(formatName));\n        }\n        if (!item.visible()) {\n          count--;\n        }\n      });\n      return count;\n    };\n    var createFormatMenu = function (editor) {\n      var count = 0;\n      var newFormats = [];\n      var defaultStyleFormats = [\n        {\n          title: 'Headings',\n          items: [\n            {\n              title: 'Heading 1',\n              format: 'h1'\n            },\n            {\n              title: 'Heading 2',\n              format: 'h2'\n            },\n            {\n              title: 'Heading 3',\n              format: 'h3'\n            },\n            {\n              title: 'Heading 4',\n              format: 'h4'\n            },\n            {\n              title: 'Heading 5',\n              format: 'h5'\n            },\n            {\n              title: 'Heading 6',\n              format: 'h6'\n            }\n          ]\n        },\n        {\n          title: 'Inline',\n          items: [\n            {\n              title: 'Bold',\n              icon: 'bold',\n              format: 'bold'\n            },\n            {\n              title: 'Italic',\n              icon: 'italic',\n              format: 'italic'\n            },\n            {\n              title: 'Underline',\n              icon: 'underline',\n              format: 'underline'\n            },\n            {\n              title: 'Strikethrough',\n              icon: 'strikethrough',\n              format: 'strikethrough'\n            },\n            {\n              title: 'Superscript',\n              icon: 'superscript',\n              format: 'superscript'\n            },\n            {\n              title: 'Subscript',\n              icon: 'subscript',\n              format: 'subscript'\n            },\n            {\n              title: 'Code',\n              icon: 'code',\n              format: 'code'\n            }\n          ]\n        },\n        {\n          title: 'Blocks',\n          items: [\n            {\n              title: 'Paragraph',\n              format: 'p'\n            },\n            {\n              title: 'Blockquote',\n              format: 'blockquote'\n            },\n            {\n              title: 'Div',\n              format: 'div'\n            },\n            {\n              title: 'Pre',\n              format: 'pre'\n            }\n          ]\n        },\n        {\n          title: 'Alignment',\n          items: [\n            {\n              title: 'Left',\n              icon: 'alignleft',\n              format: 'alignleft'\n            },\n            {\n              title: 'Center',\n              icon: 'aligncenter',\n              format: 'aligncenter'\n            },\n            {\n              title: 'Right',\n              icon: 'alignright',\n              format: 'alignright'\n            },\n            {\n              title: 'Justify',\n              icon: 'alignjustify',\n              format: 'alignjustify'\n            }\n          ]\n        }\n      ];\n      var createMenu = function (formats) {\n        var menu = [];\n        if (!formats) {\n          return;\n        }\n        global$2.each(formats, function (format) {\n          var menuItem = {\n            text: format.title,\n            icon: format.icon\n          };\n          if (format.items) {\n            menuItem.menu = createMenu(format.items);\n          } else {\n            var formatName = format.format || 'custom' + count++;\n            if (!format.format) {\n              format.name = formatName;\n              newFormats.push(format);\n            }\n            menuItem.format = formatName;\n            menuItem.cmd = format.cmd;\n          }\n          menu.push(menuItem);\n        });\n        return menu;\n      };\n      var createStylesMenu = function () {\n        var menu;\n        if (editor.settings.style_formats_merge) {\n          if (editor.settings.style_formats) {\n            menu = createMenu(defaultStyleFormats.concat(editor.settings.style_formats));\n          } else {\n            menu = createMenu(defaultStyleFormats);\n          }\n        } else {\n          menu = createMenu(editor.settings.style_formats || defaultStyleFormats);\n        }\n        return menu;\n      };\n      editor.on('init', function () {\n        global$2.each(newFormats, function (format) {\n          editor.formatter.register(format.name, format);\n        });\n      });\n      return {\n        type: 'menu',\n        items: createStylesMenu(),\n        onPostRender: function (e) {\n          editor.fire('renderFormatsMenu', { control: e.control });\n        },\n        itemDefaults: {\n          preview: true,\n          textStyle: function () {\n            if (this.settings.format) {\n              return editor.formatter.getCssText(this.settings.format);\n            }\n          },\n          onPostRender: function () {\n            var self = this;\n            self.parent().on('show', function () {\n              var formatName, command;\n              formatName = self.settings.format;\n              if (formatName) {\n                self.disabled(!editor.formatter.canApply(formatName));\n                self.active(editor.formatter.match(formatName));\n              }\n              command = self.settings.cmd;\n              if (command) {\n                self.active(editor.queryCommandState(command));\n              }\n            });\n          },\n          onclick: function () {\n            if (this.settings.format) {\n              toggleFormat(editor, this.settings.format)();\n            }\n            if (this.settings.cmd) {\n              editor.execCommand(this.settings.cmd);\n            }\n          }\n        }\n      };\n    };\n    var registerMenuItems = function (editor, formatMenu) {\n      editor.addMenuItem('formats', {\n        text: 'Formats',\n        menu: formatMenu\n      });\n    };\n    var registerButtons$2 = function (editor, formatMenu) {\n      editor.addButton('styleselect', {\n        type: 'menubutton',\n        text: 'Formats',\n        menu: formatMenu,\n        onShowMenu: function () {\n          if (editor.settings.style_formats_autohide) {\n            hideFormatMenuItems(editor, this.menu);\n          }\n        }\n      });\n    };\n    var register$3 = function (editor) {\n      var formatMenu = createFormatMenu(editor);\n      registerMenuItems(editor, formatMenu);\n      registerButtons$2(editor, formatMenu);\n    };\n    var Formats = { register: register$3 };\n\n    var defaultBlocks = 'Paragraph=p;' + 'Heading 1=h1;' + 'Heading 2=h2;' + 'Heading 3=h3;' + 'Heading 4=h4;' + 'Heading 5=h5;' + 'Heading 6=h6;' + 'Preformatted=pre';\n    var createFormats$1 = function (formats) {\n      formats = formats.replace(/;$/, '').split(';');\n      var i = formats.length;\n      while (i--) {\n        formats[i] = formats[i].split('=');\n      }\n      return formats;\n    };\n    var createListBoxChangeHandler = function (editor, items, formatName) {\n      return function () {\n        var self = this;\n        editor.on('nodeChange', function (e) {\n          var formatter = editor.formatter;\n          var value = null;\n          global$2.each(e.parents, function (node) {\n            global$2.each(items, function (item) {\n              if (formatName) {\n                if (formatter.matchNode(node, formatName, { value: item.value })) {\n                  value = item.value;\n                }\n              } else {\n                if (formatter.matchNode(node, item.value)) {\n                  value = item.value;\n                }\n              }\n              if (value) {\n                return false;\n              }\n            });\n            if (value) {\n              return false;\n            }\n          });\n          self.value(value);\n        });\n      };\n    };\n    var lazyFormatSelectBoxItems = function (editor, blocks) {\n      return function () {\n        var items = [];\n        global$2.each(blocks, function (block) {\n          items.push({\n            text: block[0],\n            value: block[1],\n            textStyle: function () {\n              return editor.formatter.getCssText(block[1]);\n            }\n          });\n        });\n        return {\n          type: 'listbox',\n          text: blocks[0][0],\n          values: items,\n          fixedWidth: true,\n          onselect: function (e) {\n            if (e.control) {\n              var fmt = e.control.value();\n              toggleFormat(editor, fmt)();\n            }\n          },\n          onPostRender: createListBoxChangeHandler(editor, items)\n        };\n      };\n    };\n    var buildMenuItems = function (editor, blocks) {\n      return global$2.map(blocks, function (block) {\n        return {\n          text: block[0],\n          onclick: toggleFormat(editor, block[1]),\n          textStyle: function () {\n            return editor.formatter.getCssText(block[1]);\n          }\n        };\n      });\n    };\n    var register$4 = function (editor) {\n      var blocks = createFormats$1(editor.settings.block_formats || defaultBlocks);\n      editor.addMenuItem('blockformats', {\n        text: 'Blocks',\n        menu: buildMenuItems(editor, blocks)\n      });\n      editor.addButton('formatselect', lazyFormatSelectBoxItems(editor, blocks));\n    };\n    var FormatSelect = { register: register$4 };\n\n    var createCustomMenuItems = function (editor, names) {\n      var items, nameList;\n      if (typeof names === 'string') {\n        nameList = names.split(' ');\n      } else if (global$2.isArray(names)) {\n        return flatten(global$2.map(names, function (names) {\n          return createCustomMenuItems(editor, names);\n        }));\n      }\n      items = global$2.grep(nameList, function (name) {\n        return name === '|' || name in editor.menuItems;\n      });\n      return global$2.map(items, function (name) {\n        return name === '|' ? { text: '-' } : editor.menuItems[name];\n      });\n    };\n    var isSeparator$1 = function (menuItem) {\n      return menuItem && menuItem.text === '-';\n    };\n    var trimMenuItems = function (menuItems) {\n      var menuItems2 = filter(menuItems, function (menuItem, i) {\n        return !isSeparator$1(menuItem) || !isSeparator$1(menuItems[i - 1]);\n      });\n      return filter(menuItems2, function (menuItem, i) {\n        return !isSeparator$1(menuItem) || i > 0 && i < menuItems2.length - 1;\n      });\n    };\n    var createContextMenuItems = function (editor, context) {\n      var outputMenuItems = [{ text: '-' }];\n      var menuItems = global$2.grep(editor.menuItems, function (menuItem) {\n        return menuItem.context === context;\n      });\n      global$2.each(menuItems, function (menuItem) {\n        if (menuItem.separator === 'before') {\n          outputMenuItems.push({ text: '|' });\n        }\n        if (menuItem.prependToContext) {\n          outputMenuItems.unshift(menuItem);\n        } else {\n          outputMenuItems.push(menuItem);\n        }\n        if (menuItem.separator === 'after') {\n          outputMenuItems.push({ text: '|' });\n        }\n      });\n      return outputMenuItems;\n    };\n    var createInsertMenu = function (editor) {\n      var insertButtonItems = editor.settings.insert_button_items;\n      if (insertButtonItems) {\n        return trimMenuItems(createCustomMenuItems(editor, insertButtonItems));\n      } else {\n        return trimMenuItems(createContextMenuItems(editor, 'insert'));\n      }\n    };\n    var registerButtons$3 = function (editor) {\n      editor.addButton('insert', {\n        type: 'menubutton',\n        icon: 'insert',\n        menu: [],\n        oncreatemenu: function () {\n          this.menu.add(createInsertMenu(editor));\n          this.menu.renderNew();\n        }\n      });\n    };\n    var register$5 = function (editor) {\n      registerButtons$3(editor);\n    };\n    var InsertButton = { register: register$5 };\n\n    var registerFormatButtons = function (editor) {\n      global$2.each({\n        bold: 'Bold',\n        italic: 'Italic',\n        underline: 'Underline',\n        strikethrough: 'Strikethrough',\n        subscript: 'Subscript',\n        superscript: 'Superscript'\n      }, function (text, name) {\n        editor.addButton(name, {\n          active: false,\n          tooltip: text,\n          onPostRender: postRenderFormatToggle(editor, name),\n          onclick: toggleFormat(editor, name)\n        });\n      });\n    };\n    var registerCommandButtons = function (editor) {\n      global$2.each({\n        outdent: [\n          'Decrease indent',\n          'Outdent'\n        ],\n        indent: [\n          'Increase indent',\n          'Indent'\n        ],\n        cut: [\n          'Cut',\n          'Cut'\n        ],\n        copy: [\n          'Copy',\n          'Copy'\n        ],\n        paste: [\n          'Paste',\n          'Paste'\n        ],\n        help: [\n          'Help',\n          'mceHelp'\n        ],\n        selectall: [\n          'Select all',\n          'SelectAll'\n        ],\n        visualaid: [\n          'Visual aids',\n          'mceToggleVisualAid'\n        ],\n        newdocument: [\n          'New document',\n          'mceNewDocument'\n        ],\n        removeformat: [\n          'Clear formatting',\n          'RemoveFormat'\n        ],\n        remove: [\n          'Remove',\n          'Delete'\n        ]\n      }, function (item, name) {\n        editor.addButton(name, {\n          tooltip: item[0],\n          cmd: item[1]\n        });\n      });\n    };\n    var registerCommandToggleButtons = function (editor) {\n      global$2.each({\n        blockquote: [\n          'Blockquote',\n          'mceBlockQuote'\n        ],\n        subscript: [\n          'Subscript',\n          'Subscript'\n        ],\n        superscript: [\n          'Superscript',\n          'Superscript'\n        ]\n      }, function (item, name) {\n        editor.addButton(name, {\n          active: false,\n          tooltip: item[0],\n          cmd: item[1],\n          onPostRender: postRenderFormatToggle(editor, name)\n        });\n      });\n    };\n    var registerButtons$4 = function (editor) {\n      registerFormatButtons(editor);\n      registerCommandButtons(editor);\n      registerCommandToggleButtons(editor);\n    };\n    var registerMenuItems$1 = function (editor) {\n      global$2.each({\n        bold: [\n          'Bold',\n          'Bold',\n          'Meta+B'\n        ],\n        italic: [\n          'Italic',\n          'Italic',\n          'Meta+I'\n        ],\n        underline: [\n          'Underline',\n          'Underline',\n          'Meta+U'\n        ],\n        strikethrough: [\n          'Strikethrough',\n          'Strikethrough'\n        ],\n        subscript: [\n          'Subscript',\n          'Subscript'\n        ],\n        superscript: [\n          'Superscript',\n          'Superscript'\n        ],\n        removeformat: [\n          'Clear formatting',\n          'RemoveFormat'\n        ],\n        newdocument: [\n          'New document',\n          'mceNewDocument'\n        ],\n        cut: [\n          'Cut',\n          'Cut',\n          'Meta+X'\n        ],\n        copy: [\n          'Copy',\n          'Copy',\n          'Meta+C'\n        ],\n        paste: [\n          'Paste',\n          'Paste',\n          'Meta+V'\n        ],\n        selectall: [\n          'Select all',\n          'SelectAll',\n          'Meta+A'\n        ]\n      }, function (item, name) {\n        editor.addMenuItem(name, {\n          text: item[0],\n          icon: name,\n          shortcut: item[2],\n          cmd: item[1]\n        });\n      });\n      editor.addMenuItem('codeformat', {\n        text: 'Code',\n        icon: 'code',\n        onclick: toggleFormat(editor, 'code')\n      });\n    };\n    var register$6 = function (editor) {\n      registerButtons$4(editor);\n      registerMenuItems$1(editor);\n    };\n    var SimpleControls = { register: register$6 };\n\n    var toggleUndoRedoState = function (editor, type) {\n      return function () {\n        var self = this;\n        var checkState = function () {\n          var typeFn = type === 'redo' ? 'hasRedo' : 'hasUndo';\n          return editor.undoManager ? editor.undoManager[typeFn]() : false;\n        };\n        self.disabled(!checkState());\n        editor.on('Undo Redo AddUndo TypingUndo ClearUndos SwitchMode', function () {\n          self.disabled(editor.readonly || !checkState());\n        });\n      };\n    };\n    var registerMenuItems$2 = function (editor) {\n      editor.addMenuItem('undo', {\n        text: 'Undo',\n        icon: 'undo',\n        shortcut: 'Meta+Z',\n        onPostRender: toggleUndoRedoState(editor, 'undo'),\n        cmd: 'undo'\n      });\n      editor.addMenuItem('redo', {\n        text: 'Redo',\n        icon: 'redo',\n        shortcut: 'Meta+Y',\n        onPostRender: toggleUndoRedoState(editor, 'redo'),\n        cmd: 'redo'\n      });\n    };\n    var registerButtons$5 = function (editor) {\n      editor.addButton('undo', {\n        tooltip: 'Undo',\n        onPostRender: toggleUndoRedoState(editor, 'undo'),\n        cmd: 'undo'\n      });\n      editor.addButton('redo', {\n        tooltip: 'Redo',\n        onPostRender: toggleUndoRedoState(editor, 'redo'),\n        cmd: 'redo'\n      });\n    };\n    var register$7 = function (editor) {\n      registerMenuItems$2(editor);\n      registerButtons$5(editor);\n    };\n    var UndoRedo = { register: register$7 };\n\n    var toggleVisualAidState = function (editor) {\n      return function () {\n        var self = this;\n        editor.on('VisualAid', function (e) {\n          self.active(e.hasVisual);\n        });\n        self.active(editor.hasVisual);\n      };\n    };\n    var registerMenuItems$3 = function (editor) {\n      editor.addMenuItem('visualaid', {\n        text: 'Visual aids',\n        selectable: true,\n        onPostRender: toggleVisualAidState(editor),\n        cmd: 'mceToggleVisualAid'\n      });\n    };\n    var register$8 = function (editor) {\n      registerMenuItems$3(editor);\n    };\n    var VisualAid = { register: register$8 };\n\n    var setupEnvironment = function () {\n      Widget.tooltips = !global$8.iOS;\n      Control$1.translate = function (text) {\n        return global$1.translate(text);\n      };\n    };\n    var setupUiContainer = function (editor) {\n      if (editor.settings.ui_container) {\n        global$8.container = descendant(Element.fromDom(domGlobals.document.body), editor.settings.ui_container).fold(constant(null), function (elm) {\n          return elm.dom();\n        });\n      }\n    };\n    var setupRtlMode = function (editor) {\n      if (editor.rtl) {\n        Control$1.rtl = true;\n      }\n    };\n    var setupHideFloatPanels = function (editor) {\n      editor.on('mousedown progressstate', function () {\n        FloatPanel.hideAll();\n      });\n    };\n    var setup$1 = function (editor) {\n      setupRtlMode(editor);\n      setupHideFloatPanels(editor);\n      setupUiContainer(editor);\n      setupEnvironment();\n      FormatSelect.register(editor);\n      Align.register(editor);\n      SimpleControls.register(editor);\n      UndoRedo.register(editor);\n      FontSizeSelect.register(editor);\n      FontSelect.register(editor);\n      Formats.register(editor);\n      VisualAid.register(editor);\n      InsertButton.register(editor);\n    };\n    var FormatControls = { setup: setup$1 };\n\n    var GridLayout = AbsoluteLayout.extend({\n      recalc: function (container) {\n        var settings, rows, cols, items, contLayoutRect, width, height, rect, ctrlLayoutRect, ctrl, x, y, posX, posY, ctrlSettings, contPaddingBox, align, spacingH, spacingV, alignH, alignV, maxX, maxY;\n        var colWidths = [];\n        var rowHeights = [];\n        var ctrlMinWidth, ctrlMinHeight, availableWidth, availableHeight, reverseRows, idx;\n        settings = container.settings;\n        items = container.items().filter(':visible');\n        contLayoutRect = container.layoutRect();\n        cols = settings.columns || Math.ceil(Math.sqrt(items.length));\n        rows = Math.ceil(items.length / cols);\n        spacingH = settings.spacingH || settings.spacing || 0;\n        spacingV = settings.spacingV || settings.spacing || 0;\n        alignH = settings.alignH || settings.align;\n        alignV = settings.alignV || settings.align;\n        contPaddingBox = container.paddingBox;\n        reverseRows = 'reverseRows' in settings ? settings.reverseRows : container.isRtl();\n        if (alignH && typeof alignH === 'string') {\n          alignH = [alignH];\n        }\n        if (alignV && typeof alignV === 'string') {\n          alignV = [alignV];\n        }\n        for (x = 0; x < cols; x++) {\n          colWidths.push(0);\n        }\n        for (y = 0; y < rows; y++) {\n          rowHeights.push(0);\n        }\n        for (y = 0; y < rows; y++) {\n          for (x = 0; x < cols; x++) {\n            ctrl = items[y * cols + x];\n            if (!ctrl) {\n              break;\n            }\n            ctrlLayoutRect = ctrl.layoutRect();\n            ctrlMinWidth = ctrlLayoutRect.minW;\n            ctrlMinHeight = ctrlLayoutRect.minH;\n            colWidths[x] = ctrlMinWidth > colWidths[x] ? ctrlMinWidth : colWidths[x];\n            rowHeights[y] = ctrlMinHeight > rowHeights[y] ? ctrlMinHeight : rowHeights[y];\n          }\n        }\n        availableWidth = contLayoutRect.innerW - contPaddingBox.left - contPaddingBox.right;\n        for (maxX = 0, x = 0; x < cols; x++) {\n          maxX += colWidths[x] + (x > 0 ? spacingH : 0);\n          availableWidth -= (x > 0 ? spacingH : 0) + colWidths[x];\n        }\n        availableHeight = contLayoutRect.innerH - contPaddingBox.top - contPaddingBox.bottom;\n        for (maxY = 0, y = 0; y < rows; y++) {\n          maxY += rowHeights[y] + (y > 0 ? spacingV : 0);\n          availableHeight -= (y > 0 ? spacingV : 0) + rowHeights[y];\n        }\n        maxX += contPaddingBox.left + contPaddingBox.right;\n        maxY += contPaddingBox.top + contPaddingBox.bottom;\n        rect = {};\n        rect.minW = maxX + (contLayoutRect.w - contLayoutRect.innerW);\n        rect.minH = maxY + (contLayoutRect.h - contLayoutRect.innerH);\n        rect.contentW = rect.minW - contLayoutRect.deltaW;\n        rect.contentH = rect.minH - contLayoutRect.deltaH;\n        rect.minW = Math.min(rect.minW, contLayoutRect.maxW);\n        rect.minH = Math.min(rect.minH, contLayoutRect.maxH);\n        rect.minW = Math.max(rect.minW, contLayoutRect.startMinWidth);\n        rect.minH = Math.max(rect.minH, contLayoutRect.startMinHeight);\n        if (contLayoutRect.autoResize && (rect.minW !== contLayoutRect.minW || rect.minH !== contLayoutRect.minH)) {\n          rect.w = rect.minW;\n          rect.h = rect.minH;\n          container.layoutRect(rect);\n          this.recalc(container);\n          if (container._lastRect === null) {\n            var parentCtrl = container.parent();\n            if (parentCtrl) {\n              parentCtrl._lastRect = null;\n              parentCtrl.recalc();\n            }\n          }\n          return;\n        }\n        if (contLayoutRect.autoResize) {\n          rect = container.layoutRect(rect);\n          rect.contentW = rect.minW - contLayoutRect.deltaW;\n          rect.contentH = rect.minH - contLayoutRect.deltaH;\n        }\n        var flexV;\n        if (settings.packV === 'start') {\n          flexV = 0;\n        } else {\n          flexV = availableHeight > 0 ? Math.floor(availableHeight / rows) : 0;\n        }\n        var totalFlex = 0;\n        var flexWidths = settings.flexWidths;\n        if (flexWidths) {\n          for (x = 0; x < flexWidths.length; x++) {\n            totalFlex += flexWidths[x];\n          }\n        } else {\n          totalFlex = cols;\n        }\n        var ratio = availableWidth / totalFlex;\n        for (x = 0; x < cols; x++) {\n          colWidths[x] += flexWidths ? flexWidths[x] * ratio : ratio;\n        }\n        posY = contPaddingBox.top;\n        for (y = 0; y < rows; y++) {\n          posX = contPaddingBox.left;\n          height = rowHeights[y] + flexV;\n          for (x = 0; x < cols; x++) {\n            if (reverseRows) {\n              idx = y * cols + cols - 1 - x;\n            } else {\n              idx = y * cols + x;\n            }\n            ctrl = items[idx];\n            if (!ctrl) {\n              break;\n            }\n            ctrlSettings = ctrl.settings;\n            ctrlLayoutRect = ctrl.layoutRect();\n            width = Math.max(colWidths[x], ctrlLayoutRect.startMinWidth);\n            ctrlLayoutRect.x = posX;\n            ctrlLayoutRect.y = posY;\n            align = ctrlSettings.alignH || (alignH ? alignH[x] || alignH[0] : null);\n            if (align === 'center') {\n              ctrlLayoutRect.x = posX + width / 2 - ctrlLayoutRect.w / 2;\n            } else if (align === 'right') {\n              ctrlLayoutRect.x = posX + width - ctrlLayoutRect.w;\n            } else if (align === 'stretch') {\n              ctrlLayoutRect.w = width;\n            }\n            align = ctrlSettings.alignV || (alignV ? alignV[x] || alignV[0] : null);\n            if (align === 'center') {\n              ctrlLayoutRect.y = posY + height / 2 - ctrlLayoutRect.h / 2;\n            } else if (align === 'bottom') {\n              ctrlLayoutRect.y = posY + height - ctrlLayoutRect.h;\n            } else if (align === 'stretch') {\n              ctrlLayoutRect.h = height;\n            }\n            ctrl.layoutRect(ctrlLayoutRect);\n            posX += width + spacingH;\n            if (ctrl.recalc) {\n              ctrl.recalc();\n            }\n          }\n          posY += height + spacingV;\n        }\n      }\n    });\n\n    var Iframe$1 = Widget.extend({\n      renderHtml: function () {\n        var self = this;\n        self.classes.add('iframe');\n        self.canFocus = false;\n        return '<iframe id=\"' + self._id + '\" class=\"' + self.classes + '\" tabindex=\"-1\" src=\"' + (self.settings.url || 'javascript:\\'\\'') + '\" frameborder=\"0\"></iframe>';\n      },\n      src: function (src) {\n        this.getEl().src = src;\n      },\n      html: function (html, callback) {\n        var self = this, body = this.getEl().contentWindow.document.body;\n        if (!body) {\n          global$7.setTimeout(function () {\n            self.html(html);\n          });\n        } else {\n          body.innerHTML = html;\n          if (callback) {\n            callback();\n          }\n        }\n        return this;\n      }\n    });\n\n    var InfoBox = Widget.extend({\n      init: function (settings) {\n        var self = this;\n        self._super(settings);\n        self.classes.add('widget').add('infobox');\n        self.canFocus = false;\n      },\n      severity: function (level) {\n        this.classes.remove('error');\n        this.classes.remove('warning');\n        this.classes.remove('success');\n        this.classes.add(level);\n      },\n      help: function (state) {\n        this.state.set('help', state);\n      },\n      renderHtml: function () {\n        var self = this, prefix = self.classPrefix;\n        return '<div id=\"' + self._id + '\" class=\"' + self.classes + '\">' + '<div id=\"' + self._id + '-body\">' + self.encode(self.state.get('text')) + '<button role=\"button\" tabindex=\"-1\">' + '<i class=\"' + prefix + 'ico ' + prefix + 'i-help\"></i>' + '</button>' + '</div>' + '</div>';\n      },\n      bindStates: function () {\n        var self = this;\n        self.state.on('change:text', function (e) {\n          self.getEl('body').firstChild.data = self.encode(e.value);\n          if (self.state.get('rendered')) {\n            self.updateLayoutRect();\n          }\n        });\n        self.state.on('change:help', function (e) {\n          self.classes.toggle('has-help', e.value);\n          if (self.state.get('rendered')) {\n            self.updateLayoutRect();\n          }\n        });\n        return self._super();\n      }\n    });\n\n    var Label = Widget.extend({\n      init: function (settings) {\n        var self = this;\n        self._super(settings);\n        self.classes.add('widget').add('label');\n        self.canFocus = false;\n        if (settings.multiline) {\n          self.classes.add('autoscroll');\n        }\n        if (settings.strong) {\n          self.classes.add('strong');\n        }\n      },\n      initLayoutRect: function () {\n        var self = this, layoutRect = self._super();\n        if (self.settings.multiline) {\n          var size = funcs.getSize(self.getEl());\n          if (size.width > layoutRect.maxW) {\n            layoutRect.minW = layoutRect.maxW;\n            self.classes.add('multiline');\n          }\n          self.getEl().style.width = layoutRect.minW + 'px';\n          layoutRect.startMinH = layoutRect.h = layoutRect.minH = Math.min(layoutRect.maxH, funcs.getSize(self.getEl()).height);\n        }\n        return layoutRect;\n      },\n      repaint: function () {\n        var self = this;\n        if (!self.settings.multiline) {\n          self.getEl().style.lineHeight = self.layoutRect().h + 'px';\n        }\n        return self._super();\n      },\n      severity: function (level) {\n        this.classes.remove('error');\n        this.classes.remove('warning');\n        this.classes.remove('success');\n        this.classes.add(level);\n      },\n      renderHtml: function () {\n        var self = this;\n        var targetCtrl, forName, forId = self.settings.forId;\n        var text = self.settings.html ? self.settings.html : self.encode(self.state.get('text'));\n        if (!forId && (forName = self.settings.forName)) {\n          targetCtrl = self.getRoot().find('#' + forName)[0];\n          if (targetCtrl) {\n            forId = targetCtrl._id;\n          }\n        }\n        if (forId) {\n          return '<label id=\"' + self._id + '\" class=\"' + self.classes + '\"' + (forId ? ' for=\"' + forId + '\"' : '') + '>' + text + '</label>';\n        }\n        return '<span id=\"' + self._id + '\" class=\"' + self.classes + '\">' + text + '</span>';\n      },\n      bindStates: function () {\n        var self = this;\n        self.state.on('change:text', function (e) {\n          self.innerHtml(self.encode(e.value));\n          if (self.state.get('rendered')) {\n            self.updateLayoutRect();\n          }\n        });\n        return self._super();\n      }\n    });\n\n    var Toolbar$1 = Container.extend({\n      Defaults: {\n        role: 'toolbar',\n        layout: 'flow'\n      },\n      init: function (settings) {\n        var self = this;\n        self._super(settings);\n        self.classes.add('toolbar');\n      },\n      postRender: function () {\n        var self = this;\n        self.items().each(function (ctrl) {\n          ctrl.classes.add('toolbar-item');\n        });\n        return self._super();\n      }\n    });\n\n    var MenuBar = Toolbar$1.extend({\n      Defaults: {\n        role: 'menubar',\n        containerCls: 'menubar',\n        ariaRoot: true,\n        defaults: { type: 'menubutton' }\n      }\n    });\n\n    function isChildOf$1(node, parent) {\n      while (node) {\n        if (parent === node) {\n          return true;\n        }\n        node = node.parentNode;\n      }\n      return false;\n    }\n    var MenuButton = Button.extend({\n      init: function (settings) {\n        var self = this;\n        self._renderOpen = true;\n        self._super(settings);\n        settings = self.settings;\n        self.classes.add('menubtn');\n        if (settings.fixedWidth) {\n          self.classes.add('fixed-width');\n        }\n        self.aria('haspopup', true);\n        self.state.set('menu', settings.menu || self.render());\n      },\n      showMenu: function (toggle) {\n        var self = this;\n        var menu;\n        if (self.menu && self.menu.visible() && toggle !== false) {\n          return self.hideMenu();\n        }\n        if (!self.menu) {\n          menu = self.state.get('menu') || [];\n          self.classes.add('opened');\n          if (menu.length) {\n            menu = {\n              type: 'menu',\n              animate: true,\n              items: menu\n            };\n          } else {\n            menu.type = menu.type || 'menu';\n            menu.animate = true;\n          }\n          if (!menu.renderTo) {\n            self.menu = global$4.create(menu).parent(self).renderTo();\n          } else {\n            self.menu = menu.parent(self).show().renderTo();\n          }\n          self.fire('createmenu');\n          self.menu.reflow();\n          self.menu.on('cancel', function (e) {\n            if (e.control.parent() === self.menu) {\n              e.stopPropagation();\n              self.focus();\n              self.hideMenu();\n            }\n          });\n          self.menu.on('select', function () {\n            self.focus();\n          });\n          self.menu.on('show hide', function (e) {\n            if (e.type === 'hide' && e.control.parent() === self) {\n              self.classes.remove('opened-under');\n            }\n            if (e.control === self.menu) {\n              self.activeMenu(e.type === 'show');\n              self.classes.toggle('opened', e.type === 'show');\n            }\n            self.aria('expanded', e.type === 'show');\n          }).fire('show');\n        }\n        self.menu.show();\n        self.menu.layoutRect({ w: self.layoutRect().w });\n        self.menu.repaint();\n        self.menu.moveRel(self.getEl(), self.isRtl() ? [\n          'br-tr',\n          'tr-br'\n        ] : [\n          'bl-tl',\n          'tl-bl'\n        ]);\n        var menuLayoutRect = self.menu.layoutRect();\n        var selfBottom = self.$el.offset().top + self.layoutRect().h;\n        if (selfBottom > menuLayoutRect.y && selfBottom < menuLayoutRect.y + menuLayoutRect.h) {\n          self.classes.add('opened-under');\n        }\n        self.fire('showmenu');\n      },\n      hideMenu: function () {\n        var self = this;\n        if (self.menu) {\n          self.menu.items().each(function (item) {\n            if (item.hideMenu) {\n              item.hideMenu();\n            }\n          });\n          self.menu.hide();\n        }\n      },\n      activeMenu: function (state) {\n        this.classes.toggle('active', state);\n      },\n      renderHtml: function () {\n        var self = this, id = self._id, prefix = self.classPrefix;\n        var icon = self.settings.icon, image;\n        var text = self.state.get('text');\n        var textHtml = '';\n        image = self.settings.image;\n        if (image) {\n          icon = 'none';\n          if (typeof image !== 'string') {\n            image = domGlobals.window.getSelection ? image[0] : image[1];\n          }\n          image = ' style=\"background-image: url(\\'' + image + '\\')\"';\n        } else {\n          image = '';\n        }\n        if (text) {\n          self.classes.add('btn-has-text');\n          textHtml = '<span class=\"' + prefix + 'txt\">' + self.encode(text) + '</span>';\n        }\n        icon = self.settings.icon ? prefix + 'ico ' + prefix + 'i-' + icon : '';\n        self.aria('role', self.parent() instanceof MenuBar ? 'menuitem' : 'button');\n        return '<div id=\"' + id + '\" class=\"' + self.classes + '\" tabindex=\"-1\" aria-labelledby=\"' + id + '\">' + '<button id=\"' + id + '-open\" role=\"presentation\" type=\"button\" tabindex=\"-1\">' + (icon ? '<i class=\"' + icon + '\"' + image + '></i>' : '') + textHtml + ' <i class=\"' + prefix + 'caret\"></i>' + '</button>' + '</div>';\n      },\n      postRender: function () {\n        var self = this;\n        self.on('click', function (e) {\n          if (e.control === self && isChildOf$1(e.target, self.getEl())) {\n            self.focus();\n            self.showMenu(!e.aria);\n            if (e.aria) {\n              self.menu.items().filter(':visible')[0].focus();\n            }\n          }\n        });\n        self.on('mouseenter', function (e) {\n          var overCtrl = e.control;\n          var parent = self.parent();\n          var hasVisibleSiblingMenu;\n          if (overCtrl && parent && overCtrl instanceof MenuButton && overCtrl.parent() === parent) {\n            parent.items().filter('MenuButton').each(function (ctrl) {\n              if (ctrl.hideMenu && ctrl !== overCtrl) {\n                if (ctrl.menu && ctrl.menu.visible()) {\n                  hasVisibleSiblingMenu = true;\n                }\n                ctrl.hideMenu();\n              }\n            });\n            if (hasVisibleSiblingMenu) {\n              overCtrl.focus();\n              overCtrl.showMenu();\n            }\n          }\n        });\n        return self._super();\n      },\n      bindStates: function () {\n        var self = this;\n        self.state.on('change:menu', function () {\n          if (self.menu) {\n            self.menu.remove();\n          }\n          self.menu = null;\n        });\n        return self._super();\n      },\n      remove: function () {\n        this._super();\n        if (this.menu) {\n          this.menu.remove();\n        }\n      }\n    });\n\n    var Menu = FloatPanel.extend({\n      Defaults: {\n        defaultType: 'menuitem',\n        border: 1,\n        layout: 'stack',\n        role: 'application',\n        bodyRole: 'menu',\n        ariaRoot: true\n      },\n      init: function (settings) {\n        var self = this;\n        settings.autohide = true;\n        settings.constrainToViewport = true;\n        if (typeof settings.items === 'function') {\n          settings.itemsFactory = settings.items;\n          settings.items = [];\n        }\n        if (settings.itemDefaults) {\n          var items = settings.items;\n          var i = items.length;\n          while (i--) {\n            items[i] = global$2.extend({}, settings.itemDefaults, items[i]);\n          }\n        }\n        self._super(settings);\n        self.classes.add('menu');\n        if (settings.animate && global$8.ie !== 11) {\n          self.classes.add('animate');\n        }\n      },\n      repaint: function () {\n        this.classes.toggle('menu-align', true);\n        this._super();\n        this.getEl().style.height = '';\n        this.getEl('body').style.height = '';\n        return this;\n      },\n      cancel: function () {\n        var self = this;\n        self.hideAll();\n        self.fire('select');\n      },\n      load: function () {\n        var self = this;\n        var time, factory;\n        function hideThrobber() {\n          if (self.throbber) {\n            self.throbber.hide();\n            self.throbber = null;\n          }\n        }\n        factory = self.settings.itemsFactory;\n        if (!factory) {\n          return;\n        }\n        if (!self.throbber) {\n          self.throbber = new Throbber(self.getEl('body'), true);\n          if (self.items().length === 0) {\n            self.throbber.show();\n            self.fire('loading');\n          } else {\n            self.throbber.show(100, function () {\n              self.items().remove();\n              self.fire('loading');\n            });\n          }\n          self.on('hide close', hideThrobber);\n        }\n        self.requestTime = time = new Date().getTime();\n        self.settings.itemsFactory(function (items) {\n          if (items.length === 0) {\n            self.hide();\n            return;\n          }\n          if (self.requestTime !== time) {\n            return;\n          }\n          self.getEl().style.width = '';\n          self.getEl('body').style.width = '';\n          hideThrobber();\n          self.items().remove();\n          self.getEl('body').innerHTML = '';\n          self.add(items);\n          self.renderNew();\n          self.fire('loaded');\n        });\n      },\n      hideAll: function () {\n        var self = this;\n        this.find('menuitem').exec('hideMenu');\n        return self._super();\n      },\n      preRender: function () {\n        var self = this;\n        self.items().each(function (ctrl) {\n          var settings = ctrl.settings;\n          if (settings.icon || settings.image || settings.selectable) {\n            self._hasIcons = true;\n            return false;\n          }\n        });\n        if (self.settings.itemsFactory) {\n          self.on('postrender', function () {\n            if (self.settings.itemsFactory) {\n              self.load();\n            }\n          });\n        }\n        self.on('show hide', function (e) {\n          if (e.control === self) {\n            if (e.type === 'show') {\n              global$7.setTimeout(function () {\n                self.classes.add('in');\n              }, 0);\n            } else {\n              self.classes.remove('in');\n            }\n          }\n        });\n        return self._super();\n      }\n    });\n\n    var ListBox = MenuButton.extend({\n      init: function (settings) {\n        var self = this;\n        var values, selected, selectedText, lastItemCtrl;\n        function setSelected(menuValues) {\n          for (var i = 0; i < menuValues.length; i++) {\n            selected = menuValues[i].selected || settings.value === menuValues[i].value;\n            if (selected) {\n              selectedText = selectedText || menuValues[i].text;\n              self.state.set('value', menuValues[i].value);\n              return true;\n            }\n            if (menuValues[i].menu) {\n              if (setSelected(menuValues[i].menu)) {\n                return true;\n              }\n            }\n          }\n        }\n        self._super(settings);\n        settings = self.settings;\n        self._values = values = settings.values;\n        if (values) {\n          if (typeof settings.value !== 'undefined') {\n            setSelected(values);\n          }\n          if (!selected && values.length > 0) {\n            selectedText = values[0].text;\n            self.state.set('value', values[0].value);\n          }\n          self.state.set('menu', values);\n        }\n        self.state.set('text', settings.text || selectedText);\n        self.classes.add('listbox');\n        self.on('select', function (e) {\n          var ctrl = e.control;\n          if (lastItemCtrl) {\n            e.lastControl = lastItemCtrl;\n          }\n          if (settings.multiple) {\n            ctrl.active(!ctrl.active());\n          } else {\n            self.value(e.control.value());\n          }\n          lastItemCtrl = ctrl;\n        });\n      },\n      value: function (value) {\n        if (arguments.length === 0) {\n          return this.state.get('value');\n        }\n        if (typeof value === 'undefined') {\n          return this;\n        }\n        function valueExists(values) {\n          return exists(values, function (a) {\n            return a.menu ? valueExists(a.menu) : a.value === value;\n          });\n        }\n        if (this.settings.values) {\n          if (valueExists(this.settings.values)) {\n            this.state.set('value', value);\n          } else if (value === null) {\n            this.state.set('value', null);\n          }\n        } else {\n          this.state.set('value', value);\n        }\n        return this;\n      },\n      bindStates: function () {\n        var self = this;\n        function activateMenuItemsByValue(menu, value) {\n          if (menu instanceof Menu) {\n            menu.items().each(function (ctrl) {\n              if (!ctrl.hasMenus()) {\n                ctrl.active(ctrl.value() === value);\n              }\n            });\n          }\n        }\n        function getSelectedItem(menuValues, value) {\n          var selectedItem;\n          if (!menuValues) {\n            return;\n          }\n          for (var i = 0; i < menuValues.length; i++) {\n            if (menuValues[i].value === value) {\n              return menuValues[i];\n            }\n            if (menuValues[i].menu) {\n              selectedItem = getSelectedItem(menuValues[i].menu, value);\n              if (selectedItem) {\n                return selectedItem;\n              }\n            }\n          }\n        }\n        self.on('show', function (e) {\n          activateMenuItemsByValue(e.control, self.value());\n        });\n        self.state.on('change:value', function (e) {\n          var selectedItem = getSelectedItem(self.state.get('menu'), e.value);\n          if (selectedItem) {\n            self.text(selectedItem.text);\n          } else {\n            self.text(self.settings.text);\n          }\n        });\n        return self._super();\n      }\n    });\n\n    var toggleTextStyle = function (ctrl, state) {\n      var textStyle = ctrl._textStyle;\n      if (textStyle) {\n        var textElm = ctrl.getEl('text');\n        textElm.setAttribute('style', textStyle);\n        if (state) {\n          textElm.style.color = '';\n          textElm.style.backgroundColor = '';\n        }\n      }\n    };\n    var MenuItem = Widget.extend({\n      Defaults: {\n        border: 0,\n        role: 'menuitem'\n      },\n      init: function (settings) {\n        var self = this;\n        var text;\n        self._super(settings);\n        settings = self.settings;\n        self.classes.add('menu-item');\n        if (settings.menu) {\n          self.classes.add('menu-item-expand');\n        }\n        if (settings.preview) {\n          self.classes.add('menu-item-preview');\n        }\n        text = self.state.get('text');\n        if (text === '-' || text === '|') {\n          self.classes.add('menu-item-sep');\n          self.aria('role', 'separator');\n          self.state.set('text', '-');\n        }\n        if (settings.selectable) {\n          self.aria('role', 'menuitemcheckbox');\n          self.classes.add('menu-item-checkbox');\n          settings.icon = 'selected';\n        }\n        if (!settings.preview && !settings.selectable) {\n          self.classes.add('menu-item-normal');\n        }\n        self.on('mousedown', function (e) {\n          e.preventDefault();\n        });\n        if (settings.menu && !settings.ariaHideMenu) {\n          self.aria('haspopup', true);\n        }\n      },\n      hasMenus: function () {\n        return !!this.settings.menu;\n      },\n      showMenu: function () {\n        var self = this;\n        var settings = self.settings;\n        var menu;\n        var parent = self.parent();\n        parent.items().each(function (ctrl) {\n          if (ctrl !== self) {\n            ctrl.hideMenu();\n          }\n        });\n        if (settings.menu) {\n          menu = self.menu;\n          if (!menu) {\n            menu = settings.menu;\n            if (menu.length) {\n              menu = {\n                type: 'menu',\n                items: menu\n              };\n            } else {\n              menu.type = menu.type || 'menu';\n            }\n            if (parent.settings.itemDefaults) {\n              menu.itemDefaults = parent.settings.itemDefaults;\n            }\n            menu = self.menu = global$4.create(menu).parent(self).renderTo();\n            menu.reflow();\n            menu.on('cancel', function (e) {\n              e.stopPropagation();\n              self.focus();\n              menu.hide();\n            });\n            menu.on('show hide', function (e) {\n              if (e.control.items) {\n                e.control.items().each(function (ctrl) {\n                  ctrl.active(ctrl.settings.selected);\n                });\n              }\n            }).fire('show');\n            menu.on('hide', function (e) {\n              if (e.control === menu) {\n                self.classes.remove('selected');\n              }\n            });\n            menu.submenu = true;\n          } else {\n            menu.show();\n          }\n          menu._parentMenu = parent;\n          menu.classes.add('menu-sub');\n          var rel = menu.testMoveRel(self.getEl(), self.isRtl() ? [\n            'tl-tr',\n            'bl-br',\n            'tr-tl',\n            'br-bl'\n          ] : [\n            'tr-tl',\n            'br-bl',\n            'tl-tr',\n            'bl-br'\n          ]);\n          menu.moveRel(self.getEl(), rel);\n          menu.rel = rel;\n          rel = 'menu-sub-' + rel;\n          menu.classes.remove(menu._lastRel).add(rel);\n          menu._lastRel = rel;\n          self.classes.add('selected');\n          self.aria('expanded', true);\n        }\n      },\n      hideMenu: function () {\n        var self = this;\n        if (self.menu) {\n          self.menu.items().each(function (item) {\n            if (item.hideMenu) {\n              item.hideMenu();\n            }\n          });\n          self.menu.hide();\n          self.aria('expanded', false);\n        }\n        return self;\n      },\n      renderHtml: function () {\n        var self = this;\n        var id = self._id;\n        var settings = self.settings;\n        var prefix = self.classPrefix;\n        var text = self.state.get('text');\n        var icon = self.settings.icon, image = '', shortcut = settings.shortcut;\n        var url = self.encode(settings.url), iconHtml = '';\n        function convertShortcut(shortcut) {\n          var i, value, replace = {};\n          if (global$8.mac) {\n            replace = {\n              alt: '&#x2325;',\n              ctrl: '&#x2318;',\n              shift: '&#x21E7;',\n              meta: '&#x2318;'\n            };\n          } else {\n            replace = { meta: 'Ctrl' };\n          }\n          shortcut = shortcut.split('+');\n          for (i = 0; i < shortcut.length; i++) {\n            value = replace[shortcut[i].toLowerCase()];\n            if (value) {\n              shortcut[i] = value;\n            }\n          }\n          return shortcut.join('+');\n        }\n        function escapeRegExp(str) {\n          return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n        }\n        function markMatches(text) {\n          var match = settings.match || '';\n          return match ? text.replace(new RegExp(escapeRegExp(match), 'gi'), function (match) {\n            return '!mce~match[' + match + ']mce~match!';\n          }) : text;\n        }\n        function boldMatches(text) {\n          return text.replace(new RegExp(escapeRegExp('!mce~match['), 'g'), '<b>').replace(new RegExp(escapeRegExp(']mce~match!'), 'g'), '</b>');\n        }\n        if (icon) {\n          self.parent().classes.add('menu-has-icons');\n        }\n        if (settings.image) {\n          image = ' style=\"background-image: url(\\'' + settings.image + '\\')\"';\n        }\n        if (shortcut) {\n          shortcut = convertShortcut(shortcut);\n        }\n        icon = prefix + 'ico ' + prefix + 'i-' + (self.settings.icon || 'none');\n        iconHtml = text !== '-' ? '<i class=\"' + icon + '\"' + image + '></i>\\xA0' : '';\n        text = boldMatches(self.encode(markMatches(text)));\n        url = boldMatches(self.encode(markMatches(url)));\n        return '<div id=\"' + id + '\" class=\"' + self.classes + '\" tabindex=\"-1\">' + iconHtml + (text !== '-' ? '<span id=\"' + id + '-text\" class=\"' + prefix + 'text\">' + text + '</span>' : '') + (shortcut ? '<div id=\"' + id + '-shortcut\" class=\"' + prefix + 'menu-shortcut\">' + shortcut + '</div>' : '') + (settings.menu ? '<div class=\"' + prefix + 'caret\"></div>' : '') + (url ? '<div class=\"' + prefix + 'menu-item-link\">' + url + '</div>' : '') + '</div>';\n      },\n      postRender: function () {\n        var self = this, settings = self.settings;\n        var textStyle = settings.textStyle;\n        if (typeof textStyle === 'function') {\n          textStyle = textStyle.call(this);\n        }\n        if (textStyle) {\n          var textElm = self.getEl('text');\n          if (textElm) {\n            textElm.setAttribute('style', textStyle);\n            self._textStyle = textStyle;\n          }\n        }\n        self.on('mouseenter click', function (e) {\n          if (e.control === self) {\n            if (!settings.menu && e.type === 'click') {\n              self.fire('select');\n              global$7.requestAnimationFrame(function () {\n                self.parent().hideAll();\n              });\n            } else {\n              self.showMenu();\n              if (e.aria) {\n                self.menu.focus(true);\n              }\n            }\n          }\n        });\n        self._super();\n        return self;\n      },\n      hover: function () {\n        var self = this;\n        self.parent().items().each(function (ctrl) {\n          ctrl.classes.remove('selected');\n        });\n        self.classes.toggle('selected', true);\n        return self;\n      },\n      active: function (state) {\n        toggleTextStyle(this, state);\n        if (typeof state !== 'undefined') {\n          this.aria('checked', state);\n        }\n        return this._super(state);\n      },\n      remove: function () {\n        this._super();\n        if (this.menu) {\n          this.menu.remove();\n        }\n      }\n    });\n\n    var Radio = Checkbox.extend({\n      Defaults: {\n        classes: 'radio',\n        role: 'radio'\n      }\n    });\n\n    var ResizeHandle = Widget.extend({\n      renderHtml: function () {\n        var self = this, prefix = self.classPrefix;\n        self.classes.add('resizehandle');\n        if (self.settings.direction === 'both') {\n          self.classes.add('resizehandle-both');\n        }\n        self.canFocus = false;\n        return '<div id=\"' + self._id + '\" class=\"' + self.classes + '\">' + '<i class=\"' + prefix + 'ico ' + prefix + 'i-resize\"></i>' + '</div>';\n      },\n      postRender: function () {\n        var self = this;\n        self._super();\n        self.resizeDragHelper = new DragHelper(this._id, {\n          start: function () {\n            self.fire('ResizeStart');\n          },\n          drag: function (e) {\n            if (self.settings.direction !== 'both') {\n              e.deltaX = 0;\n            }\n            self.fire('Resize', e);\n          },\n          stop: function () {\n            self.fire('ResizeEnd');\n          }\n        });\n      },\n      remove: function () {\n        if (this.resizeDragHelper) {\n          this.resizeDragHelper.destroy();\n        }\n        return this._super();\n      }\n    });\n\n    function createOptions(options) {\n      var strOptions = '';\n      if (options) {\n        for (var i = 0; i < options.length; i++) {\n          strOptions += '<option value=\"' + options[i] + '\">' + options[i] + '</option>';\n        }\n      }\n      return strOptions;\n    }\n    var SelectBox = Widget.extend({\n      Defaults: {\n        classes: 'selectbox',\n        role: 'selectbox',\n        options: []\n      },\n      init: function (settings) {\n        var self = this;\n        self._super(settings);\n        if (self.settings.size) {\n          self.size = self.settings.size;\n        }\n        if (self.settings.options) {\n          self._options = self.settings.options;\n        }\n        self.on('keydown', function (e) {\n          var rootControl;\n          if (e.keyCode === 13) {\n            e.preventDefault();\n            self.parents().reverse().each(function (ctrl) {\n              if (ctrl.toJSON) {\n                rootControl = ctrl;\n                return false;\n              }\n            });\n            self.fire('submit', { data: rootControl.toJSON() });\n          }\n        });\n      },\n      options: function (state) {\n        if (!arguments.length) {\n          return this.state.get('options');\n        }\n        this.state.set('options', state);\n        return this;\n      },\n      renderHtml: function () {\n        var self = this;\n        var options, size = '';\n        options = createOptions(self._options);\n        if (self.size) {\n          size = ' size = \"' + self.size + '\"';\n        }\n        return '<select id=\"' + self._id + '\" class=\"' + self.classes + '\"' + size + '>' + options + '</select>';\n      },\n      bindStates: function () {\n        var self = this;\n        self.state.on('change:options', function (e) {\n          self.getEl().innerHTML = createOptions(e.value);\n        });\n        return self._super();\n      }\n    });\n\n    function constrain(value, minVal, maxVal) {\n      if (value < minVal) {\n        value = minVal;\n      }\n      if (value > maxVal) {\n        value = maxVal;\n      }\n      return value;\n    }\n    function setAriaProp(el, name, value) {\n      el.setAttribute('aria-' + name, value);\n    }\n    function updateSliderHandle(ctrl, value) {\n      var maxHandlePos, shortSizeName, sizeName, stylePosName, styleValue, handleEl;\n      if (ctrl.settings.orientation === 'v') {\n        stylePosName = 'top';\n        sizeName = 'height';\n        shortSizeName = 'h';\n      } else {\n        stylePosName = 'left';\n        sizeName = 'width';\n        shortSizeName = 'w';\n      }\n      handleEl = ctrl.getEl('handle');\n      maxHandlePos = (ctrl.layoutRect()[shortSizeName] || 100) - funcs.getSize(handleEl)[sizeName];\n      styleValue = maxHandlePos * ((value - ctrl._minValue) / (ctrl._maxValue - ctrl._minValue)) + 'px';\n      handleEl.style[stylePosName] = styleValue;\n      handleEl.style.height = ctrl.layoutRect().h + 'px';\n      setAriaProp(handleEl, 'valuenow', value);\n      setAriaProp(handleEl, 'valuetext', '' + ctrl.settings.previewFilter(value));\n      setAriaProp(handleEl, 'valuemin', ctrl._minValue);\n      setAriaProp(handleEl, 'valuemax', ctrl._maxValue);\n    }\n    var Slider = Widget.extend({\n      init: function (settings) {\n        var self = this;\n        if (!settings.previewFilter) {\n          settings.previewFilter = function (value) {\n            return Math.round(value * 100) / 100;\n          };\n        }\n        self._super(settings);\n        self.classes.add('slider');\n        if (settings.orientation === 'v') {\n          self.classes.add('vertical');\n        }\n        self._minValue = isNumber(settings.minValue) ? settings.minValue : 0;\n        self._maxValue = isNumber(settings.maxValue) ? settings.maxValue : 100;\n        self._initValue = self.state.get('value');\n      },\n      renderHtml: function () {\n        var self = this, id = self._id, prefix = self.classPrefix;\n        return '<div id=\"' + id + '\" class=\"' + self.classes + '\">' + '<div id=\"' + id + '-handle\" class=\"' + prefix + 'slider-handle\" role=\"slider\" tabindex=\"-1\"></div>' + '</div>';\n      },\n      reset: function () {\n        this.value(this._initValue).repaint();\n      },\n      postRender: function () {\n        var self = this;\n        var minValue, maxValue, screenCordName, stylePosName, sizeName, shortSizeName;\n        function toFraction(min, max, val) {\n          return (val + min) / (max - min);\n        }\n        function fromFraction(min, max, val) {\n          return val * (max - min) - min;\n        }\n        function handleKeyboard(minValue, maxValue) {\n          function alter(delta) {\n            var value;\n            value = self.value();\n            value = fromFraction(minValue, maxValue, toFraction(minValue, maxValue, value) + delta * 0.05);\n            value = constrain(value, minValue, maxValue);\n            self.value(value);\n            self.fire('dragstart', { value: value });\n            self.fire('drag', { value: value });\n            self.fire('dragend', { value: value });\n          }\n          self.on('keydown', function (e) {\n            switch (e.keyCode) {\n            case 37:\n            case 38:\n              alter(-1);\n              break;\n            case 39:\n            case 40:\n              alter(1);\n              break;\n            }\n          });\n        }\n        function handleDrag(minValue, maxValue, handleEl) {\n          var startPos, startHandlePos, maxHandlePos, handlePos, value;\n          self._dragHelper = new DragHelper(self._id, {\n            handle: self._id + '-handle',\n            start: function (e) {\n              startPos = e[screenCordName];\n              startHandlePos = parseInt(self.getEl('handle').style[stylePosName], 10);\n              maxHandlePos = (self.layoutRect()[shortSizeName] || 100) - funcs.getSize(handleEl)[sizeName];\n              self.fire('dragstart', { value: value });\n            },\n            drag: function (e) {\n              var delta = e[screenCordName] - startPos;\n              handlePos = constrain(startHandlePos + delta, 0, maxHandlePos);\n              handleEl.style[stylePosName] = handlePos + 'px';\n              value = minValue + handlePos / maxHandlePos * (maxValue - minValue);\n              self.value(value);\n              self.tooltip().text('' + self.settings.previewFilter(value)).show().moveRel(handleEl, 'bc tc');\n              self.fire('drag', { value: value });\n            },\n            stop: function () {\n              self.tooltip().hide();\n              self.fire('dragend', { value: value });\n            }\n          });\n        }\n        minValue = self._minValue;\n        maxValue = self._maxValue;\n        if (self.settings.orientation === 'v') {\n          screenCordName = 'screenY';\n          stylePosName = 'top';\n          sizeName = 'height';\n          shortSizeName = 'h';\n        } else {\n          screenCordName = 'screenX';\n          stylePosName = 'left';\n          sizeName = 'width';\n          shortSizeName = 'w';\n        }\n        self._super();\n        handleKeyboard(minValue, maxValue);\n        handleDrag(minValue, maxValue, self.getEl('handle'));\n      },\n      repaint: function () {\n        this._super();\n        updateSliderHandle(this, this.value());\n      },\n      bindStates: function () {\n        var self = this;\n        self.state.on('change:value', function (e) {\n          updateSliderHandle(self, e.value);\n        });\n        return self._super();\n      }\n    });\n\n    var Spacer = Widget.extend({\n      renderHtml: function () {\n        var self = this;\n        self.classes.add('spacer');\n        self.canFocus = false;\n        return '<div id=\"' + self._id + '\" class=\"' + self.classes + '\"></div>';\n      }\n    });\n\n    var SplitButton = MenuButton.extend({\n      Defaults: {\n        classes: 'widget btn splitbtn',\n        role: 'button'\n      },\n      repaint: function () {\n        var self = this;\n        var elm = self.getEl();\n        var rect = self.layoutRect();\n        var mainButtonElm, menuButtonElm;\n        self._super();\n        mainButtonElm = elm.firstChild;\n        menuButtonElm = elm.lastChild;\n        global$9(mainButtonElm).css({\n          width: rect.w - funcs.getSize(menuButtonElm).width,\n          height: rect.h - 2\n        });\n        global$9(menuButtonElm).css({ height: rect.h - 2 });\n        return self;\n      },\n      activeMenu: function (state) {\n        var self = this;\n        global$9(self.getEl().lastChild).toggleClass(self.classPrefix + 'active', state);\n      },\n      renderHtml: function () {\n        var self = this;\n        var id = self._id;\n        var prefix = self.classPrefix;\n        var image;\n        var icon = self.state.get('icon');\n        var text = self.state.get('text');\n        var settings = self.settings;\n        var textHtml = '', ariaPressed;\n        image = settings.image;\n        if (image) {\n          icon = 'none';\n          if (typeof image !== 'string') {\n            image = domGlobals.window.getSelection ? image[0] : image[1];\n          }\n          image = ' style=\"background-image: url(\\'' + image + '\\')\"';\n        } else {\n          image = '';\n        }\n        icon = settings.icon ? prefix + 'ico ' + prefix + 'i-' + icon : '';\n        if (text) {\n          self.classes.add('btn-has-text');\n          textHtml = '<span class=\"' + prefix + 'txt\">' + self.encode(text) + '</span>';\n        }\n        ariaPressed = typeof settings.active === 'boolean' ? ' aria-pressed=\"' + settings.active + '\"' : '';\n        return '<div id=\"' + id + '\" class=\"' + self.classes + '\" role=\"button\"' + ariaPressed + ' tabindex=\"-1\">' + '<button type=\"button\" hidefocus=\"1\" tabindex=\"-1\">' + (icon ? '<i class=\"' + icon + '\"' + image + '></i>' : '') + textHtml + '</button>' + '<button type=\"button\" class=\"' + prefix + 'open\" hidefocus=\"1\" tabindex=\"-1\">' + (self._menuBtnText ? (icon ? '\\xA0' : '') + self._menuBtnText : '') + ' <i class=\"' + prefix + 'caret\"></i>' + '</button>' + '</div>';\n      },\n      postRender: function () {\n        var self = this, onClickHandler = self.settings.onclick;\n        self.on('click', function (e) {\n          var node = e.target;\n          if (e.control === this) {\n            while (node) {\n              if (e.aria && e.aria.key !== 'down' || node.nodeName === 'BUTTON' && node.className.indexOf('open') === -1) {\n                e.stopImmediatePropagation();\n                if (onClickHandler) {\n                  onClickHandler.call(this, e);\n                }\n                return;\n              }\n              node = node.parentNode;\n            }\n          }\n        });\n        delete self.settings.onclick;\n        return self._super();\n      }\n    });\n\n    var StackLayout = FlowLayout.extend({\n      Defaults: {\n        containerClass: 'stack-layout',\n        controlClass: 'stack-layout-item',\n        endClass: 'break'\n      },\n      isNative: function () {\n        return true;\n      }\n    });\n\n    var TabPanel = Panel.extend({\n      Defaults: {\n        layout: 'absolute',\n        defaults: { type: 'panel' }\n      },\n      activateTab: function (idx) {\n        var activeTabElm;\n        if (this.activeTabId) {\n          activeTabElm = this.getEl(this.activeTabId);\n          global$9(activeTabElm).removeClass(this.classPrefix + 'active');\n          activeTabElm.setAttribute('aria-selected', 'false');\n        }\n        this.activeTabId = 't' + idx;\n        activeTabElm = this.getEl('t' + idx);\n        activeTabElm.setAttribute('aria-selected', 'true');\n        global$9(activeTabElm).addClass(this.classPrefix + 'active');\n        this.items()[idx].show().fire('showtab');\n        this.reflow();\n        this.items().each(function (item, i) {\n          if (idx !== i) {\n            item.hide();\n          }\n        });\n      },\n      renderHtml: function () {\n        var self = this;\n        var layout = self._layout;\n        var tabsHtml = '';\n        var prefix = self.classPrefix;\n        self.preRender();\n        layout.preRender(self);\n        self.items().each(function (ctrl, i) {\n          var id = self._id + '-t' + i;\n          ctrl.aria('role', 'tabpanel');\n          ctrl.aria('labelledby', id);\n          tabsHtml += '<div id=\"' + id + '\" class=\"' + prefix + 'tab\" ' + 'unselectable=\"on\" role=\"tab\" aria-controls=\"' + ctrl._id + '\" aria-selected=\"false\" tabIndex=\"-1\">' + self.encode(ctrl.settings.title) + '</div>';\n        });\n        return '<div id=\"' + self._id + '\" class=\"' + self.classes + '\" hidefocus=\"1\" tabindex=\"-1\">' + '<div id=\"' + self._id + '-head\" class=\"' + prefix + 'tabs\" role=\"tablist\">' + tabsHtml + '</div>' + '<div id=\"' + self._id + '-body\" class=\"' + self.bodyClasses + '\">' + layout.renderHtml(self) + '</div>' + '</div>';\n      },\n      postRender: function () {\n        var self = this;\n        self._super();\n        self.settings.activeTab = self.settings.activeTab || 0;\n        self.activateTab(self.settings.activeTab);\n        this.on('click', function (e) {\n          var targetParent = e.target.parentNode;\n          if (targetParent && targetParent.id === self._id + '-head') {\n            var i = targetParent.childNodes.length;\n            while (i--) {\n              if (targetParent.childNodes[i] === e.target) {\n                self.activateTab(i);\n              }\n            }\n          }\n        });\n      },\n      initLayoutRect: function () {\n        var self = this;\n        var rect, minW, minH;\n        minW = funcs.getSize(self.getEl('head')).width;\n        minW = minW < 0 ? 0 : minW;\n        minH = 0;\n        self.items().each(function (item) {\n          minW = Math.max(minW, item.layoutRect().minW);\n          minH = Math.max(minH, item.layoutRect().minH);\n        });\n        self.items().each(function (ctrl) {\n          ctrl.settings.x = 0;\n          ctrl.settings.y = 0;\n          ctrl.settings.w = minW;\n          ctrl.settings.h = minH;\n          ctrl.layoutRect({\n            x: 0,\n            y: 0,\n            w: minW,\n            h: minH\n          });\n        });\n        var headH = funcs.getSize(self.getEl('head')).height;\n        self.settings.minWidth = minW;\n        self.settings.minHeight = minH + headH;\n        rect = self._super();\n        rect.deltaH += headH;\n        rect.innerH = rect.h - rect.deltaH;\n        return rect;\n      }\n    });\n\n    var TextBox = Widget.extend({\n      init: function (settings) {\n        var self = this;\n        self._super(settings);\n        self.classes.add('textbox');\n        if (settings.multiline) {\n          self.classes.add('multiline');\n        } else {\n          self.on('keydown', function (e) {\n            var rootControl;\n            if (e.keyCode === 13) {\n              e.preventDefault();\n              self.parents().reverse().each(function (ctrl) {\n                if (ctrl.toJSON) {\n                  rootControl = ctrl;\n                  return false;\n                }\n              });\n              self.fire('submit', { data: rootControl.toJSON() });\n            }\n          });\n          self.on('keyup', function (e) {\n            self.state.set('value', e.target.value);\n          });\n        }\n      },\n      repaint: function () {\n        var self = this;\n        var style, rect, borderBox, borderW, borderH = 0, lastRepaintRect;\n        style = self.getEl().style;\n        rect = self._layoutRect;\n        lastRepaintRect = self._lastRepaintRect || {};\n        var doc = domGlobals.document;\n        if (!self.settings.multiline && doc.all && (!doc.documentMode || doc.documentMode <= 8)) {\n          style.lineHeight = rect.h - borderH + 'px';\n        }\n        borderBox = self.borderBox;\n        borderW = borderBox.left + borderBox.right + 8;\n        borderH = borderBox.top + borderBox.bottom + (self.settings.multiline ? 8 : 0);\n        if (rect.x !== lastRepaintRect.x) {\n          style.left = rect.x + 'px';\n          lastRepaintRect.x = rect.x;\n        }\n        if (rect.y !== lastRepaintRect.y) {\n          style.top = rect.y + 'px';\n          lastRepaintRect.y = rect.y;\n        }\n        if (rect.w !== lastRepaintRect.w) {\n          style.width = rect.w - borderW + 'px';\n          lastRepaintRect.w = rect.w;\n        }\n        if (rect.h !== lastRepaintRect.h) {\n          style.height = rect.h - borderH + 'px';\n          lastRepaintRect.h = rect.h;\n        }\n        self._lastRepaintRect = lastRepaintRect;\n        self.fire('repaint', {}, false);\n        return self;\n      },\n      renderHtml: function () {\n        var self = this;\n        var settings = self.settings;\n        var attrs, elm;\n        attrs = {\n          id: self._id,\n          hidefocus: '1'\n        };\n        global$2.each([\n          'rows',\n          'spellcheck',\n          'maxLength',\n          'size',\n          'readonly',\n          'min',\n          'max',\n          'step',\n          'list',\n          'pattern',\n          'placeholder',\n          'required',\n          'multiple'\n        ], function (name) {\n          attrs[name] = settings[name];\n        });\n        if (self.disabled()) {\n          attrs.disabled = 'disabled';\n        }\n        if (settings.subtype) {\n          attrs.type = settings.subtype;\n        }\n        elm = funcs.create(settings.multiline ? 'textarea' : 'input', attrs);\n        elm.value = self.state.get('value');\n        elm.className = self.classes.toString();\n        return elm.outerHTML;\n      },\n      value: function (value) {\n        if (arguments.length) {\n          this.state.set('value', value);\n          return this;\n        }\n        if (this.state.get('rendered')) {\n          this.state.set('value', this.getEl().value);\n        }\n        return this.state.get('value');\n      },\n      postRender: function () {\n        var self = this;\n        self.getEl().value = self.state.get('value');\n        self._super();\n        self.$el.on('change', function (e) {\n          self.state.set('value', e.target.value);\n          self.fire('change', e);\n        });\n      },\n      bindStates: function () {\n        var self = this;\n        self.state.on('change:value', function (e) {\n          if (self.getEl().value !== e.value) {\n            self.getEl().value = e.value;\n          }\n        });\n        self.state.on('change:disabled', function (e) {\n          self.getEl().disabled = e.value;\n        });\n        return self._super();\n      },\n      remove: function () {\n        this.$el.off();\n        this._super();\n      }\n    });\n\n    var getApi = function () {\n      return {\n        Selector: Selector,\n        Collection: Collection$2,\n        ReflowQueue: ReflowQueue,\n        Control: Control$1,\n        Factory: global$4,\n        KeyboardNavigation: KeyboardNavigation,\n        Container: Container,\n        DragHelper: DragHelper,\n        Scrollable: Scrollable,\n        Panel: Panel,\n        Movable: Movable,\n        Resizable: Resizable,\n        FloatPanel: FloatPanel,\n        Window: Window,\n        MessageBox: MessageBox,\n        Tooltip: Tooltip,\n        Widget: Widget,\n        Progress: Progress,\n        Notification: Notification,\n        Layout: Layout,\n        AbsoluteLayout: AbsoluteLayout,\n        Button: Button,\n        ButtonGroup: ButtonGroup,\n        Checkbox: Checkbox,\n        ComboBox: ComboBox,\n        ColorBox: ColorBox,\n        PanelButton: PanelButton,\n        ColorButton: ColorButton,\n        ColorPicker: ColorPicker,\n        Path: Path,\n        ElementPath: ElementPath,\n        FormItem: FormItem,\n        Form: Form,\n        FieldSet: FieldSet,\n        FilePicker: FilePicker,\n        FitLayout: FitLayout,\n        FlexLayout: FlexLayout,\n        FlowLayout: FlowLayout,\n        FormatControls: FormatControls,\n        GridLayout: GridLayout,\n        Iframe: Iframe$1,\n        InfoBox: InfoBox,\n        Label: Label,\n        Toolbar: Toolbar$1,\n        MenuBar: MenuBar,\n        MenuButton: MenuButton,\n        MenuItem: MenuItem,\n        Throbber: Throbber,\n        Menu: Menu,\n        ListBox: ListBox,\n        Radio: Radio,\n        ResizeHandle: ResizeHandle,\n        SelectBox: SelectBox,\n        Slider: Slider,\n        Spacer: Spacer,\n        SplitButton: SplitButton,\n        StackLayout: StackLayout,\n        TabPanel: TabPanel,\n        TextBox: TextBox,\n        DropZone: DropZone,\n        BrowseButton: BrowseButton\n      };\n    };\n    var appendTo = function (target) {\n      if (target.ui) {\n        global$2.each(getApi(), function (ref, key) {\n          target.ui[key] = ref;\n        });\n      } else {\n        target.ui = getApi();\n      }\n    };\n    var registerToFactory = function () {\n      global$2.each(getApi(), function (ref, key) {\n        global$4.add(key, ref);\n      });\n    };\n    var Api = {\n      appendTo: appendTo,\n      registerToFactory: registerToFactory\n    };\n\n    Api.registerToFactory();\n    Api.appendTo(window.tinymce ? window.tinymce : {});\n    global.add('modern', function (editor) {\n      FormatControls.setup(editor);\n      return ThemeApi.get(editor);\n    });\n    function Theme () {\n    }\n\n    return Theme;\n\n}(window));\n})();\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/45.61f5634d7b8ffe8fce37.js","(function () {\nvar modern = (function (domGlobals) {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.ThemeManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.EditorManager');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var isBrandingEnabled = function (editor) {\n      return editor.getParam('branding', true, 'boolean');\n    };\n    var hasMenubar = function (editor) {\n      return getMenubar(editor) !== false;\n    };\n    var getMenubar = function (editor) {\n      return editor.getParam('menubar');\n    };\n    var hasStatusbar = function (editor) {\n      return editor.getParam('statusbar', true, 'boolean');\n    };\n    var getToolbarSize = function (editor) {\n      return editor.getParam('toolbar_items_size');\n    };\n    var isReadOnly = function (editor) {\n      return editor.getParam('readonly', false, 'boolean');\n    };\n    var getFixedToolbarContainer = function (editor) {\n      return editor.getParam('fixed_toolbar_container');\n    };\n    var getInlineToolbarPositionHandler = function (editor) {\n      return editor.getParam('inline_toolbar_position_handler');\n    };\n    var getMenu = function (editor) {\n      return editor.getParam('menu');\n    };\n    var getRemovedMenuItems = function (editor) {\n      return editor.getParam('removed_menuitems', '');\n    };\n    var getMinWidth = function (editor) {\n      return editor.getParam('min_width', 100, 'number');\n    };\n    var getMinHeight = function (editor) {\n      return editor.getParam('min_height', 100, 'number');\n    };\n    var getMaxWidth = function (editor) {\n      return editor.getParam('max_width', 65535, 'number');\n    };\n    var getMaxHeight = function (editor) {\n      return editor.getParam('max_height', 65535, 'number');\n    };\n    var isSkinDisabled = function (editor) {\n      return editor.settings.skin === false;\n    };\n    var isInline = function (editor) {\n      return editor.getParam('inline', false, 'boolean');\n    };\n    var getResize = function (editor) {\n      var resize = editor.getParam('resize', 'vertical');\n      if (resize === false) {\n        return 'none';\n      } else if (resize === 'both') {\n        return 'both';\n      } else {\n        return 'vertical';\n      }\n    };\n    var getSkinUrl = function (editor) {\n      var settings = editor.settings;\n      var skin = settings.skin;\n      var skinUrl = settings.skin_url;\n      if (skin !== false) {\n        var skinName = skin ? skin : 'lightgray';\n        if (skinUrl) {\n          skinUrl = editor.documentBaseURI.toAbsolute(skinUrl);\n        } else {\n          skinUrl = global$1.baseURL + '/skins/' + skinName;\n        }\n      }\n      return skinUrl;\n    };\n    var getIndexedToolbars = function (settings, defaultToolbar) {\n      var toolbars = [];\n      for (var i = 1; i < 10; i++) {\n        var toolbar = settings['toolbar' + i];\n        if (!toolbar) {\n          break;\n        }\n        toolbars.push(toolbar);\n      }\n      var mainToolbar = settings.toolbar ? [settings.toolbar] : [defaultToolbar];\n      return toolbars.length > 0 ? toolbars : mainToolbar;\n    };\n    var getToolbars = function (editor) {\n      var toolbar = editor.getParam('toolbar');\n      var defaultToolbar = 'undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image';\n      if (toolbar === false) {\n        return [];\n      } else if (global$2.isArray(toolbar)) {\n        return global$2.grep(toolbar, function (toolbar) {\n          return toolbar.length > 0;\n        });\n      } else {\n        return getIndexedToolbars(editor.settings, defaultToolbar);\n      }\n    };\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.ui.Factory');\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.util.I18n');\n\n    var fireSkinLoaded = function (editor) {\n      return editor.fire('SkinLoaded');\n    };\n    var fireResizeEditor = function (editor) {\n      return editor.fire('ResizeEditor');\n    };\n    var fireBeforeRenderUI = function (editor) {\n      return editor.fire('BeforeRenderUI');\n    };\n    var Events = {\n      fireSkinLoaded: fireSkinLoaded,\n      fireResizeEditor: fireResizeEditor,\n      fireBeforeRenderUI: fireBeforeRenderUI\n    };\n\n    var focus = function (panel, type) {\n      return function () {\n        var item = panel.find(type)[0];\n        if (item) {\n          item.focus(true);\n        }\n      };\n    };\n    var addKeys = function (editor, panel) {\n      editor.shortcuts.add('Alt+F9', '', focus(panel, 'menubar'));\n      editor.shortcuts.add('Alt+F10,F10', '', focus(panel, 'toolbar'));\n      editor.shortcuts.add('Alt+F11', '', focus(panel, 'elementpath'));\n      panel.on('cancel', function () {\n        editor.focus();\n      });\n    };\n    var A11y = { addKeys: addKeys };\n\n    var global$6 = tinymce.util.Tools.resolve('tinymce.geom.Rect');\n\n    var global$7 = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n    var noop = function () {\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var none = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var eq = function (o) {\n        return o.isNone();\n      };\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = function (n) {\n        return n;\n      };\n      var me = {\n        fold: function (n, s) {\n          return n();\n        },\n        is: never,\n        isSome: never,\n        isNone: always,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: constant(null),\n        getOrUndefined: constant(undefined),\n        or: id,\n        orThunk: call,\n        map: none,\n        each: noop,\n        bind: none,\n        exists: never,\n        forall: always,\n        filter: none,\n        equals: eq,\n        equals_: eq,\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      if (Object.freeze) {\n        Object.freeze(me);\n      }\n      return me;\n    }();\n    var some = function (a) {\n      var constant_a = constant(a);\n      var self = function () {\n        return me;\n      };\n      var bind = function (f) {\n        return f(a);\n      };\n      var me = {\n        fold: function (n, s) {\n          return s(a);\n        },\n        is: function (v) {\n          return a === v;\n        },\n        isSome: always,\n        isNone: never,\n        getOr: constant_a,\n        getOrThunk: constant_a,\n        getOrDie: constant_a,\n        getOrNull: constant_a,\n        getOrUndefined: constant_a,\n        or: self,\n        orThunk: self,\n        map: function (f) {\n          return some(f(a));\n        },\n        each: function (f) {\n          f(a);\n        },\n        bind: bind,\n        exists: bind,\n        forall: bind,\n        filter: function (f) {\n          return f(a) ? me : NONE;\n        },\n        toArray: function () {\n          return [a];\n        },\n        toString: function () {\n          return 'some(' + a + ')';\n        },\n        equals: function (o) {\n          return o.is(a);\n        },\n        equals_: function (o, elementEq) {\n          return o.fold(never, function (b) {\n            return elementEq(a, b);\n          });\n        }\n      };\n      return me;\n    };\n    var from = function (value) {\n      return value === null || value === undefined ? NONE : some(value);\n    };\n    var Option = {\n      some: some,\n      none: none,\n      from: from\n    };\n\n    var getUiContainerDelta = function (ctrl) {\n      var uiContainer = getUiContainer(ctrl);\n      if (uiContainer && global$3.DOM.getStyle(uiContainer, 'position', true) !== 'static') {\n        var containerPos = global$3.DOM.getPos(uiContainer);\n        var dx = uiContainer.scrollLeft - containerPos.x;\n        var dy = uiContainer.scrollTop - containerPos.y;\n        return Option.some({\n          x: dx,\n          y: dy\n        });\n      } else {\n        return Option.none();\n      }\n    };\n    var setUiContainer = function (editor, ctrl) {\n      var uiContainer = global$3.DOM.select(editor.settings.ui_container)[0];\n      ctrl.getRoot().uiContainer = uiContainer;\n    };\n    var getUiContainer = function (ctrl) {\n      return ctrl ? ctrl.getRoot().uiContainer : null;\n    };\n    var inheritUiContainer = function (fromCtrl, toCtrl) {\n      return toCtrl.uiContainer = getUiContainer(fromCtrl);\n    };\n    var UiContainer = {\n      getUiContainerDelta: getUiContainerDelta,\n      setUiContainer: setUiContainer,\n      getUiContainer: getUiContainer,\n      inheritUiContainer: inheritUiContainer\n    };\n\n    var createToolbar = function (editor, items, size) {\n      var toolbarItems = [];\n      var buttonGroup;\n      if (!items) {\n        return;\n      }\n      global$2.each(items.split(/[ ,]/), function (item) {\n        var itemName;\n        var bindSelectorChanged = function () {\n          var selection = editor.selection;\n          if (item.settings.stateSelector) {\n            selection.selectorChanged(item.settings.stateSelector, function (state) {\n              item.active(state);\n            }, true);\n          }\n          if (item.settings.disabledStateSelector) {\n            selection.selectorChanged(item.settings.disabledStateSelector, function (state) {\n              item.disabled(state);\n            });\n          }\n        };\n        if (item === '|') {\n          buttonGroup = null;\n        } else {\n          if (!buttonGroup) {\n            buttonGroup = {\n              type: 'buttongroup',\n              items: []\n            };\n            toolbarItems.push(buttonGroup);\n          }\n          if (editor.buttons[item]) {\n            itemName = item;\n            item = editor.buttons[itemName];\n            if (typeof item === 'function') {\n              item = item();\n            }\n            item.type = item.type || 'button';\n            item.size = size;\n            item = global$4.create(item);\n            buttonGroup.items.push(item);\n            if (editor.initialized) {\n              bindSelectorChanged();\n            } else {\n              editor.on('init', bindSelectorChanged);\n            }\n          }\n        }\n      });\n      return {\n        type: 'toolbar',\n        layout: 'flow',\n        items: toolbarItems\n      };\n    };\n    var createToolbars = function (editor, size) {\n      var toolbars = [];\n      var addToolbar = function (items) {\n        if (items) {\n          toolbars.push(createToolbar(editor, items, size));\n        }\n      };\n      global$2.each(getToolbars(editor), function (toolbar) {\n        addToolbar(toolbar);\n      });\n      if (toolbars.length) {\n        return {\n          type: 'panel',\n          layout: 'stack',\n          classes: 'toolbar-grp',\n          ariaRoot: true,\n          ariaRemember: true,\n          items: toolbars\n        };\n      }\n    };\n    var Toolbar = {\n      createToolbar: createToolbar,\n      createToolbars: createToolbars\n    };\n\n    var DOM = global$3.DOM;\n    var toClientRect = function (geomRect) {\n      return {\n        left: geomRect.x,\n        top: geomRect.y,\n        width: geomRect.w,\n        height: geomRect.h,\n        right: geomRect.x + geomRect.w,\n        bottom: geomRect.y + geomRect.h\n      };\n    };\n    var hideAllFloatingPanels = function (editor) {\n      global$2.each(editor.contextToolbars, function (toolbar) {\n        if (toolbar.panel) {\n          toolbar.panel.hide();\n        }\n      });\n    };\n    var movePanelTo = function (panel, pos) {\n      panel.moveTo(pos.left, pos.top);\n    };\n    var togglePositionClass = function (panel, relPos, predicate) {\n      relPos = relPos ? relPos.substr(0, 2) : '';\n      global$2.each({\n        t: 'down',\n        b: 'up'\n      }, function (cls, pos) {\n        panel.classes.toggle('arrow-' + cls, predicate(pos, relPos.substr(0, 1)));\n      });\n      global$2.each({\n        l: 'left',\n        r: 'right'\n      }, function (cls, pos) {\n        panel.classes.toggle('arrow-' + cls, predicate(pos, relPos.substr(1, 1)));\n      });\n    };\n    var userConstrain = function (handler, x, y, elementRect, contentAreaRect, panelRect) {\n      panelRect = toClientRect({\n        x: x,\n        y: y,\n        w: panelRect.w,\n        h: panelRect.h\n      });\n      if (handler) {\n        panelRect = handler({\n          elementRect: toClientRect(elementRect),\n          contentAreaRect: toClientRect(contentAreaRect),\n          panelRect: panelRect\n        });\n      }\n      return panelRect;\n    };\n    var addContextualToolbars = function (editor) {\n      var scrollContainer;\n      var getContextToolbars = function () {\n        return editor.contextToolbars || [];\n      };\n      var getElementRect = function (elm) {\n        var pos, targetRect, root;\n        pos = DOM.getPos(editor.getContentAreaContainer());\n        targetRect = editor.dom.getRect(elm);\n        root = editor.dom.getRoot();\n        if (root.nodeName === 'BODY') {\n          targetRect.x -= root.ownerDocument.documentElement.scrollLeft || root.scrollLeft;\n          targetRect.y -= root.ownerDocument.documentElement.scrollTop || root.scrollTop;\n        }\n        targetRect.x += pos.x;\n        targetRect.y += pos.y;\n        return targetRect;\n      };\n      var reposition = function (match, shouldShow) {\n        var relPos, panelRect, elementRect, contentAreaRect, panel, relRect, testPositions, smallElementWidthThreshold;\n        var handler = getInlineToolbarPositionHandler(editor);\n        if (editor.removed) {\n          return;\n        }\n        if (!match || !match.toolbar.panel) {\n          hideAllFloatingPanels(editor);\n          return;\n        }\n        testPositions = [\n          'bc-tc',\n          'tc-bc',\n          'tl-bl',\n          'bl-tl',\n          'tr-br',\n          'br-tr'\n        ];\n        panel = match.toolbar.panel;\n        if (shouldShow) {\n          panel.show();\n        }\n        elementRect = getElementRect(match.element);\n        panelRect = DOM.getRect(panel.getEl());\n        contentAreaRect = DOM.getRect(editor.getContentAreaContainer() || editor.getBody());\n        var delta = UiContainer.getUiContainerDelta(panel).getOr({\n          x: 0,\n          y: 0\n        });\n        elementRect.x += delta.x;\n        elementRect.y += delta.y;\n        panelRect.x += delta.x;\n        panelRect.y += delta.y;\n        contentAreaRect.x += delta.x;\n        contentAreaRect.y += delta.y;\n        smallElementWidthThreshold = 25;\n        if (DOM.getStyle(match.element, 'display', true) !== 'inline') {\n          var clientRect = match.element.getBoundingClientRect();\n          elementRect.w = clientRect.width;\n          elementRect.h = clientRect.height;\n        }\n        if (!editor.inline) {\n          contentAreaRect.w = editor.getDoc().documentElement.offsetWidth;\n        }\n        if (editor.selection.controlSelection.isResizable(match.element) && elementRect.w < smallElementWidthThreshold) {\n          elementRect = global$6.inflate(elementRect, 0, 8);\n        }\n        relPos = global$6.findBestRelativePosition(panelRect, elementRect, contentAreaRect, testPositions);\n        elementRect = global$6.clamp(elementRect, contentAreaRect);\n        if (relPos) {\n          relRect = global$6.relativePosition(panelRect, elementRect, relPos);\n          movePanelTo(panel, userConstrain(handler, relRect.x, relRect.y, elementRect, contentAreaRect, panelRect));\n        } else {\n          contentAreaRect.h += panelRect.h;\n          elementRect = global$6.intersect(contentAreaRect, elementRect);\n          if (elementRect) {\n            relPos = global$6.findBestRelativePosition(panelRect, elementRect, contentAreaRect, [\n              'bc-tc',\n              'bl-tl',\n              'br-tr'\n            ]);\n            if (relPos) {\n              relRect = global$6.relativePosition(panelRect, elementRect, relPos);\n              movePanelTo(panel, userConstrain(handler, relRect.x, relRect.y, elementRect, contentAreaRect, panelRect));\n            } else {\n              movePanelTo(panel, userConstrain(handler, elementRect.x, elementRect.y, elementRect, contentAreaRect, panelRect));\n            }\n          } else {\n            panel.hide();\n          }\n        }\n        togglePositionClass(panel, relPos, function (pos1, pos2) {\n          return pos1 === pos2;\n        });\n      };\n      var repositionHandler = function (show) {\n        return function () {\n          var execute = function () {\n            if (editor.selection) {\n              reposition(findFrontMostMatch(editor.selection.getNode()), show);\n            }\n          };\n          global$7.requestAnimationFrame(execute);\n        };\n      };\n      var bindScrollEvent = function (panel) {\n        if (!scrollContainer) {\n          var reposition_1 = repositionHandler(true);\n          var uiContainer_1 = UiContainer.getUiContainer(panel);\n          scrollContainer = editor.selection.getScrollContainer() || editor.getWin();\n          DOM.bind(scrollContainer, 'scroll', reposition_1);\n          DOM.bind(uiContainer_1, 'scroll', reposition_1);\n          editor.on('remove', function () {\n            DOM.unbind(scrollContainer, 'scroll', reposition_1);\n            DOM.unbind(uiContainer_1, 'scroll', reposition_1);\n          });\n        }\n      };\n      var showContextToolbar = function (match) {\n        var panel;\n        if (match.toolbar.panel) {\n          match.toolbar.panel.show();\n          reposition(match);\n          return;\n        }\n        panel = global$4.create({\n          type: 'floatpanel',\n          role: 'dialog',\n          classes: 'tinymce tinymce-inline arrow',\n          ariaLabel: 'Inline toolbar',\n          layout: 'flex',\n          direction: 'column',\n          align: 'stretch',\n          autohide: false,\n          autofix: true,\n          fixed: true,\n          border: 1,\n          items: Toolbar.createToolbar(editor, match.toolbar.items),\n          oncancel: function () {\n            editor.focus();\n          }\n        });\n        UiContainer.setUiContainer(editor, panel);\n        bindScrollEvent(panel);\n        match.toolbar.panel = panel;\n        panel.renderTo().reflow();\n        reposition(match);\n      };\n      var hideAllContextToolbars = function () {\n        global$2.each(getContextToolbars(), function (toolbar) {\n          if (toolbar.panel) {\n            toolbar.panel.hide();\n          }\n        });\n      };\n      var findFrontMostMatch = function (targetElm) {\n        var i, y, parentsAndSelf;\n        var toolbars = getContextToolbars();\n        parentsAndSelf = editor.$(targetElm).parents().add(targetElm);\n        for (i = parentsAndSelf.length - 1; i >= 0; i--) {\n          for (y = toolbars.length - 1; y >= 0; y--) {\n            if (toolbars[y].predicate(parentsAndSelf[i])) {\n              return {\n                toolbar: toolbars[y],\n                element: parentsAndSelf[i]\n              };\n            }\n          }\n        }\n        return null;\n      };\n      editor.on('click keyup setContent ObjectResized', function (e) {\n        if (e.type === 'setcontent' && !e.selection) {\n          return;\n        }\n        global$7.setEditorTimeout(editor, function () {\n          var match;\n          match = findFrontMostMatch(editor.selection.getNode());\n          if (match) {\n            hideAllContextToolbars();\n            showContextToolbar(match);\n          } else {\n            hideAllContextToolbars();\n          }\n        });\n      });\n      editor.on('blur hide contextmenu', hideAllContextToolbars);\n      editor.on('ObjectResizeStart', function () {\n        var match = findFrontMostMatch(editor.selection.getNode());\n        if (match && match.toolbar.panel) {\n          match.toolbar.panel.hide();\n        }\n      });\n      editor.on('ResizeEditor ResizeWindow', repositionHandler(true));\n      editor.on('nodeChange', repositionHandler(false));\n      editor.on('remove', function () {\n        global$2.each(getContextToolbars(), function (toolbar) {\n          if (toolbar.panel) {\n            toolbar.panel.remove();\n          }\n        });\n        editor.contextToolbars = {};\n      });\n      editor.shortcuts.add('ctrl+F9', '', function () {\n        var match = findFrontMostMatch(editor.selection.getNode());\n        if (match && match.toolbar.panel) {\n          match.toolbar.panel.items()[0].focus();\n        }\n      });\n    };\n    var ContextToolbars = { addContextualToolbars: addContextualToolbars };\n\n    var typeOf = function (x) {\n      if (x === null) {\n        return 'null';\n      }\n      var t = typeof x;\n      if (t === 'object' && (Array.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'Array')) {\n        return 'array';\n      }\n      if (t === 'object' && (String.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'String')) {\n        return 'string';\n      }\n      return t;\n    };\n    var isType = function (type) {\n      return function (value) {\n        return typeOf(value) === type;\n      };\n    };\n    var isArray = isType('array');\n    var isFunction = isType('function');\n    var isNumber = isType('number');\n\n    var nativeSlice = Array.prototype.slice;\n    var nativeIndexOf = Array.prototype.indexOf;\n    var nativePush = Array.prototype.push;\n    var rawIndexOf = function (ts, t) {\n      return nativeIndexOf.call(ts, t);\n    };\n    var indexOf = function (xs, x) {\n      var r = rawIndexOf(xs, x);\n      return r === -1 ? Option.none() : Option.some(r);\n    };\n    var exists = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    var map = function (xs, f) {\n      var len = xs.length;\n      var r = new Array(len);\n      for (var i = 0; i < len; i++) {\n        var x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    var each = function (xs, f) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        f(x, i);\n      }\n    };\n    var filter = function (xs, pred) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          r.push(x);\n        }\n      }\n      return r;\n    };\n    var foldl = function (xs, f, acc) {\n      each(xs, function (x) {\n        acc = f(acc, x);\n      });\n      return acc;\n    };\n    var find = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          return Option.some(x);\n        }\n      }\n      return Option.none();\n    };\n    var findIndex = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          return Option.some(i);\n        }\n      }\n      return Option.none();\n    };\n    var flatten = function (xs) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; ++i) {\n        if (!isArray(xs[i])) {\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        }\n        nativePush.apply(r, xs[i]);\n      }\n      return r;\n    };\n    var from$1 = isFunction(Array.from) ? Array.from : function (x) {\n      return nativeSlice.call(x);\n    };\n\n    var defaultMenus = {\n      file: {\n        title: 'File',\n        items: 'newdocument restoredraft | preview | print'\n      },\n      edit: {\n        title: 'Edit',\n        items: 'undo redo | cut copy paste pastetext | selectall'\n      },\n      view: {\n        title: 'View',\n        items: 'code | visualaid visualchars visualblocks | spellchecker | preview fullscreen'\n      },\n      insert: {\n        title: 'Insert',\n        items: 'image link media template codesample inserttable | charmap hr | pagebreak nonbreaking anchor toc | insertdatetime'\n      },\n      format: {\n        title: 'Format',\n        items: 'bold italic underline strikethrough superscript subscript codeformat | blockformats align | removeformat'\n      },\n      tools: {\n        title: 'Tools',\n        items: 'spellchecker spellcheckerlanguage | a11ycheck code'\n      },\n      table: { title: 'Table' },\n      help: { title: 'Help' }\n    };\n    var delimiterMenuNamePair = function () {\n      return {\n        name: '|',\n        item: { text: '|' }\n      };\n    };\n    var createMenuNameItemPair = function (name, item) {\n      var menuItem = item ? {\n        name: name,\n        item: item\n      } : null;\n      return name === '|' ? delimiterMenuNamePair() : menuItem;\n    };\n    var hasItemName = function (namedMenuItems, name) {\n      return findIndex(namedMenuItems, function (namedMenuItem) {\n        return namedMenuItem.name === name;\n      }).isSome();\n    };\n    var isSeparator = function (namedMenuItem) {\n      return namedMenuItem && namedMenuItem.item.text === '|';\n    };\n    var cleanupMenu = function (namedMenuItems, removedMenuItems) {\n      var menuItemsPass1 = filter(namedMenuItems, function (namedMenuItem) {\n        return removedMenuItems.hasOwnProperty(namedMenuItem.name) === false;\n      });\n      var menuItemsPass2 = filter(menuItemsPass1, function (namedMenuItem, i) {\n        return !isSeparator(namedMenuItem) || !isSeparator(menuItemsPass1[i - 1]);\n      });\n      return filter(menuItemsPass2, function (namedMenuItem, i) {\n        return !isSeparator(namedMenuItem) || i > 0 && i < menuItemsPass2.length - 1;\n      });\n    };\n    var createMenu = function (editorMenuItems, menus, removedMenuItems, context) {\n      var menuButton, menu, namedMenuItems, isUserDefined;\n      if (menus) {\n        menu = menus[context];\n        isUserDefined = true;\n      } else {\n        menu = defaultMenus[context];\n      }\n      if (menu) {\n        menuButton = { text: menu.title };\n        namedMenuItems = [];\n        global$2.each((menu.items || '').split(/[ ,]/), function (name) {\n          var namedMenuItem = createMenuNameItemPair(name, editorMenuItems[name]);\n          if (namedMenuItem) {\n            namedMenuItems.push(namedMenuItem);\n          }\n        });\n        if (!isUserDefined) {\n          global$2.each(editorMenuItems, function (item, name) {\n            if (item.context === context && !hasItemName(namedMenuItems, name)) {\n              if (item.separator === 'before') {\n                namedMenuItems.push(delimiterMenuNamePair());\n              }\n              if (item.prependToContext) {\n                namedMenuItems.unshift(createMenuNameItemPair(name, item));\n              } else {\n                namedMenuItems.push(createMenuNameItemPair(name, item));\n              }\n              if (item.separator === 'after') {\n                namedMenuItems.push(delimiterMenuNamePair());\n              }\n            }\n          });\n        }\n        menuButton.menu = map(cleanupMenu(namedMenuItems, removedMenuItems), function (menuItem) {\n          return menuItem.item;\n        });\n        if (!menuButton.menu.length) {\n          return null;\n        }\n      }\n      return menuButton;\n    };\n    var getDefaultMenubar = function (editor) {\n      var name;\n      var defaultMenuBar = [];\n      var menu = getMenu(editor);\n      if (menu) {\n        for (name in menu) {\n          defaultMenuBar.push(name);\n        }\n      } else {\n        for (name in defaultMenus) {\n          defaultMenuBar.push(name);\n        }\n      }\n      return defaultMenuBar;\n    };\n    var createMenuButtons = function (editor) {\n      var menuButtons = [];\n      var defaultMenuBar = getDefaultMenubar(editor);\n      var removedMenuItems = global$2.makeMap(getRemovedMenuItems(editor).split(/[ ,]/));\n      var menubar = getMenubar(editor);\n      var enabledMenuNames = typeof menubar === 'string' ? menubar.split(/[ ,]/) : defaultMenuBar;\n      for (var i = 0; i < enabledMenuNames.length; i++) {\n        var menuItems = enabledMenuNames[i];\n        var menu = createMenu(editor.menuItems, getMenu(editor), removedMenuItems, menuItems);\n        if (menu) {\n          menuButtons.push(menu);\n        }\n      }\n      return menuButtons;\n    };\n    var Menubar = { createMenuButtons: createMenuButtons };\n\n    var DOM$1 = global$3.DOM;\n    var getSize = function (elm) {\n      return {\n        width: elm.clientWidth,\n        height: elm.clientHeight\n      };\n    };\n    var resizeTo = function (editor, width, height) {\n      var containerElm, iframeElm, containerSize, iframeSize;\n      containerElm = editor.getContainer();\n      iframeElm = editor.getContentAreaContainer().firstChild;\n      containerSize = getSize(containerElm);\n      iframeSize = getSize(iframeElm);\n      if (width !== null) {\n        width = Math.max(getMinWidth(editor), width);\n        width = Math.min(getMaxWidth(editor), width);\n        DOM$1.setStyle(containerElm, 'width', width + (containerSize.width - iframeSize.width));\n        DOM$1.setStyle(iframeElm, 'width', width);\n      }\n      height = Math.max(getMinHeight(editor), height);\n      height = Math.min(getMaxHeight(editor), height);\n      DOM$1.setStyle(iframeElm, 'height', height);\n      Events.fireResizeEditor(editor);\n    };\n    var resizeBy = function (editor, dw, dh) {\n      var elm = editor.getContentAreaContainer();\n      resizeTo(editor, elm.clientWidth + dw, elm.clientHeight + dh);\n    };\n    var Resize = {\n      resizeTo: resizeTo,\n      resizeBy: resizeBy\n    };\n\n    var global$8 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var api = function (elm) {\n      return {\n        element: function () {\n          return elm;\n        }\n      };\n    };\n    var trigger = function (sidebar, panel, callbackName) {\n      var callback = sidebar.settings[callbackName];\n      if (callback) {\n        callback(api(panel.getEl('body')));\n      }\n    };\n    var hidePanels = function (name, container, sidebars) {\n      global$2.each(sidebars, function (sidebar) {\n        var panel = container.items().filter('#' + sidebar.name)[0];\n        if (panel && panel.visible() && sidebar.name !== name) {\n          trigger(sidebar, panel, 'onhide');\n          panel.visible(false);\n        }\n      });\n    };\n    var deactivateButtons = function (toolbar) {\n      toolbar.items().each(function (ctrl) {\n        ctrl.active(false);\n      });\n    };\n    var findSidebar = function (sidebars, name) {\n      return global$2.grep(sidebars, function (sidebar) {\n        return sidebar.name === name;\n      })[0];\n    };\n    var showPanel = function (editor, name, sidebars) {\n      return function (e) {\n        var btnCtrl = e.control;\n        var container = btnCtrl.parents().filter('panel')[0];\n        var panel = container.find('#' + name)[0];\n        var sidebar = findSidebar(sidebars, name);\n        hidePanels(name, container, sidebars);\n        deactivateButtons(btnCtrl.parent());\n        if (panel && panel.visible()) {\n          trigger(sidebar, panel, 'onhide');\n          panel.hide();\n          btnCtrl.active(false);\n        } else {\n          if (panel) {\n            panel.show();\n            trigger(sidebar, panel, 'onshow');\n          } else {\n            panel = global$4.create({\n              type: 'container',\n              name: name,\n              layout: 'stack',\n              classes: 'sidebar-panel',\n              html: ''\n            });\n            container.prepend(panel);\n            trigger(sidebar, panel, 'onrender');\n            trigger(sidebar, panel, 'onshow');\n          }\n          btnCtrl.active(true);\n        }\n        Events.fireResizeEditor(editor);\n      };\n    };\n    var isModernBrowser = function () {\n      return !global$8.ie || global$8.ie >= 11;\n    };\n    var hasSidebar = function (editor) {\n      return isModernBrowser() && editor.sidebars ? editor.sidebars.length > 0 : false;\n    };\n    var createSidebar = function (editor) {\n      var buttons = global$2.map(editor.sidebars, function (sidebar) {\n        var settings = sidebar.settings;\n        return {\n          type: 'button',\n          icon: settings.icon,\n          image: settings.image,\n          tooltip: settings.tooltip,\n          onclick: showPanel(editor, sidebar.name, editor.sidebars)\n        };\n      });\n      return {\n        type: 'panel',\n        name: 'sidebar',\n        layout: 'stack',\n        classes: 'sidebar',\n        items: [{\n            type: 'toolbar',\n            layout: 'stack',\n            classes: 'sidebar-toolbar',\n            items: buttons\n          }]\n      };\n    };\n    var Sidebar = {\n      hasSidebar: hasSidebar,\n      createSidebar: createSidebar\n    };\n\n    var fireSkinLoaded$1 = function (editor) {\n      var done = function () {\n        editor._skinLoaded = true;\n        Events.fireSkinLoaded(editor);\n      };\n      return function () {\n        if (editor.initialized) {\n          done();\n        } else {\n          editor.on('init', done);\n        }\n      };\n    };\n    var SkinLoaded = { fireSkinLoaded: fireSkinLoaded$1 };\n\n    var DOM$2 = global$3.DOM;\n    var switchMode = function (panel) {\n      return function (e) {\n        panel.find('*').disabled(e.mode === 'readonly');\n      };\n    };\n    var editArea = function (border) {\n      return {\n        type: 'panel',\n        name: 'iframe',\n        layout: 'stack',\n        classes: 'edit-area',\n        border: border,\n        html: ''\n      };\n    };\n    var editAreaContainer = function (editor) {\n      return {\n        type: 'panel',\n        layout: 'stack',\n        classes: 'edit-aria-container',\n        border: '1 0 0 0',\n        items: [\n          editArea('0'),\n          Sidebar.createSidebar(editor)\n        ]\n      };\n    };\n    var render = function (editor, theme, args) {\n      var panel, resizeHandleCtrl, startSize;\n      if (isSkinDisabled(editor) === false && args.skinUiCss) {\n        DOM$2.styleSheetLoader.load(args.skinUiCss, SkinLoaded.fireSkinLoaded(editor));\n      } else {\n        SkinLoaded.fireSkinLoaded(editor)();\n      }\n      panel = theme.panel = global$4.create({\n        type: 'panel',\n        role: 'application',\n        classes: 'tinymce',\n        style: 'visibility: hidden',\n        layout: 'stack',\n        border: 1,\n        items: [\n          {\n            type: 'container',\n            classes: 'top-part',\n            items: [\n              hasMenubar(editor) === false ? null : {\n                type: 'menubar',\n                border: '0 0 1 0',\n                items: Menubar.createMenuButtons(editor)\n              },\n              Toolbar.createToolbars(editor, getToolbarSize(editor))\n            ]\n          },\n          Sidebar.hasSidebar(editor) ? editAreaContainer(editor) : editArea('1 0 0 0')\n        ]\n      });\n      UiContainer.setUiContainer(editor, panel);\n      if (getResize(editor) !== 'none') {\n        resizeHandleCtrl = {\n          type: 'resizehandle',\n          direction: getResize(editor),\n          onResizeStart: function () {\n            var elm = editor.getContentAreaContainer().firstChild;\n            startSize = {\n              width: elm.clientWidth,\n              height: elm.clientHeight\n            };\n          },\n          onResize: function (e) {\n            if (getResize(editor) === 'both') {\n              Resize.resizeTo(editor, startSize.width + e.deltaX, startSize.height + e.deltaY);\n            } else {\n              Resize.resizeTo(editor, null, startSize.height + e.deltaY);\n            }\n          }\n        };\n      }\n      if (hasStatusbar(editor)) {\n        var linkHtml = '<a href=\"https://www.tiny.cloud/?utm_campaign=editor_referral&amp;utm_medium=poweredby&amp;utm_source=tinymce\" rel=\"noopener\" target=\"_blank\" role=\"presentation\" tabindex=\"-1\">Tiny</a>';\n        var html = global$5.translate([\n          'Powered by {0}',\n          linkHtml\n        ]);\n        var brandingLabel = isBrandingEnabled(editor) ? {\n          type: 'label',\n          classes: 'branding',\n          html: ' ' + html\n        } : null;\n        panel.add({\n          type: 'panel',\n          name: 'statusbar',\n          classes: 'statusbar',\n          layout: 'flow',\n          border: '1 0 0 0',\n          ariaRoot: true,\n          items: [\n            {\n              type: 'elementpath',\n              editor: editor\n            },\n            resizeHandleCtrl,\n            brandingLabel\n          ]\n        });\n      }\n      Events.fireBeforeRenderUI(editor);\n      editor.on('SwitchMode', switchMode(panel));\n      panel.renderBefore(args.targetNode).reflow();\n      if (isReadOnly(editor)) {\n        editor.setMode('readonly');\n      }\n      if (args.width) {\n        DOM$2.setStyle(panel.getEl(), 'width', args.width);\n      }\n      editor.on('remove', function () {\n        panel.remove();\n        panel = null;\n      });\n      A11y.addKeys(editor, panel);\n      ContextToolbars.addContextualToolbars(editor);\n      return {\n        iframeContainer: panel.find('#iframe')[0].getEl(),\n        editorContainer: panel.getEl()\n      };\n    };\n    var Iframe = { render: render };\n\n    var global$9 = tinymce.util.Tools.resolve('tinymce.dom.DomQuery');\n\n    var count = 0;\n    var funcs = {\n      id: function () {\n        return 'mceu_' + count++;\n      },\n      create: function (name, attrs, children) {\n        var elm = domGlobals.document.createElement(name);\n        global$3.DOM.setAttribs(elm, attrs);\n        if (typeof children === 'string') {\n          elm.innerHTML = children;\n        } else {\n          global$2.each(children, function (child) {\n            if (child.nodeType) {\n              elm.appendChild(child);\n            }\n          });\n        }\n        return elm;\n      },\n      createFragment: function (html) {\n        return global$3.DOM.createFragment(html);\n      },\n      getWindowSize: function () {\n        return global$3.DOM.getViewPort();\n      },\n      getSize: function (elm) {\n        var width, height;\n        if (elm.getBoundingClientRect) {\n          var rect = elm.getBoundingClientRect();\n          width = Math.max(rect.width || rect.right - rect.left, elm.offsetWidth);\n          height = Math.max(rect.height || rect.bottom - rect.bottom, elm.offsetHeight);\n        } else {\n          width = elm.offsetWidth;\n          height = elm.offsetHeight;\n        }\n        return {\n          width: width,\n          height: height\n        };\n      },\n      getPos: function (elm, root) {\n        return global$3.DOM.getPos(elm, root || funcs.getContainer());\n      },\n      getContainer: function () {\n        return global$8.container ? global$8.container : domGlobals.document.body;\n      },\n      getViewPort: function (win) {\n        return global$3.DOM.getViewPort(win);\n      },\n      get: function (id) {\n        return domGlobals.document.getElementById(id);\n      },\n      addClass: function (elm, cls) {\n        return global$3.DOM.addClass(elm, cls);\n      },\n      removeClass: function (elm, cls) {\n        return global$3.DOM.removeClass(elm, cls);\n      },\n      hasClass: function (elm, cls) {\n        return global$3.DOM.hasClass(elm, cls);\n      },\n      toggleClass: function (elm, cls, state) {\n        return global$3.DOM.toggleClass(elm, cls, state);\n      },\n      css: function (elm, name, value) {\n        return global$3.DOM.setStyle(elm, name, value);\n      },\n      getRuntimeStyle: function (elm, name) {\n        return global$3.DOM.getStyle(elm, name, true);\n      },\n      on: function (target, name, callback, scope) {\n        return global$3.DOM.bind(target, name, callback, scope);\n      },\n      off: function (target, name, callback) {\n        return global$3.DOM.unbind(target, name, callback);\n      },\n      fire: function (target, name, args) {\n        return global$3.DOM.fire(target, name, args);\n      },\n      innerHtml: function (elm, html) {\n        global$3.DOM.setHTML(elm, html);\n      }\n    };\n\n    var isStatic = function (elm) {\n      return funcs.getRuntimeStyle(elm, 'position') === 'static';\n    };\n    var isFixed = function (ctrl) {\n      return ctrl.state.get('fixed');\n    };\n    function calculateRelativePosition(ctrl, targetElm, rel) {\n      var ctrlElm, pos, x, y, selfW, selfH, targetW, targetH, viewport, size;\n      viewport = getWindowViewPort();\n      pos = funcs.getPos(targetElm, UiContainer.getUiContainer(ctrl));\n      x = pos.x;\n      y = pos.y;\n      if (isFixed(ctrl) && isStatic(domGlobals.document.body)) {\n        x -= viewport.x;\n        y -= viewport.y;\n      }\n      ctrlElm = ctrl.getEl();\n      size = funcs.getSize(ctrlElm);\n      selfW = size.width;\n      selfH = size.height;\n      size = funcs.getSize(targetElm);\n      targetW = size.width;\n      targetH = size.height;\n      rel = (rel || '').split('');\n      if (rel[0] === 'b') {\n        y += targetH;\n      }\n      if (rel[1] === 'r') {\n        x += targetW;\n      }\n      if (rel[0] === 'c') {\n        y += Math.round(targetH / 2);\n      }\n      if (rel[1] === 'c') {\n        x += Math.round(targetW / 2);\n      }\n      if (rel[3] === 'b') {\n        y -= selfH;\n      }\n      if (rel[4] === 'r') {\n        x -= selfW;\n      }\n      if (rel[3] === 'c') {\n        y -= Math.round(selfH / 2);\n      }\n      if (rel[4] === 'c') {\n        x -= Math.round(selfW / 2);\n      }\n      return {\n        x: x,\n        y: y,\n        w: selfW,\n        h: selfH\n      };\n    }\n    var getUiContainerViewPort = function (customUiContainer) {\n      return {\n        x: 0,\n        y: 0,\n        w: customUiContainer.scrollWidth - 1,\n        h: customUiContainer.scrollHeight - 1\n      };\n    };\n    var getWindowViewPort = function () {\n      var win = domGlobals.window;\n      var x = Math.max(win.pageXOffset, domGlobals.document.body.scrollLeft, domGlobals.document.documentElement.scrollLeft);\n      var y = Math.max(win.pageYOffset, domGlobals.document.body.scrollTop, domGlobals.document.documentElement.scrollTop);\n      var w = win.innerWidth || domGlobals.document.documentElement.clientWidth;\n      var h = win.innerHeight || domGlobals.document.documentElement.clientHeight;\n      return {\n        x: x,\n        y: y,\n        w: w,\n        h: h\n      };\n    };\n    var getViewPortRect = function (ctrl) {\n      var customUiContainer = UiContainer.getUiContainer(ctrl);\n      return customUiContainer && !isFixed(ctrl) ? getUiContainerViewPort(customUiContainer) : getWindowViewPort();\n    };\n    var Movable = {\n      testMoveRel: function (elm, rels) {\n        var viewPortRect = getViewPortRect(this);\n        for (var i = 0; i < rels.length; i++) {\n          var pos = calculateRelativePosition(this, elm, rels[i]);\n          if (isFixed(this)) {\n            if (pos.x > 0 && pos.x + pos.w < viewPortRect.w && pos.y > 0 && pos.y + pos.h < viewPortRect.h) {\n              return rels[i];\n            }\n          } else {\n            if (pos.x > viewPortRect.x && pos.x + pos.w < viewPortRect.w + viewPortRect.x && pos.y > viewPortRect.y && pos.y + pos.h < viewPortRect.h + viewPortRect.y) {\n              return rels[i];\n            }\n          }\n        }\n        return rels[0];\n      },\n      moveRel: function (elm, rel) {\n        if (typeof rel !== 'string') {\n          rel = this.testMoveRel(elm, rel);\n        }\n        var pos = calculateRelativePosition(this, elm, rel);\n        return this.moveTo(pos.x, pos.y);\n      },\n      moveBy: function (dx, dy) {\n        var self = this, rect = self.layoutRect();\n        self.moveTo(rect.x + dx, rect.y + dy);\n        return self;\n      },\n      moveTo: function (x, y) {\n        var self = this;\n        function constrain(value, max, size) {\n          if (value < 0) {\n            return 0;\n          }\n          if (value + size > max) {\n            value = max - size;\n            return value < 0 ? 0 : value;\n          }\n          return value;\n        }\n        if (self.settings.constrainToViewport) {\n          var viewPortRect = getViewPortRect(this);\n          var layoutRect = self.layoutRect();\n          x = constrain(x, viewPortRect.w + viewPortRect.x, layoutRect.w);\n          y = constrain(y, viewPortRect.h + viewPortRect.y, layoutRect.h);\n        }\n        var uiContainer = UiContainer.getUiContainer(self);\n        if (uiContainer && isStatic(uiContainer) && !isFixed(self)) {\n          x -= uiContainer.scrollLeft;\n          y -= uiContainer.scrollTop;\n        }\n        if (uiContainer) {\n          x += 1;\n          y += 1;\n        }\n        if (self.state.get('rendered')) {\n          self.layoutRect({\n            x: x,\n            y: y\n          }).repaint();\n        } else {\n          self.settings.x = x;\n          self.settings.y = y;\n        }\n        self.fire('move', {\n          x: x,\n          y: y\n        });\n        return self;\n      }\n    };\n\n    var global$a = tinymce.util.Tools.resolve('tinymce.util.Class');\n\n    var global$b = tinymce.util.Tools.resolve('tinymce.util.EventDispatcher');\n\n    var BoxUtils = {\n      parseBox: function (value) {\n        var len;\n        var radix = 10;\n        if (!value) {\n          return;\n        }\n        if (typeof value === 'number') {\n          value = value || 0;\n          return {\n            top: value,\n            left: value,\n            bottom: value,\n            right: value\n          };\n        }\n        value = value.split(' ');\n        len = value.length;\n        if (len === 1) {\n          value[1] = value[2] = value[3] = value[0];\n        } else if (len === 2) {\n          value[2] = value[0];\n          value[3] = value[1];\n        } else if (len === 3) {\n          value[3] = value[1];\n        }\n        return {\n          top: parseInt(value[0], radix) || 0,\n          right: parseInt(value[1], radix) || 0,\n          bottom: parseInt(value[2], radix) || 0,\n          left: parseInt(value[3], radix) || 0\n        };\n      },\n      measureBox: function (elm, prefix) {\n        function getStyle(name) {\n          var defaultView = elm.ownerDocument.defaultView;\n          if (defaultView) {\n            var computedStyle = defaultView.getComputedStyle(elm, null);\n            if (computedStyle) {\n              name = name.replace(/[A-Z]/g, function (a) {\n                return '-' + a;\n              });\n              return computedStyle.getPropertyValue(name);\n            } else {\n              return null;\n            }\n          }\n          return elm.currentStyle[name];\n        }\n        function getSide(name) {\n          var val = parseFloat(getStyle(name));\n          return isNaN(val) ? 0 : val;\n        }\n        return {\n          top: getSide(prefix + 'TopWidth'),\n          right: getSide(prefix + 'RightWidth'),\n          bottom: getSide(prefix + 'BottomWidth'),\n          left: getSide(prefix + 'LeftWidth')\n        };\n      }\n    };\n\n    function noop$1() {\n    }\n    function ClassList(onchange) {\n      this.cls = [];\n      this.cls._map = {};\n      this.onchange = onchange || noop$1;\n      this.prefix = '';\n    }\n    global$2.extend(ClassList.prototype, {\n      add: function (cls) {\n        if (cls && !this.contains(cls)) {\n          this.cls._map[cls] = true;\n          this.cls.push(cls);\n          this._change();\n        }\n        return this;\n      },\n      remove: function (cls) {\n        if (this.contains(cls)) {\n          var i = void 0;\n          for (i = 0; i < this.cls.length; i++) {\n            if (this.cls[i] === cls) {\n              break;\n            }\n          }\n          this.cls.splice(i, 1);\n          delete this.cls._map[cls];\n          this._change();\n        }\n        return this;\n      },\n      toggle: function (cls, state) {\n        var curState = this.contains(cls);\n        if (curState !== state) {\n          if (curState) {\n            this.remove(cls);\n          } else {\n            this.add(cls);\n          }\n          this._change();\n        }\n        return this;\n      },\n      contains: function (cls) {\n        return !!this.cls._map[cls];\n      },\n      _change: function () {\n        delete this.clsValue;\n        this.onchange.call(this);\n      }\n    });\n    ClassList.prototype.toString = function () {\n      var value;\n      if (this.clsValue) {\n        return this.clsValue;\n      }\n      value = '';\n      for (var i = 0; i < this.cls.length; i++) {\n        if (i > 0) {\n          value += ' ';\n        }\n        value += this.prefix + this.cls[i];\n      }\n      return value;\n    };\n\n    function unique(array) {\n      var uniqueItems = [];\n      var i = array.length, item;\n      while (i--) {\n        item = array[i];\n        if (!item.__checked) {\n          uniqueItems.push(item);\n          item.__checked = 1;\n        }\n      }\n      i = uniqueItems.length;\n      while (i--) {\n        delete uniqueItems[i].__checked;\n      }\n      return uniqueItems;\n    }\n    var expression = /^([\\w\\\\*]+)?(?:#([\\w\\-\\\\]+))?(?:\\.([\\w\\\\\\.]+))?(?:\\[\\@?([\\w\\\\]+)([\\^\\$\\*!~]?=)([\\w\\\\]+)\\])?(?:\\:(.+))?/i;\n    var chunker = /((?:\\((?:\\([^()]+\\)|[^()]+)+\\)|\\[(?:\\[[^\\[\\]]*\\]|['\"][^'\"]*['\"]|[^\\[\\]'\"]+)+\\]|\\\\.|[^ >+~,(\\[\\\\]+)+|[>+~])(\\s*,\\s*)?((?:.|\\r|\\n)*)/g;\n    var whiteSpace = /^\\s*|\\s*$/g;\n    var Collection;\n    var Selector = global$a.extend({\n      init: function (selector) {\n        var match = this.match;\n        function compileNameFilter(name) {\n          if (name) {\n            name = name.toLowerCase();\n            return function (item) {\n              return name === '*' || item.type === name;\n            };\n          }\n        }\n        function compileIdFilter(id) {\n          if (id) {\n            return function (item) {\n              return item._name === id;\n            };\n          }\n        }\n        function compileClassesFilter(classes) {\n          if (classes) {\n            classes = classes.split('.');\n            return function (item) {\n              var i = classes.length;\n              while (i--) {\n                if (!item.classes.contains(classes[i])) {\n                  return false;\n                }\n              }\n              return true;\n            };\n          }\n        }\n        function compileAttrFilter(name, cmp, check) {\n          if (name) {\n            return function (item) {\n              var value = item[name] ? item[name]() : '';\n              return !cmp ? !!check : cmp === '=' ? value === check : cmp === '*=' ? value.indexOf(check) >= 0 : cmp === '~=' ? (' ' + value + ' ').indexOf(' ' + check + ' ') >= 0 : cmp === '!=' ? value !== check : cmp === '^=' ? value.indexOf(check) === 0 : cmp === '$=' ? value.substr(value.length - check.length) === check : false;\n            };\n          }\n        }\n        function compilePsuedoFilter(name) {\n          var notSelectors;\n          if (name) {\n            name = /(?:not\\((.+)\\))|(.+)/i.exec(name);\n            if (!name[1]) {\n              name = name[2];\n              return function (item, index, length) {\n                return name === 'first' ? index === 0 : name === 'last' ? index === length - 1 : name === 'even' ? index % 2 === 0 : name === 'odd' ? index % 2 === 1 : item[name] ? item[name]() : false;\n              };\n            }\n            notSelectors = parseChunks(name[1], []);\n            return function (item) {\n              return !match(item, notSelectors);\n            };\n          }\n        }\n        function compile(selector, filters, direct) {\n          var parts;\n          function add(filter) {\n            if (filter) {\n              filters.push(filter);\n            }\n          }\n          parts = expression.exec(selector.replace(whiteSpace, ''));\n          add(compileNameFilter(parts[1]));\n          add(compileIdFilter(parts[2]));\n          add(compileClassesFilter(parts[3]));\n          add(compileAttrFilter(parts[4], parts[5], parts[6]));\n          add(compilePsuedoFilter(parts[7]));\n          filters.pseudo = !!parts[7];\n          filters.direct = direct;\n          return filters;\n        }\n        function parseChunks(selector, selectors) {\n          var parts = [];\n          var extra, matches, i;\n          do {\n            chunker.exec('');\n            matches = chunker.exec(selector);\n            if (matches) {\n              selector = matches[3];\n              parts.push(matches[1]);\n              if (matches[2]) {\n                extra = matches[3];\n                break;\n              }\n            }\n          } while (matches);\n          if (extra) {\n            parseChunks(extra, selectors);\n          }\n          selector = [];\n          for (i = 0; i < parts.length; i++) {\n            if (parts[i] !== '>') {\n              selector.push(compile(parts[i], [], parts[i - 1] === '>'));\n            }\n          }\n          selectors.push(selector);\n          return selectors;\n        }\n        this._selectors = parseChunks(selector, []);\n      },\n      match: function (control, selectors) {\n        var i, l, si, sl, selector, fi, fl, filters, index, length, siblings, count, item;\n        selectors = selectors || this._selectors;\n        for (i = 0, l = selectors.length; i < l; i++) {\n          selector = selectors[i];\n          sl = selector.length;\n          item = control;\n          count = 0;\n          for (si = sl - 1; si >= 0; si--) {\n            filters = selector[si];\n            while (item) {\n              if (filters.pseudo) {\n                siblings = item.parent().items();\n                index = length = siblings.length;\n                while (index--) {\n                  if (siblings[index] === item) {\n                    break;\n                  }\n                }\n              }\n              for (fi = 0, fl = filters.length; fi < fl; fi++) {\n                if (!filters[fi](item, index, length)) {\n                  fi = fl + 1;\n                  break;\n                }\n              }\n              if (fi === fl) {\n                count++;\n                break;\n              } else {\n                if (si === sl - 1) {\n                  break;\n                }\n              }\n              item = item.parent();\n            }\n          }\n          if (count === sl) {\n            return true;\n          }\n        }\n        return false;\n      },\n      find: function (container) {\n        var matches = [], i, l;\n        var selectors = this._selectors;\n        function collect(items, selector, index) {\n          var i, l, fi, fl, item;\n          var filters = selector[index];\n          for (i = 0, l = items.length; i < l; i++) {\n            item = items[i];\n            for (fi = 0, fl = filters.length; fi < fl; fi++) {\n              if (!filters[fi](item, i, l)) {\n                fi = fl + 1;\n                break;\n              }\n            }\n            if (fi === fl) {\n              if (index === selector.length - 1) {\n                matches.push(item);\n              } else {\n                if (item.items) {\n                  collect(item.items(), selector, index + 1);\n                }\n              }\n            } else if (filters.direct) {\n              return;\n            }\n            if (item.items) {\n              collect(item.items(), selector, index);\n            }\n          }\n        }\n        if (container.items) {\n          for (i = 0, l = selectors.length; i < l; i++) {\n            collect(container.items(), selectors[i], 0);\n          }\n          if (l > 1) {\n            matches = unique(matches);\n          }\n        }\n        if (!Collection) {\n          Collection = Selector.Collection;\n        }\n        return new Collection(matches);\n      }\n    });\n\n    var Collection$1, proto;\n    var push = Array.prototype.push, slice = Array.prototype.slice;\n    proto = {\n      length: 0,\n      init: function (items) {\n        if (items) {\n          this.add(items);\n        }\n      },\n      add: function (items) {\n        var self = this;\n        if (!global$2.isArray(items)) {\n          if (items instanceof Collection$1) {\n            self.add(items.toArray());\n          } else {\n            push.call(self, items);\n          }\n        } else {\n          push.apply(self, items);\n        }\n        return self;\n      },\n      set: function (items) {\n        var self = this;\n        var len = self.length;\n        var i;\n        self.length = 0;\n        self.add(items);\n        for (i = self.length; i < len; i++) {\n          delete self[i];\n        }\n        return self;\n      },\n      filter: function (selector) {\n        var self = this;\n        var i, l;\n        var matches = [];\n        var item, match;\n        if (typeof selector === 'string') {\n          selector = new Selector(selector);\n          match = function (item) {\n            return selector.match(item);\n          };\n        } else {\n          match = selector;\n        }\n        for (i = 0, l = self.length; i < l; i++) {\n          item = self[i];\n          if (match(item)) {\n            matches.push(item);\n          }\n        }\n        return new Collection$1(matches);\n      },\n      slice: function () {\n        return new Collection$1(slice.apply(this, arguments));\n      },\n      eq: function (index) {\n        return index === -1 ? this.slice(index) : this.slice(index, +index + 1);\n      },\n      each: function (callback) {\n        global$2.each(this, callback);\n        return this;\n      },\n      toArray: function () {\n        return global$2.toArray(this);\n      },\n      indexOf: function (ctrl) {\n        var self = this;\n        var i = self.length;\n        while (i--) {\n          if (self[i] === ctrl) {\n            break;\n          }\n        }\n        return i;\n      },\n      reverse: function () {\n        return new Collection$1(global$2.toArray(this).reverse());\n      },\n      hasClass: function (cls) {\n        return this[0] ? this[0].classes.contains(cls) : false;\n      },\n      prop: function (name, value) {\n        var self = this;\n        var item;\n        if (value !== undefined) {\n          self.each(function (item) {\n            if (item[name]) {\n              item[name](value);\n            }\n          });\n          return self;\n        }\n        item = self[0];\n        if (item && item[name]) {\n          return item[name]();\n        }\n      },\n      exec: function (name) {\n        var self = this, args = global$2.toArray(arguments).slice(1);\n        self.each(function (item) {\n          if (item[name]) {\n            item[name].apply(item, args);\n          }\n        });\n        return self;\n      },\n      remove: function () {\n        var i = this.length;\n        while (i--) {\n          this[i].remove();\n        }\n        return this;\n      },\n      addClass: function (cls) {\n        return this.each(function (item) {\n          item.classes.add(cls);\n        });\n      },\n      removeClass: function (cls) {\n        return this.each(function (item) {\n          item.classes.remove(cls);\n        });\n      }\n    };\n    global$2.each('fire on off show hide append prepend before after reflow'.split(' '), function (name) {\n      proto[name] = function () {\n        var args = global$2.toArray(arguments);\n        this.each(function (ctrl) {\n          if (name in ctrl) {\n            ctrl[name].apply(ctrl, args);\n          }\n        });\n        return this;\n      };\n    });\n    global$2.each('text name disabled active selected checked visible parent value data'.split(' '), function (name) {\n      proto[name] = function (value) {\n        return this.prop(name, value);\n      };\n    });\n    Collection$1 = global$a.extend(proto);\n    Selector.Collection = Collection$1;\n    var Collection$2 = Collection$1;\n\n    var Binding = function (settings) {\n      this.create = settings.create;\n    };\n    Binding.create = function (model, name) {\n      return new Binding({\n        create: function (otherModel, otherName) {\n          var bindings;\n          var fromSelfToOther = function (e) {\n            otherModel.set(otherName, e.value);\n          };\n          var fromOtherToSelf = function (e) {\n            model.set(name, e.value);\n          };\n          otherModel.on('change:' + otherName, fromOtherToSelf);\n          model.on('change:' + name, fromSelfToOther);\n          bindings = otherModel._bindings;\n          if (!bindings) {\n            bindings = otherModel._bindings = [];\n            otherModel.on('destroy', function () {\n              var i = bindings.length;\n              while (i--) {\n                bindings[i]();\n              }\n            });\n          }\n          bindings.push(function () {\n            model.off('change:' + name, fromSelfToOther);\n          });\n          return model.get(name);\n        }\n      });\n    };\n\n    var global$c = tinymce.util.Tools.resolve('tinymce.util.Observable');\n\n    function isNode(node) {\n      return node.nodeType > 0;\n    }\n    function isEqual(a, b) {\n      var k, checked;\n      if (a === b) {\n        return true;\n      }\n      if (a === null || b === null) {\n        return a === b;\n      }\n      if (typeof a !== 'object' || typeof b !== 'object') {\n        return a === b;\n      }\n      if (global$2.isArray(b)) {\n        if (a.length !== b.length) {\n          return false;\n        }\n        k = a.length;\n        while (k--) {\n          if (!isEqual(a[k], b[k])) {\n            return false;\n          }\n        }\n      }\n      if (isNode(a) || isNode(b)) {\n        return a === b;\n      }\n      checked = {};\n      for (k in b) {\n        if (!isEqual(a[k], b[k])) {\n          return false;\n        }\n        checked[k] = true;\n      }\n      for (k in a) {\n        if (!checked[k] && !isEqual(a[k], b[k])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    var ObservableObject = global$a.extend({\n      Mixins: [global$c],\n      init: function (data) {\n        var name, value;\n        data = data || {};\n        for (name in data) {\n          value = data[name];\n          if (value instanceof Binding) {\n            data[name] = value.create(this, name);\n          }\n        }\n        this.data = data;\n      },\n      set: function (name, value) {\n        var key, args;\n        var oldValue = this.data[name];\n        if (value instanceof Binding) {\n          value = value.create(this, name);\n        }\n        if (typeof name === 'object') {\n          for (key in name) {\n            this.set(key, name[key]);\n          }\n          return this;\n        }\n        if (!isEqual(oldValue, value)) {\n          this.data[name] = value;\n          args = {\n            target: this,\n            name: name,\n            value: value,\n            oldValue: oldValue\n          };\n          this.fire('change:' + name, args);\n          this.fire('change', args);\n        }\n        return this;\n      },\n      get: function (name) {\n        return this.data[name];\n      },\n      has: function (name) {\n        return name in this.data;\n      },\n      bind: function (name) {\n        return Binding.create(this, name);\n      },\n      destroy: function () {\n        this.fire('destroy');\n      }\n    });\n\n    var dirtyCtrls = {}, animationFrameRequested;\n    var ReflowQueue = {\n      add: function (ctrl) {\n        var parent = ctrl.parent();\n        if (parent) {\n          if (!parent._layout || parent._layout.isNative()) {\n            return;\n          }\n          if (!dirtyCtrls[parent._id]) {\n            dirtyCtrls[parent._id] = parent;\n          }\n          if (!animationFrameRequested) {\n            animationFrameRequested = true;\n            global$7.requestAnimationFrame(function () {\n              var id, ctrl;\n              animationFrameRequested = false;\n              for (id in dirtyCtrls) {\n                ctrl = dirtyCtrls[id];\n                if (ctrl.state.get('rendered')) {\n                  ctrl.reflow();\n                }\n              }\n              dirtyCtrls = {};\n            }, domGlobals.document.body);\n          }\n        }\n      },\n      remove: function (ctrl) {\n        if (dirtyCtrls[ctrl._id]) {\n          delete dirtyCtrls[ctrl._id];\n        }\n      }\n    };\n\n    var hasMouseWheelEventSupport = 'onmousewheel' in domGlobals.document;\n    var hasWheelEventSupport = false;\n    var classPrefix = 'mce-';\n    var Control, idCounter = 0;\n    var proto$1 = {\n      Statics: { classPrefix: classPrefix },\n      isRtl: function () {\n        return Control.rtl;\n      },\n      classPrefix: classPrefix,\n      init: function (settings) {\n        var self = this;\n        var classes, defaultClasses;\n        function applyClasses(classes) {\n          var i;\n          classes = classes.split(' ');\n          for (i = 0; i < classes.length; i++) {\n            self.classes.add(classes[i]);\n          }\n        }\n        self.settings = settings = global$2.extend({}, self.Defaults, settings);\n        self._id = settings.id || 'mceu_' + idCounter++;\n        self._aria = { role: settings.role };\n        self._elmCache = {};\n        self.$ = global$9;\n        self.state = new ObservableObject({\n          visible: true,\n          active: false,\n          disabled: false,\n          value: ''\n        });\n        self.data = new ObservableObject(settings.data);\n        self.classes = new ClassList(function () {\n          if (self.state.get('rendered')) {\n            self.getEl().className = this.toString();\n          }\n        });\n        self.classes.prefix = self.classPrefix;\n        classes = settings.classes;\n        if (classes) {\n          if (self.Defaults) {\n            defaultClasses = self.Defaults.classes;\n            if (defaultClasses && classes !== defaultClasses) {\n              applyClasses(defaultClasses);\n            }\n          }\n          applyClasses(classes);\n        }\n        global$2.each('title text name visible disabled active value'.split(' '), function (name) {\n          if (name in settings) {\n            self[name](settings[name]);\n          }\n        });\n        self.on('click', function () {\n          if (self.disabled()) {\n            return false;\n          }\n        });\n        self.settings = settings;\n        self.borderBox = BoxUtils.parseBox(settings.border);\n        self.paddingBox = BoxUtils.parseBox(settings.padding);\n        self.marginBox = BoxUtils.parseBox(settings.margin);\n        if (settings.hidden) {\n          self.hide();\n        }\n      },\n      Properties: 'parent,name',\n      getContainerElm: function () {\n        var uiContainer = UiContainer.getUiContainer(this);\n        return uiContainer ? uiContainer : funcs.getContainer();\n      },\n      getParentCtrl: function (elm) {\n        var ctrl;\n        var lookup = this.getRoot().controlIdLookup;\n        while (elm && lookup) {\n          ctrl = lookup[elm.id];\n          if (ctrl) {\n            break;\n          }\n          elm = elm.parentNode;\n        }\n        return ctrl;\n      },\n      initLayoutRect: function () {\n        var self = this;\n        var settings = self.settings;\n        var borderBox, layoutRect;\n        var elm = self.getEl();\n        var width, height, minWidth, minHeight, autoResize;\n        var startMinWidth, startMinHeight, initialSize;\n        borderBox = self.borderBox = self.borderBox || BoxUtils.measureBox(elm, 'border');\n        self.paddingBox = self.paddingBox || BoxUtils.measureBox(elm, 'padding');\n        self.marginBox = self.marginBox || BoxUtils.measureBox(elm, 'margin');\n        initialSize = funcs.getSize(elm);\n        startMinWidth = settings.minWidth;\n        startMinHeight = settings.minHeight;\n        minWidth = startMinWidth || initialSize.width;\n        minHeight = startMinHeight || initialSize.height;\n        width = settings.width;\n        height = settings.height;\n        autoResize = settings.autoResize;\n        autoResize = typeof autoResize !== 'undefined' ? autoResize : !width && !height;\n        width = width || minWidth;\n        height = height || minHeight;\n        var deltaW = borderBox.left + borderBox.right;\n        var deltaH = borderBox.top + borderBox.bottom;\n        var maxW = settings.maxWidth || 65535;\n        var maxH = settings.maxHeight || 65535;\n        self._layoutRect = layoutRect = {\n          x: settings.x || 0,\n          y: settings.y || 0,\n          w: width,\n          h: height,\n          deltaW: deltaW,\n          deltaH: deltaH,\n          contentW: width - deltaW,\n          contentH: height - deltaH,\n          innerW: width - deltaW,\n          innerH: height - deltaH,\n          startMinWidth: startMinWidth || 0,\n          startMinHeight: startMinHeight || 0,\n          minW: Math.min(minWidth, maxW),\n          minH: Math.min(minHeight, maxH),\n          maxW: maxW,\n          maxH: maxH,\n          autoResize: autoResize,\n          scrollW: 0\n        };\n        self._lastLayoutRect = {};\n        return layoutRect;\n      },\n      layoutRect: function (newRect) {\n        var self = this;\n        var curRect = self._layoutRect, lastLayoutRect, size, deltaWidth, deltaHeight, repaintControls;\n        if (!curRect) {\n          curRect = self.initLayoutRect();\n        }\n        if (newRect) {\n          deltaWidth = curRect.deltaW;\n          deltaHeight = curRect.deltaH;\n          if (newRect.x !== undefined) {\n            curRect.x = newRect.x;\n          }\n          if (newRect.y !== undefined) {\n            curRect.y = newRect.y;\n          }\n          if (newRect.minW !== undefined) {\n            curRect.minW = newRect.minW;\n          }\n          if (newRect.minH !== undefined) {\n            curRect.minH = newRect.minH;\n          }\n          size = newRect.w;\n          if (size !== undefined) {\n            size = size < curRect.minW ? curRect.minW : size;\n            size = size > curRect.maxW ? curRect.maxW : size;\n            curRect.w = size;\n            curRect.innerW = size - deltaWidth;\n          }\n          size = newRect.h;\n          if (size !== undefined) {\n            size = size < curRect.minH ? curRect.minH : size;\n            size = size > curRect.maxH ? curRect.maxH : size;\n            curRect.h = size;\n            curRect.innerH = size - deltaHeight;\n          }\n          size = newRect.innerW;\n          if (size !== undefined) {\n            size = size < curRect.minW - deltaWidth ? curRect.minW - deltaWidth : size;\n            size = size > curRect.maxW - deltaWidth ? curRect.maxW - deltaWidth : size;\n            curRect.innerW = size;\n            curRect.w = size + deltaWidth;\n          }\n          size = newRect.innerH;\n          if (size !== undefined) {\n            size = size < curRect.minH - deltaHeight ? curRect.minH - deltaHeight : size;\n            size = size > curRect.maxH - deltaHeight ? curRect.maxH - deltaHeight : size;\n            curRect.innerH = size;\n            curRect.h = size + deltaHeight;\n          }\n          if (newRect.contentW !== undefined) {\n            curRect.contentW = newRect.contentW;\n          }\n          if (newRect.contentH !== undefined) {\n            curRect.contentH = newRect.contentH;\n          }\n          lastLayoutRect = self._lastLayoutRect;\n          if (lastLayoutRect.x !== curRect.x || lastLayoutRect.y !== curRect.y || lastLayoutRect.w !== curRect.w || lastLayoutRect.h !== curRect.h) {\n            repaintControls = Control.repaintControls;\n            if (repaintControls) {\n              if (repaintControls.map && !repaintControls.map[self._id]) {\n                repaintControls.push(self);\n                repaintControls.map[self._id] = true;\n              }\n            }\n            lastLayoutRect.x = curRect.x;\n            lastLayoutRect.y = curRect.y;\n            lastLayoutRect.w = curRect.w;\n            lastLayoutRect.h = curRect.h;\n          }\n          return self;\n        }\n        return curRect;\n      },\n      repaint: function () {\n        var self = this;\n        var style, bodyStyle, bodyElm, rect, borderBox;\n        var borderW, borderH, lastRepaintRect, round, value;\n        round = !domGlobals.document.createRange ? Math.round : function (value) {\n          return value;\n        };\n        style = self.getEl().style;\n        rect = self._layoutRect;\n        lastRepaintRect = self._lastRepaintRect || {};\n        borderBox = self.borderBox;\n        borderW = borderBox.left + borderBox.right;\n        borderH = borderBox.top + borderBox.bottom;\n        if (rect.x !== lastRepaintRect.x) {\n          style.left = round(rect.x) + 'px';\n          lastRepaintRect.x = rect.x;\n        }\n        if (rect.y !== lastRepaintRect.y) {\n          style.top = round(rect.y) + 'px';\n          lastRepaintRect.y = rect.y;\n        }\n        if (rect.w !== lastRepaintRect.w) {\n          value = round(rect.w - borderW);\n          style.width = (value >= 0 ? value : 0) + 'px';\n          lastRepaintRect.w = rect.w;\n        }\n        if (rect.h !== lastRepaintRect.h) {\n          value = round(rect.h - borderH);\n          style.height = (value >= 0 ? value : 0) + 'px';\n          lastRepaintRect.h = rect.h;\n        }\n        if (self._hasBody && rect.innerW !== lastRepaintRect.innerW) {\n          value = round(rect.innerW);\n          bodyElm = self.getEl('body');\n          if (bodyElm) {\n            bodyStyle = bodyElm.style;\n            bodyStyle.width = (value >= 0 ? value : 0) + 'px';\n          }\n          lastRepaintRect.innerW = rect.innerW;\n        }\n        if (self._hasBody && rect.innerH !== lastRepaintRect.innerH) {\n          value = round(rect.innerH);\n          bodyElm = bodyElm || self.getEl('body');\n          if (bodyElm) {\n            bodyStyle = bodyStyle || bodyElm.style;\n            bodyStyle.height = (value >= 0 ? value : 0) + 'px';\n          }\n          lastRepaintRect.innerH = rect.innerH;\n        }\n        self._lastRepaintRect = lastRepaintRect;\n        self.fire('repaint', {}, false);\n      },\n      updateLayoutRect: function () {\n        var self = this;\n        self.parent()._lastRect = null;\n        funcs.css(self.getEl(), {\n          width: '',\n          height: ''\n        });\n        self._layoutRect = self._lastRepaintRect = self._lastLayoutRect = null;\n        self.initLayoutRect();\n      },\n      on: function (name, callback) {\n        var self = this;\n        function resolveCallbackName(name) {\n          var callback, scope;\n          if (typeof name !== 'string') {\n            return name;\n          }\n          return function (e) {\n            if (!callback) {\n              self.parentsAndSelf().each(function (ctrl) {\n                var callbacks = ctrl.settings.callbacks;\n                if (callbacks && (callback = callbacks[name])) {\n                  scope = ctrl;\n                  return false;\n                }\n              });\n            }\n            if (!callback) {\n              e.action = name;\n              this.fire('execute', e);\n              return;\n            }\n            return callback.call(scope, e);\n          };\n        }\n        getEventDispatcher(self).on(name, resolveCallbackName(callback));\n        return self;\n      },\n      off: function (name, callback) {\n        getEventDispatcher(this).off(name, callback);\n        return this;\n      },\n      fire: function (name, args, bubble) {\n        var self = this;\n        args = args || {};\n        if (!args.control) {\n          args.control = self;\n        }\n        args = getEventDispatcher(self).fire(name, args);\n        if (bubble !== false && self.parent) {\n          var parent = self.parent();\n          while (parent && !args.isPropagationStopped()) {\n            parent.fire(name, args, false);\n            parent = parent.parent();\n          }\n        }\n        return args;\n      },\n      hasEventListeners: function (name) {\n        return getEventDispatcher(this).has(name);\n      },\n      parents: function (selector) {\n        var self = this;\n        var ctrl, parents = new Collection$2();\n        for (ctrl = self.parent(); ctrl; ctrl = ctrl.parent()) {\n          parents.add(ctrl);\n        }\n        if (selector) {\n          parents = parents.filter(selector);\n        }\n        return parents;\n      },\n      parentsAndSelf: function (selector) {\n        return new Collection$2(this).add(this.parents(selector));\n      },\n      next: function () {\n        var parentControls = this.parent().items();\n        return parentControls[parentControls.indexOf(this) + 1];\n      },\n      prev: function () {\n        var parentControls = this.parent().items();\n        return parentControls[parentControls.indexOf(this) - 1];\n      },\n      innerHtml: function (html) {\n        this.$el.html(html);\n        return this;\n      },\n      getEl: function (suffix) {\n        var id = suffix ? this._id + '-' + suffix : this._id;\n        if (!this._elmCache[id]) {\n          this._elmCache[id] = global$9('#' + id)[0];\n        }\n        return this._elmCache[id];\n      },\n      show: function () {\n        return this.visible(true);\n      },\n      hide: function () {\n        return this.visible(false);\n      },\n      focus: function () {\n        try {\n          this.getEl().focus();\n        } catch (ex) {\n        }\n        return this;\n      },\n      blur: function () {\n        this.getEl().blur();\n        return this;\n      },\n      aria: function (name, value) {\n        var self = this, elm = self.getEl(self.ariaTarget);\n        if (typeof value === 'undefined') {\n          return self._aria[name];\n        }\n        self._aria[name] = value;\n        if (self.state.get('rendered')) {\n          elm.setAttribute(name === 'role' ? name : 'aria-' + name, value);\n        }\n        return self;\n      },\n      encode: function (text, translate) {\n        if (translate !== false) {\n          text = this.translate(text);\n        }\n        return (text || '').replace(/[&<>\"]/g, function (match) {\n          return '&#' + match.charCodeAt(0) + ';';\n        });\n      },\n      translate: function (text) {\n        return Control.translate ? Control.translate(text) : text;\n      },\n      before: function (items) {\n        var self = this, parent = self.parent();\n        if (parent) {\n          parent.insert(items, parent.items().indexOf(self), true);\n        }\n        return self;\n      },\n      after: function (items) {\n        var self = this, parent = self.parent();\n        if (parent) {\n          parent.insert(items, parent.items().indexOf(self));\n        }\n        return self;\n      },\n      remove: function () {\n        var self = this;\n        var elm = self.getEl();\n        var parent = self.parent();\n        var newItems, i;\n        if (self.items) {\n          var controls = self.items().toArray();\n          i = controls.length;\n          while (i--) {\n            controls[i].remove();\n          }\n        }\n        if (parent && parent.items) {\n          newItems = [];\n          parent.items().each(function (item) {\n            if (item !== self) {\n              newItems.push(item);\n            }\n          });\n          parent.items().set(newItems);\n          parent._lastRect = null;\n        }\n        if (self._eventsRoot && self._eventsRoot === self) {\n          global$9(elm).off();\n        }\n        var lookup = self.getRoot().controlIdLookup;\n        if (lookup) {\n          delete lookup[self._id];\n        }\n        if (elm && elm.parentNode) {\n          elm.parentNode.removeChild(elm);\n        }\n        self.state.set('rendered', false);\n        self.state.destroy();\n        self.fire('remove');\n        return self;\n      },\n      renderBefore: function (elm) {\n        global$9(elm).before(this.renderHtml());\n        this.postRender();\n        return this;\n      },\n      renderTo: function (elm) {\n        global$9(elm || this.getContainerElm()).append(this.renderHtml());\n        this.postRender();\n        return this;\n      },\n      preRender: function () {\n      },\n      render: function () {\n      },\n      renderHtml: function () {\n        return '<div id=\"' + this._id + '\" class=\"' + this.classes + '\"></div>';\n      },\n      postRender: function () {\n        var self = this;\n        var settings = self.settings;\n        var elm, box, parent, name, parentEventsRoot;\n        self.$el = global$9(self.getEl());\n        self.state.set('rendered', true);\n        for (name in settings) {\n          if (name.indexOf('on') === 0) {\n            self.on(name.substr(2), settings[name]);\n          }\n        }\n        if (self._eventsRoot) {\n          for (parent = self.parent(); !parentEventsRoot && parent; parent = parent.parent()) {\n            parentEventsRoot = parent._eventsRoot;\n          }\n          if (parentEventsRoot) {\n            for (name in parentEventsRoot._nativeEvents) {\n              self._nativeEvents[name] = true;\n            }\n          }\n        }\n        bindPendingEvents(self);\n        if (settings.style) {\n          elm = self.getEl();\n          if (elm) {\n            elm.setAttribute('style', settings.style);\n            elm.style.cssText = settings.style;\n          }\n        }\n        if (self.settings.border) {\n          box = self.borderBox;\n          self.$el.css({\n            'border-top-width': box.top,\n            'border-right-width': box.right,\n            'border-bottom-width': box.bottom,\n            'border-left-width': box.left\n          });\n        }\n        var root = self.getRoot();\n        if (!root.controlIdLookup) {\n          root.controlIdLookup = {};\n        }\n        root.controlIdLookup[self._id] = self;\n        for (var key in self._aria) {\n          self.aria(key, self._aria[key]);\n        }\n        if (self.state.get('visible') === false) {\n          self.getEl().style.display = 'none';\n        }\n        self.bindStates();\n        self.state.on('change:visible', function (e) {\n          var state = e.value;\n          var parentCtrl;\n          if (self.state.get('rendered')) {\n            self.getEl().style.display = state === false ? 'none' : '';\n            self.getEl().getBoundingClientRect();\n          }\n          parentCtrl = self.parent();\n          if (parentCtrl) {\n            parentCtrl._lastRect = null;\n          }\n          self.fire(state ? 'show' : 'hide');\n          ReflowQueue.add(self);\n        });\n        self.fire('postrender', {}, false);\n      },\n      bindStates: function () {\n      },\n      scrollIntoView: function (align) {\n        function getOffset(elm, rootElm) {\n          var x, y, parent = elm;\n          x = y = 0;\n          while (parent && parent !== rootElm && parent.nodeType) {\n            x += parent.offsetLeft || 0;\n            y += parent.offsetTop || 0;\n            parent = parent.offsetParent;\n          }\n          return {\n            x: x,\n            y: y\n          };\n        }\n        var elm = this.getEl(), parentElm = elm.parentNode;\n        var x, y, width, height, parentWidth, parentHeight;\n        var pos = getOffset(elm, parentElm);\n        x = pos.x;\n        y = pos.y;\n        width = elm.offsetWidth;\n        height = elm.offsetHeight;\n        parentWidth = parentElm.clientWidth;\n        parentHeight = parentElm.clientHeight;\n        if (align === 'end') {\n          x -= parentWidth - width;\n          y -= parentHeight - height;\n        } else if (align === 'center') {\n          x -= parentWidth / 2 - width / 2;\n          y -= parentHeight / 2 - height / 2;\n        }\n        parentElm.scrollLeft = x;\n        parentElm.scrollTop = y;\n        return this;\n      },\n      getRoot: function () {\n        var ctrl = this, rootControl;\n        var parents = [];\n        while (ctrl) {\n          if (ctrl.rootControl) {\n            rootControl = ctrl.rootControl;\n            break;\n          }\n          parents.push(ctrl);\n          rootControl = ctrl;\n          ctrl = ctrl.parent();\n        }\n        if (!rootControl) {\n          rootControl = this;\n        }\n        var i = parents.length;\n        while (i--) {\n          parents[i].rootControl = rootControl;\n        }\n        return rootControl;\n      },\n      reflow: function () {\n        ReflowQueue.remove(this);\n        var parent = this.parent();\n        if (parent && parent._layout && !parent._layout.isNative()) {\n          parent.reflow();\n        }\n        return this;\n      }\n    };\n    global$2.each('text title visible disabled active value'.split(' '), function (name) {\n      proto$1[name] = function (value) {\n        if (arguments.length === 0) {\n          return this.state.get(name);\n        }\n        if (typeof value !== 'undefined') {\n          this.state.set(name, value);\n        }\n        return this;\n      };\n    });\n    Control = global$a.extend(proto$1);\n    function getEventDispatcher(obj) {\n      if (!obj._eventDispatcher) {\n        obj._eventDispatcher = new global$b({\n          scope: obj,\n          toggleEvent: function (name, state) {\n            if (state && global$b.isNative(name)) {\n              if (!obj._nativeEvents) {\n                obj._nativeEvents = {};\n              }\n              obj._nativeEvents[name] = true;\n              if (obj.state.get('rendered')) {\n                bindPendingEvents(obj);\n              }\n            }\n          }\n        });\n      }\n      return obj._eventDispatcher;\n    }\n    function bindPendingEvents(eventCtrl) {\n      var i, l, parents, eventRootCtrl, nativeEvents, name;\n      function delegate(e) {\n        var control = eventCtrl.getParentCtrl(e.target);\n        if (control) {\n          control.fire(e.type, e);\n        }\n      }\n      function mouseLeaveHandler() {\n        var ctrl = eventRootCtrl._lastHoverCtrl;\n        if (ctrl) {\n          ctrl.fire('mouseleave', { target: ctrl.getEl() });\n          ctrl.parents().each(function (ctrl) {\n            ctrl.fire('mouseleave', { target: ctrl.getEl() });\n          });\n          eventRootCtrl._lastHoverCtrl = null;\n        }\n      }\n      function mouseEnterHandler(e) {\n        var ctrl = eventCtrl.getParentCtrl(e.target), lastCtrl = eventRootCtrl._lastHoverCtrl, idx = 0, i, parents, lastParents;\n        if (ctrl !== lastCtrl) {\n          eventRootCtrl._lastHoverCtrl = ctrl;\n          parents = ctrl.parents().toArray().reverse();\n          parents.push(ctrl);\n          if (lastCtrl) {\n            lastParents = lastCtrl.parents().toArray().reverse();\n            lastParents.push(lastCtrl);\n            for (idx = 0; idx < lastParents.length; idx++) {\n              if (parents[idx] !== lastParents[idx]) {\n                break;\n              }\n            }\n            for (i = lastParents.length - 1; i >= idx; i--) {\n              lastCtrl = lastParents[i];\n              lastCtrl.fire('mouseleave', { target: lastCtrl.getEl() });\n            }\n          }\n          for (i = idx; i < parents.length; i++) {\n            ctrl = parents[i];\n            ctrl.fire('mouseenter', { target: ctrl.getEl() });\n          }\n        }\n      }\n      function fixWheelEvent(e) {\n        e.preventDefault();\n        if (e.type === 'mousewheel') {\n          e.deltaY = -1 / 40 * e.wheelDelta;\n          if (e.wheelDeltaX) {\n            e.deltaX = -1 / 40 * e.wheelDeltaX;\n          }\n        } else {\n          e.deltaX = 0;\n          e.deltaY = e.detail;\n        }\n        e = eventCtrl.fire('wheel', e);\n      }\n      nativeEvents = eventCtrl._nativeEvents;\n      if (nativeEvents) {\n        parents = eventCtrl.parents().toArray();\n        parents.unshift(eventCtrl);\n        for (i = 0, l = parents.length; !eventRootCtrl && i < l; i++) {\n          eventRootCtrl = parents[i]._eventsRoot;\n        }\n        if (!eventRootCtrl) {\n          eventRootCtrl = parents[parents.length - 1] || eventCtrl;\n        }\n        eventCtrl._eventsRoot = eventRootCtrl;\n        for (l = i, i = 0; i < l; i++) {\n          parents[i]._eventsRoot = eventRootCtrl;\n        }\n        var eventRootDelegates = eventRootCtrl._delegates;\n        if (!eventRootDelegates) {\n          eventRootDelegates = eventRootCtrl._delegates = {};\n        }\n        for (name in nativeEvents) {\n          if (!nativeEvents) {\n            return false;\n          }\n          if (name === 'wheel' && !hasWheelEventSupport) {\n            if (hasMouseWheelEventSupport) {\n              global$9(eventCtrl.getEl()).on('mousewheel', fixWheelEvent);\n            } else {\n              global$9(eventCtrl.getEl()).on('DOMMouseScroll', fixWheelEvent);\n            }\n            continue;\n          }\n          if (name === 'mouseenter' || name === 'mouseleave') {\n            if (!eventRootCtrl._hasMouseEnter) {\n              global$9(eventRootCtrl.getEl()).on('mouseleave', mouseLeaveHandler).on('mouseover', mouseEnterHandler);\n              eventRootCtrl._hasMouseEnter = 1;\n            }\n          } else if (!eventRootDelegates[name]) {\n            global$9(eventRootCtrl.getEl()).on(name, delegate);\n            eventRootDelegates[name] = true;\n          }\n          nativeEvents[name] = false;\n        }\n      }\n    }\n    var Control$1 = Control;\n\n    var hasTabstopData = function (elm) {\n      return elm.getAttribute('data-mce-tabstop') ? true : false;\n    };\n    function KeyboardNavigation (settings) {\n      var root = settings.root;\n      var focusedElement, focusedControl;\n      function isElement(node) {\n        return node && node.nodeType === 1;\n      }\n      try {\n        focusedElement = domGlobals.document.activeElement;\n      } catch (ex) {\n        focusedElement = domGlobals.document.body;\n      }\n      focusedControl = root.getParentCtrl(focusedElement);\n      function getRole(elm) {\n        elm = elm || focusedElement;\n        if (isElement(elm)) {\n          return elm.getAttribute('role');\n        }\n        return null;\n      }\n      function getParentRole(elm) {\n        var role, parent = elm || focusedElement;\n        while (parent = parent.parentNode) {\n          if (role = getRole(parent)) {\n            return role;\n          }\n        }\n      }\n      function getAriaProp(name) {\n        var elm = focusedElement;\n        if (isElement(elm)) {\n          return elm.getAttribute('aria-' + name);\n        }\n      }\n      function isTextInputElement(elm) {\n        var tagName = elm.tagName.toUpperCase();\n        return tagName === 'INPUT' || tagName === 'TEXTAREA' || tagName === 'SELECT';\n      }\n      function canFocus(elm) {\n        if (isTextInputElement(elm) && !elm.hidden) {\n          return true;\n        }\n        if (hasTabstopData(elm)) {\n          return true;\n        }\n        if (/^(button|menuitem|checkbox|tab|menuitemcheckbox|option|gridcell|slider)$/.test(getRole(elm))) {\n          return true;\n        }\n        return false;\n      }\n      function getFocusElements(elm) {\n        var elements = [];\n        function collect(elm) {\n          if (elm.nodeType !== 1 || elm.style.display === 'none' || elm.disabled) {\n            return;\n          }\n          if (canFocus(elm)) {\n            elements.push(elm);\n          }\n          for (var i = 0; i < elm.childNodes.length; i++) {\n            collect(elm.childNodes[i]);\n          }\n        }\n        collect(elm || root.getEl());\n        return elements;\n      }\n      function getNavigationRoot(targetControl) {\n        var navigationRoot, controls;\n        targetControl = targetControl || focusedControl;\n        controls = targetControl.parents().toArray();\n        controls.unshift(targetControl);\n        for (var i = 0; i < controls.length; i++) {\n          navigationRoot = controls[i];\n          if (navigationRoot.settings.ariaRoot) {\n            break;\n          }\n        }\n        return navigationRoot;\n      }\n      function focusFirst(targetControl) {\n        var navigationRoot = getNavigationRoot(targetControl);\n        var focusElements = getFocusElements(navigationRoot.getEl());\n        if (navigationRoot.settings.ariaRemember && 'lastAriaIndex' in navigationRoot) {\n          moveFocusToIndex(navigationRoot.lastAriaIndex, focusElements);\n        } else {\n          moveFocusToIndex(0, focusElements);\n        }\n      }\n      function moveFocusToIndex(idx, elements) {\n        if (idx < 0) {\n          idx = elements.length - 1;\n        } else if (idx >= elements.length) {\n          idx = 0;\n        }\n        if (elements[idx]) {\n          elements[idx].focus();\n        }\n        return idx;\n      }\n      function moveFocus(dir, elements) {\n        var idx = -1;\n        var navigationRoot = getNavigationRoot();\n        elements = elements || getFocusElements(navigationRoot.getEl());\n        for (var i = 0; i < elements.length; i++) {\n          if (elements[i] === focusedElement) {\n            idx = i;\n          }\n        }\n        idx += dir;\n        navigationRoot.lastAriaIndex = moveFocusToIndex(idx, elements);\n      }\n      function left() {\n        var parentRole = getParentRole();\n        if (parentRole === 'tablist') {\n          moveFocus(-1, getFocusElements(focusedElement.parentNode));\n        } else if (focusedControl.parent().submenu) {\n          cancel();\n        } else {\n          moveFocus(-1);\n        }\n      }\n      function right() {\n        var role = getRole(), parentRole = getParentRole();\n        if (parentRole === 'tablist') {\n          moveFocus(1, getFocusElements(focusedElement.parentNode));\n        } else if (role === 'menuitem' && parentRole === 'menu' && getAriaProp('haspopup')) {\n          enter();\n        } else {\n          moveFocus(1);\n        }\n      }\n      function up() {\n        moveFocus(-1);\n      }\n      function down() {\n        var role = getRole(), parentRole = getParentRole();\n        if (role === 'menuitem' && parentRole === 'menubar') {\n          enter();\n        } else if (role === 'button' && getAriaProp('haspopup')) {\n          enter({ key: 'down' });\n        } else {\n          moveFocus(1);\n        }\n      }\n      function tab(e) {\n        var parentRole = getParentRole();\n        if (parentRole === 'tablist') {\n          var elm = getFocusElements(focusedControl.getEl('body'))[0];\n          if (elm) {\n            elm.focus();\n          }\n        } else {\n          moveFocus(e.shiftKey ? -1 : 1);\n        }\n      }\n      function cancel() {\n        focusedControl.fire('cancel');\n      }\n      function enter(aria) {\n        aria = aria || {};\n        focusedControl.fire('click', {\n          target: focusedElement,\n          aria: aria\n        });\n      }\n      root.on('keydown', function (e) {\n        function handleNonTabOrEscEvent(e, handler) {\n          if (isTextInputElement(focusedElement) || hasTabstopData(focusedElement)) {\n            return;\n          }\n          if (getRole(focusedElement) === 'slider') {\n            return;\n          }\n          if (handler(e) !== false) {\n            e.preventDefault();\n          }\n        }\n        if (e.isDefaultPrevented()) {\n          return;\n        }\n        switch (e.keyCode) {\n        case 37:\n          handleNonTabOrEscEvent(e, left);\n          break;\n        case 39:\n          handleNonTabOrEscEvent(e, right);\n          break;\n        case 38:\n          handleNonTabOrEscEvent(e, up);\n          break;\n        case 40:\n          handleNonTabOrEscEvent(e, down);\n          break;\n        case 27:\n          cancel();\n          break;\n        case 14:\n        case 13:\n        case 32:\n          handleNonTabOrEscEvent(e, enter);\n          break;\n        case 9:\n          tab(e);\n          e.preventDefault();\n          break;\n        }\n      });\n      root.on('focusin', function (e) {\n        focusedElement = e.target;\n        focusedControl = e.control;\n      });\n      return { focusFirst: focusFirst };\n    }\n\n    var selectorCache = {};\n    var Container = Control$1.extend({\n      init: function (settings) {\n        var self = this;\n        self._super(settings);\n        settings = self.settings;\n        if (settings.fixed) {\n          self.state.set('fixed', true);\n        }\n        self._items = new Collection$2();\n        if (self.isRtl()) {\n          self.classes.add('rtl');\n        }\n        self.bodyClasses = new ClassList(function () {\n          if (self.state.get('rendered')) {\n            self.getEl('body').className = this.toString();\n          }\n        });\n        self.bodyClasses.prefix = self.classPrefix;\n        self.classes.add('container');\n        self.bodyClasses.add('container-body');\n        if (settings.containerCls) {\n          self.classes.add(settings.containerCls);\n        }\n        self._layout = global$4.create((settings.layout || '') + 'layout');\n        if (self.settings.items) {\n          self.add(self.settings.items);\n        } else {\n          self.add(self.render());\n        }\n        self._hasBody = true;\n      },\n      items: function () {\n        return this._items;\n      },\n      find: function (selector) {\n        selector = selectorCache[selector] = selectorCache[selector] || new Selector(selector);\n        return selector.find(this);\n      },\n      add: function (items) {\n        var self = this;\n        self.items().add(self.create(items)).parent(self);\n        return self;\n      },\n      focus: function (keyboard) {\n        var self = this;\n        var focusCtrl, keyboardNav, items;\n        if (keyboard) {\n          keyboardNav = self.keyboardNav || self.parents().eq(-1)[0].keyboardNav;\n          if (keyboardNav) {\n            keyboardNav.focusFirst(self);\n            return;\n          }\n        }\n        items = self.find('*');\n        if (self.statusbar) {\n          items.add(self.statusbar.items());\n        }\n        items.each(function (ctrl) {\n          if (ctrl.settings.autofocus) {\n            focusCtrl = null;\n            return false;\n          }\n          if (ctrl.canFocus) {\n            focusCtrl = focusCtrl || ctrl;\n          }\n        });\n        if (focusCtrl) {\n          focusCtrl.focus();\n        }\n        return self;\n      },\n      replace: function (oldItem, newItem) {\n        var ctrlElm;\n        var items = this.items();\n        var i = items.length;\n        while (i--) {\n          if (items[i] === oldItem) {\n            items[i] = newItem;\n            break;\n          }\n        }\n        if (i >= 0) {\n          ctrlElm = newItem.getEl();\n          if (ctrlElm) {\n            ctrlElm.parentNode.removeChild(ctrlElm);\n          }\n          ctrlElm = oldItem.getEl();\n          if (ctrlElm) {\n            ctrlElm.parentNode.removeChild(ctrlElm);\n          }\n        }\n        newItem.parent(this);\n      },\n      create: function (items) {\n        var self = this;\n        var settings;\n        var ctrlItems = [];\n        if (!global$2.isArray(items)) {\n          items = [items];\n        }\n        global$2.each(items, function (item) {\n          if (item) {\n            if (!(item instanceof Control$1)) {\n              if (typeof item === 'string') {\n                item = { type: item };\n              }\n              settings = global$2.extend({}, self.settings.defaults, item);\n              item.type = settings.type = settings.type || item.type || self.settings.defaultType || (settings.defaults ? settings.defaults.type : null);\n              item = global$4.create(settings);\n            }\n            ctrlItems.push(item);\n          }\n        });\n        return ctrlItems;\n      },\n      renderNew: function () {\n        var self = this;\n        self.items().each(function (ctrl, index) {\n          var containerElm;\n          ctrl.parent(self);\n          if (!ctrl.state.get('rendered')) {\n            containerElm = self.getEl('body');\n            if (containerElm.hasChildNodes() && index <= containerElm.childNodes.length - 1) {\n              global$9(containerElm.childNodes[index]).before(ctrl.renderHtml());\n            } else {\n              global$9(containerElm).append(ctrl.renderHtml());\n            }\n            ctrl.postRender();\n            ReflowQueue.add(ctrl);\n          }\n        });\n        self._layout.applyClasses(self.items().filter(':visible'));\n        self._lastRect = null;\n        return self;\n      },\n      append: function (items) {\n        return this.add(items).renderNew();\n      },\n      prepend: function (items) {\n        var self = this;\n        self.items().set(self.create(items).concat(self.items().toArray()));\n        return self.renderNew();\n      },\n      insert: function (items, index, before) {\n        var self = this;\n        var curItems, beforeItems, afterItems;\n        items = self.create(items);\n        curItems = self.items();\n        if (!before && index < curItems.length - 1) {\n          index += 1;\n        }\n        if (index >= 0 && index < curItems.length) {\n          beforeItems = curItems.slice(0, index).toArray();\n          afterItems = curItems.slice(index).toArray();\n          curItems.set(beforeItems.concat(items, afterItems));\n        }\n        return self.renderNew();\n      },\n      fromJSON: function (data) {\n        var self = this;\n        for (var name in data) {\n          self.find('#' + name).value(data[name]);\n        }\n        return self;\n      },\n      toJSON: function () {\n        var self = this, data = {};\n        self.find('*').each(function (ctrl) {\n          var name = ctrl.name(), value = ctrl.value();\n          if (name && typeof value !== 'undefined') {\n            data[name] = value;\n          }\n        });\n        return data;\n      },\n      renderHtml: function () {\n        var self = this, layout = self._layout, role = this.settings.role;\n        self.preRender();\n        layout.preRender(self);\n        return '<div id=\"' + self._id + '\" class=\"' + self.classes + '\"' + (role ? ' role=\"' + this.settings.role + '\"' : '') + '>' + '<div id=\"' + self._id + '-body\" class=\"' + self.bodyClasses + '\">' + (self.settings.html || '') + layout.renderHtml(self) + '</div>' + '</div>';\n      },\n      postRender: function () {\n        var self = this;\n        var box;\n        self.items().exec('postRender');\n        self._super();\n        self._layout.postRender(self);\n        self.state.set('rendered', true);\n        if (self.settings.style) {\n          self.$el.css(self.settings.style);\n        }\n        if (self.settings.border) {\n          box = self.borderBox;\n          self.$el.css({\n            'border-top-width': box.top,\n            'border-right-width': box.right,\n            'border-bottom-width': box.bottom,\n            'border-left-width': box.left\n          });\n        }\n        if (!self.parent()) {\n          self.keyboardNav = KeyboardNavigation({ root: self });\n        }\n        return self;\n      },\n      initLayoutRect: function () {\n        var self = this, layoutRect = self._super();\n        self._layout.recalc(self);\n        return layoutRect;\n      },\n      recalc: function () {\n        var self = this;\n        var rect = self._layoutRect;\n        var lastRect = self._lastRect;\n        if (!lastRect || lastRect.w !== rect.w || lastRect.h !== rect.h) {\n          self._layout.recalc(self);\n          rect = self.layoutRect();\n          self._lastRect = {\n            x: rect.x,\n            y: rect.y,\n            w: rect.w,\n            h: rect.h\n          };\n          return true;\n        }\n      },\n      reflow: function () {\n        var i;\n        ReflowQueue.remove(this);\n        if (this.visible()) {\n          Control$1.repaintControls = [];\n          Control$1.repaintControls.map = {};\n          this.recalc();\n          i = Control$1.repaintControls.length;\n          while (i--) {\n            Control$1.repaintControls[i].repaint();\n          }\n          if (this.settings.layout !== 'flow' && this.settings.layout !== 'stack') {\n            this.repaint();\n          }\n          Control$1.repaintControls = [];\n        }\n        return this;\n      }\n    });\n\n    function getDocumentSize(doc) {\n      var documentElement, body, scrollWidth, clientWidth;\n      var offsetWidth, scrollHeight, clientHeight, offsetHeight;\n      var max = Math.max;\n      documentElement = doc.documentElement;\n      body = doc.body;\n      scrollWidth = max(documentElement.scrollWidth, body.scrollWidth);\n      clientWidth = max(documentElement.clientWidth, body.clientWidth);\n      offsetWidth = max(documentElement.offsetWidth, body.offsetWidth);\n      scrollHeight = max(documentElement.scrollHeight, body.scrollHeight);\n      clientHeight = max(documentElement.clientHeight, body.clientHeight);\n      offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\n      return {\n        width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\n        height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\n      };\n    }\n    function updateWithTouchData(e) {\n      var keys, i;\n      if (e.changedTouches) {\n        keys = 'screenX screenY pageX pageY clientX clientY'.split(' ');\n        for (i = 0; i < keys.length; i++) {\n          e[keys[i]] = e.changedTouches[0][keys[i]];\n        }\n      }\n    }\n    function DragHelper (id, settings) {\n      var $eventOverlay;\n      var doc = settings.document || domGlobals.document;\n      var downButton;\n      var start, stop, drag, startX, startY;\n      settings = settings || {};\n      var handleElement = doc.getElementById(settings.handle || id);\n      start = function (e) {\n        var docSize = getDocumentSize(doc);\n        var handleElm, cursor;\n        updateWithTouchData(e);\n        e.preventDefault();\n        downButton = e.button;\n        handleElm = handleElement;\n        startX = e.screenX;\n        startY = e.screenY;\n        if (domGlobals.window.getComputedStyle) {\n          cursor = domGlobals.window.getComputedStyle(handleElm, null).getPropertyValue('cursor');\n        } else {\n          cursor = handleElm.runtimeStyle.cursor;\n        }\n        $eventOverlay = global$9('<div></div>').css({\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: docSize.width,\n          height: docSize.height,\n          zIndex: 2147483647,\n          opacity: 0.0001,\n          cursor: cursor\n        }).appendTo(doc.body);\n        global$9(doc).on('mousemove touchmove', drag).on('mouseup touchend', stop);\n        settings.start(e);\n      };\n      drag = function (e) {\n        updateWithTouchData(e);\n        if (e.button !== downButton) {\n          return stop(e);\n        }\n        e.deltaX = e.screenX - startX;\n        e.deltaY = e.screenY - startY;\n        e.preventDefault();\n        settings.drag(e);\n      };\n      stop = function (e) {\n        updateWithTouchData(e);\n        global$9(doc).off('mousemove touchmove', drag).off('mouseup touchend', stop);\n        $eventOverlay.remove();\n        if (settings.stop) {\n          settings.stop(e);\n        }\n      };\n      this.destroy = function () {\n        global$9(handleElement).off();\n      };\n      global$9(handleElement).on('mousedown touchstart', start);\n    }\n\n    var Scrollable = {\n      init: function () {\n        var self = this;\n        self.on('repaint', self.renderScroll);\n      },\n      renderScroll: function () {\n        var self = this, margin = 2;\n        function repaintScroll() {\n          var hasScrollH, hasScrollV, bodyElm;\n          function repaintAxis(axisName, posName, sizeName, contentSizeName, hasScroll, ax) {\n            var containerElm, scrollBarElm, scrollThumbElm;\n            var containerSize, scrollSize, ratio, rect;\n            var posNameLower, sizeNameLower;\n            scrollBarElm = self.getEl('scroll' + axisName);\n            if (scrollBarElm) {\n              posNameLower = posName.toLowerCase();\n              sizeNameLower = sizeName.toLowerCase();\n              global$9(self.getEl('absend')).css(posNameLower, self.layoutRect()[contentSizeName] - 1);\n              if (!hasScroll) {\n                global$9(scrollBarElm).css('display', 'none');\n                return;\n              }\n              global$9(scrollBarElm).css('display', 'block');\n              containerElm = self.getEl('body');\n              scrollThumbElm = self.getEl('scroll' + axisName + 't');\n              containerSize = containerElm['client' + sizeName] - margin * 2;\n              containerSize -= hasScrollH && hasScrollV ? scrollBarElm['client' + ax] : 0;\n              scrollSize = containerElm['scroll' + sizeName];\n              ratio = containerSize / scrollSize;\n              rect = {};\n              rect[posNameLower] = containerElm['offset' + posName] + margin;\n              rect[sizeNameLower] = containerSize;\n              global$9(scrollBarElm).css(rect);\n              rect = {};\n              rect[posNameLower] = containerElm['scroll' + posName] * ratio;\n              rect[sizeNameLower] = containerSize * ratio;\n              global$9(scrollThumbElm).css(rect);\n            }\n          }\n          bodyElm = self.getEl('body');\n          hasScrollH = bodyElm.scrollWidth > bodyElm.clientWidth;\n          hasScrollV = bodyElm.scrollHeight > bodyElm.clientHeight;\n          repaintAxis('h', 'Left', 'Width', 'contentW', hasScrollH, 'Height');\n          repaintAxis('v', 'Top', 'Height', 'contentH', hasScrollV, 'Width');\n        }\n        function addScroll() {\n          function addScrollAxis(axisName, posName, sizeName, deltaPosName, ax) {\n            var scrollStart;\n            var axisId = self._id + '-scroll' + axisName, prefix = self.classPrefix;\n            global$9(self.getEl()).append('<div id=\"' + axisId + '\" class=\"' + prefix + 'scrollbar ' + prefix + 'scrollbar-' + axisName + '\">' + '<div id=\"' + axisId + 't\" class=\"' + prefix + 'scrollbar-thumb\"></div>' + '</div>');\n            self.draghelper = new DragHelper(axisId + 't', {\n              start: function () {\n                scrollStart = self.getEl('body')['scroll' + posName];\n                global$9('#' + axisId).addClass(prefix + 'active');\n              },\n              drag: function (e) {\n                var ratio, hasScrollH, hasScrollV, containerSize;\n                var layoutRect = self.layoutRect();\n                hasScrollH = layoutRect.contentW > layoutRect.innerW;\n                hasScrollV = layoutRect.contentH > layoutRect.innerH;\n                containerSize = self.getEl('body')['client' + sizeName] - margin * 2;\n                containerSize -= hasScrollH && hasScrollV ? self.getEl('scroll' + axisName)['client' + ax] : 0;\n                ratio = containerSize / self.getEl('body')['scroll' + sizeName];\n                self.getEl('body')['scroll' + posName] = scrollStart + e['delta' + deltaPosName] / ratio;\n              },\n              stop: function () {\n                global$9('#' + axisId).removeClass(prefix + 'active');\n              }\n            });\n          }\n          self.classes.add('scroll');\n          addScrollAxis('v', 'Top', 'Height', 'Y', 'Width');\n          addScrollAxis('h', 'Left', 'Width', 'X', 'Height');\n        }\n        if (self.settings.autoScroll) {\n          if (!self._hasScroll) {\n            self._hasScroll = true;\n            addScroll();\n            self.on('wheel', function (e) {\n              var bodyEl = self.getEl('body');\n              bodyEl.scrollLeft += (e.deltaX || 0) * 10;\n              bodyEl.scrollTop += e.deltaY * 10;\n              repaintScroll();\n            });\n            global$9(self.getEl('body')).on('scroll', repaintScroll);\n          }\n          repaintScroll();\n        }\n      }\n    };\n\n    var Panel = Container.extend({\n      Defaults: {\n        layout: 'fit',\n        containerCls: 'panel'\n      },\n      Mixins: [Scrollable],\n      renderHtml: function () {\n        var self = this;\n        var layout = self._layout;\n        var innerHtml = self.settings.html;\n        self.preRender();\n        layout.preRender(self);\n        if (typeof innerHtml === 'undefined') {\n          innerHtml = '<div id=\"' + self._id + '-body\" class=\"' + self.bodyClasses + '\">' + layout.renderHtml(self) + '</div>';\n        } else {\n          if (typeof innerHtml === 'function') {\n            innerHtml = innerHtml.call(self);\n          }\n          self._hasBody = false;\n        }\n        return '<div id=\"' + self._id + '\" class=\"' + self.classes + '\" hidefocus=\"1\" tabindex=\"-1\" role=\"group\">' + (self._preBodyHtml || '') + innerHtml + '</div>';\n      }\n    });\n\n    var Resizable = {\n      resizeToContent: function () {\n        this._layoutRect.autoResize = true;\n        this._lastRect = null;\n        this.reflow();\n      },\n      resizeTo: function (w, h) {\n        if (w <= 1 || h <= 1) {\n          var rect = funcs.getWindowSize();\n          w = w <= 1 ? w * rect.w : w;\n          h = h <= 1 ? h * rect.h : h;\n        }\n        this._layoutRect.autoResize = false;\n        return this.layoutRect({\n          minW: w,\n          minH: h,\n          w: w,\n          h: h\n        }).reflow();\n      },\n      resizeBy: function (dw, dh) {\n        var self = this, rect = self.layoutRect();\n        return self.resizeTo(rect.w + dw, rect.h + dh);\n      }\n    };\n\n    var documentClickHandler, documentScrollHandler, windowResizeHandler;\n    var visiblePanels = [];\n    var zOrder = [];\n    var hasModal;\n    function isChildOf(ctrl, parent) {\n      while (ctrl) {\n        if (ctrl === parent) {\n          return true;\n        }\n        ctrl = ctrl.parent();\n      }\n    }\n    function skipOrHidePanels(e) {\n      var i = visiblePanels.length;\n      while (i--) {\n        var panel = visiblePanels[i], clickCtrl = panel.getParentCtrl(e.target);\n        if (panel.settings.autohide) {\n          if (clickCtrl) {\n            if (isChildOf(clickCtrl, panel) || panel.parent() === clickCtrl) {\n              continue;\n            }\n          }\n          e = panel.fire('autohide', { target: e.target });\n          if (!e.isDefaultPrevented()) {\n            panel.hide();\n          }\n        }\n      }\n    }\n    function bindDocumentClickHandler() {\n      if (!documentClickHandler) {\n        documentClickHandler = function (e) {\n          if (e.button === 2) {\n            return;\n          }\n          skipOrHidePanels(e);\n        };\n        global$9(domGlobals.document).on('click touchstart', documentClickHandler);\n      }\n    }\n    function bindDocumentScrollHandler() {\n      if (!documentScrollHandler) {\n        documentScrollHandler = function () {\n          var i;\n          i = visiblePanels.length;\n          while (i--) {\n            repositionPanel(visiblePanels[i]);\n          }\n        };\n        global$9(domGlobals.window).on('scroll', documentScrollHandler);\n      }\n    }\n    function bindWindowResizeHandler() {\n      if (!windowResizeHandler) {\n        var docElm_1 = domGlobals.document.documentElement;\n        var clientWidth_1 = docElm_1.clientWidth, clientHeight_1 = docElm_1.clientHeight;\n        windowResizeHandler = function () {\n          if (!domGlobals.document.all || clientWidth_1 !== docElm_1.clientWidth || clientHeight_1 !== docElm_1.clientHeight) {\n            clientWidth_1 = docElm_1.clientWidth;\n            clientHeight_1 = docElm_1.clientHeight;\n            FloatPanel.hideAll();\n          }\n        };\n        global$9(domGlobals.window).on('resize', windowResizeHandler);\n      }\n    }\n    function repositionPanel(panel) {\n      var scrollY = funcs.getViewPort().y;\n      function toggleFixedChildPanels(fixed, deltaY) {\n        var parent;\n        for (var i = 0; i < visiblePanels.length; i++) {\n          if (visiblePanels[i] !== panel) {\n            parent = visiblePanels[i].parent();\n            while (parent && (parent = parent.parent())) {\n              if (parent === panel) {\n                visiblePanels[i].fixed(fixed).moveBy(0, deltaY).repaint();\n              }\n            }\n          }\n        }\n      }\n      if (panel.settings.autofix) {\n        if (!panel.state.get('fixed')) {\n          panel._autoFixY = panel.layoutRect().y;\n          if (panel._autoFixY < scrollY) {\n            panel.fixed(true).layoutRect({ y: 0 }).repaint();\n            toggleFixedChildPanels(true, scrollY - panel._autoFixY);\n          }\n        } else {\n          if (panel._autoFixY > scrollY) {\n            panel.fixed(false).layoutRect({ y: panel._autoFixY }).repaint();\n            toggleFixedChildPanels(false, panel._autoFixY - scrollY);\n          }\n        }\n      }\n    }\n    function addRemove(add, ctrl) {\n      var i, zIndex = FloatPanel.zIndex || 65535, topModal;\n      if (add) {\n        zOrder.push(ctrl);\n      } else {\n        i = zOrder.length;\n        while (i--) {\n          if (zOrder[i] === ctrl) {\n            zOrder.splice(i, 1);\n          }\n        }\n      }\n      if (zOrder.length) {\n        for (i = 0; i < zOrder.length; i++) {\n          if (zOrder[i].modal) {\n            zIndex++;\n            topModal = zOrder[i];\n          }\n          zOrder[i].getEl().style.zIndex = zIndex;\n          zOrder[i].zIndex = zIndex;\n          zIndex++;\n        }\n      }\n      var modalBlockEl = global$9('#' + ctrl.classPrefix + 'modal-block', ctrl.getContainerElm())[0];\n      if (topModal) {\n        global$9(modalBlockEl).css('z-index', topModal.zIndex - 1);\n      } else if (modalBlockEl) {\n        modalBlockEl.parentNode.removeChild(modalBlockEl);\n        hasModal = false;\n      }\n      FloatPanel.currentZIndex = zIndex;\n    }\n    var FloatPanel = Panel.extend({\n      Mixins: [\n        Movable,\n        Resizable\n      ],\n      init: function (settings) {\n        var self = this;\n        self._super(settings);\n        self._eventsRoot = self;\n        self.classes.add('floatpanel');\n        if (settings.autohide) {\n          bindDocumentClickHandler();\n          bindWindowResizeHandler();\n          visiblePanels.push(self);\n        }\n        if (settings.autofix) {\n          bindDocumentScrollHandler();\n          self.on('move', function () {\n            repositionPanel(this);\n          });\n        }\n        self.on('postrender show', function (e) {\n          if (e.control === self) {\n            var $modalBlockEl_1;\n            var prefix_1 = self.classPrefix;\n            if (self.modal && !hasModal) {\n              $modalBlockEl_1 = global$9('#' + prefix_1 + 'modal-block', self.getContainerElm());\n              if (!$modalBlockEl_1[0]) {\n                $modalBlockEl_1 = global$9('<div id=\"' + prefix_1 + 'modal-block\" class=\"' + prefix_1 + 'reset ' + prefix_1 + 'fade\"></div>').appendTo(self.getContainerElm());\n              }\n              global$7.setTimeout(function () {\n                $modalBlockEl_1.addClass(prefix_1 + 'in');\n                global$9(self.getEl()).addClass(prefix_1 + 'in');\n              });\n              hasModal = true;\n            }\n            addRemove(true, self);\n          }\n        });\n        self.on('show', function () {\n          self.parents().each(function (ctrl) {\n            if (ctrl.state.get('fixed')) {\n              self.fixed(true);\n              return false;\n            }\n          });\n        });\n        if (settings.popover) {\n          self._preBodyHtml = '<div class=\"' + self.classPrefix + 'arrow\"></div>';\n          self.classes.add('popover').add('bottom').add(self.isRtl() ? 'end' : 'start');\n        }\n        self.aria('label', settings.ariaLabel);\n        self.aria('labelledby', self._id);\n        self.aria('describedby', self.describedBy || self._id + '-none');\n      },\n      fixed: function (state) {\n        var self = this;\n        if (self.state.get('fixed') !== state) {\n          if (self.state.get('rendered')) {\n            var viewport = funcs.getViewPort();\n            if (state) {\n              self.layoutRect().y -= viewport.y;\n            } else {\n              self.layoutRect().y += viewport.y;\n            }\n          }\n          self.classes.toggle('fixed', state);\n          self.state.set('fixed', state);\n        }\n        return self;\n      },\n      show: function () {\n        var self = this;\n        var i;\n        var state = self._super();\n        i = visiblePanels.length;\n        while (i--) {\n          if (visiblePanels[i] === self) {\n            break;\n          }\n        }\n        if (i === -1) {\n          visiblePanels.push(self);\n        }\n        return state;\n      },\n      hide: function () {\n        removeVisiblePanel(this);\n        addRemove(false, this);\n        return this._super();\n      },\n      hideAll: function () {\n        FloatPanel.hideAll();\n      },\n      close: function () {\n        var self = this;\n        if (!self.fire('close').isDefaultPrevented()) {\n          self.remove();\n          addRemove(false, self);\n        }\n        return self;\n      },\n      remove: function () {\n        removeVisiblePanel(this);\n        this._super();\n      },\n      postRender: function () {\n        var self = this;\n        if (self.settings.bodyRole) {\n          this.getEl('body').setAttribute('role', self.settings.bodyRole);\n        }\n        return self._super();\n      }\n    });\n    FloatPanel.hideAll = function () {\n      var i = visiblePanels.length;\n      while (i--) {\n        var panel = visiblePanels[i];\n        if (panel && panel.settings.autohide) {\n          panel.hide();\n          visiblePanels.splice(i, 1);\n        }\n      }\n    };\n    function removeVisiblePanel(panel) {\n      var i;\n      i = visiblePanels.length;\n      while (i--) {\n        if (visiblePanels[i] === panel) {\n          visiblePanels.splice(i, 1);\n        }\n      }\n      i = zOrder.length;\n      while (i--) {\n        if (zOrder[i] === panel) {\n          zOrder.splice(i, 1);\n        }\n      }\n    }\n\n    var isFixed$1 = function (inlineToolbarContainer, editor) {\n      return !!(inlineToolbarContainer && !editor.settings.ui_container);\n    };\n    var render$1 = function (editor, theme, args) {\n      var panel, inlineToolbarContainer;\n      var DOM = global$3.DOM;\n      var fixedToolbarContainer = getFixedToolbarContainer(editor);\n      if (fixedToolbarContainer) {\n        inlineToolbarContainer = DOM.select(fixedToolbarContainer)[0];\n      }\n      var reposition = function () {\n        if (panel && panel.moveRel && panel.visible() && !panel._fixed) {\n          var scrollContainer = editor.selection.getScrollContainer(), body = editor.getBody();\n          var deltaX = 0, deltaY = 0;\n          if (scrollContainer) {\n            var bodyPos = DOM.getPos(body), scrollContainerPos = DOM.getPos(scrollContainer);\n            deltaX = Math.max(0, scrollContainerPos.x - bodyPos.x);\n            deltaY = Math.max(0, scrollContainerPos.y - bodyPos.y);\n          }\n          panel.fixed(false).moveRel(body, editor.rtl ? [\n            'tr-br',\n            'br-tr'\n          ] : [\n            'tl-bl',\n            'bl-tl',\n            'tr-br'\n          ]).moveBy(deltaX, deltaY);\n        }\n      };\n      var show = function () {\n        if (panel) {\n          panel.show();\n          reposition();\n          DOM.addClass(editor.getBody(), 'mce-edit-focus');\n        }\n      };\n      var hide = function () {\n        if (panel) {\n          panel.hide();\n          FloatPanel.hideAll();\n          DOM.removeClass(editor.getBody(), 'mce-edit-focus');\n        }\n      };\n      var render = function () {\n        if (panel) {\n          if (!panel.visible()) {\n            show();\n          }\n          return;\n        }\n        panel = theme.panel = global$4.create({\n          type: inlineToolbarContainer ? 'panel' : 'floatpanel',\n          role: 'application',\n          classes: 'tinymce tinymce-inline',\n          layout: 'flex',\n          direction: 'column',\n          align: 'stretch',\n          autohide: false,\n          autofix: true,\n          fixed: isFixed$1(inlineToolbarContainer, editor),\n          border: 1,\n          items: [\n            hasMenubar(editor) === false ? null : {\n              type: 'menubar',\n              border: '0 0 1 0',\n              items: Menubar.createMenuButtons(editor)\n            },\n            Toolbar.createToolbars(editor, getToolbarSize(editor))\n          ]\n        });\n        UiContainer.setUiContainer(editor, panel);\n        Events.fireBeforeRenderUI(editor);\n        if (inlineToolbarContainer) {\n          panel.renderTo(inlineToolbarContainer).reflow();\n        } else {\n          panel.renderTo().reflow();\n        }\n        A11y.addKeys(editor, panel);\n        show();\n        ContextToolbars.addContextualToolbars(editor);\n        editor.on('nodeChange', reposition);\n        editor.on('ResizeWindow', reposition);\n        editor.on('activate', show);\n        editor.on('deactivate', hide);\n        editor.nodeChanged();\n      };\n      editor.settings.content_editable = true;\n      editor.on('focus', function () {\n        if (isSkinDisabled(editor) === false && args.skinUiCss) {\n          DOM.styleSheetLoader.load(args.skinUiCss, render, render);\n        } else {\n          render();\n        }\n      });\n      editor.on('blur hide', hide);\n      editor.on('remove', function () {\n        if (panel) {\n          panel.remove();\n          panel = null;\n        }\n      });\n      if (isSkinDisabled(editor) === false && args.skinUiCss) {\n        DOM.styleSheetLoader.load(args.skinUiCss, SkinLoaded.fireSkinLoaded(editor));\n      } else {\n        SkinLoaded.fireSkinLoaded(editor)();\n      }\n      return {};\n    };\n    var Inline = { render: render$1 };\n\n    function Throbber (elm, inline) {\n      var self = this;\n      var state;\n      var classPrefix = Control$1.classPrefix;\n      var timer;\n      self.show = function (time, callback) {\n        function render() {\n          if (state) {\n            global$9(elm).append('<div class=\"' + classPrefix + 'throbber' + (inline ? ' ' + classPrefix + 'throbber-inline' : '') + '\"></div>');\n            if (callback) {\n              callback();\n            }\n          }\n        }\n        self.hide();\n        state = true;\n        if (time) {\n          timer = global$7.setTimeout(render, time);\n        } else {\n          render();\n        }\n        return self;\n      };\n      self.hide = function () {\n        var child = elm.lastChild;\n        global$7.clearTimeout(timer);\n        if (child && child.className.indexOf('throbber') !== -1) {\n          child.parentNode.removeChild(child);\n        }\n        state = false;\n        return self;\n      };\n    }\n\n    var setup = function (editor, theme) {\n      var throbber;\n      editor.on('ProgressState', function (e) {\n        throbber = throbber || new Throbber(theme.panel.getEl('body'));\n        if (e.state) {\n          throbber.show(e.time);\n        } else {\n          throbber.hide();\n        }\n      });\n    };\n    var ProgressState = { setup: setup };\n\n    var renderUI = function (editor, theme, args) {\n      var skinUrl = getSkinUrl(editor);\n      if (skinUrl) {\n        args.skinUiCss = skinUrl + '/skin.min.css';\n        editor.contentCSS.push(skinUrl + '/content' + (editor.inline ? '.inline' : '') + '.min.css');\n      }\n      ProgressState.setup(editor, theme);\n      return isInline(editor) ? Inline.render(editor, theme, args) : Iframe.render(editor, theme, args);\n    };\n    var Render = { renderUI: renderUI };\n\n    var Tooltip = Control$1.extend({\n      Mixins: [Movable],\n      Defaults: { classes: 'widget tooltip tooltip-n' },\n      renderHtml: function () {\n        var self = this, prefix = self.classPrefix;\n        return '<div id=\"' + self._id + '\" class=\"' + self.classes + '\" role=\"presentation\">' + '<div class=\"' + prefix + 'tooltip-arrow\"></div>' + '<div class=\"' + prefix + 'tooltip-inner\">' + self.encode(self.state.get('text')) + '</div>' + '</div>';\n      },\n      bindStates: function () {\n        var self = this;\n        self.state.on('change:text', function (e) {\n          self.getEl().lastChild.innerHTML = self.encode(e.value);\n        });\n        return self._super();\n      },\n      repaint: function () {\n        var self = this;\n        var style, rect;\n        style = self.getEl().style;\n        rect = self._layoutRect;\n        style.left = rect.x + 'px';\n        style.top = rect.y + 'px';\n        style.zIndex = 65535 + 65535;\n      }\n    });\n\n    var Widget = Control$1.extend({\n      init: function (settings) {\n        var self = this;\n        self._super(settings);\n        settings = self.settings;\n        self.canFocus = true;\n        if (settings.tooltip && Widget.tooltips !== false) {\n          self.on('mouseenter', function (e) {\n            var tooltip = self.tooltip().moveTo(-65535);\n            if (e.control === self) {\n              var rel = tooltip.text(settings.tooltip).show().testMoveRel(self.getEl(), [\n                'bc-tc',\n                'bc-tl',\n                'bc-tr'\n              ]);\n              tooltip.classes.toggle('tooltip-n', rel === 'bc-tc');\n              tooltip.classes.toggle('tooltip-nw', rel === 'bc-tl');\n              tooltip.classes.toggle('tooltip-ne', rel === 'bc-tr');\n              tooltip.moveRel(self.getEl(), rel);\n            } else {\n              tooltip.hide();\n            }\n          });\n          self.on('mouseleave mousedown click', function () {\n            self.tooltip().remove();\n            self._tooltip = null;\n          });\n        }\n        self.aria('label', settings.ariaLabel || settings.tooltip);\n      },\n      tooltip: function () {\n        if (!this._tooltip) {\n          this._tooltip = new Tooltip({ type: 'tooltip' });\n          UiContainer.inheritUiContainer(this, this._tooltip);\n          this._tooltip.renderTo();\n        }\n        return this._tooltip;\n      },\n      postRender: function () {\n        var self = this, settings = self.settings;\n        self._super();\n        if (!self.parent() && (settings.width || settings.height)) {\n          self.initLayoutRect();\n          self.repaint();\n        }\n        if (settings.autofocus) {\n          self.focus();\n        }\n      },\n      bindStates: function () {\n        var self = this;\n        function disable(state) {\n          self.aria('disabled', state);\n          self.classes.toggle('disabled', state);\n        }\n        function active(state) {\n          self.aria('pressed', state);\n          self.classes.toggle('active', state);\n        }\n        self.state.on('change:disabled', function (e) {\n          disable(e.value);\n        });\n        self.state.on('change:active', function (e) {\n          active(e.value);\n        });\n        if (self.state.get('disabled')) {\n          disable(true);\n        }\n        if (self.state.get('active')) {\n          active(true);\n        }\n        return self._super();\n      },\n      remove: function () {\n        this._super();\n        if (this._tooltip) {\n          this._tooltip.remove();\n          this._tooltip = null;\n        }\n      }\n    });\n\n    var Progress = Widget.extend({\n      Defaults: { value: 0 },\n      init: function (settings) {\n        var self = this;\n        self._super(settings);\n        self.classes.add('progress');\n        if (!self.settings.filter) {\n          self.settings.filter = function (value) {\n            return Math.round(value);\n          };\n        }\n      },\n      renderHtml: function () {\n        var self = this, id = self._id, prefix = this.classPrefix;\n        return '<div id=\"' + id + '\" class=\"' + self.classes + '\">' + '<div class=\"' + prefix + 'bar-container\">' + '<div class=\"' + prefix + 'bar\"></div>' + '</div>' + '<div class=\"' + prefix + 'text\">0%</div>' + '</div>';\n      },\n      postRender: function () {\n        var self = this;\n        self._super();\n        self.value(self.settings.value);\n        return self;\n      },\n      bindStates: function () {\n        var self = this;\n        function setValue(value) {\n          value = self.settings.filter(value);\n          self.getEl().lastChild.innerHTML = value + '%';\n          self.getEl().firstChild.firstChild.style.width = value + '%';\n        }\n        self.state.on('change:value', function (e) {\n          setValue(e.value);\n        });\n        setValue(self.state.get('value'));\n        return self._super();\n      }\n    });\n\n    var updateLiveRegion = function (ctx, text) {\n      ctx.getEl().lastChild.textContent = text + (ctx.progressBar ? ' ' + ctx.progressBar.value() + '%' : '');\n    };\n    var Notification = Control$1.extend({\n      Mixins: [Movable],\n      Defaults: { classes: 'widget notification' },\n      init: function (settings) {\n        var self = this;\n        self._super(settings);\n        self.maxWidth = settings.maxWidth;\n        if (settings.text) {\n          self.text(settings.text);\n        }\n        if (settings.icon) {\n          self.icon = settings.icon;\n        }\n        if (settings.color) {\n          self.color = settings.color;\n        }\n        if (settings.type) {\n          self.classes.add('notification-' + settings.type);\n        }\n        if (settings.timeout && (settings.timeout < 0 || settings.timeout > 0) && !settings.closeButton) {\n          self.closeButton = false;\n        } else {\n          self.classes.add('has-close');\n          self.closeButton = true;\n        }\n        if (settings.progressBar) {\n          self.progressBar = new Progress();\n        }\n        self.on('click', function (e) {\n          if (e.target.className.indexOf(self.classPrefix + 'close') !== -1) {\n            self.close();\n          }\n        });\n      },\n      renderHtml: function () {\n        var self = this;\n        var prefix = self.classPrefix;\n        var icon = '', closeButton = '', progressBar = '', notificationStyle = '';\n        if (self.icon) {\n          icon = '<i class=\"' + prefix + 'ico' + ' ' + prefix + 'i-' + self.icon + '\"></i>';\n        }\n        notificationStyle = ' style=\"max-width: ' + self.maxWidth + 'px;' + (self.color ? 'background-color: ' + self.color + ';\"' : '\"');\n        if (self.closeButton) {\n          closeButton = '<button type=\"button\" class=\"' + prefix + 'close\" aria-hidden=\"true\">\\xD7</button>';\n        }\n        if (self.progressBar) {\n          progressBar = self.progressBar.renderHtml();\n        }\n        return '<div id=\"' + self._id + '\" class=\"' + self.classes + '\"' + notificationStyle + ' role=\"presentation\">' + icon + '<div class=\"' + prefix + 'notification-inner\">' + self.state.get('text') + '</div>' + progressBar + closeButton + '<div style=\"clip: rect(1px, 1px, 1px, 1px);height: 1px;overflow: hidden;position: absolute;width: 1px;\"' + ' aria-live=\"assertive\" aria-relevant=\"additions\" aria-atomic=\"true\"></div>' + '</div>';\n      },\n      postRender: function () {\n        var self = this;\n        global$7.setTimeout(function () {\n          self.$el.addClass(self.classPrefix + 'in');\n          updateLiveRegion(self, self.state.get('text'));\n        }, 100);\n        return self._super();\n      },\n      bindStates: function () {\n        var self = this;\n        self.state.on('change:text', function (e) {\n          self.getEl().firstChild.innerHTML = e.value;\n          updateLiveRegion(self, e.value);\n        });\n        if (self.progressBar) {\n          self.progressBar.bindStates();\n          self.progressBar.state.on('change:value', function (e) {\n            updateLiveRegion(self, self.state.get('text'));\n          });\n        }\n        return self._super();\n      },\n      close: function () {\n        var self = this;\n        if (!self.fire('close').isDefaultPrevented()) {\n          self.remove();\n        }\n        return self;\n      },\n      repaint: function () {\n        var self = this;\n        var style, rect;\n        style = self.getEl().style;\n        rect = self._layoutRect;\n        style.left = rect.x + 'px';\n        style.top = rect.y + 'px';\n        style.zIndex = 65535 - 1;\n      }\n    });\n\n    function NotificationManagerImpl (editor) {\n      var getEditorContainer = function (editor) {\n        return editor.inline ? editor.getElement() : editor.getContentAreaContainer();\n      };\n      var getContainerWidth = function () {\n        var container = getEditorContainer(editor);\n        return funcs.getSize(container).width;\n      };\n      var prePositionNotifications = function (notifications) {\n        each(notifications, function (notification) {\n          notification.moveTo(0, 0);\n        });\n      };\n      var positionNotifications = function (notifications) {\n        if (notifications.length > 0) {\n          var firstItem = notifications.slice(0, 1)[0];\n          var container = getEditorContainer(editor);\n          firstItem.moveRel(container, 'tc-tc');\n          each(notifications, function (notification, index) {\n            if (index > 0) {\n              notification.moveRel(notifications[index - 1].getEl(), 'bc-tc');\n            }\n          });\n        }\n      };\n      var reposition = function (notifications) {\n        prePositionNotifications(notifications);\n        positionNotifications(notifications);\n      };\n      var open = function (args, closeCallback) {\n        var extendedArgs = global$2.extend(args, { maxWidth: getContainerWidth() });\n        var notif = new Notification(extendedArgs);\n        notif.args = extendedArgs;\n        if (extendedArgs.timeout > 0) {\n          notif.timer = setTimeout(function () {\n            notif.close();\n            closeCallback();\n          }, extendedArgs.timeout);\n        }\n        notif.on('close', function () {\n          closeCallback();\n        });\n        notif.renderTo();\n        return notif;\n      };\n      var close = function (notification) {\n        notification.close();\n      };\n      var getArgs = function (notification) {\n        return notification.args;\n      };\n      return {\n        open: open,\n        close: close,\n        reposition: reposition,\n        getArgs: getArgs\n      };\n    }\n\n    var windows = [];\n    var oldMetaValue = '';\n    function toggleFullScreenState(state) {\n      var noScaleMetaValue = 'width=device-width,initial-scale=1.0,user-scalable=0,minimum-scale=1.0,maximum-scale=1.0';\n      var viewport = global$9('meta[name=viewport]')[0], contentValue;\n      if (global$8.overrideViewPort === false) {\n        return;\n      }\n      if (!viewport) {\n        viewport = domGlobals.document.createElement('meta');\n        viewport.setAttribute('name', 'viewport');\n        domGlobals.document.getElementsByTagName('head')[0].appendChild(viewport);\n      }\n      contentValue = viewport.getAttribute('content');\n      if (contentValue && typeof oldMetaValue !== 'undefined') {\n        oldMetaValue = contentValue;\n      }\n      viewport.setAttribute('content', state ? noScaleMetaValue : oldMetaValue);\n    }\n    function toggleBodyFullScreenClasses(classPrefix, state) {\n      if (checkFullscreenWindows() && state === false) {\n        global$9([\n          domGlobals.document.documentElement,\n          domGlobals.document.body\n        ]).removeClass(classPrefix + 'fullscreen');\n      }\n    }\n    function checkFullscreenWindows() {\n      for (var i = 0; i < windows.length; i++) {\n        if (windows[i]._fullscreen) {\n          return true;\n        }\n      }\n      return false;\n    }\n    function handleWindowResize() {\n      if (!global$8.desktop) {\n        var lastSize_1 = {\n          w: domGlobals.window.innerWidth,\n          h: domGlobals.window.innerHeight\n        };\n        global$7.setInterval(function () {\n          var w = domGlobals.window.innerWidth, h = domGlobals.window.innerHeight;\n          if (lastSize_1.w !== w || lastSize_1.h !== h) {\n            lastSize_1 = {\n              w: w,\n              h: h\n            };\n            global$9(domGlobals.window).trigger('resize');\n          }\n        }, 100);\n      }\n      function reposition() {\n        var i;\n        var rect = funcs.getWindowSize();\n        var layoutRect;\n        for (i = 0; i < windows.length; i++) {\n          layoutRect = windows[i].layoutRect();\n          windows[i].moveTo(windows[i].settings.x || Math.max(0, rect.w / 2 - layoutRect.w / 2), windows[i].settings.y || Math.max(0, rect.h / 2 - layoutRect.h / 2));\n        }\n      }\n      global$9(domGlobals.window).on('resize', reposition);\n    }\n    var Window = FloatPanel.extend({\n      modal: true,\n      Defaults: {\n        border: 1,\n        layout: 'flex',\n        containerCls: 'panel',\n        role: 'dialog',\n        callbacks: {\n          submit: function () {\n            this.fire('submit', { data: this.toJSON() });\n          },\n          close: function () {\n            this.close();\n          }\n        }\n      },\n      init: function (settings) {\n        var self = this;\n        self._super(settings);\n        if (self.isRtl()) {\n          self.classes.add('rtl');\n        }\n        self.classes.add('window');\n        self.bodyClasses.add('window-body');\n        self.state.set('fixed', true);\n        if (settings.buttons) {\n          self.statusbar = new Panel({\n            layout: 'flex',\n            border: '1 0 0 0',\n            spacing: 3,\n            padding: 10,\n            align: 'center',\n            pack: self.isRtl() ? 'start' : 'end',\n            defaults: { type: 'button' },\n            items: settings.buttons\n          });\n          self.statusbar.classes.add('foot');\n          self.statusbar.parent(self);\n        }\n        self.on('click', function (e) {\n          var closeClass = self.classPrefix + 'close';\n          if (funcs.hasClass(e.target, closeClass) || funcs.hasClass(e.target.parentNode, closeClass)) {\n            self.close();\n          }\n        });\n        self.on('cancel', function () {\n          self.close();\n        });\n        self.on('move', function (e) {\n          if (e.control === self) {\n            FloatPanel.hideAll();\n          }\n        });\n        self.aria('describedby', self.describedBy || self._id + '-none');\n        self.aria('label', settings.title);\n        self._fullscreen = false;\n      },\n      recalc: function () {\n        var self = this;\n        var statusbar = self.statusbar;\n        var layoutRect, width, x, needsRecalc;\n        if (self._fullscreen) {\n          self.layoutRect(funcs.getWindowSize());\n          self.layoutRect().contentH = self.layoutRect().innerH;\n        }\n        self._super();\n        layoutRect = self.layoutRect();\n        if (self.settings.title && !self._fullscreen) {\n          width = layoutRect.headerW;\n          if (width > layoutRect.w) {\n            x = layoutRect.x - Math.max(0, width / 2);\n            self.layoutRect({\n              w: width,\n              x: x\n            });\n            needsRecalc = true;\n          }\n        }\n        if (statusbar) {\n          statusbar.layoutRect({ w: self.layoutRect().innerW }).recalc();\n          width = statusbar.layoutRect().minW + layoutRect.deltaW;\n          if (width > layoutRect.w) {\n            x = layoutRect.x - Math.max(0, width - layoutRect.w);\n            self.layoutRect({\n              w: width,\n              x: x\n            });\n            needsRecalc = true;\n          }\n        }\n        if (needsRecalc) {\n          self.recalc();\n        }\n      },\n      initLayoutRect: function () {\n        var self = this;\n        var layoutRect = self._super();\n        var deltaH = 0, headEl;\n        if (self.settings.title && !self._fullscreen) {\n          headEl = self.getEl('head');\n          var size = funcs.getSize(headEl);\n          layoutRect.headerW = size.width;\n          layoutRect.headerH = size.height;\n          deltaH += layoutRect.headerH;\n        }\n        if (self.statusbar) {\n          deltaH += self.statusbar.layoutRect().h;\n        }\n        layoutRect.deltaH += deltaH;\n        layoutRect.minH += deltaH;\n        layoutRect.h += deltaH;\n        var rect = funcs.getWindowSize();\n        layoutRect.x = self.settings.x || Math.max(0, rect.w / 2 - layoutRect.w / 2);\n        layoutRect.y = self.settings.y || Math.max(0, rect.h / 2 - layoutRect.h / 2);\n        return layoutRect;\n      },\n      renderHtml: function () {\n        var self = this, layout = self._layout, id = self._id, prefix = self.classPrefix;\n        var settings = self.settings;\n        var headerHtml = '', footerHtml = '', html = settings.html;\n        self.preRender();\n        layout.preRender(self);\n        if (settings.title) {\n          headerHtml = '<div id=\"' + id + '-head\" class=\"' + prefix + 'window-head\">' + '<div id=\"' + id + '-title\" class=\"' + prefix + 'title\">' + self.encode(settings.title) + '</div>' + '<div id=\"' + id + '-dragh\" class=\"' + prefix + 'dragh\"></div>' + '<button type=\"button\" class=\"' + prefix + 'close\" aria-hidden=\"true\">' + '<i class=\"mce-ico mce-i-remove\"></i>' + '</button>' + '</div>';\n        }\n        if (settings.url) {\n          html = '<iframe src=\"' + settings.url + '\" tabindex=\"-1\"></iframe>';\n        }\n        if (typeof html === 'undefined') {\n          html = layout.renderHtml(self);\n        }\n        if (self.statusbar) {\n          footerHtml = self.statusbar.renderHtml();\n        }\n        return '<div id=\"' + id + '\" class=\"' + self.classes + '\" hidefocus=\"1\">' + '<div class=\"' + self.classPrefix + 'reset\" role=\"application\">' + headerHtml + '<div id=\"' + id + '-body\" class=\"' + self.bodyClasses + '\">' + html + '</div>' + footerHtml + '</div>' + '</div>';\n      },\n      fullscreen: function (state) {\n        var self = this;\n        var documentElement = domGlobals.document.documentElement;\n        var slowRendering;\n        var prefix = self.classPrefix;\n        var layoutRect;\n        if (state !== self._fullscreen) {\n          global$9(domGlobals.window).on('resize', function () {\n            var time;\n            if (self._fullscreen) {\n              if (!slowRendering) {\n                time = new Date().getTime();\n                var rect = funcs.getWindowSize();\n                self.moveTo(0, 0).resizeTo(rect.w, rect.h);\n                if (new Date().getTime() - time > 50) {\n                  slowRendering = true;\n                }\n              } else {\n                if (!self._timer) {\n                  self._timer = global$7.setTimeout(function () {\n                    var rect = funcs.getWindowSize();\n                    self.moveTo(0, 0).resizeTo(rect.w, rect.h);\n                    self._timer = 0;\n                  }, 50);\n                }\n              }\n            }\n          });\n          layoutRect = self.layoutRect();\n          self._fullscreen = state;\n          if (!state) {\n            self.borderBox = BoxUtils.parseBox(self.settings.border);\n            self.getEl('head').style.display = '';\n            layoutRect.deltaH += layoutRect.headerH;\n            global$9([\n              documentElement,\n              domGlobals.document.body\n            ]).removeClass(prefix + 'fullscreen');\n            self.classes.remove('fullscreen');\n            self.moveTo(self._initial.x, self._initial.y).resizeTo(self._initial.w, self._initial.h);\n          } else {\n            self._initial = {\n              x: layoutRect.x,\n              y: layoutRect.y,\n              w: layoutRect.w,\n              h: layoutRect.h\n            };\n            self.borderBox = BoxUtils.parseBox('0');\n            self.getEl('head').style.display = 'none';\n            layoutRect.deltaH -= layoutRect.headerH + 2;\n            global$9([\n              documentElement,\n              domGlobals.document.body\n            ]).addClass(prefix + 'fullscreen');\n            self.classes.add('fullscreen');\n            var rect = funcs.getWindowSize();\n            self.moveTo(0, 0).resizeTo(rect.w, rect.h);\n          }\n        }\n        return self.reflow();\n      },\n      postRender: function () {\n        var self = this;\n        var startPos;\n        setTimeout(function () {\n          self.classes.add('in');\n          self.fire('open');\n        }, 0);\n        self._super();\n        if (self.statusbar) {\n          self.statusbar.postRender();\n        }\n        self.focus();\n        this.dragHelper = new DragHelper(self._id + '-dragh', {\n          start: function () {\n            startPos = {\n              x: self.layoutRect().x,\n              y: self.layoutRect().y\n            };\n          },\n          drag: function (e) {\n            self.moveTo(startPos.x + e.deltaX, startPos.y + e.deltaY);\n          }\n        });\n        self.on('submit', function (e) {\n          if (!e.isDefaultPrevented()) {\n            self.close();\n          }\n        });\n        windows.push(self);\n        toggleFullScreenState(true);\n      },\n      submit: function () {\n        return this.fire('submit', { data: this.toJSON() });\n      },\n      remove: function () {\n        var self = this;\n        var i;\n        self.dragHelper.destroy();\n        self._super();\n        if (self.statusbar) {\n          this.statusbar.remove();\n        }\n        toggleBodyFullScreenClasses(self.classPrefix, false);\n        i = windows.length;\n        while (i--) {\n          if (windows[i] === self) {\n            windows.splice(i, 1);\n          }\n        }\n        toggleFullScreenState(windows.length > 0);\n      },\n      getContentWindow: function () {\n        var ifr = this.getEl().getElementsByTagName('iframe')[0];\n        return ifr ? ifr.contentWindow : null;\n      }\n    });\n    handleWindowResize();\n\n    var MessageBox = Window.extend({\n      init: function (settings) {\n        settings = {\n          border: 1,\n          padding: 20,\n          layout: 'flex',\n          pack: 'center',\n          align: 'center',\n          containerCls: 'panel',\n          autoScroll: true,\n          buttons: {\n            type: 'button',\n            text: 'Ok',\n            action: 'ok'\n          },\n          items: {\n            type: 'label',\n            multiline: true,\n            maxWidth: 500,\n            maxHeight: 200\n          }\n        };\n        this._super(settings);\n      },\n      Statics: {\n        OK: 1,\n        OK_CANCEL: 2,\n        YES_NO: 3,\n        YES_NO_CANCEL: 4,\n        msgBox: function (settings) {\n          var buttons;\n          var callback = settings.callback || function () {\n          };\n          function createButton(text, status, primary) {\n            return {\n              type: 'button',\n              text: text,\n              subtype: primary ? 'primary' : '',\n              onClick: function (e) {\n                e.control.parents()[1].close();\n                callback(status);\n              }\n            };\n          }\n          switch (settings.buttons) {\n          case MessageBox.OK_CANCEL:\n            buttons = [\n              createButton('Ok', true, true),\n              createButton('Cancel', false)\n            ];\n            break;\n          case MessageBox.YES_NO:\n          case MessageBox.YES_NO_CANCEL:\n            buttons = [\n              createButton('Yes', 1, true),\n              createButton('No', 0)\n            ];\n            if (settings.buttons === MessageBox.YES_NO_CANCEL) {\n              buttons.push(createButton('Cancel', -1));\n            }\n            break;\n          default:\n            buttons = [createButton('Ok', true, true)];\n            break;\n          }\n          return new Window({\n            padding: 20,\n            x: settings.x,\n            y: settings.y,\n            minWidth: 300,\n            minHeight: 100,\n            layout: 'flex',\n            pack: 'center',\n            align: 'center',\n            buttons: buttons,\n            title: settings.title,\n            role: 'alertdialog',\n            items: {\n              type: 'label',\n              multiline: true,\n              maxWidth: 500,\n              maxHeight: 200,\n              text: settings.text\n            },\n            onPostRender: function () {\n              this.aria('describedby', this.items()[0]._id);\n            },\n            onClose: settings.onClose,\n            onCancel: function () {\n              callback(false);\n            }\n          }).renderTo(domGlobals.document.body).reflow();\n        },\n        alert: function (settings, callback) {\n          if (typeof settings === 'string') {\n            settings = { text: settings };\n          }\n          settings.callback = callback;\n          return MessageBox.msgBox(settings);\n        },\n        confirm: function (settings, callback) {\n          if (typeof settings === 'string') {\n            settings = { text: settings };\n          }\n          settings.callback = callback;\n          settings.buttons = MessageBox.OK_CANCEL;\n          return MessageBox.msgBox(settings);\n        }\n      }\n    });\n\n    function WindowManagerImpl (editor) {\n      var open = function (args, params, closeCallback) {\n        var win;\n        args.title = args.title || ' ';\n        args.url = args.url || args.file;\n        if (args.url) {\n          args.width = parseInt(args.width || 320, 10);\n          args.height = parseInt(args.height || 240, 10);\n        }\n        if (args.body) {\n          args.items = {\n            defaults: args.defaults,\n            type: args.bodyType || 'form',\n            items: args.body,\n            data: args.data,\n            callbacks: args.commands\n          };\n        }\n        if (!args.url && !args.buttons) {\n          args.buttons = [\n            {\n              text: 'Ok',\n              subtype: 'primary',\n              onclick: function () {\n                win.find('form')[0].submit();\n              }\n            },\n            {\n              text: 'Cancel',\n              onclick: function () {\n                win.close();\n              }\n            }\n          ];\n        }\n        win = new Window(args);\n        win.on('close', function () {\n          closeCallback(win);\n        });\n        if (args.data) {\n          win.on('postRender', function () {\n            this.find('*').each(function (ctrl) {\n              var name = ctrl.name();\n              if (name in args.data) {\n                ctrl.value(args.data[name]);\n              }\n            });\n          });\n        }\n        win.features = args || {};\n        win.params = params || {};\n        win = win.renderTo(domGlobals.document.body).reflow();\n        return win;\n      };\n      var alert = function (message, choiceCallback, closeCallback) {\n        var win;\n        win = MessageBox.alert(message, function () {\n          choiceCallback();\n        });\n        win.on('close', function () {\n          closeCallback(win);\n        });\n        return win;\n      };\n      var confirm = function (message, choiceCallback, closeCallback) {\n        var win;\n        win = MessageBox.confirm(message, function (state) {\n          choiceCallback(state);\n        });\n        win.on('close', function () {\n          closeCallback(win);\n        });\n        return win;\n      };\n      var close = function (window) {\n        window.close();\n      };\n      var getParams = function (window) {\n        return window.params;\n      };\n      var setParams = function (window, params) {\n        window.params = params;\n      };\n      return {\n        open: open,\n        alert: alert,\n        confirm: confirm,\n        close: close,\n        getParams: getParams,\n        setParams: setParams\n      };\n    }\n\n    var get = function (editor) {\n      var renderUI = function (args) {\n        return Render.renderUI(editor, this, args);\n      };\n      var resizeTo = function (w, h) {\n        return Resize.resizeTo(editor, w, h);\n      };\n      var resizeBy = function (dw, dh) {\n        return Resize.resizeBy(editor, dw, dh);\n      };\n      var getNotificationManagerImpl = function () {\n        return NotificationManagerImpl(editor);\n      };\n      var getWindowManagerImpl = function () {\n        return WindowManagerImpl();\n      };\n      return {\n        renderUI: renderUI,\n        resizeTo: resizeTo,\n        resizeBy: resizeBy,\n        getNotificationManagerImpl: getNotificationManagerImpl,\n        getWindowManagerImpl: getWindowManagerImpl\n      };\n    };\n    var ThemeApi = { get: get };\n\n    var Layout = global$a.extend({\n      Defaults: {\n        firstControlClass: 'first',\n        lastControlClass: 'last'\n      },\n      init: function (settings) {\n        this.settings = global$2.extend({}, this.Defaults, settings);\n      },\n      preRender: function (container) {\n        container.bodyClasses.add(this.settings.containerClass);\n      },\n      applyClasses: function (items) {\n        var self = this;\n        var settings = self.settings;\n        var firstClass, lastClass, firstItem, lastItem;\n        firstClass = settings.firstControlClass;\n        lastClass = settings.lastControlClass;\n        items.each(function (item) {\n          item.classes.remove(firstClass).remove(lastClass).add(settings.controlClass);\n          if (item.visible()) {\n            if (!firstItem) {\n              firstItem = item;\n            }\n            lastItem = item;\n          }\n        });\n        if (firstItem) {\n          firstItem.classes.add(firstClass);\n        }\n        if (lastItem) {\n          lastItem.classes.add(lastClass);\n        }\n      },\n      renderHtml: function (container) {\n        var self = this;\n        var html = '';\n        self.applyClasses(container.items());\n        container.items().each(function (item) {\n          html += item.renderHtml();\n        });\n        return html;\n      },\n      recalc: function () {\n      },\n      postRender: function () {\n      },\n      isNative: function () {\n        return false;\n      }\n    });\n\n    var AbsoluteLayout = Layout.extend({\n      Defaults: {\n        containerClass: 'abs-layout',\n        controlClass: 'abs-layout-item'\n      },\n      recalc: function (container) {\n        container.items().filter(':visible').each(function (ctrl) {\n          var settings = ctrl.settings;\n          ctrl.layoutRect({\n            x: settings.x,\n            y: settings.y,\n            w: settings.w,\n            h: settings.h\n          });\n          if (ctrl.recalc) {\n            ctrl.recalc();\n          }\n        });\n      },\n      renderHtml: function (container) {\n        return '<div id=\"' + container._id + '-absend\" class=\"' + container.classPrefix + 'abs-end\"></div>' + this._super(container);\n      }\n    });\n\n    var Button = Widget.extend({\n      Defaults: {\n        classes: 'widget btn',\n        role: 'button'\n      },\n      init: function (settings) {\n        var self = this;\n        var size;\n        self._super(settings);\n        settings = self.settings;\n        size = self.settings.size;\n        self.on('click mousedown', function (e) {\n          e.preventDefault();\n        });\n        self.on('touchstart', function (e) {\n          self.fire('click', e);\n          e.preventDefault();\n        });\n        if (settings.subtype) {\n          self.classes.add(settings.subtype);\n        }\n        if (size) {\n          self.classes.add('btn-' + size);\n        }\n        if (settings.icon) {\n          self.icon(settings.icon);\n        }\n      },\n      icon: function (icon) {\n        if (!arguments.length) {\n          return this.state.get('icon');\n        }\n        this.state.set('icon', icon);\n        return this;\n      },\n      repaint: function () {\n        var btnElm = this.getEl().firstChild;\n        var btnStyle;\n        if (btnElm) {\n          btnStyle = btnElm.style;\n          btnStyle.width = btnStyle.height = '100%';\n        }\n        this._super();\n      },\n      renderHtml: function () {\n        var self = this, id = self._id, prefix = self.classPrefix;\n        var icon = self.state.get('icon'), image;\n        var text = self.state.get('text');\n        var textHtml = '';\n        var ariaPressed;\n        var settings = self.settings;\n        image = settings.image;\n        if (image) {\n          icon = 'none';\n          if (typeof image !== 'string') {\n            image = domGlobals.window.getSelection ? image[0] : image[1];\n          }\n          image = ' style=\"background-image: url(\\'' + image + '\\')\"';\n        } else {\n          image = '';\n        }\n        if (text) {\n          self.classes.add('btn-has-text');\n          textHtml = '<span class=\"' + prefix + 'txt\">' + self.encode(text) + '</span>';\n        }\n        icon = icon ? prefix + 'ico ' + prefix + 'i-' + icon : '';\n        ariaPressed = typeof settings.active === 'boolean' ? ' aria-pressed=\"' + settings.active + '\"' : '';\n        return '<div id=\"' + id + '\" class=\"' + self.classes + '\" tabindex=\"-1\"' + ariaPressed + '>' + '<button id=\"' + id + '-button\" role=\"presentation\" type=\"button\" tabindex=\"-1\">' + (icon ? '<i class=\"' + icon + '\"' + image + '></i>' : '') + textHtml + '</button>' + '</div>';\n      },\n      bindStates: function () {\n        var self = this, $ = self.$, textCls = self.classPrefix + 'txt';\n        function setButtonText(text) {\n          var $span = $('span.' + textCls, self.getEl());\n          if (text) {\n            if (!$span[0]) {\n              $('button:first', self.getEl()).append('<span class=\"' + textCls + '\"></span>');\n              $span = $('span.' + textCls, self.getEl());\n            }\n            $span.html(self.encode(text));\n          } else {\n            $span.remove();\n          }\n          self.classes.toggle('btn-has-text', !!text);\n        }\n        self.state.on('change:text', function (e) {\n          setButtonText(e.value);\n        });\n        self.state.on('change:icon', function (e) {\n          var icon = e.value;\n          var prefix = self.classPrefix;\n          self.settings.icon = icon;\n          icon = icon ? prefix + 'ico ' + prefix + 'i-' + self.settings.icon : '';\n          var btnElm = self.getEl().firstChild;\n          var iconElm = btnElm.getElementsByTagName('i')[0];\n          if (icon) {\n            if (!iconElm || iconElm !== btnElm.firstChild) {\n              iconElm = domGlobals.document.createElement('i');\n              btnElm.insertBefore(iconElm, btnElm.firstChild);\n            }\n            iconElm.className = icon;\n          } else if (iconElm) {\n            btnElm.removeChild(iconElm);\n          }\n          setButtonText(self.state.get('text'));\n        });\n        return self._super();\n      }\n    });\n\n    var BrowseButton = Button.extend({\n      init: function (settings) {\n        var self = this;\n        settings = global$2.extend({\n          text: 'Browse...',\n          multiple: false,\n          accept: null\n        }, settings);\n        self._super(settings);\n        self.classes.add('browsebutton');\n        if (settings.multiple) {\n          self.classes.add('multiple');\n        }\n      },\n      postRender: function () {\n        var self = this;\n        var input = funcs.create('input', {\n          type: 'file',\n          id: self._id + '-browse',\n          accept: self.settings.accept\n        });\n        self._super();\n        global$9(input).on('change', function (e) {\n          var files = e.target.files;\n          self.value = function () {\n            if (!files.length) {\n              return null;\n            } else if (self.settings.multiple) {\n              return files;\n            } else {\n              return files[0];\n            }\n          };\n          e.preventDefault();\n          if (files.length) {\n            self.fire('change', e);\n          }\n        });\n        global$9(input).on('click', function (e) {\n          e.stopPropagation();\n        });\n        global$9(self.getEl('button')).on('click touchstart', function (e) {\n          e.stopPropagation();\n          input.click();\n          e.preventDefault();\n        });\n        self.getEl().appendChild(input);\n      },\n      remove: function () {\n        global$9(this.getEl('button')).off();\n        global$9(this.getEl('input')).off();\n        this._super();\n      }\n    });\n\n    var ButtonGroup = Container.extend({\n      Defaults: {\n        defaultType: 'button',\n        role: 'group'\n      },\n      renderHtml: function () {\n        var self = this, layout = self._layout;\n        self.classes.add('btn-group');\n        self.preRender();\n        layout.preRender(self);\n        return '<div id=\"' + self._id + '\" class=\"' + self.classes + '\">' + '<div id=\"' + self._id + '-body\">' + (self.settings.html || '') + layout.renderHtml(self) + '</div>' + '</div>';\n      }\n    });\n\n    var Checkbox = Widget.extend({\n      Defaults: {\n        classes: 'checkbox',\n        role: 'checkbox',\n        checked: false\n      },\n      init: function (settings) {\n        var self = this;\n        self._super(settings);\n        self.on('click mousedown', function (e) {\n          e.preventDefault();\n        });\n        self.on('click', function (e) {\n          e.preventDefault();\n          if (!self.disabled()) {\n            self.checked(!self.checked());\n          }\n        });\n        self.checked(self.settings.checked);\n      },\n      checked: function (state) {\n        if (!arguments.length) {\n          return this.state.get('checked');\n        }\n        this.state.set('checked', state);\n        return this;\n      },\n      value: function (state) {\n        if (!arguments.length) {\n          return this.checked();\n        }\n        return this.checked(state);\n      },\n      renderHtml: function () {\n        var self = this, id = self._id, prefix = self.classPrefix;\n        return '<div id=\"' + id + '\" class=\"' + self.classes + '\" unselectable=\"on\" aria-labelledby=\"' + id + '-al\" tabindex=\"-1\">' + '<i class=\"' + prefix + 'ico ' + prefix + 'i-checkbox\"></i>' + '<span id=\"' + id + '-al\" class=\"' + prefix + 'label\">' + self.encode(self.state.get('text')) + '</span>' + '</div>';\n      },\n      bindStates: function () {\n        var self = this;\n        function checked(state) {\n          self.classes.toggle('checked', state);\n          self.aria('checked', state);\n        }\n        self.state.on('change:text', function (e) {\n          self.getEl('al').firstChild.data = self.translate(e.value);\n        });\n        self.state.on('change:checked change:value', function (e) {\n          self.fire('change');\n          checked(e.value);\n        });\n        self.state.on('change:icon', function (e) {\n          var icon = e.value;\n          var prefix = self.classPrefix;\n          if (typeof icon === 'undefined') {\n            return self.settings.icon;\n          }\n          self.settings.icon = icon;\n          icon = icon ? prefix + 'ico ' + prefix + 'i-' + self.settings.icon : '';\n          var btnElm = self.getEl().firstChild;\n          var iconElm = btnElm.getElementsByTagName('i')[0];\n          if (icon) {\n            if (!iconElm || iconElm !== btnElm.firstChild) {\n              iconElm = domGlobals.document.createElement('i');\n              btnElm.insertBefore(iconElm, btnElm.firstChild);\n            }\n            iconElm.className = icon;\n          } else if (iconElm) {\n            btnElm.removeChild(iconElm);\n          }\n        });\n        if (self.state.get('checked')) {\n          checked(true);\n        }\n        return self._super();\n      }\n    });\n\n    var global$d = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n    var ComboBox = Widget.extend({\n      init: function (settings) {\n        var self = this;\n        self._super(settings);\n        settings = self.settings;\n        self.classes.add('combobox');\n        self.subinput = true;\n        self.ariaTarget = 'inp';\n        settings.menu = settings.menu || settings.values;\n        if (settings.menu) {\n          settings.icon = 'caret';\n        }\n        self.on('click', function (e) {\n          var elm = e.target;\n          var root = self.getEl();\n          if (!global$9.contains(root, elm) && elm !== root) {\n            return;\n          }\n          while (elm && elm !== root) {\n            if (elm.id && elm.id.indexOf('-open') !== -1) {\n              self.fire('action');\n              if (settings.menu) {\n                self.showMenu();\n                if (e.aria) {\n                  self.menu.items()[0].focus();\n                }\n              }\n            }\n            elm = elm.parentNode;\n          }\n        });\n        self.on('keydown', function (e) {\n          var rootControl;\n          if (e.keyCode === 13 && e.target.nodeName === 'INPUT') {\n            e.preventDefault();\n            self.parents().reverse().each(function (ctrl) {\n              if (ctrl.toJSON) {\n                rootControl = ctrl;\n                return false;\n              }\n            });\n            self.fire('submit', { data: rootControl.toJSON() });\n          }\n        });\n        self.on('keyup', function (e) {\n          if (e.target.nodeName === 'INPUT') {\n            var oldValue = self.state.get('value');\n            var newValue = e.target.value;\n            if (newValue !== oldValue) {\n              self.state.set('value', newValue);\n              self.fire('autocomplete', e);\n            }\n          }\n        });\n        self.on('mouseover', function (e) {\n          var tooltip = self.tooltip().moveTo(-65535);\n          if (self.statusLevel() && e.target.className.indexOf(self.classPrefix + 'status') !== -1) {\n            var statusMessage = self.statusMessage() || 'Ok';\n            var rel = tooltip.text(statusMessage).show().testMoveRel(e.target, [\n              'bc-tc',\n              'bc-tl',\n              'bc-tr'\n            ]);\n            tooltip.classes.toggle('tooltip-n', rel === 'bc-tc');\n            tooltip.classes.toggle('tooltip-nw', rel === 'bc-tl');\n            tooltip.classes.toggle('tooltip-ne', rel === 'bc-tr');\n            tooltip.moveRel(e.target, rel);\n          }\n        });\n      },\n      statusLevel: function (value) {\n        if (arguments.length > 0) {\n          this.state.set('statusLevel', value);\n        }\n        return this.state.get('statusLevel');\n      },\n      statusMessage: function (value) {\n        if (arguments.length > 0) {\n          this.state.set('statusMessage', value);\n        }\n        return this.state.get('statusMessage');\n      },\n      showMenu: function () {\n        var self = this;\n        var settings = self.settings;\n        var menu;\n        if (!self.menu) {\n          menu = settings.menu || [];\n          if (menu.length) {\n            menu = {\n              type: 'menu',\n              items: menu\n            };\n          } else {\n            menu.type = menu.type || 'menu';\n          }\n          self.menu = global$4.create(menu).parent(self).renderTo(self.getContainerElm());\n          self.fire('createmenu');\n          self.menu.reflow();\n          self.menu.on('cancel', function (e) {\n            if (e.control === self.menu) {\n              self.focus();\n            }\n          });\n          self.menu.on('show hide', function (e) {\n            e.control.items().each(function (ctrl) {\n              ctrl.active(ctrl.value() === self.value());\n            });\n          }).fire('show');\n          self.menu.on('select', function (e) {\n            self.value(e.control.value());\n          });\n          self.on('focusin', function (e) {\n            if (e.target.tagName.toUpperCase() === 'INPUT') {\n              self.menu.hide();\n            }\n          });\n          self.aria('expanded', true);\n        }\n        self.menu.show();\n        self.menu.layoutRect({ w: self.layoutRect().w });\n        self.menu.moveRel(self.getEl(), self.isRtl() ? [\n          'br-tr',\n          'tr-br'\n        ] : [\n          'bl-tl',\n          'tl-bl'\n        ]);\n      },\n      focus: function () {\n        this.getEl('inp').focus();\n      },\n      repaint: function () {\n        var self = this, elm = self.getEl(), openElm = self.getEl('open'), rect = self.layoutRect();\n        var width, lineHeight, innerPadding = 0;\n        var inputElm = elm.firstChild;\n        if (self.statusLevel() && self.statusLevel() !== 'none') {\n          innerPadding = parseInt(funcs.getRuntimeStyle(inputElm, 'padding-right'), 10) - parseInt(funcs.getRuntimeStyle(inputElm, 'padding-left'), 10);\n        }\n        if (openElm) {\n          width = rect.w - funcs.getSize(openElm).width - 10;\n        } else {\n          width = rect.w - 10;\n        }\n        var doc = domGlobals.document;\n        if (doc.all && (!doc.documentMode || doc.documentMode <= 8)) {\n          lineHeight = self.layoutRect().h - 2 + 'px';\n        }\n        global$9(inputElm).css({\n          width: width - innerPadding,\n          lineHeight: lineHeight\n        });\n        self._super();\n        return self;\n      },\n      postRender: function () {\n        var self = this;\n        global$9(this.getEl('inp')).on('change', function (e) {\n          self.state.set('value', e.target.value);\n          self.fire('change', e);\n        });\n        return self._super();\n      },\n      renderHtml: function () {\n        var self = this, id = self._id, settings = self.settings, prefix = self.classPrefix;\n        var value = self.state.get('value') || '';\n        var icon, text, openBtnHtml = '', extraAttrs = '', statusHtml = '';\n        if ('spellcheck' in settings) {\n          extraAttrs += ' spellcheck=\"' + settings.spellcheck + '\"';\n        }\n        if (settings.maxLength) {\n          extraAttrs += ' maxlength=\"' + settings.maxLength + '\"';\n        }\n        if (settings.size) {\n          extraAttrs += ' size=\"' + settings.size + '\"';\n        }\n        if (settings.subtype) {\n          extraAttrs += ' type=\"' + settings.subtype + '\"';\n        }\n        statusHtml = '<i id=\"' + id + '-status\" class=\"mce-status mce-ico\" style=\"display: none\"></i>';\n        if (self.disabled()) {\n          extraAttrs += ' disabled=\"disabled\"';\n        }\n        icon = settings.icon;\n        if (icon && icon !== 'caret') {\n          icon = prefix + 'ico ' + prefix + 'i-' + settings.icon;\n        }\n        text = self.state.get('text');\n        if (icon || text) {\n          openBtnHtml = '<div id=\"' + id + '-open\" class=\"' + prefix + 'btn ' + prefix + 'open\" tabIndex=\"-1\" role=\"button\">' + '<button id=\"' + id + '-action\" type=\"button\" hidefocus=\"1\" tabindex=\"-1\">' + (icon !== 'caret' ? '<i class=\"' + icon + '\"></i>' : '<i class=\"' + prefix + 'caret\"></i>') + (text ? (icon ? ' ' : '') + text : '') + '</button>' + '</div>';\n          self.classes.add('has-open');\n        }\n        return '<div id=\"' + id + '\" class=\"' + self.classes + '\">' + '<input id=\"' + id + '-inp\" class=\"' + prefix + 'textbox\" value=\"' + self.encode(value, false) + '\" hidefocus=\"1\"' + extraAttrs + ' placeholder=\"' + self.encode(settings.placeholder) + '\" />' + statusHtml + openBtnHtml + '</div>';\n      },\n      value: function (value) {\n        if (arguments.length) {\n          this.state.set('value', value);\n          return this;\n        }\n        if (this.state.get('rendered')) {\n          this.state.set('value', this.getEl('inp').value);\n        }\n        return this.state.get('value');\n      },\n      showAutoComplete: function (items, term) {\n        var self = this;\n        if (items.length === 0) {\n          self.hideMenu();\n          return;\n        }\n        var insert = function (value, title) {\n          return function () {\n            self.fire('selectitem', {\n              title: title,\n              value: value\n            });\n          };\n        };\n        if (self.menu) {\n          self.menu.items().remove();\n        } else {\n          self.menu = global$4.create({\n            type: 'menu',\n            classes: 'combobox-menu',\n            layout: 'flow'\n          }).parent(self).renderTo();\n        }\n        global$2.each(items, function (item) {\n          self.menu.add({\n            text: item.title,\n            url: item.previewUrl,\n            match: term,\n            classes: 'menu-item-ellipsis',\n            onclick: insert(item.value, item.title)\n          });\n        });\n        self.menu.renderNew();\n        self.hideMenu();\n        self.menu.on('cancel', function (e) {\n          if (e.control.parent() === self.menu) {\n            e.stopPropagation();\n            self.focus();\n            self.hideMenu();\n          }\n        });\n        self.menu.on('select', function () {\n          self.focus();\n        });\n        var maxW = self.layoutRect().w;\n        self.menu.layoutRect({\n          w: maxW,\n          minW: 0,\n          maxW: maxW\n        });\n        self.menu.repaint();\n        self.menu.reflow();\n        self.menu.show();\n        self.menu.moveRel(self.getEl(), self.isRtl() ? [\n          'br-tr',\n          'tr-br'\n        ] : [\n          'bl-tl',\n          'tl-bl'\n        ]);\n      },\n      hideMenu: function () {\n        if (this.menu) {\n          this.menu.hide();\n        }\n      },\n      bindStates: function () {\n        var self = this;\n        self.state.on('change:value', function (e) {\n          if (self.getEl('inp').value !== e.value) {\n            self.getEl('inp').value = e.value;\n          }\n        });\n        self.state.on('change:disabled', function (e) {\n          self.getEl('inp').disabled = e.value;\n        });\n        self.state.on('change:statusLevel', function (e) {\n          var statusIconElm = self.getEl('status');\n          var prefix = self.classPrefix, value = e.value;\n          funcs.css(statusIconElm, 'display', value === 'none' ? 'none' : '');\n          funcs.toggleClass(statusIconElm, prefix + 'i-checkmark', value === 'ok');\n          funcs.toggleClass(statusIconElm, prefix + 'i-warning', value === 'warn');\n          funcs.toggleClass(statusIconElm, prefix + 'i-error', value === 'error');\n          self.classes.toggle('has-status', value !== 'none');\n          self.repaint();\n        });\n        funcs.on(self.getEl('status'), 'mouseleave', function () {\n          self.tooltip().hide();\n        });\n        self.on('cancel', function (e) {\n          if (self.menu && self.menu.visible()) {\n            e.stopPropagation();\n            self.hideMenu();\n          }\n        });\n        var focusIdx = function (idx, menu) {\n          if (menu && menu.items().length > 0) {\n            menu.items().eq(idx)[0].focus();\n          }\n        };\n        self.on('keydown', function (e) {\n          var keyCode = e.keyCode;\n          if (e.target.nodeName === 'INPUT') {\n            if (keyCode === global$d.DOWN) {\n              e.preventDefault();\n              self.fire('autocomplete');\n              focusIdx(0, self.menu);\n            } else if (keyCode === global$d.UP) {\n              e.preventDefault();\n              focusIdx(-1, self.menu);\n            }\n          }\n        });\n        return self._super();\n      },\n      remove: function () {\n        global$9(this.getEl('inp')).off();\n        if (this.menu) {\n          this.menu.remove();\n        }\n        this._super();\n      }\n    });\n\n    var ColorBox = ComboBox.extend({\n      init: function (settings) {\n        var self = this;\n        settings.spellcheck = false;\n        if (settings.onaction) {\n          settings.icon = 'none';\n        }\n        self._super(settings);\n        self.classes.add('colorbox');\n        self.on('change keyup postrender', function () {\n          self.repaintColor(self.value());\n        });\n      },\n      repaintColor: function (value) {\n        var openElm = this.getEl('open');\n        var elm = openElm ? openElm.getElementsByTagName('i')[0] : null;\n        if (elm) {\n          try {\n            elm.style.background = value;\n          } catch (ex) {\n          }\n        }\n      },\n      bindStates: function () {\n        var self = this;\n        self.state.on('change:value', function (e) {\n          if (self.state.get('rendered')) {\n            self.repaintColor(e.value);\n          }\n        });\n        return self._super();\n      }\n    });\n\n    var PanelButton = Button.extend({\n      showPanel: function () {\n        var self = this, settings = self.settings;\n        self.classes.add('opened');\n        if (!self.panel) {\n          var panelSettings = settings.panel;\n          if (panelSettings.type) {\n            panelSettings = {\n              layout: 'grid',\n              items: panelSettings\n            };\n          }\n          panelSettings.role = panelSettings.role || 'dialog';\n          panelSettings.popover = true;\n          panelSettings.autohide = true;\n          panelSettings.ariaRoot = true;\n          self.panel = new FloatPanel(panelSettings).on('hide', function () {\n            self.classes.remove('opened');\n          }).on('cancel', function (e) {\n            e.stopPropagation();\n            self.focus();\n            self.hidePanel();\n          }).parent(self).renderTo(self.getContainerElm());\n          self.panel.fire('show');\n          self.panel.reflow();\n        } else {\n          self.panel.show();\n        }\n        var rtlRels = [\n          'bc-tc',\n          'bc-tl',\n          'bc-tr'\n        ];\n        var ltrRels = [\n          'bc-tc',\n          'bc-tr',\n          'bc-tl',\n          'tc-bc',\n          'tc-br',\n          'tc-bl'\n        ];\n        var rel = self.panel.testMoveRel(self.getEl(), settings.popoverAlign || (self.isRtl() ? rtlRels : ltrRels));\n        self.panel.classes.toggle('start', rel.substr(-1) === 'l');\n        self.panel.classes.toggle('end', rel.substr(-1) === 'r');\n        var isTop = rel.substr(0, 1) === 't';\n        self.panel.classes.toggle('bottom', !isTop);\n        self.panel.classes.toggle('top', isTop);\n        self.panel.moveRel(self.getEl(), rel);\n      },\n      hidePanel: function () {\n        var self = this;\n        if (self.panel) {\n          self.panel.hide();\n        }\n      },\n      postRender: function () {\n        var self = this;\n        self.aria('haspopup', true);\n        self.on('click', function (e) {\n          if (e.control === self) {\n            if (self.panel && self.panel.visible()) {\n              self.hidePanel();\n            } else {\n              self.showPanel();\n              self.panel.focus(!!e.aria);\n            }\n          }\n        });\n        return self._super();\n      },\n      remove: function () {\n        if (this.panel) {\n          this.panel.remove();\n          this.panel = null;\n        }\n        return this._super();\n      }\n    });\n\n    var DOM$3 = global$3.DOM;\n    var ColorButton = PanelButton.extend({\n      init: function (settings) {\n        this._super(settings);\n        this.classes.add('splitbtn');\n        this.classes.add('colorbutton');\n      },\n      color: function (color) {\n        if (color) {\n          this._color = color;\n          this.getEl('preview').style.backgroundColor = color;\n          return this;\n        }\n        return this._color;\n      },\n      resetColor: function () {\n        this._color = null;\n        this.getEl('preview').style.backgroundColor = null;\n        return this;\n      },\n      renderHtml: function () {\n        var self = this, id = self._id, prefix = self.classPrefix, text = self.state.get('text');\n        var icon = self.settings.icon ? prefix + 'ico ' + prefix + 'i-' + self.settings.icon : '';\n        var image = self.settings.image ? ' style=\"background-image: url(\\'' + self.settings.image + '\\')\"' : '';\n        var textHtml = '';\n        if (text) {\n          self.classes.add('btn-has-text');\n          textHtml = '<span class=\"' + prefix + 'txt\">' + self.encode(text) + '</span>';\n        }\n        return '<div id=\"' + id + '\" class=\"' + self.classes + '\" role=\"button\" tabindex=\"-1\" aria-haspopup=\"true\">' + '<button role=\"presentation\" hidefocus=\"1\" type=\"button\" tabindex=\"-1\">' + (icon ? '<i class=\"' + icon + '\"' + image + '></i>' : '') + '<span id=\"' + id + '-preview\" class=\"' + prefix + 'preview\"></span>' + textHtml + '</button>' + '<button type=\"button\" class=\"' + prefix + 'open\" hidefocus=\"1\" tabindex=\"-1\">' + ' <i class=\"' + prefix + 'caret\"></i>' + '</button>' + '</div>';\n      },\n      postRender: function () {\n        var self = this, onClickHandler = self.settings.onclick;\n        self.on('click', function (e) {\n          if (e.aria && e.aria.key === 'down') {\n            return;\n          }\n          if (e.control === self && !DOM$3.getParent(e.target, '.' + self.classPrefix + 'open')) {\n            e.stopImmediatePropagation();\n            onClickHandler.call(self, e);\n          }\n        });\n        delete self.settings.onclick;\n        return self._super();\n      }\n    });\n\n    var global$e = tinymce.util.Tools.resolve('tinymce.util.Color');\n\n    var ColorPicker = Widget.extend({\n      Defaults: { classes: 'widget colorpicker' },\n      init: function (settings) {\n        this._super(settings);\n      },\n      postRender: function () {\n        var self = this;\n        var color = self.color();\n        var hsv, hueRootElm, huePointElm, svRootElm, svPointElm;\n        hueRootElm = self.getEl('h');\n        huePointElm = self.getEl('hp');\n        svRootElm = self.getEl('sv');\n        svPointElm = self.getEl('svp');\n        function getPos(elm, event) {\n          var pos = funcs.getPos(elm);\n          var x, y;\n          x = event.pageX - pos.x;\n          y = event.pageY - pos.y;\n          x = Math.max(0, Math.min(x / elm.clientWidth, 1));\n          y = Math.max(0, Math.min(y / elm.clientHeight, 1));\n          return {\n            x: x,\n            y: y\n          };\n        }\n        function updateColor(hsv, hueUpdate) {\n          var hue = (360 - hsv.h) / 360;\n          funcs.css(huePointElm, { top: hue * 100 + '%' });\n          if (!hueUpdate) {\n            funcs.css(svPointElm, {\n              left: hsv.s + '%',\n              top: 100 - hsv.v + '%'\n            });\n          }\n          svRootElm.style.background = global$e({\n            s: 100,\n            v: 100,\n            h: hsv.h\n          }).toHex();\n          self.color().parse({\n            s: hsv.s,\n            v: hsv.v,\n            h: hsv.h\n          });\n        }\n        function updateSaturationAndValue(e) {\n          var pos;\n          pos = getPos(svRootElm, e);\n          hsv.s = pos.x * 100;\n          hsv.v = (1 - pos.y) * 100;\n          updateColor(hsv);\n          self.fire('change');\n        }\n        function updateHue(e) {\n          var pos;\n          pos = getPos(hueRootElm, e);\n          hsv = color.toHsv();\n          hsv.h = (1 - pos.y) * 360;\n          updateColor(hsv, true);\n          self.fire('change');\n        }\n        self._repaint = function () {\n          hsv = color.toHsv();\n          updateColor(hsv);\n        };\n        self._super();\n        self._svdraghelper = new DragHelper(self._id + '-sv', {\n          start: updateSaturationAndValue,\n          drag: updateSaturationAndValue\n        });\n        self._hdraghelper = new DragHelper(self._id + '-h', {\n          start: updateHue,\n          drag: updateHue\n        });\n        self._repaint();\n      },\n      rgb: function () {\n        return this.color().toRgb();\n      },\n      value: function (value) {\n        var self = this;\n        if (arguments.length) {\n          self.color().parse(value);\n          if (self._rendered) {\n            self._repaint();\n          }\n        } else {\n          return self.color().toHex();\n        }\n      },\n      color: function () {\n        if (!this._color) {\n          this._color = global$e();\n        }\n        return this._color;\n      },\n      renderHtml: function () {\n        var self = this;\n        var id = self._id;\n        var prefix = self.classPrefix;\n        var hueHtml;\n        var stops = '#ff0000,#ff0080,#ff00ff,#8000ff,#0000ff,#0080ff,#00ffff,#00ff80,#00ff00,#80ff00,#ffff00,#ff8000,#ff0000';\n        function getOldIeFallbackHtml() {\n          var i, l, html = '', gradientPrefix, stopsList;\n          gradientPrefix = 'filter:progid:DXImageTransform.Microsoft.gradient(GradientType=0,startColorstr=';\n          stopsList = stops.split(',');\n          for (i = 0, l = stopsList.length - 1; i < l; i++) {\n            html += '<div class=\"' + prefix + 'colorpicker-h-chunk\" style=\"' + 'height:' + 100 / l + '%;' + gradientPrefix + stopsList[i] + ',endColorstr=' + stopsList[i + 1] + ');' + '-ms-' + gradientPrefix + stopsList[i] + ',endColorstr=' + stopsList[i + 1] + ')' + '\"></div>';\n          }\n          return html;\n        }\n        var gradientCssText = 'background: -ms-linear-gradient(top,' + stops + ');' + 'background: linear-gradient(to bottom,' + stops + ');';\n        hueHtml = '<div id=\"' + id + '-h\" class=\"' + prefix + 'colorpicker-h\" style=\"' + gradientCssText + '\">' + getOldIeFallbackHtml() + '<div id=\"' + id + '-hp\" class=\"' + prefix + 'colorpicker-h-marker\"></div>' + '</div>';\n        return '<div id=\"' + id + '\" class=\"' + self.classes + '\">' + '<div id=\"' + id + '-sv\" class=\"' + prefix + 'colorpicker-sv\">' + '<div class=\"' + prefix + 'colorpicker-overlay1\">' + '<div class=\"' + prefix + 'colorpicker-overlay2\">' + '<div id=\"' + id + '-svp\" class=\"' + prefix + 'colorpicker-selector1\">' + '<div class=\"' + prefix + 'colorpicker-selector2\"></div>' + '</div>' + '</div>' + '</div>' + '</div>' + hueHtml + '</div>';\n      }\n    });\n\n    var DropZone = Widget.extend({\n      init: function (settings) {\n        var self = this;\n        settings = global$2.extend({\n          height: 100,\n          text: 'Drop an image here',\n          multiple: false,\n          accept: null\n        }, settings);\n        self._super(settings);\n        self.classes.add('dropzone');\n        if (settings.multiple) {\n          self.classes.add('multiple');\n        }\n      },\n      renderHtml: function () {\n        var self = this;\n        var attrs, elm;\n        var cfg = self.settings;\n        attrs = {\n          id: self._id,\n          hidefocus: '1'\n        };\n        elm = funcs.create('div', attrs, '<span>' + this.translate(cfg.text) + '</span>');\n        if (cfg.height) {\n          funcs.css(elm, 'height', cfg.height + 'px');\n        }\n        if (cfg.width) {\n          funcs.css(elm, 'width', cfg.width + 'px');\n        }\n        elm.className = self.classes;\n        return elm.outerHTML;\n      },\n      postRender: function () {\n        var self = this;\n        var toggleDragClass = function (e) {\n          e.preventDefault();\n          self.classes.toggle('dragenter');\n          self.getEl().className = self.classes;\n        };\n        var filter = function (files) {\n          var accept = self.settings.accept;\n          if (typeof accept !== 'string') {\n            return files;\n          }\n          var re = new RegExp('(' + accept.split(/\\s*,\\s*/).join('|') + ')$', 'i');\n          return global$2.grep(files, function (file) {\n            return re.test(file.name);\n          });\n        };\n        self._super();\n        self.$el.on('dragover', function (e) {\n          e.preventDefault();\n        });\n        self.$el.on('dragenter', toggleDragClass);\n        self.$el.on('dragleave', toggleDragClass);\n        self.$el.on('drop', function (e) {\n          e.preventDefault();\n          if (self.state.get('disabled')) {\n            return;\n          }\n          var files = filter(e.dataTransfer.files);\n          self.value = function () {\n            if (!files.length) {\n              return null;\n            } else if (self.settings.multiple) {\n              return files;\n            } else {\n              return files[0];\n            }\n          };\n          if (files.length) {\n            self.fire('change', e);\n          }\n        });\n      },\n      remove: function () {\n        this.$el.off();\n        this._super();\n      }\n    });\n\n    var Path = Widget.extend({\n      init: function (settings) {\n        var self = this;\n        if (!settings.delimiter) {\n          settings.delimiter = '\\xBB';\n        }\n        self._super(settings);\n        self.classes.add('path');\n        self.canFocus = true;\n        self.on('click', function (e) {\n          var index;\n          var target = e.target;\n          if (index = target.getAttribute('data-index')) {\n            self.fire('select', {\n              value: self.row()[index],\n              index: index\n            });\n          }\n        });\n        self.row(self.settings.row);\n      },\n      focus: function () {\n        var self = this;\n        self.getEl().firstChild.focus();\n        return self;\n      },\n      row: function (row) {\n        if (!arguments.length) {\n          return this.state.get('row');\n        }\n        this.state.set('row', row);\n        return this;\n      },\n      renderHtml: function () {\n        var self = this;\n        return '<div id=\"' + self._id + '\" class=\"' + self.classes + '\">' + self._getDataPathHtml(self.state.get('row')) + '</div>';\n      },\n      bindStates: function () {\n        var self = this;\n        self.state.on('change:row', function (e) {\n          self.innerHtml(self._getDataPathHtml(e.value));\n        });\n        return self._super();\n      },\n      _getDataPathHtml: function (data) {\n        var self = this;\n        var parts = data || [];\n        var i, l, html = '';\n        var prefix = self.classPrefix;\n        for (i = 0, l = parts.length; i < l; i++) {\n          html += (i > 0 ? '<div class=\"' + prefix + 'divider\" aria-hidden=\"true\"> ' + self.settings.delimiter + ' </div>' : '') + '<div role=\"button\" class=\"' + prefix + 'path-item' + (i === l - 1 ? ' ' + prefix + 'last' : '') + '\" data-index=\"' + i + '\" tabindex=\"-1\" id=\"' + self._id + '-' + i + '\" aria-level=\"' + (i + 1) + '\">' + parts[i].name + '</div>';\n        }\n        if (!html) {\n          html = '<div class=\"' + prefix + 'path-item\">\\xA0</div>';\n        }\n        return html;\n      }\n    });\n\n    var ElementPath = Path.extend({\n      postRender: function () {\n        var self = this, editor = self.settings.editor;\n        function isHidden(elm) {\n          if (elm.nodeType === 1) {\n            if (elm.nodeName === 'BR' || !!elm.getAttribute('data-mce-bogus')) {\n              return true;\n            }\n            if (elm.getAttribute('data-mce-type') === 'bookmark') {\n              return true;\n            }\n          }\n          return false;\n        }\n        if (editor.settings.elementpath !== false) {\n          self.on('select', function (e) {\n            editor.focus();\n            editor.selection.select(this.row()[e.index].element);\n            editor.nodeChanged();\n          });\n          editor.on('nodeChange', function (e) {\n            var outParents = [];\n            var parents = e.parents;\n            var i = parents.length;\n            while (i--) {\n              if (parents[i].nodeType === 1 && !isHidden(parents[i])) {\n                var args = editor.fire('ResolveName', {\n                  name: parents[i].nodeName.toLowerCase(),\n                  target: parents[i]\n                });\n                if (!args.isDefaultPrevented()) {\n                  outParents.push({\n                    name: args.name,\n                    element: parents[i]\n                  });\n                }\n                if (args.isPropagationStopped()) {\n                  break;\n                }\n              }\n            }\n            self.row(outParents);\n          });\n        }\n        return self._super();\n      }\n    });\n\n    var FormItem = Container.extend({\n      Defaults: {\n        layout: 'flex',\n        align: 'center',\n        defaults: { flex: 1 }\n      },\n      renderHtml: function () {\n        var self = this, layout = self._layout, prefix = self.classPrefix;\n        self.classes.add('formitem');\n        layout.preRender(self);\n        return '<div id=\"' + self._id + '\" class=\"' + self.classes + '\" hidefocus=\"1\" tabindex=\"-1\">' + (self.settings.title ? '<div id=\"' + self._id + '-title\" class=\"' + prefix + 'title\">' + self.settings.title + '</div>' : '') + '<div id=\"' + self._id + '-body\" class=\"' + self.bodyClasses + '\">' + (self.settings.html || '') + layout.renderHtml(self) + '</div>' + '</div>';\n      }\n    });\n\n    var Form = Container.extend({\n      Defaults: {\n        containerCls: 'form',\n        layout: 'flex',\n        direction: 'column',\n        align: 'stretch',\n        flex: 1,\n        padding: 15,\n        labelGap: 30,\n        spacing: 10,\n        callbacks: {\n          submit: function () {\n            this.submit();\n          }\n        }\n      },\n      preRender: function () {\n        var self = this, items = self.items();\n        if (!self.settings.formItemDefaults) {\n          self.settings.formItemDefaults = {\n            layout: 'flex',\n            autoResize: 'overflow',\n            defaults: { flex: 1 }\n          };\n        }\n        items.each(function (ctrl) {\n          var formItem;\n          var label = ctrl.settings.label;\n          if (label) {\n            formItem = new FormItem(global$2.extend({\n              items: {\n                type: 'label',\n                id: ctrl._id + '-l',\n                text: label,\n                flex: 0,\n                forId: ctrl._id,\n                disabled: ctrl.disabled()\n              }\n            }, self.settings.formItemDefaults));\n            formItem.type = 'formitem';\n            ctrl.aria('labelledby', ctrl._id + '-l');\n            if (typeof ctrl.settings.flex === 'undefined') {\n              ctrl.settings.flex = 1;\n            }\n            self.replace(ctrl, formItem);\n            formItem.add(ctrl);\n          }\n        });\n      },\n      submit: function () {\n        return this.fire('submit', { data: this.toJSON() });\n      },\n      postRender: function () {\n        var self = this;\n        self._super();\n        self.fromJSON(self.settings.data);\n      },\n      bindStates: function () {\n        var self = this;\n        self._super();\n        function recalcLabels() {\n          var maxLabelWidth = 0;\n          var labels = [];\n          var i, labelGap, items;\n          if (self.settings.labelGapCalc === false) {\n            return;\n          }\n          if (self.settings.labelGapCalc === 'children') {\n            items = self.find('formitem');\n          } else {\n            items = self.items();\n          }\n          items.filter('formitem').each(function (item) {\n            var labelCtrl = item.items()[0], labelWidth = labelCtrl.getEl().clientWidth;\n            maxLabelWidth = labelWidth > maxLabelWidth ? labelWidth : maxLabelWidth;\n            labels.push(labelCtrl);\n          });\n          labelGap = self.settings.labelGap || 0;\n          i = labels.length;\n          while (i--) {\n            labels[i].settings.minWidth = maxLabelWidth + labelGap;\n          }\n        }\n        self.on('show', recalcLabels);\n        recalcLabels();\n      }\n    });\n\n    var FieldSet = Form.extend({\n      Defaults: {\n        containerCls: 'fieldset',\n        layout: 'flex',\n        direction: 'column',\n        align: 'stretch',\n        flex: 1,\n        padding: '25 15 5 15',\n        labelGap: 30,\n        spacing: 10,\n        border: 1\n      },\n      renderHtml: function () {\n        var self = this, layout = self._layout, prefix = self.classPrefix;\n        self.preRender();\n        layout.preRender(self);\n        return '<fieldset id=\"' + self._id + '\" class=\"' + self.classes + '\" hidefocus=\"1\" tabindex=\"-1\">' + (self.settings.title ? '<legend id=\"' + self._id + '-title\" class=\"' + prefix + 'fieldset-title\">' + self.settings.title + '</legend>' : '') + '<div id=\"' + self._id + '-body\" class=\"' + self.bodyClasses + '\">' + (self.settings.html || '') + layout.renderHtml(self) + '</div>' + '</fieldset>';\n      }\n    });\n\n    var unique$1 = 0;\n    var generate = function (prefix) {\n      var date = new Date();\n      var time = date.getTime();\n      var random = Math.floor(Math.random() * 1000000000);\n      unique$1++;\n      return prefix + '_' + random + unique$1 + String(time);\n    };\n\n    var fromHtml = function (html, scope) {\n      var doc = scope || domGlobals.document;\n      var div = doc.createElement('div');\n      div.innerHTML = html;\n      if (!div.hasChildNodes() || div.childNodes.length > 1) {\n        domGlobals.console.error('HTML does not have a single root node', html);\n        throw new Error('HTML must have a single root node');\n      }\n      return fromDom(div.childNodes[0]);\n    };\n    var fromTag = function (tag, scope) {\n      var doc = scope || domGlobals.document;\n      var node = doc.createElement(tag);\n      return fromDom(node);\n    };\n    var fromText = function (text, scope) {\n      var doc = scope || domGlobals.document;\n      var node = doc.createTextNode(text);\n      return fromDom(node);\n    };\n    var fromDom = function (node) {\n      if (node === null || node === undefined) {\n        throw new Error('Node cannot be null or undefined');\n      }\n      return { dom: constant(node) };\n    };\n    var fromPoint = function (docElm, x, y) {\n      var doc = docElm.dom();\n      return Option.from(doc.elementFromPoint(x, y)).map(fromDom);\n    };\n    var Element = {\n      fromHtml: fromHtml,\n      fromTag: fromTag,\n      fromText: fromText,\n      fromDom: fromDom,\n      fromPoint: fromPoint\n    };\n\n    var cached = function (f) {\n      var called = false;\n      var r;\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        if (!called) {\n          called = true;\n          r = f.apply(null, args);\n        }\n        return r;\n      };\n    };\n\n    var ATTRIBUTE = domGlobals.Node.ATTRIBUTE_NODE;\n    var CDATA_SECTION = domGlobals.Node.CDATA_SECTION_NODE;\n    var COMMENT = domGlobals.Node.COMMENT_NODE;\n    var DOCUMENT = domGlobals.Node.DOCUMENT_NODE;\n    var DOCUMENT_TYPE = domGlobals.Node.DOCUMENT_TYPE_NODE;\n    var DOCUMENT_FRAGMENT = domGlobals.Node.DOCUMENT_FRAGMENT_NODE;\n    var ELEMENT = domGlobals.Node.ELEMENT_NODE;\n    var TEXT = domGlobals.Node.TEXT_NODE;\n    var PROCESSING_INSTRUCTION = domGlobals.Node.PROCESSING_INSTRUCTION_NODE;\n    var ENTITY_REFERENCE = domGlobals.Node.ENTITY_REFERENCE_NODE;\n    var ENTITY = domGlobals.Node.ENTITY_NODE;\n    var NOTATION = domGlobals.Node.NOTATION_NODE;\n\n    var Global = typeof domGlobals.window !== 'undefined' ? domGlobals.window : Function('return this;')();\n\n    var path = function (parts, scope) {\n      var o = scope !== undefined && scope !== null ? scope : Global;\n      for (var i = 0; i < parts.length && o !== undefined && o !== null; ++i) {\n        o = o[parts[i]];\n      }\n      return o;\n    };\n    var resolve = function (p, scope) {\n      var parts = p.split('.');\n      return path(parts, scope);\n    };\n\n    var unsafe = function (name, scope) {\n      return resolve(name, scope);\n    };\n    var getOrDie = function (name, scope) {\n      var actual = unsafe(name, scope);\n      if (actual === undefined || actual === null) {\n        throw new Error(name + ' not available on this browser');\n      }\n      return actual;\n    };\n    var Global$1 = { getOrDie: getOrDie };\n\n    var Immutable = function () {\n      var fields = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        fields[_i] = arguments[_i];\n      }\n      return function () {\n        var values = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          values[_i] = arguments[_i];\n        }\n        if (fields.length !== values.length) {\n          throw new Error('Wrong number of arguments to struct. Expected \"[' + fields.length + ']\", got ' + values.length + ' arguments');\n        }\n        var struct = {};\n        each(fields, function (name, i) {\n          struct[name] = constant(values[i]);\n        });\n        return struct;\n      };\n    };\n\n    var node = function () {\n      var f = Global$1.getOrDie('Node');\n      return f;\n    };\n    var compareDocumentPosition = function (a, b, match) {\n      return (a.compareDocumentPosition(b) & match) !== 0;\n    };\n    var documentPositionPreceding = function (a, b) {\n      return compareDocumentPosition(a, b, node().DOCUMENT_POSITION_PRECEDING);\n    };\n    var documentPositionContainedBy = function (a, b) {\n      return compareDocumentPosition(a, b, node().DOCUMENT_POSITION_CONTAINED_BY);\n    };\n    var Node = {\n      documentPositionPreceding: documentPositionPreceding,\n      documentPositionContainedBy: documentPositionContainedBy\n    };\n\n    var firstMatch = function (regexes, s) {\n      for (var i = 0; i < regexes.length; i++) {\n        var x = regexes[i];\n        if (x.test(s)) {\n          return x;\n        }\n      }\n      return undefined;\n    };\n    var find$1 = function (regexes, agent) {\n      var r = firstMatch(regexes, agent);\n      if (!r) {\n        return {\n          major: 0,\n          minor: 0\n        };\n      }\n      var group = function (i) {\n        return Number(agent.replace(r, '$' + i));\n      };\n      return nu(group(1), group(2));\n    };\n    var detect = function (versionRegexes, agent) {\n      var cleanedAgent = String(agent).toLowerCase();\n      if (versionRegexes.length === 0) {\n        return unknown();\n      }\n      return find$1(versionRegexes, cleanedAgent);\n    };\n    var unknown = function () {\n      return nu(0, 0);\n    };\n    var nu = function (major, minor) {\n      return {\n        major: major,\n        minor: minor\n      };\n    };\n    var Version = {\n      nu: nu,\n      detect: detect,\n      unknown: unknown\n    };\n\n    var edge = 'Edge';\n    var chrome = 'Chrome';\n    var ie = 'IE';\n    var opera = 'Opera';\n    var firefox = 'Firefox';\n    var safari = 'Safari';\n    var isBrowser = function (name, current) {\n      return function () {\n        return current === name;\n      };\n    };\n    var unknown$1 = function () {\n      return nu$1({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    var nu$1 = function (info) {\n      var current = info.current;\n      var version = info.version;\n      return {\n        current: current,\n        version: version,\n        isEdge: isBrowser(edge, current),\n        isChrome: isBrowser(chrome, current),\n        isIE: isBrowser(ie, current),\n        isOpera: isBrowser(opera, current),\n        isFirefox: isBrowser(firefox, current),\n        isSafari: isBrowser(safari, current)\n      };\n    };\n    var Browser = {\n      unknown: unknown$1,\n      nu: nu$1,\n      edge: constant(edge),\n      chrome: constant(chrome),\n      ie: constant(ie),\n      opera: constant(opera),\n      firefox: constant(firefox),\n      safari: constant(safari)\n    };\n\n    var windows$1 = 'Windows';\n    var ios = 'iOS';\n    var android = 'Android';\n    var linux = 'Linux';\n    var osx = 'OSX';\n    var solaris = 'Solaris';\n    var freebsd = 'FreeBSD';\n    var isOS = function (name, current) {\n      return function () {\n        return current === name;\n      };\n    };\n    var unknown$2 = function () {\n      return nu$2({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    var nu$2 = function (info) {\n      var current = info.current;\n      var version = info.version;\n      return {\n        current: current,\n        version: version,\n        isWindows: isOS(windows$1, current),\n        isiOS: isOS(ios, current),\n        isAndroid: isOS(android, current),\n        isOSX: isOS(osx, current),\n        isLinux: isOS(linux, current),\n        isSolaris: isOS(solaris, current),\n        isFreeBSD: isOS(freebsd, current)\n      };\n    };\n    var OperatingSystem = {\n      unknown: unknown$2,\n      nu: nu$2,\n      windows: constant(windows$1),\n      ios: constant(ios),\n      android: constant(android),\n      linux: constant(linux),\n      osx: constant(osx),\n      solaris: constant(solaris),\n      freebsd: constant(freebsd)\n    };\n\n    var DeviceType = function (os, browser, userAgent) {\n      var isiPad = os.isiOS() && /ipad/i.test(userAgent) === true;\n      var isiPhone = os.isiOS() && !isiPad;\n      var isAndroid3 = os.isAndroid() && os.version.major === 3;\n      var isAndroid4 = os.isAndroid() && os.version.major === 4;\n      var isTablet = isiPad || isAndroid3 || isAndroid4 && /mobile/i.test(userAgent) === true;\n      var isTouch = os.isiOS() || os.isAndroid();\n      var isPhone = isTouch && !isTablet;\n      var iOSwebview = browser.isSafari() && os.isiOS() && /safari/i.test(userAgent) === false;\n      return {\n        isiPad: constant(isiPad),\n        isiPhone: constant(isiPhone),\n        isTablet: constant(isTablet),\n        isPhone: constant(isPhone),\n        isTouch: constant(isTouch),\n        isAndroid: os.isAndroid,\n        isiOS: os.isiOS,\n        isWebView: constant(iOSwebview)\n      };\n    };\n\n    var detect$1 = function (candidates, userAgent) {\n      var agent = String(userAgent).toLowerCase();\n      return find(candidates, function (candidate) {\n        return candidate.search(agent);\n      });\n    };\n    var detectBrowser = function (browsers, userAgent) {\n      return detect$1(browsers, userAgent).map(function (browser) {\n        var version = Version.detect(browser.versionRegexes, userAgent);\n        return {\n          current: browser.name,\n          version: version\n        };\n      });\n    };\n    var detectOs = function (oses, userAgent) {\n      return detect$1(oses, userAgent).map(function (os) {\n        var version = Version.detect(os.versionRegexes, userAgent);\n        return {\n          current: os.name,\n          version: version\n        };\n      });\n    };\n    var UaString = {\n      detectBrowser: detectBrowser,\n      detectOs: detectOs\n    };\n\n    var contains = function (str, substr) {\n      return str.indexOf(substr) !== -1;\n    };\n\n    var normalVersionRegex = /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/;\n    var checkContains = function (target) {\n      return function (uastring) {\n        return contains(uastring, target);\n      };\n    };\n    var browsers = [\n      {\n        name: 'Edge',\n        versionRegexes: [/.*?edge\\/ ?([0-9]+)\\.([0-9]+)$/],\n        search: function (uastring) {\n          return contains(uastring, 'edge/') && contains(uastring, 'chrome') && contains(uastring, 'safari') && contains(uastring, 'applewebkit');\n        }\n      },\n      {\n        name: 'Chrome',\n        versionRegexes: [\n          /.*?chrome\\/([0-9]+)\\.([0-9]+).*/,\n          normalVersionRegex\n        ],\n        search: function (uastring) {\n          return contains(uastring, 'chrome') && !contains(uastring, 'chromeframe');\n        }\n      },\n      {\n        name: 'IE',\n        versionRegexes: [\n          /.*?msie\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*?rv:([0-9]+)\\.([0-9]+).*/\n        ],\n        search: function (uastring) {\n          return contains(uastring, 'msie') || contains(uastring, 'trident');\n        }\n      },\n      {\n        name: 'Opera',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?opera\\/([0-9]+)\\.([0-9]+).*/\n        ],\n        search: checkContains('opera')\n      },\n      {\n        name: 'Firefox',\n        versionRegexes: [/.*?firefox\\/\\ ?([0-9]+)\\.([0-9]+).*/],\n        search: checkContains('firefox')\n      },\n      {\n        name: 'Safari',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?cpu os ([0-9]+)_([0-9]+).*/\n        ],\n        search: function (uastring) {\n          return (contains(uastring, 'safari') || contains(uastring, 'mobile/')) && contains(uastring, 'applewebkit');\n        }\n      }\n    ];\n    var oses = [\n      {\n        name: 'Windows',\n        search: checkContains('win'),\n        versionRegexes: [/.*?windows\\ nt\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'iOS',\n        search: function (uastring) {\n          return contains(uastring, 'iphone') || contains(uastring, 'ipad');\n        },\n        versionRegexes: [\n          /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*cpu os ([0-9]+)_([0-9]+).*/,\n          /.*cpu iphone os ([0-9]+)_([0-9]+).*/\n        ]\n      },\n      {\n        name: 'Android',\n        search: checkContains('android'),\n        versionRegexes: [/.*?android\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'OSX',\n        search: checkContains('os x'),\n        versionRegexes: [/.*?os\\ x\\ ?([0-9]+)_([0-9]+).*/]\n      },\n      {\n        name: 'Linux',\n        search: checkContains('linux'),\n        versionRegexes: []\n      },\n      {\n        name: 'Solaris',\n        search: checkContains('sunos'),\n        versionRegexes: []\n      },\n      {\n        name: 'FreeBSD',\n        search: checkContains('freebsd'),\n        versionRegexes: []\n      }\n    ];\n    var PlatformInfo = {\n      browsers: constant(browsers),\n      oses: constant(oses)\n    };\n\n    var detect$2 = function (userAgent) {\n      var browsers = PlatformInfo.browsers();\n      var oses = PlatformInfo.oses();\n      var browser = UaString.detectBrowser(browsers, userAgent).fold(Browser.unknown, Browser.nu);\n      var os = UaString.detectOs(oses, userAgent).fold(OperatingSystem.unknown, OperatingSystem.nu);\n      var deviceType = DeviceType(os, browser, userAgent);\n      return {\n        browser: browser,\n        os: os,\n        deviceType: deviceType\n      };\n    };\n    var PlatformDetection = { detect: detect$2 };\n\n    var detect$3 = cached(function () {\n      var userAgent = domGlobals.navigator.userAgent;\n      return PlatformDetection.detect(userAgent);\n    });\n    var PlatformDetection$1 = { detect: detect$3 };\n\n    var ELEMENT$1 = ELEMENT;\n    var DOCUMENT$1 = DOCUMENT;\n    var bypassSelector = function (dom) {\n      return dom.nodeType !== ELEMENT$1 && dom.nodeType !== DOCUMENT$1 || dom.childElementCount === 0;\n    };\n    var all = function (selector, scope) {\n      var base = scope === undefined ? domGlobals.document : scope.dom();\n      return bypassSelector(base) ? [] : map(base.querySelectorAll(selector), Element.fromDom);\n    };\n    var one = function (selector, scope) {\n      var base = scope === undefined ? domGlobals.document : scope.dom();\n      return bypassSelector(base) ? Option.none() : Option.from(base.querySelector(selector)).map(Element.fromDom);\n    };\n\n    var regularContains = function (e1, e2) {\n      var d1 = e1.dom();\n      var d2 = e2.dom();\n      return d1 === d2 ? false : d1.contains(d2);\n    };\n    var ieContains = function (e1, e2) {\n      return Node.documentPositionContainedBy(e1.dom(), e2.dom());\n    };\n    var browser = PlatformDetection$1.detect().browser;\n    var contains$1 = browser.isIE() ? ieContains : regularContains;\n\n    var spot = Immutable('element', 'offset');\n\n    var descendants = function (scope, selector) {\n      return all(selector, scope);\n    };\n\n    var trim = global$2.trim;\n    var hasContentEditableState = function (value) {\n      return function (node) {\n        if (node && node.nodeType === 1) {\n          if (node.contentEditable === value) {\n            return true;\n          }\n          if (node.getAttribute('data-mce-contenteditable') === value) {\n            return true;\n          }\n        }\n        return false;\n      };\n    };\n    var isContentEditableTrue = hasContentEditableState('true');\n    var isContentEditableFalse = hasContentEditableState('false');\n    var create = function (type, title, url, level, attach) {\n      return {\n        type: type,\n        title: title,\n        url: url,\n        level: level,\n        attach: attach\n      };\n    };\n    var isChildOfContentEditableTrue = function (node) {\n      while (node = node.parentNode) {\n        var value = node.contentEditable;\n        if (value && value !== 'inherit') {\n          return isContentEditableTrue(node);\n        }\n      }\n      return false;\n    };\n    var select = function (selector, root) {\n      return map(descendants(Element.fromDom(root), selector), function (element) {\n        return element.dom();\n      });\n    };\n    var getElementText = function (elm) {\n      return elm.innerText || elm.textContent;\n    };\n    var getOrGenerateId = function (elm) {\n      return elm.id ? elm.id : generate('h');\n    };\n    var isAnchor = function (elm) {\n      return elm && elm.nodeName === 'A' && (elm.id || elm.name);\n    };\n    var isValidAnchor = function (elm) {\n      return isAnchor(elm) && isEditable(elm);\n    };\n    var isHeader = function (elm) {\n      return elm && /^(H[1-6])$/.test(elm.nodeName);\n    };\n    var isEditable = function (elm) {\n      return isChildOfContentEditableTrue(elm) && !isContentEditableFalse(elm);\n    };\n    var isValidHeader = function (elm) {\n      return isHeader(elm) && isEditable(elm);\n    };\n    var getLevel = function (elm) {\n      return isHeader(elm) ? parseInt(elm.nodeName.substr(1), 10) : 0;\n    };\n    var headerTarget = function (elm) {\n      var headerId = getOrGenerateId(elm);\n      var attach = function () {\n        elm.id = headerId;\n      };\n      return create('header', getElementText(elm), '#' + headerId, getLevel(elm), attach);\n    };\n    var anchorTarget = function (elm) {\n      var anchorId = elm.id || elm.name;\n      var anchorText = getElementText(elm);\n      return create('anchor', anchorText ? anchorText : '#' + anchorId, '#' + anchorId, 0, noop);\n    };\n    var getHeaderTargets = function (elms) {\n      return map(filter(elms, isValidHeader), headerTarget);\n    };\n    var getAnchorTargets = function (elms) {\n      return map(filter(elms, isValidAnchor), anchorTarget);\n    };\n    var getTargetElements = function (elm) {\n      var elms = select('h1,h2,h3,h4,h5,h6,a:not([href])', elm);\n      return elms;\n    };\n    var hasTitle = function (target) {\n      return trim(target.title).length > 0;\n    };\n    var find$2 = function (elm) {\n      var elms = getTargetElements(elm);\n      return filter(getHeaderTargets(elms).concat(getAnchorTargets(elms)), hasTitle);\n    };\n    var LinkTargets = { find: find$2 };\n\n    var getActiveEditor = function () {\n      return window.tinymce ? window.tinymce.activeEditor : global$1.activeEditor;\n    };\n    var history = {};\n    var HISTORY_LENGTH = 5;\n    var clearHistory = function () {\n      history = {};\n    };\n    var toMenuItem = function (target) {\n      return {\n        title: target.title,\n        value: {\n          title: { raw: target.title },\n          url: target.url,\n          attach: target.attach\n        }\n      };\n    };\n    var toMenuItems = function (targets) {\n      return global$2.map(targets, toMenuItem);\n    };\n    var staticMenuItem = function (title, url) {\n      return {\n        title: title,\n        value: {\n          title: title,\n          url: url,\n          attach: noop\n        }\n      };\n    };\n    var isUniqueUrl = function (url, targets) {\n      var foundTarget = exists(targets, function (target) {\n        return target.url === url;\n      });\n      return !foundTarget;\n    };\n    var getSetting = function (editorSettings, name, defaultValue) {\n      var value = name in editorSettings ? editorSettings[name] : defaultValue;\n      return value === false ? null : value;\n    };\n    var createMenuItems = function (term, targets, fileType, editorSettings) {\n      var separator = { title: '-' };\n      var fromHistoryMenuItems = function (history) {\n        var historyItems = history.hasOwnProperty(fileType) ? history[fileType] : [];\n        var uniqueHistory = filter(historyItems, function (url) {\n          return isUniqueUrl(url, targets);\n        });\n        return global$2.map(uniqueHistory, function (url) {\n          return {\n            title: url,\n            value: {\n              title: url,\n              url: url,\n              attach: noop\n            }\n          };\n        });\n      };\n      var fromMenuItems = function (type) {\n        var filteredTargets = filter(targets, function (target) {\n          return target.type === type;\n        });\n        return toMenuItems(filteredTargets);\n      };\n      var anchorMenuItems = function () {\n        var anchorMenuItems = fromMenuItems('anchor');\n        var topAnchor = getSetting(editorSettings, 'anchor_top', '#top');\n        var bottomAchor = getSetting(editorSettings, 'anchor_bottom', '#bottom');\n        if (topAnchor !== null) {\n          anchorMenuItems.unshift(staticMenuItem('<top>', topAnchor));\n        }\n        if (bottomAchor !== null) {\n          anchorMenuItems.push(staticMenuItem('<bottom>', bottomAchor));\n        }\n        return anchorMenuItems;\n      };\n      var join = function (items) {\n        return foldl(items, function (a, b) {\n          var bothEmpty = a.length === 0 || b.length === 0;\n          return bothEmpty ? a.concat(b) : a.concat(separator, b);\n        }, []);\n      };\n      if (editorSettings.typeahead_urls === false) {\n        return [];\n      }\n      return fileType === 'file' ? join([\n        filterByQuery(term, fromHistoryMenuItems(history)),\n        filterByQuery(term, fromMenuItems('header')),\n        filterByQuery(term, anchorMenuItems())\n      ]) : filterByQuery(term, fromHistoryMenuItems(history));\n    };\n    var addToHistory = function (url, fileType) {\n      var items = history[fileType];\n      if (!/^https?/.test(url)) {\n        return;\n      }\n      if (items) {\n        if (indexOf(items, url).isNone()) {\n          history[fileType] = items.slice(0, HISTORY_LENGTH).concat(url);\n        }\n      } else {\n        history[fileType] = [url];\n      }\n    };\n    var filterByQuery = function (term, menuItems) {\n      var lowerCaseTerm = term.toLowerCase();\n      var result = global$2.grep(menuItems, function (item) {\n        return item.title.toLowerCase().indexOf(lowerCaseTerm) !== -1;\n      });\n      return result.length === 1 && result[0].title === term ? [] : result;\n    };\n    var getTitle = function (linkDetails) {\n      var title = linkDetails.title;\n      return title.raw ? title.raw : title;\n    };\n    var setupAutoCompleteHandler = function (ctrl, editorSettings, bodyElm, fileType) {\n      var autocomplete = function (term) {\n        var linkTargets = LinkTargets.find(bodyElm);\n        var menuItems = createMenuItems(term, linkTargets, fileType, editorSettings);\n        ctrl.showAutoComplete(menuItems, term);\n      };\n      ctrl.on('autocomplete', function () {\n        autocomplete(ctrl.value());\n      });\n      ctrl.on('selectitem', function (e) {\n        var linkDetails = e.value;\n        ctrl.value(linkDetails.url);\n        var title = getTitle(linkDetails);\n        if (fileType === 'image') {\n          ctrl.fire('change', {\n            meta: {\n              alt: title,\n              attach: linkDetails.attach\n            }\n          });\n        } else {\n          ctrl.fire('change', {\n            meta: {\n              text: title,\n              attach: linkDetails.attach\n            }\n          });\n        }\n        ctrl.focus();\n      });\n      ctrl.on('click', function (e) {\n        if (ctrl.value().length === 0 && e.target.nodeName === 'INPUT') {\n          autocomplete('');\n        }\n      });\n      ctrl.on('PostRender', function () {\n        ctrl.getRoot().on('submit', function (e) {\n          if (!e.isDefaultPrevented()) {\n            addToHistory(ctrl.value(), fileType);\n          }\n        });\n      });\n    };\n    var statusToUiState = function (result) {\n      var status = result.status, message = result.message;\n      if (status === 'valid') {\n        return {\n          status: 'ok',\n          message: message\n        };\n      } else if (status === 'unknown') {\n        return {\n          status: 'warn',\n          message: message\n        };\n      } else if (status === 'invalid') {\n        return {\n          status: 'warn',\n          message: message\n        };\n      } else {\n        return {\n          status: 'none',\n          message: ''\n        };\n      }\n    };\n    var setupLinkValidatorHandler = function (ctrl, editorSettings, fileType) {\n      var validatorHandler = editorSettings.filepicker_validator_handler;\n      if (validatorHandler) {\n        var validateUrl_1 = function (url) {\n          if (url.length === 0) {\n            ctrl.statusLevel('none');\n            return;\n          }\n          validatorHandler({\n            url: url,\n            type: fileType\n          }, function (result) {\n            var uiState = statusToUiState(result);\n            ctrl.statusMessage(uiState.message);\n            ctrl.statusLevel(uiState.status);\n          });\n        };\n        ctrl.state.on('change:value', function (e) {\n          validateUrl_1(e.value);\n        });\n      }\n    };\n    var FilePicker = ComboBox.extend({\n      Statics: { clearHistory: clearHistory },\n      init: function (settings) {\n        var self = this, editor = getActiveEditor(), editorSettings = editor.settings;\n        var actionCallback, fileBrowserCallback, fileBrowserCallbackTypes;\n        var fileType = settings.filetype;\n        settings.spellcheck = false;\n        fileBrowserCallbackTypes = editorSettings.file_picker_types || editorSettings.file_browser_callback_types;\n        if (fileBrowserCallbackTypes) {\n          fileBrowserCallbackTypes = global$2.makeMap(fileBrowserCallbackTypes, /[, ]/);\n        }\n        if (!fileBrowserCallbackTypes || fileBrowserCallbackTypes[fileType]) {\n          fileBrowserCallback = editorSettings.file_picker_callback;\n          if (fileBrowserCallback && (!fileBrowserCallbackTypes || fileBrowserCallbackTypes[fileType])) {\n            actionCallback = function () {\n              var meta = self.fire('beforecall').meta;\n              meta = global$2.extend({ filetype: fileType }, meta);\n              fileBrowserCallback.call(editor, function (value, meta) {\n                self.value(value).fire('change', { meta: meta });\n              }, self.value(), meta);\n            };\n          } else {\n            fileBrowserCallback = editorSettings.file_browser_callback;\n            if (fileBrowserCallback && (!fileBrowserCallbackTypes || fileBrowserCallbackTypes[fileType])) {\n              actionCallback = function () {\n                fileBrowserCallback(self.getEl('inp').id, self.value(), fileType, window);\n              };\n            }\n          }\n        }\n        if (actionCallback) {\n          settings.icon = 'browse';\n          settings.onaction = actionCallback;\n        }\n        self._super(settings);\n        self.classes.add('filepicker');\n        setupAutoCompleteHandler(self, editorSettings, editor.getBody(), fileType);\n        setupLinkValidatorHandler(self, editorSettings, fileType);\n      }\n    });\n\n    var FitLayout = AbsoluteLayout.extend({\n      recalc: function (container) {\n        var contLayoutRect = container.layoutRect(), paddingBox = container.paddingBox;\n        container.items().filter(':visible').each(function (ctrl) {\n          ctrl.layoutRect({\n            x: paddingBox.left,\n            y: paddingBox.top,\n            w: contLayoutRect.innerW - paddingBox.right - paddingBox.left,\n            h: contLayoutRect.innerH - paddingBox.top - paddingBox.bottom\n          });\n          if (ctrl.recalc) {\n            ctrl.recalc();\n          }\n        });\n      }\n    });\n\n    var FlexLayout = AbsoluteLayout.extend({\n      recalc: function (container) {\n        var i, l, items, contLayoutRect, contPaddingBox, contSettings, align, pack, spacing, totalFlex, availableSpace, direction;\n        var ctrl, ctrlLayoutRect, ctrlSettings, flex;\n        var maxSizeItems = [];\n        var size, maxSize, ratio, rect, pos, maxAlignEndPos;\n        var sizeName, minSizeName, posName, maxSizeName, beforeName, innerSizeName, deltaSizeName, contentSizeName;\n        var alignAxisName, alignInnerSizeName, alignSizeName, alignMinSizeName, alignBeforeName, alignAfterName;\n        var alignDeltaSizeName, alignContentSizeName;\n        var max = Math.max, min = Math.min;\n        items = container.items().filter(':visible');\n        contLayoutRect = container.layoutRect();\n        contPaddingBox = container.paddingBox;\n        contSettings = container.settings;\n        direction = container.isRtl() ? contSettings.direction || 'row-reversed' : contSettings.direction;\n        align = contSettings.align;\n        pack = container.isRtl() ? contSettings.pack || 'end' : contSettings.pack;\n        spacing = contSettings.spacing || 0;\n        if (direction === 'row-reversed' || direction === 'column-reverse') {\n          items = items.set(items.toArray().reverse());\n          direction = direction.split('-')[0];\n        }\n        if (direction === 'column') {\n          posName = 'y';\n          sizeName = 'h';\n          minSizeName = 'minH';\n          maxSizeName = 'maxH';\n          innerSizeName = 'innerH';\n          beforeName = 'top';\n          deltaSizeName = 'deltaH';\n          contentSizeName = 'contentH';\n          alignBeforeName = 'left';\n          alignSizeName = 'w';\n          alignAxisName = 'x';\n          alignInnerSizeName = 'innerW';\n          alignMinSizeName = 'minW';\n          alignAfterName = 'right';\n          alignDeltaSizeName = 'deltaW';\n          alignContentSizeName = 'contentW';\n        } else {\n          posName = 'x';\n          sizeName = 'w';\n          minSizeName = 'minW';\n          maxSizeName = 'maxW';\n          innerSizeName = 'innerW';\n          beforeName = 'left';\n          deltaSizeName = 'deltaW';\n          contentSizeName = 'contentW';\n          alignBeforeName = 'top';\n          alignSizeName = 'h';\n          alignAxisName = 'y';\n          alignInnerSizeName = 'innerH';\n          alignMinSizeName = 'minH';\n          alignAfterName = 'bottom';\n          alignDeltaSizeName = 'deltaH';\n          alignContentSizeName = 'contentH';\n        }\n        availableSpace = contLayoutRect[innerSizeName] - contPaddingBox[beforeName] - contPaddingBox[beforeName];\n        maxAlignEndPos = totalFlex = 0;\n        for (i = 0, l = items.length; i < l; i++) {\n          ctrl = items[i];\n          ctrlLayoutRect = ctrl.layoutRect();\n          ctrlSettings = ctrl.settings;\n          flex = ctrlSettings.flex;\n          availableSpace -= i < l - 1 ? spacing : 0;\n          if (flex > 0) {\n            totalFlex += flex;\n            if (ctrlLayoutRect[maxSizeName]) {\n              maxSizeItems.push(ctrl);\n            }\n            ctrlLayoutRect.flex = flex;\n          }\n          availableSpace -= ctrlLayoutRect[minSizeName];\n          size = contPaddingBox[alignBeforeName] + ctrlLayoutRect[alignMinSizeName] + contPaddingBox[alignAfterName];\n          if (size > maxAlignEndPos) {\n            maxAlignEndPos = size;\n          }\n        }\n        rect = {};\n        if (availableSpace < 0) {\n          rect[minSizeName] = contLayoutRect[minSizeName] - availableSpace + contLayoutRect[deltaSizeName];\n        } else {\n          rect[minSizeName] = contLayoutRect[innerSizeName] - availableSpace + contLayoutRect[deltaSizeName];\n        }\n        rect[alignMinSizeName] = maxAlignEndPos + contLayoutRect[alignDeltaSizeName];\n        rect[contentSizeName] = contLayoutRect[innerSizeName] - availableSpace;\n        rect[alignContentSizeName] = maxAlignEndPos;\n        rect.minW = min(rect.minW, contLayoutRect.maxW);\n        rect.minH = min(rect.minH, contLayoutRect.maxH);\n        rect.minW = max(rect.minW, contLayoutRect.startMinWidth);\n        rect.minH = max(rect.minH, contLayoutRect.startMinHeight);\n        if (contLayoutRect.autoResize && (rect.minW !== contLayoutRect.minW || rect.minH !== contLayoutRect.minH)) {\n          rect.w = rect.minW;\n          rect.h = rect.minH;\n          container.layoutRect(rect);\n          this.recalc(container);\n          if (container._lastRect === null) {\n            var parentCtrl = container.parent();\n            if (parentCtrl) {\n              parentCtrl._lastRect = null;\n              parentCtrl.recalc();\n            }\n          }\n          return;\n        }\n        ratio = availableSpace / totalFlex;\n        for (i = 0, l = maxSizeItems.length; i < l; i++) {\n          ctrl = maxSizeItems[i];\n          ctrlLayoutRect = ctrl.layoutRect();\n          maxSize = ctrlLayoutRect[maxSizeName];\n          size = ctrlLayoutRect[minSizeName] + ctrlLayoutRect.flex * ratio;\n          if (size > maxSize) {\n            availableSpace -= ctrlLayoutRect[maxSizeName] - ctrlLayoutRect[minSizeName];\n            totalFlex -= ctrlLayoutRect.flex;\n            ctrlLayoutRect.flex = 0;\n            ctrlLayoutRect.maxFlexSize = maxSize;\n          } else {\n            ctrlLayoutRect.maxFlexSize = 0;\n          }\n        }\n        ratio = availableSpace / totalFlex;\n        pos = contPaddingBox[beforeName];\n        rect = {};\n        if (totalFlex === 0) {\n          if (pack === 'end') {\n            pos = availableSpace + contPaddingBox[beforeName];\n          } else if (pack === 'center') {\n            pos = Math.round(contLayoutRect[innerSizeName] / 2 - (contLayoutRect[innerSizeName] - availableSpace) / 2) + contPaddingBox[beforeName];\n            if (pos < 0) {\n              pos = contPaddingBox[beforeName];\n            }\n          } else if (pack === 'justify') {\n            pos = contPaddingBox[beforeName];\n            spacing = Math.floor(availableSpace / (items.length - 1));\n          }\n        }\n        rect[alignAxisName] = contPaddingBox[alignBeforeName];\n        for (i = 0, l = items.length; i < l; i++) {\n          ctrl = items[i];\n          ctrlLayoutRect = ctrl.layoutRect();\n          size = ctrlLayoutRect.maxFlexSize || ctrlLayoutRect[minSizeName];\n          if (align === 'center') {\n            rect[alignAxisName] = Math.round(contLayoutRect[alignInnerSizeName] / 2 - ctrlLayoutRect[alignSizeName] / 2);\n          } else if (align === 'stretch') {\n            rect[alignSizeName] = max(ctrlLayoutRect[alignMinSizeName] || 0, contLayoutRect[alignInnerSizeName] - contPaddingBox[alignBeforeName] - contPaddingBox[alignAfterName]);\n            rect[alignAxisName] = contPaddingBox[alignBeforeName];\n          } else if (align === 'end') {\n            rect[alignAxisName] = contLayoutRect[alignInnerSizeName] - ctrlLayoutRect[alignSizeName] - contPaddingBox.top;\n          }\n          if (ctrlLayoutRect.flex > 0) {\n            size += ctrlLayoutRect.flex * ratio;\n          }\n          rect[sizeName] = size;\n          rect[posName] = pos;\n          ctrl.layoutRect(rect);\n          if (ctrl.recalc) {\n            ctrl.recalc();\n          }\n          pos += size + spacing;\n        }\n      }\n    });\n\n    var FlowLayout = Layout.extend({\n      Defaults: {\n        containerClass: 'flow-layout',\n        controlClass: 'flow-layout-item',\n        endClass: 'break'\n      },\n      recalc: function (container) {\n        container.items().filter(':visible').each(function (ctrl) {\n          if (ctrl.recalc) {\n            ctrl.recalc();\n          }\n        });\n      },\n      isNative: function () {\n        return true;\n      }\n    });\n\n    var descendant = function (scope, selector) {\n      return one(selector, scope);\n    };\n\n    var toggleFormat = function (editor, fmt) {\n      return function () {\n        editor.execCommand('mceToggleFormat', false, fmt);\n      };\n    };\n    var addFormatChangedListener = function (editor, name, changed) {\n      var handler = function (state) {\n        changed(state, name);\n      };\n      if (editor.formatter) {\n        editor.formatter.formatChanged(name, handler);\n      } else {\n        editor.on('init', function () {\n          editor.formatter.formatChanged(name, handler);\n        });\n      }\n    };\n    var postRenderFormatToggle = function (editor, name) {\n      return function (e) {\n        addFormatChangedListener(editor, name, function (state) {\n          e.control.active(state);\n        });\n      };\n    };\n\n    var register = function (editor) {\n      var alignFormats = [\n        'alignleft',\n        'aligncenter',\n        'alignright',\n        'alignjustify'\n      ];\n      var defaultAlign = 'alignleft';\n      var alignMenuItems = [\n        {\n          text: 'Left',\n          icon: 'alignleft',\n          onclick: toggleFormat(editor, 'alignleft')\n        },\n        {\n          text: 'Center',\n          icon: 'aligncenter',\n          onclick: toggleFormat(editor, 'aligncenter')\n        },\n        {\n          text: 'Right',\n          icon: 'alignright',\n          onclick: toggleFormat(editor, 'alignright')\n        },\n        {\n          text: 'Justify',\n          icon: 'alignjustify',\n          onclick: toggleFormat(editor, 'alignjustify')\n        }\n      ];\n      editor.addMenuItem('align', {\n        text: 'Align',\n        menu: alignMenuItems\n      });\n      editor.addButton('align', {\n        type: 'menubutton',\n        icon: defaultAlign,\n        menu: alignMenuItems,\n        onShowMenu: function (e) {\n          var menu = e.control.menu;\n          global$2.each(alignFormats, function (formatName, idx) {\n            menu.items().eq(idx).each(function (item) {\n              return item.active(editor.formatter.match(formatName));\n            });\n          });\n        },\n        onPostRender: function (e) {\n          var ctrl = e.control;\n          global$2.each(alignFormats, function (formatName, idx) {\n            addFormatChangedListener(editor, formatName, function (state) {\n              ctrl.icon(defaultAlign);\n              if (state) {\n                ctrl.icon(formatName);\n              }\n            });\n          });\n        }\n      });\n      global$2.each({\n        alignleft: [\n          'Align left',\n          'JustifyLeft'\n        ],\n        aligncenter: [\n          'Align center',\n          'JustifyCenter'\n        ],\n        alignright: [\n          'Align right',\n          'JustifyRight'\n        ],\n        alignjustify: [\n          'Justify',\n          'JustifyFull'\n        ],\n        alignnone: [\n          'No alignment',\n          'JustifyNone'\n        ]\n      }, function (item, name) {\n        editor.addButton(name, {\n          active: false,\n          tooltip: item[0],\n          cmd: item[1],\n          onPostRender: postRenderFormatToggle(editor, name)\n        });\n      });\n    };\n    var Align = { register: register };\n\n    var getFirstFont = function (fontFamily) {\n      return fontFamily ? fontFamily.split(',')[0] : '';\n    };\n    var findMatchingValue = function (items, fontFamily) {\n      var font = fontFamily ? fontFamily.toLowerCase() : '';\n      var value;\n      global$2.each(items, function (item) {\n        if (item.value.toLowerCase() === font) {\n          value = item.value;\n        }\n      });\n      global$2.each(items, function (item) {\n        if (!value && getFirstFont(item.value).toLowerCase() === getFirstFont(font).toLowerCase()) {\n          value = item.value;\n        }\n      });\n      return value;\n    };\n    var createFontNameListBoxChangeHandler = function (editor, items) {\n      return function () {\n        var self = this;\n        self.state.set('value', null);\n        editor.on('init nodeChange', function (e) {\n          var fontFamily = editor.queryCommandValue('FontName');\n          var match = findMatchingValue(items, fontFamily);\n          self.value(match ? match : null);\n          if (!match && fontFamily) {\n            self.text(getFirstFont(fontFamily));\n          }\n        });\n      };\n    };\n    var createFormats = function (formats) {\n      formats = formats.replace(/;$/, '').split(';');\n      var i = formats.length;\n      while (i--) {\n        formats[i] = formats[i].split('=');\n      }\n      return formats;\n    };\n    var getFontItems = function (editor) {\n      var defaultFontsFormats = 'Andale Mono=andale mono,monospace;' + 'Arial=arial,helvetica,sans-serif;' + 'Arial Black=arial black,sans-serif;' + 'Book Antiqua=book antiqua,palatino,serif;' + 'Comic Sans MS=comic sans ms,sans-serif;' + 'Courier New=courier new,courier,monospace;' + 'Georgia=georgia,palatino,serif;' + 'Helvetica=helvetica,arial,sans-serif;' + 'Impact=impact,sans-serif;' + 'Symbol=symbol;' + 'Tahoma=tahoma,arial,helvetica,sans-serif;' + 'Terminal=terminal,monaco,monospace;' + 'Times New Roman=times new roman,times,serif;' + 'Trebuchet MS=trebuchet ms,geneva,sans-serif;' + 'Verdana=verdana,geneva,sans-serif;' + 'Webdings=webdings;' + 'Wingdings=wingdings,zapf dingbats';\n      var fonts = createFormats(editor.settings.font_formats || defaultFontsFormats);\n      return global$2.map(fonts, function (font) {\n        return {\n          text: { raw: font[0] },\n          value: font[1],\n          textStyle: font[1].indexOf('dings') === -1 ? 'font-family:' + font[1] : ''\n        };\n      });\n    };\n    var registerButtons = function (editor) {\n      editor.addButton('fontselect', function () {\n        var items = getFontItems(editor);\n        return {\n          type: 'listbox',\n          text: 'Font Family',\n          tooltip: 'Font Family',\n          values: items,\n          fixedWidth: true,\n          onPostRender: createFontNameListBoxChangeHandler(editor, items),\n          onselect: function (e) {\n            if (e.control.settings.value) {\n              editor.execCommand('FontName', false, e.control.settings.value);\n            }\n          }\n        };\n      });\n    };\n    var register$1 = function (editor) {\n      registerButtons(editor);\n    };\n    var FontSelect = { register: register$1 };\n\n    var round = function (number, precision) {\n      var factor = Math.pow(10, precision);\n      return Math.round(number * factor) / factor;\n    };\n    var toPt = function (fontSize, precision) {\n      if (/[0-9.]+px$/.test(fontSize)) {\n        return round(parseInt(fontSize, 10) * 72 / 96, precision || 0) + 'pt';\n      }\n      return fontSize;\n    };\n    var findMatchingValue$1 = function (items, pt, px) {\n      var value;\n      global$2.each(items, function (item) {\n        if (item.value === px) {\n          value = px;\n        } else if (item.value === pt) {\n          value = pt;\n        }\n      });\n      return value;\n    };\n    var createFontSizeListBoxChangeHandler = function (editor, items) {\n      return function () {\n        var self = this;\n        editor.on('init nodeChange', function (e) {\n          var px, pt, precision, match;\n          px = editor.queryCommandValue('FontSize');\n          if (px) {\n            for (precision = 3; !match && precision >= 0; precision--) {\n              pt = toPt(px, precision);\n              match = findMatchingValue$1(items, pt, px);\n            }\n          }\n          self.value(match ? match : null);\n          if (!match) {\n            self.text(pt);\n          }\n        });\n      };\n    };\n    var getFontSizeItems = function (editor) {\n      var defaultFontsizeFormats = '8pt 10pt 12pt 14pt 18pt 24pt 36pt';\n      var fontsizeFormats = editor.settings.fontsize_formats || defaultFontsizeFormats;\n      return global$2.map(fontsizeFormats.split(' '), function (item) {\n        var text = item, value = item;\n        var values = item.split('=');\n        if (values.length > 1) {\n          text = values[0];\n          value = values[1];\n        }\n        return {\n          text: text,\n          value: value\n        };\n      });\n    };\n    var registerButtons$1 = function (editor) {\n      editor.addButton('fontsizeselect', function () {\n        var items = getFontSizeItems(editor);\n        return {\n          type: 'listbox',\n          text: 'Font Sizes',\n          tooltip: 'Font Sizes',\n          values: items,\n          fixedWidth: true,\n          onPostRender: createFontSizeListBoxChangeHandler(editor, items),\n          onclick: function (e) {\n            if (e.control.settings.value) {\n              editor.execCommand('FontSize', false, e.control.settings.value);\n            }\n          }\n        };\n      });\n    };\n    var register$2 = function (editor) {\n      registerButtons$1(editor);\n    };\n    var FontSizeSelect = { register: register$2 };\n\n    var hideMenuObjects = function (editor, menu) {\n      var count = menu.length;\n      global$2.each(menu, function (item) {\n        if (item.menu) {\n          item.hidden = hideMenuObjects(editor, item.menu) === 0;\n        }\n        var formatName = item.format;\n        if (formatName) {\n          item.hidden = !editor.formatter.canApply(formatName);\n        }\n        if (item.hidden) {\n          count--;\n        }\n      });\n      return count;\n    };\n    var hideFormatMenuItems = function (editor, menu) {\n      var count = menu.items().length;\n      menu.items().each(function (item) {\n        if (item.menu) {\n          item.visible(hideFormatMenuItems(editor, item.menu) > 0);\n        }\n        if (!item.menu && item.settings.menu) {\n          item.visible(hideMenuObjects(editor, item.settings.menu) > 0);\n        }\n        var formatName = item.settings.format;\n        if (formatName) {\n          item.visible(editor.formatter.canApply(formatName));\n        }\n        if (!item.visible()) {\n          count--;\n        }\n      });\n      return count;\n    };\n    var createFormatMenu = function (editor) {\n      var count = 0;\n      var newFormats = [];\n      var defaultStyleFormats = [\n        {\n          title: 'Headings',\n          items: [\n            {\n              title: 'Heading 1',\n              format: 'h1'\n            },\n            {\n              title: 'Heading 2',\n              format: 'h2'\n            },\n            {\n              title: 'Heading 3',\n              format: 'h3'\n            },\n            {\n              title: 'Heading 4',\n              format: 'h4'\n            },\n            {\n              title: 'Heading 5',\n              format: 'h5'\n            },\n            {\n              title: 'Heading 6',\n              format: 'h6'\n            }\n          ]\n        },\n        {\n          title: 'Inline',\n          items: [\n            {\n              title: 'Bold',\n              icon: 'bold',\n              format: 'bold'\n            },\n            {\n              title: 'Italic',\n              icon: 'italic',\n              format: 'italic'\n            },\n            {\n              title: 'Underline',\n              icon: 'underline',\n              format: 'underline'\n            },\n            {\n              title: 'Strikethrough',\n              icon: 'strikethrough',\n              format: 'strikethrough'\n            },\n            {\n              title: 'Superscript',\n              icon: 'superscript',\n              format: 'superscript'\n            },\n            {\n              title: 'Subscript',\n              icon: 'subscript',\n              format: 'subscript'\n            },\n            {\n              title: 'Code',\n              icon: 'code',\n              format: 'code'\n            }\n          ]\n        },\n        {\n          title: 'Blocks',\n          items: [\n            {\n              title: 'Paragraph',\n              format: 'p'\n            },\n            {\n              title: 'Blockquote',\n              format: 'blockquote'\n            },\n            {\n              title: 'Div',\n              format: 'div'\n            },\n            {\n              title: 'Pre',\n              format: 'pre'\n            }\n          ]\n        },\n        {\n          title: 'Alignment',\n          items: [\n            {\n              title: 'Left',\n              icon: 'alignleft',\n              format: 'alignleft'\n            },\n            {\n              title: 'Center',\n              icon: 'aligncenter',\n              format: 'aligncenter'\n            },\n            {\n              title: 'Right',\n              icon: 'alignright',\n              format: 'alignright'\n            },\n            {\n              title: 'Justify',\n              icon: 'alignjustify',\n              format: 'alignjustify'\n            }\n          ]\n        }\n      ];\n      var createMenu = function (formats) {\n        var menu = [];\n        if (!formats) {\n          return;\n        }\n        global$2.each(formats, function (format) {\n          var menuItem = {\n            text: format.title,\n            icon: format.icon\n          };\n          if (format.items) {\n            menuItem.menu = createMenu(format.items);\n          } else {\n            var formatName = format.format || 'custom' + count++;\n            if (!format.format) {\n              format.name = formatName;\n              newFormats.push(format);\n            }\n            menuItem.format = formatName;\n            menuItem.cmd = format.cmd;\n          }\n          menu.push(menuItem);\n        });\n        return menu;\n      };\n      var createStylesMenu = function () {\n        var menu;\n        if (editor.settings.style_formats_merge) {\n          if (editor.settings.style_formats) {\n            menu = createMenu(defaultStyleFormats.concat(editor.settings.style_formats));\n          } else {\n            menu = createMenu(defaultStyleFormats);\n          }\n        } else {\n          menu = createMenu(editor.settings.style_formats || defaultStyleFormats);\n        }\n        return menu;\n      };\n      editor.on('init', function () {\n        global$2.each(newFormats, function (format) {\n          editor.formatter.register(format.name, format);\n        });\n      });\n      return {\n        type: 'menu',\n        items: createStylesMenu(),\n        onPostRender: function (e) {\n          editor.fire('renderFormatsMenu', { control: e.control });\n        },\n        itemDefaults: {\n          preview: true,\n          textStyle: function () {\n            if (this.settings.format) {\n              return editor.formatter.getCssText(this.settings.format);\n            }\n          },\n          onPostRender: function () {\n            var self = this;\n            self.parent().on('show', function () {\n              var formatName, command;\n              formatName = self.settings.format;\n              if (formatName) {\n                self.disabled(!editor.formatter.canApply(formatName));\n                self.active(editor.formatter.match(formatName));\n              }\n              command = self.settings.cmd;\n              if (command) {\n                self.active(editor.queryCommandState(command));\n              }\n            });\n          },\n          onclick: function () {\n            if (this.settings.format) {\n              toggleFormat(editor, this.settings.format)();\n            }\n            if (this.settings.cmd) {\n              editor.execCommand(this.settings.cmd);\n            }\n          }\n        }\n      };\n    };\n    var registerMenuItems = function (editor, formatMenu) {\n      editor.addMenuItem('formats', {\n        text: 'Formats',\n        menu: formatMenu\n      });\n    };\n    var registerButtons$2 = function (editor, formatMenu) {\n      editor.addButton('styleselect', {\n        type: 'menubutton',\n        text: 'Formats',\n        menu: formatMenu,\n        onShowMenu: function () {\n          if (editor.settings.style_formats_autohide) {\n            hideFormatMenuItems(editor, this.menu);\n          }\n        }\n      });\n    };\n    var register$3 = function (editor) {\n      var formatMenu = createFormatMenu(editor);\n      registerMenuItems(editor, formatMenu);\n      registerButtons$2(editor, formatMenu);\n    };\n    var Formats = { register: register$3 };\n\n    var defaultBlocks = 'Paragraph=p;' + 'Heading 1=h1;' + 'Heading 2=h2;' + 'Heading 3=h3;' + 'Heading 4=h4;' + 'Heading 5=h5;' + 'Heading 6=h6;' + 'Preformatted=pre';\n    var createFormats$1 = function (formats) {\n      formats = formats.replace(/;$/, '').split(';');\n      var i = formats.length;\n      while (i--) {\n        formats[i] = formats[i].split('=');\n      }\n      return formats;\n    };\n    var createListBoxChangeHandler = function (editor, items, formatName) {\n      return function () {\n        var self = this;\n        editor.on('nodeChange', function (e) {\n          var formatter = editor.formatter;\n          var value = null;\n          global$2.each(e.parents, function (node) {\n            global$2.each(items, function (item) {\n              if (formatName) {\n                if (formatter.matchNode(node, formatName, { value: item.value })) {\n                  value = item.value;\n                }\n              } else {\n                if (formatter.matchNode(node, item.value)) {\n                  value = item.value;\n                }\n              }\n              if (value) {\n                return false;\n              }\n            });\n            if (value) {\n              return false;\n            }\n          });\n          self.value(value);\n        });\n      };\n    };\n    var lazyFormatSelectBoxItems = function (editor, blocks) {\n      return function () {\n        var items = [];\n        global$2.each(blocks, function (block) {\n          items.push({\n            text: block[0],\n            value: block[1],\n            textStyle: function () {\n              return editor.formatter.getCssText(block[1]);\n            }\n          });\n        });\n        return {\n          type: 'listbox',\n          text: blocks[0][0],\n          values: items,\n          fixedWidth: true,\n          onselect: function (e) {\n            if (e.control) {\n              var fmt = e.control.value();\n              toggleFormat(editor, fmt)();\n            }\n          },\n          onPostRender: createListBoxChangeHandler(editor, items)\n        };\n      };\n    };\n    var buildMenuItems = function (editor, blocks) {\n      return global$2.map(blocks, function (block) {\n        return {\n          text: block[0],\n          onclick: toggleFormat(editor, block[1]),\n          textStyle: function () {\n            return editor.formatter.getCssText(block[1]);\n          }\n        };\n      });\n    };\n    var register$4 = function (editor) {\n      var blocks = createFormats$1(editor.settings.block_formats || defaultBlocks);\n      editor.addMenuItem('blockformats', {\n        text: 'Blocks',\n        menu: buildMenuItems(editor, blocks)\n      });\n      editor.addButton('formatselect', lazyFormatSelectBoxItems(editor, blocks));\n    };\n    var FormatSelect = { register: register$4 };\n\n    var createCustomMenuItems = function (editor, names) {\n      var items, nameList;\n      if (typeof names === 'string') {\n        nameList = names.split(' ');\n      } else if (global$2.isArray(names)) {\n        return flatten(global$2.map(names, function (names) {\n          return createCustomMenuItems(editor, names);\n        }));\n      }\n      items = global$2.grep(nameList, function (name) {\n        return name === '|' || name in editor.menuItems;\n      });\n      return global$2.map(items, function (name) {\n        return name === '|' ? { text: '-' } : editor.menuItems[name];\n      });\n    };\n    var isSeparator$1 = function (menuItem) {\n      return menuItem && menuItem.text === '-';\n    };\n    var trimMenuItems = function (menuItems) {\n      var menuItems2 = filter(menuItems, function (menuItem, i) {\n        return !isSeparator$1(menuItem) || !isSeparator$1(menuItems[i - 1]);\n      });\n      return filter(menuItems2, function (menuItem, i) {\n        return !isSeparator$1(menuItem) || i > 0 && i < menuItems2.length - 1;\n      });\n    };\n    var createContextMenuItems = function (editor, context) {\n      var outputMenuItems = [{ text: '-' }];\n      var menuItems = global$2.grep(editor.menuItems, function (menuItem) {\n        return menuItem.context === context;\n      });\n      global$2.each(menuItems, function (menuItem) {\n        if (menuItem.separator === 'before') {\n          outputMenuItems.push({ text: '|' });\n        }\n        if (menuItem.prependToContext) {\n          outputMenuItems.unshift(menuItem);\n        } else {\n          outputMenuItems.push(menuItem);\n        }\n        if (menuItem.separator === 'after') {\n          outputMenuItems.push({ text: '|' });\n        }\n      });\n      return outputMenuItems;\n    };\n    var createInsertMenu = function (editor) {\n      var insertButtonItems = editor.settings.insert_button_items;\n      if (insertButtonItems) {\n        return trimMenuItems(createCustomMenuItems(editor, insertButtonItems));\n      } else {\n        return trimMenuItems(createContextMenuItems(editor, 'insert'));\n      }\n    };\n    var registerButtons$3 = function (editor) {\n      editor.addButton('insert', {\n        type: 'menubutton',\n        icon: 'insert',\n        menu: [],\n        oncreatemenu: function () {\n          this.menu.add(createInsertMenu(editor));\n          this.menu.renderNew();\n        }\n      });\n    };\n    var register$5 = function (editor) {\n      registerButtons$3(editor);\n    };\n    var InsertButton = { register: register$5 };\n\n    var registerFormatButtons = function (editor) {\n      global$2.each({\n        bold: 'Bold',\n        italic: 'Italic',\n        underline: 'Underline',\n        strikethrough: 'Strikethrough',\n        subscript: 'Subscript',\n        superscript: 'Superscript'\n      }, function (text, name) {\n        editor.addButton(name, {\n          active: false,\n          tooltip: text,\n          onPostRender: postRenderFormatToggle(editor, name),\n          onclick: toggleFormat(editor, name)\n        });\n      });\n    };\n    var registerCommandButtons = function (editor) {\n      global$2.each({\n        outdent: [\n          'Decrease indent',\n          'Outdent'\n        ],\n        indent: [\n          'Increase indent',\n          'Indent'\n        ],\n        cut: [\n          'Cut',\n          'Cut'\n        ],\n        copy: [\n          'Copy',\n          'Copy'\n        ],\n        paste: [\n          'Paste',\n          'Paste'\n        ],\n        help: [\n          'Help',\n          'mceHelp'\n        ],\n        selectall: [\n          'Select all',\n          'SelectAll'\n        ],\n        visualaid: [\n          'Visual aids',\n          'mceToggleVisualAid'\n        ],\n        newdocument: [\n          'New document',\n          'mceNewDocument'\n        ],\n        removeformat: [\n          'Clear formatting',\n          'RemoveFormat'\n        ],\n        remove: [\n          'Remove',\n          'Delete'\n        ]\n      }, function (item, name) {\n        editor.addButton(name, {\n          tooltip: item[0],\n          cmd: item[1]\n        });\n      });\n    };\n    var registerCommandToggleButtons = function (editor) {\n      global$2.each({\n        blockquote: [\n          'Blockquote',\n          'mceBlockQuote'\n        ],\n        subscript: [\n          'Subscript',\n          'Subscript'\n        ],\n        superscript: [\n          'Superscript',\n          'Superscript'\n        ]\n      }, function (item, name) {\n        editor.addButton(name, {\n          active: false,\n          tooltip: item[0],\n          cmd: item[1],\n          onPostRender: postRenderFormatToggle(editor, name)\n        });\n      });\n    };\n    var registerButtons$4 = function (editor) {\n      registerFormatButtons(editor);\n      registerCommandButtons(editor);\n      registerCommandToggleButtons(editor);\n    };\n    var registerMenuItems$1 = function (editor) {\n      global$2.each({\n        bold: [\n          'Bold',\n          'Bold',\n          'Meta+B'\n        ],\n        italic: [\n          'Italic',\n          'Italic',\n          'Meta+I'\n        ],\n        underline: [\n          'Underline',\n          'Underline',\n          'Meta+U'\n        ],\n        strikethrough: [\n          'Strikethrough',\n          'Strikethrough'\n        ],\n        subscript: [\n          'Subscript',\n          'Subscript'\n        ],\n        superscript: [\n          'Superscript',\n          'Superscript'\n        ],\n        removeformat: [\n          'Clear formatting',\n          'RemoveFormat'\n        ],\n        newdocument: [\n          'New document',\n          'mceNewDocument'\n        ],\n        cut: [\n          'Cut',\n          'Cut',\n          'Meta+X'\n        ],\n        copy: [\n          'Copy',\n          'Copy',\n          'Meta+C'\n        ],\n        paste: [\n          'Paste',\n          'Paste',\n          'Meta+V'\n        ],\n        selectall: [\n          'Select all',\n          'SelectAll',\n          'Meta+A'\n        ]\n      }, function (item, name) {\n        editor.addMenuItem(name, {\n          text: item[0],\n          icon: name,\n          shortcut: item[2],\n          cmd: item[1]\n        });\n      });\n      editor.addMenuItem('codeformat', {\n        text: 'Code',\n        icon: 'code',\n        onclick: toggleFormat(editor, 'code')\n      });\n    };\n    var register$6 = function (editor) {\n      registerButtons$4(editor);\n      registerMenuItems$1(editor);\n    };\n    var SimpleControls = { register: register$6 };\n\n    var toggleUndoRedoState = function (editor, type) {\n      return function () {\n        var self = this;\n        var checkState = function () {\n          var typeFn = type === 'redo' ? 'hasRedo' : 'hasUndo';\n          return editor.undoManager ? editor.undoManager[typeFn]() : false;\n        };\n        self.disabled(!checkState());\n        editor.on('Undo Redo AddUndo TypingUndo ClearUndos SwitchMode', function () {\n          self.disabled(editor.readonly || !checkState());\n        });\n      };\n    };\n    var registerMenuItems$2 = function (editor) {\n      editor.addMenuItem('undo', {\n        text: 'Undo',\n        icon: 'undo',\n        shortcut: 'Meta+Z',\n        onPostRender: toggleUndoRedoState(editor, 'undo'),\n        cmd: 'undo'\n      });\n      editor.addMenuItem('redo', {\n        text: 'Redo',\n        icon: 'redo',\n        shortcut: 'Meta+Y',\n        onPostRender: toggleUndoRedoState(editor, 'redo'),\n        cmd: 'redo'\n      });\n    };\n    var registerButtons$5 = function (editor) {\n      editor.addButton('undo', {\n        tooltip: 'Undo',\n        onPostRender: toggleUndoRedoState(editor, 'undo'),\n        cmd: 'undo'\n      });\n      editor.addButton('redo', {\n        tooltip: 'Redo',\n        onPostRender: toggleUndoRedoState(editor, 'redo'),\n        cmd: 'redo'\n      });\n    };\n    var register$7 = function (editor) {\n      registerMenuItems$2(editor);\n      registerButtons$5(editor);\n    };\n    var UndoRedo = { register: register$7 };\n\n    var toggleVisualAidState = function (editor) {\n      return function () {\n        var self = this;\n        editor.on('VisualAid', function (e) {\n          self.active(e.hasVisual);\n        });\n        self.active(editor.hasVisual);\n      };\n    };\n    var registerMenuItems$3 = function (editor) {\n      editor.addMenuItem('visualaid', {\n        text: 'Visual aids',\n        selectable: true,\n        onPostRender: toggleVisualAidState(editor),\n        cmd: 'mceToggleVisualAid'\n      });\n    };\n    var register$8 = function (editor) {\n      registerMenuItems$3(editor);\n    };\n    var VisualAid = { register: register$8 };\n\n    var setupEnvironment = function () {\n      Widget.tooltips = !global$8.iOS;\n      Control$1.translate = function (text) {\n        return global$1.translate(text);\n      };\n    };\n    var setupUiContainer = function (editor) {\n      if (editor.settings.ui_container) {\n        global$8.container = descendant(Element.fromDom(domGlobals.document.body), editor.settings.ui_container).fold(constant(null), function (elm) {\n          return elm.dom();\n        });\n      }\n    };\n    var setupRtlMode = function (editor) {\n      if (editor.rtl) {\n        Control$1.rtl = true;\n      }\n    };\n    var setupHideFloatPanels = function (editor) {\n      editor.on('mousedown progressstate', function () {\n        FloatPanel.hideAll();\n      });\n    };\n    var setup$1 = function (editor) {\n      setupRtlMode(editor);\n      setupHideFloatPanels(editor);\n      setupUiContainer(editor);\n      setupEnvironment();\n      FormatSelect.register(editor);\n      Align.register(editor);\n      SimpleControls.register(editor);\n      UndoRedo.register(editor);\n      FontSizeSelect.register(editor);\n      FontSelect.register(editor);\n      Formats.register(editor);\n      VisualAid.register(editor);\n      InsertButton.register(editor);\n    };\n    var FormatControls = { setup: setup$1 };\n\n    var GridLayout = AbsoluteLayout.extend({\n      recalc: function (container) {\n        var settings, rows, cols, items, contLayoutRect, width, height, rect, ctrlLayoutRect, ctrl, x, y, posX, posY, ctrlSettings, contPaddingBox, align, spacingH, spacingV, alignH, alignV, maxX, maxY;\n        var colWidths = [];\n        var rowHeights = [];\n        var ctrlMinWidth, ctrlMinHeight, availableWidth, availableHeight, reverseRows, idx;\n        settings = container.settings;\n        items = container.items().filter(':visible');\n        contLayoutRect = container.layoutRect();\n        cols = settings.columns || Math.ceil(Math.sqrt(items.length));\n        rows = Math.ceil(items.length / cols);\n        spacingH = settings.spacingH || settings.spacing || 0;\n        spacingV = settings.spacingV || settings.spacing || 0;\n        alignH = settings.alignH || settings.align;\n        alignV = settings.alignV || settings.align;\n        contPaddingBox = container.paddingBox;\n        reverseRows = 'reverseRows' in settings ? settings.reverseRows : container.isRtl();\n        if (alignH && typeof alignH === 'string') {\n          alignH = [alignH];\n        }\n        if (alignV && typeof alignV === 'string') {\n          alignV = [alignV];\n        }\n        for (x = 0; x < cols; x++) {\n          colWidths.push(0);\n        }\n        for (y = 0; y < rows; y++) {\n          rowHeights.push(0);\n        }\n        for (y = 0; y < rows; y++) {\n          for (x = 0; x < cols; x++) {\n            ctrl = items[y * cols + x];\n            if (!ctrl) {\n              break;\n            }\n            ctrlLayoutRect = ctrl.layoutRect();\n            ctrlMinWidth = ctrlLayoutRect.minW;\n            ctrlMinHeight = ctrlLayoutRect.minH;\n            colWidths[x] = ctrlMinWidth > colWidths[x] ? ctrlMinWidth : colWidths[x];\n            rowHeights[y] = ctrlMinHeight > rowHeights[y] ? ctrlMinHeight : rowHeights[y];\n          }\n        }\n        availableWidth = contLayoutRect.innerW - contPaddingBox.left - contPaddingBox.right;\n        for (maxX = 0, x = 0; x < cols; x++) {\n          maxX += colWidths[x] + (x > 0 ? spacingH : 0);\n          availableWidth -= (x > 0 ? spacingH : 0) + colWidths[x];\n        }\n        availableHeight = contLayoutRect.innerH - contPaddingBox.top - contPaddingBox.bottom;\n        for (maxY = 0, y = 0; y < rows; y++) {\n          maxY += rowHeights[y] + (y > 0 ? spacingV : 0);\n          availableHeight -= (y > 0 ? spacingV : 0) + rowHeights[y];\n        }\n        maxX += contPaddingBox.left + contPaddingBox.right;\n        maxY += contPaddingBox.top + contPaddingBox.bottom;\n        rect = {};\n        rect.minW = maxX + (contLayoutRect.w - contLayoutRect.innerW);\n        rect.minH = maxY + (contLayoutRect.h - contLayoutRect.innerH);\n        rect.contentW = rect.minW - contLayoutRect.deltaW;\n        rect.contentH = rect.minH - contLayoutRect.deltaH;\n        rect.minW = Math.min(rect.minW, contLayoutRect.maxW);\n        rect.minH = Math.min(rect.minH, contLayoutRect.maxH);\n        rect.minW = Math.max(rect.minW, contLayoutRect.startMinWidth);\n        rect.minH = Math.max(rect.minH, contLayoutRect.startMinHeight);\n        if (contLayoutRect.autoResize && (rect.minW !== contLayoutRect.minW || rect.minH !== contLayoutRect.minH)) {\n          rect.w = rect.minW;\n          rect.h = rect.minH;\n          container.layoutRect(rect);\n          this.recalc(container);\n          if (container._lastRect === null) {\n            var parentCtrl = container.parent();\n            if (parentCtrl) {\n              parentCtrl._lastRect = null;\n              parentCtrl.recalc();\n            }\n          }\n          return;\n        }\n        if (contLayoutRect.autoResize) {\n          rect = container.layoutRect(rect);\n          rect.contentW = rect.minW - contLayoutRect.deltaW;\n          rect.contentH = rect.minH - contLayoutRect.deltaH;\n        }\n        var flexV;\n        if (settings.packV === 'start') {\n          flexV = 0;\n        } else {\n          flexV = availableHeight > 0 ? Math.floor(availableHeight / rows) : 0;\n        }\n        var totalFlex = 0;\n        var flexWidths = settings.flexWidths;\n        if (flexWidths) {\n          for (x = 0; x < flexWidths.length; x++) {\n            totalFlex += flexWidths[x];\n          }\n        } else {\n          totalFlex = cols;\n        }\n        var ratio = availableWidth / totalFlex;\n        for (x = 0; x < cols; x++) {\n          colWidths[x] += flexWidths ? flexWidths[x] * ratio : ratio;\n        }\n        posY = contPaddingBox.top;\n        for (y = 0; y < rows; y++) {\n          posX = contPaddingBox.left;\n          height = rowHeights[y] + flexV;\n          for (x = 0; x < cols; x++) {\n            if (reverseRows) {\n              idx = y * cols + cols - 1 - x;\n            } else {\n              idx = y * cols + x;\n            }\n            ctrl = items[idx];\n            if (!ctrl) {\n              break;\n            }\n            ctrlSettings = ctrl.settings;\n            ctrlLayoutRect = ctrl.layoutRect();\n            width = Math.max(colWidths[x], ctrlLayoutRect.startMinWidth);\n            ctrlLayoutRect.x = posX;\n            ctrlLayoutRect.y = posY;\n            align = ctrlSettings.alignH || (alignH ? alignH[x] || alignH[0] : null);\n            if (align === 'center') {\n              ctrlLayoutRect.x = posX + width / 2 - ctrlLayoutRect.w / 2;\n            } else if (align === 'right') {\n              ctrlLayoutRect.x = posX + width - ctrlLayoutRect.w;\n            } else if (align === 'stretch') {\n              ctrlLayoutRect.w = width;\n            }\n            align = ctrlSettings.alignV || (alignV ? alignV[x] || alignV[0] : null);\n            if (align === 'center') {\n              ctrlLayoutRect.y = posY + height / 2 - ctrlLayoutRect.h / 2;\n            } else if (align === 'bottom') {\n              ctrlLayoutRect.y = posY + height - ctrlLayoutRect.h;\n            } else if (align === 'stretch') {\n              ctrlLayoutRect.h = height;\n            }\n            ctrl.layoutRect(ctrlLayoutRect);\n            posX += width + spacingH;\n            if (ctrl.recalc) {\n              ctrl.recalc();\n            }\n          }\n          posY += height + spacingV;\n        }\n      }\n    });\n\n    var Iframe$1 = Widget.extend({\n      renderHtml: function () {\n        var self = this;\n        self.classes.add('iframe');\n        self.canFocus = false;\n        return '<iframe id=\"' + self._id + '\" class=\"' + self.classes + '\" tabindex=\"-1\" src=\"' + (self.settings.url || 'javascript:\\'\\'') + '\" frameborder=\"0\"></iframe>';\n      },\n      src: function (src) {\n        this.getEl().src = src;\n      },\n      html: function (html, callback) {\n        var self = this, body = this.getEl().contentWindow.document.body;\n        if (!body) {\n          global$7.setTimeout(function () {\n            self.html(html);\n          });\n        } else {\n          body.innerHTML = html;\n          if (callback) {\n            callback();\n          }\n        }\n        return this;\n      }\n    });\n\n    var InfoBox = Widget.extend({\n      init: function (settings) {\n        var self = this;\n        self._super(settings);\n        self.classes.add('widget').add('infobox');\n        self.canFocus = false;\n      },\n      severity: function (level) {\n        this.classes.remove('error');\n        this.classes.remove('warning');\n        this.classes.remove('success');\n        this.classes.add(level);\n      },\n      help: function (state) {\n        this.state.set('help', state);\n      },\n      renderHtml: function () {\n        var self = this, prefix = self.classPrefix;\n        return '<div id=\"' + self._id + '\" class=\"' + self.classes + '\">' + '<div id=\"' + self._id + '-body\">' + self.encode(self.state.get('text')) + '<button role=\"button\" tabindex=\"-1\">' + '<i class=\"' + prefix + 'ico ' + prefix + 'i-help\"></i>' + '</button>' + '</div>' + '</div>';\n      },\n      bindStates: function () {\n        var self = this;\n        self.state.on('change:text', function (e) {\n          self.getEl('body').firstChild.data = self.encode(e.value);\n          if (self.state.get('rendered')) {\n            self.updateLayoutRect();\n          }\n        });\n        self.state.on('change:help', function (e) {\n          self.classes.toggle('has-help', e.value);\n          if (self.state.get('rendered')) {\n            self.updateLayoutRect();\n          }\n        });\n        return self._super();\n      }\n    });\n\n    var Label = Widget.extend({\n      init: function (settings) {\n        var self = this;\n        self._super(settings);\n        self.classes.add('widget').add('label');\n        self.canFocus = false;\n        if (settings.multiline) {\n          self.classes.add('autoscroll');\n        }\n        if (settings.strong) {\n          self.classes.add('strong');\n        }\n      },\n      initLayoutRect: function () {\n        var self = this, layoutRect = self._super();\n        if (self.settings.multiline) {\n          var size = funcs.getSize(self.getEl());\n          if (size.width > layoutRect.maxW) {\n            layoutRect.minW = layoutRect.maxW;\n            self.classes.add('multiline');\n          }\n          self.getEl().style.width = layoutRect.minW + 'px';\n          layoutRect.startMinH = layoutRect.h = layoutRect.minH = Math.min(layoutRect.maxH, funcs.getSize(self.getEl()).height);\n        }\n        return layoutRect;\n      },\n      repaint: function () {\n        var self = this;\n        if (!self.settings.multiline) {\n          self.getEl().style.lineHeight = self.layoutRect().h + 'px';\n        }\n        return self._super();\n      },\n      severity: function (level) {\n        this.classes.remove('error');\n        this.classes.remove('warning');\n        this.classes.remove('success');\n        this.classes.add(level);\n      },\n      renderHtml: function () {\n        var self = this;\n        var targetCtrl, forName, forId = self.settings.forId;\n        var text = self.settings.html ? self.settings.html : self.encode(self.state.get('text'));\n        if (!forId && (forName = self.settings.forName)) {\n          targetCtrl = self.getRoot().find('#' + forName)[0];\n          if (targetCtrl) {\n            forId = targetCtrl._id;\n          }\n        }\n        if (forId) {\n          return '<label id=\"' + self._id + '\" class=\"' + self.classes + '\"' + (forId ? ' for=\"' + forId + '\"' : '') + '>' + text + '</label>';\n        }\n        return '<span id=\"' + self._id + '\" class=\"' + self.classes + '\">' + text + '</span>';\n      },\n      bindStates: function () {\n        var self = this;\n        self.state.on('change:text', function (e) {\n          self.innerHtml(self.encode(e.value));\n          if (self.state.get('rendered')) {\n            self.updateLayoutRect();\n          }\n        });\n        return self._super();\n      }\n    });\n\n    var Toolbar$1 = Container.extend({\n      Defaults: {\n        role: 'toolbar',\n        layout: 'flow'\n      },\n      init: function (settings) {\n        var self = this;\n        self._super(settings);\n        self.classes.add('toolbar');\n      },\n      postRender: function () {\n        var self = this;\n        self.items().each(function (ctrl) {\n          ctrl.classes.add('toolbar-item');\n        });\n        return self._super();\n      }\n    });\n\n    var MenuBar = Toolbar$1.extend({\n      Defaults: {\n        role: 'menubar',\n        containerCls: 'menubar',\n        ariaRoot: true,\n        defaults: { type: 'menubutton' }\n      }\n    });\n\n    function isChildOf$1(node, parent) {\n      while (node) {\n        if (parent === node) {\n          return true;\n        }\n        node = node.parentNode;\n      }\n      return false;\n    }\n    var MenuButton = Button.extend({\n      init: function (settings) {\n        var self = this;\n        self._renderOpen = true;\n        self._super(settings);\n        settings = self.settings;\n        self.classes.add('menubtn');\n        if (settings.fixedWidth) {\n          self.classes.add('fixed-width');\n        }\n        self.aria('haspopup', true);\n        self.state.set('menu', settings.menu || self.render());\n      },\n      showMenu: function (toggle) {\n        var self = this;\n        var menu;\n        if (self.menu && self.menu.visible() && toggle !== false) {\n          return self.hideMenu();\n        }\n        if (!self.menu) {\n          menu = self.state.get('menu') || [];\n          self.classes.add('opened');\n          if (menu.length) {\n            menu = {\n              type: 'menu',\n              animate: true,\n              items: menu\n            };\n          } else {\n            menu.type = menu.type || 'menu';\n            menu.animate = true;\n          }\n          if (!menu.renderTo) {\n            self.menu = global$4.create(menu).parent(self).renderTo();\n          } else {\n            self.menu = menu.parent(self).show().renderTo();\n          }\n          self.fire('createmenu');\n          self.menu.reflow();\n          self.menu.on('cancel', function (e) {\n            if (e.control.parent() === self.menu) {\n              e.stopPropagation();\n              self.focus();\n              self.hideMenu();\n            }\n          });\n          self.menu.on('select', function () {\n            self.focus();\n          });\n          self.menu.on('show hide', function (e) {\n            if (e.type === 'hide' && e.control.parent() === self) {\n              self.classes.remove('opened-under');\n            }\n            if (e.control === self.menu) {\n              self.activeMenu(e.type === 'show');\n              self.classes.toggle('opened', e.type === 'show');\n            }\n            self.aria('expanded', e.type === 'show');\n          }).fire('show');\n        }\n        self.menu.show();\n        self.menu.layoutRect({ w: self.layoutRect().w });\n        self.menu.repaint();\n        self.menu.moveRel(self.getEl(), self.isRtl() ? [\n          'br-tr',\n          'tr-br'\n        ] : [\n          'bl-tl',\n          'tl-bl'\n        ]);\n        var menuLayoutRect = self.menu.layoutRect();\n        var selfBottom = self.$el.offset().top + self.layoutRect().h;\n        if (selfBottom > menuLayoutRect.y && selfBottom < menuLayoutRect.y + menuLayoutRect.h) {\n          self.classes.add('opened-under');\n        }\n        self.fire('showmenu');\n      },\n      hideMenu: function () {\n        var self = this;\n        if (self.menu) {\n          self.menu.items().each(function (item) {\n            if (item.hideMenu) {\n              item.hideMenu();\n            }\n          });\n          self.menu.hide();\n        }\n      },\n      activeMenu: function (state) {\n        this.classes.toggle('active', state);\n      },\n      renderHtml: function () {\n        var self = this, id = self._id, prefix = self.classPrefix;\n        var icon = self.settings.icon, image;\n        var text = self.state.get('text');\n        var textHtml = '';\n        image = self.settings.image;\n        if (image) {\n          icon = 'none';\n          if (typeof image !== 'string') {\n            image = domGlobals.window.getSelection ? image[0] : image[1];\n          }\n          image = ' style=\"background-image: url(\\'' + image + '\\')\"';\n        } else {\n          image = '';\n        }\n        if (text) {\n          self.classes.add('btn-has-text');\n          textHtml = '<span class=\"' + prefix + 'txt\">' + self.encode(text) + '</span>';\n        }\n        icon = self.settings.icon ? prefix + 'ico ' + prefix + 'i-' + icon : '';\n        self.aria('role', self.parent() instanceof MenuBar ? 'menuitem' : 'button');\n        return '<div id=\"' + id + '\" class=\"' + self.classes + '\" tabindex=\"-1\" aria-labelledby=\"' + id + '\">' + '<button id=\"' + id + '-open\" role=\"presentation\" type=\"button\" tabindex=\"-1\">' + (icon ? '<i class=\"' + icon + '\"' + image + '></i>' : '') + textHtml + ' <i class=\"' + prefix + 'caret\"></i>' + '</button>' + '</div>';\n      },\n      postRender: function () {\n        var self = this;\n        self.on('click', function (e) {\n          if (e.control === self && isChildOf$1(e.target, self.getEl())) {\n            self.focus();\n            self.showMenu(!e.aria);\n            if (e.aria) {\n              self.menu.items().filter(':visible')[0].focus();\n            }\n          }\n        });\n        self.on('mouseenter', function (e) {\n          var overCtrl = e.control;\n          var parent = self.parent();\n          var hasVisibleSiblingMenu;\n          if (overCtrl && parent && overCtrl instanceof MenuButton && overCtrl.parent() === parent) {\n            parent.items().filter('MenuButton').each(function (ctrl) {\n              if (ctrl.hideMenu && ctrl !== overCtrl) {\n                if (ctrl.menu && ctrl.menu.visible()) {\n                  hasVisibleSiblingMenu = true;\n                }\n                ctrl.hideMenu();\n              }\n            });\n            if (hasVisibleSiblingMenu) {\n              overCtrl.focus();\n              overCtrl.showMenu();\n            }\n          }\n        });\n        return self._super();\n      },\n      bindStates: function () {\n        var self = this;\n        self.state.on('change:menu', function () {\n          if (self.menu) {\n            self.menu.remove();\n          }\n          self.menu = null;\n        });\n        return self._super();\n      },\n      remove: function () {\n        this._super();\n        if (this.menu) {\n          this.menu.remove();\n        }\n      }\n    });\n\n    var Menu = FloatPanel.extend({\n      Defaults: {\n        defaultType: 'menuitem',\n        border: 1,\n        layout: 'stack',\n        role: 'application',\n        bodyRole: 'menu',\n        ariaRoot: true\n      },\n      init: function (settings) {\n        var self = this;\n        settings.autohide = true;\n        settings.constrainToViewport = true;\n        if (typeof settings.items === 'function') {\n          settings.itemsFactory = settings.items;\n          settings.items = [];\n        }\n        if (settings.itemDefaults) {\n          var items = settings.items;\n          var i = items.length;\n          while (i--) {\n            items[i] = global$2.extend({}, settings.itemDefaults, items[i]);\n          }\n        }\n        self._super(settings);\n        self.classes.add('menu');\n        if (settings.animate && global$8.ie !== 11) {\n          self.classes.add('animate');\n        }\n      },\n      repaint: function () {\n        this.classes.toggle('menu-align', true);\n        this._super();\n        this.getEl().style.height = '';\n        this.getEl('body').style.height = '';\n        return this;\n      },\n      cancel: function () {\n        var self = this;\n        self.hideAll();\n        self.fire('select');\n      },\n      load: function () {\n        var self = this;\n        var time, factory;\n        function hideThrobber() {\n          if (self.throbber) {\n            self.throbber.hide();\n            self.throbber = null;\n          }\n        }\n        factory = self.settings.itemsFactory;\n        if (!factory) {\n          return;\n        }\n        if (!self.throbber) {\n          self.throbber = new Throbber(self.getEl('body'), true);\n          if (self.items().length === 0) {\n            self.throbber.show();\n            self.fire('loading');\n          } else {\n            self.throbber.show(100, function () {\n              self.items().remove();\n              self.fire('loading');\n            });\n          }\n          self.on('hide close', hideThrobber);\n        }\n        self.requestTime = time = new Date().getTime();\n        self.settings.itemsFactory(function (items) {\n          if (items.length === 0) {\n            self.hide();\n            return;\n          }\n          if (self.requestTime !== time) {\n            return;\n          }\n          self.getEl().style.width = '';\n          self.getEl('body').style.width = '';\n          hideThrobber();\n          self.items().remove();\n          self.getEl('body').innerHTML = '';\n          self.add(items);\n          self.renderNew();\n          self.fire('loaded');\n        });\n      },\n      hideAll: function () {\n        var self = this;\n        this.find('menuitem').exec('hideMenu');\n        return self._super();\n      },\n      preRender: function () {\n        var self = this;\n        self.items().each(function (ctrl) {\n          var settings = ctrl.settings;\n          if (settings.icon || settings.image || settings.selectable) {\n            self._hasIcons = true;\n            return false;\n          }\n        });\n        if (self.settings.itemsFactory) {\n          self.on('postrender', function () {\n            if (self.settings.itemsFactory) {\n              self.load();\n            }\n          });\n        }\n        self.on('show hide', function (e) {\n          if (e.control === self) {\n            if (e.type === 'show') {\n              global$7.setTimeout(function () {\n                self.classes.add('in');\n              }, 0);\n            } else {\n              self.classes.remove('in');\n            }\n          }\n        });\n        return self._super();\n      }\n    });\n\n    var ListBox = MenuButton.extend({\n      init: function (settings) {\n        var self = this;\n        var values, selected, selectedText, lastItemCtrl;\n        function setSelected(menuValues) {\n          for (var i = 0; i < menuValues.length; i++) {\n            selected = menuValues[i].selected || settings.value === menuValues[i].value;\n            if (selected) {\n              selectedText = selectedText || menuValues[i].text;\n              self.state.set('value', menuValues[i].value);\n              return true;\n            }\n            if (menuValues[i].menu) {\n              if (setSelected(menuValues[i].menu)) {\n                return true;\n              }\n            }\n          }\n        }\n        self._super(settings);\n        settings = self.settings;\n        self._values = values = settings.values;\n        if (values) {\n          if (typeof settings.value !== 'undefined') {\n            setSelected(values);\n          }\n          if (!selected && values.length > 0) {\n            selectedText = values[0].text;\n            self.state.set('value', values[0].value);\n          }\n          self.state.set('menu', values);\n        }\n        self.state.set('text', settings.text || selectedText);\n        self.classes.add('listbox');\n        self.on('select', function (e) {\n          var ctrl = e.control;\n          if (lastItemCtrl) {\n            e.lastControl = lastItemCtrl;\n          }\n          if (settings.multiple) {\n            ctrl.active(!ctrl.active());\n          } else {\n            self.value(e.control.value());\n          }\n          lastItemCtrl = ctrl;\n        });\n      },\n      value: function (value) {\n        if (arguments.length === 0) {\n          return this.state.get('value');\n        }\n        if (typeof value === 'undefined') {\n          return this;\n        }\n        function valueExists(values) {\n          return exists(values, function (a) {\n            return a.menu ? valueExists(a.menu) : a.value === value;\n          });\n        }\n        if (this.settings.values) {\n          if (valueExists(this.settings.values)) {\n            this.state.set('value', value);\n          } else if (value === null) {\n            this.state.set('value', null);\n          }\n        } else {\n          this.state.set('value', value);\n        }\n        return this;\n      },\n      bindStates: function () {\n        var self = this;\n        function activateMenuItemsByValue(menu, value) {\n          if (menu instanceof Menu) {\n            menu.items().each(function (ctrl) {\n              if (!ctrl.hasMenus()) {\n                ctrl.active(ctrl.value() === value);\n              }\n            });\n          }\n        }\n        function getSelectedItem(menuValues, value) {\n          var selectedItem;\n          if (!menuValues) {\n            return;\n          }\n          for (var i = 0; i < menuValues.length; i++) {\n            if (menuValues[i].value === value) {\n              return menuValues[i];\n            }\n            if (menuValues[i].menu) {\n              selectedItem = getSelectedItem(menuValues[i].menu, value);\n              if (selectedItem) {\n                return selectedItem;\n              }\n            }\n          }\n        }\n        self.on('show', function (e) {\n          activateMenuItemsByValue(e.control, self.value());\n        });\n        self.state.on('change:value', function (e) {\n          var selectedItem = getSelectedItem(self.state.get('menu'), e.value);\n          if (selectedItem) {\n            self.text(selectedItem.text);\n          } else {\n            self.text(self.settings.text);\n          }\n        });\n        return self._super();\n      }\n    });\n\n    var toggleTextStyle = function (ctrl, state) {\n      var textStyle = ctrl._textStyle;\n      if (textStyle) {\n        var textElm = ctrl.getEl('text');\n        textElm.setAttribute('style', textStyle);\n        if (state) {\n          textElm.style.color = '';\n          textElm.style.backgroundColor = '';\n        }\n      }\n    };\n    var MenuItem = Widget.extend({\n      Defaults: {\n        border: 0,\n        role: 'menuitem'\n      },\n      init: function (settings) {\n        var self = this;\n        var text;\n        self._super(settings);\n        settings = self.settings;\n        self.classes.add('menu-item');\n        if (settings.menu) {\n          self.classes.add('menu-item-expand');\n        }\n        if (settings.preview) {\n          self.classes.add('menu-item-preview');\n        }\n        text = self.state.get('text');\n        if (text === '-' || text === '|') {\n          self.classes.add('menu-item-sep');\n          self.aria('role', 'separator');\n          self.state.set('text', '-');\n        }\n        if (settings.selectable) {\n          self.aria('role', 'menuitemcheckbox');\n          self.classes.add('menu-item-checkbox');\n          settings.icon = 'selected';\n        }\n        if (!settings.preview && !settings.selectable) {\n          self.classes.add('menu-item-normal');\n        }\n        self.on('mousedown', function (e) {\n          e.preventDefault();\n        });\n        if (settings.menu && !settings.ariaHideMenu) {\n          self.aria('haspopup', true);\n        }\n      },\n      hasMenus: function () {\n        return !!this.settings.menu;\n      },\n      showMenu: function () {\n        var self = this;\n        var settings = self.settings;\n        var menu;\n        var parent = self.parent();\n        parent.items().each(function (ctrl) {\n          if (ctrl !== self) {\n            ctrl.hideMenu();\n          }\n        });\n        if (settings.menu) {\n          menu = self.menu;\n          if (!menu) {\n            menu = settings.menu;\n            if (menu.length) {\n              menu = {\n                type: 'menu',\n                items: menu\n              };\n            } else {\n              menu.type = menu.type || 'menu';\n            }\n            if (parent.settings.itemDefaults) {\n              menu.itemDefaults = parent.settings.itemDefaults;\n            }\n            menu = self.menu = global$4.create(menu).parent(self).renderTo();\n            menu.reflow();\n            menu.on('cancel', function (e) {\n              e.stopPropagation();\n              self.focus();\n              menu.hide();\n            });\n            menu.on('show hide', function (e) {\n              if (e.control.items) {\n                e.control.items().each(function (ctrl) {\n                  ctrl.active(ctrl.settings.selected);\n                });\n              }\n            }).fire('show');\n            menu.on('hide', function (e) {\n              if (e.control === menu) {\n                self.classes.remove('selected');\n              }\n            });\n            menu.submenu = true;\n          } else {\n            menu.show();\n          }\n          menu._parentMenu = parent;\n          menu.classes.add('menu-sub');\n          var rel = menu.testMoveRel(self.getEl(), self.isRtl() ? [\n            'tl-tr',\n            'bl-br',\n            'tr-tl',\n            'br-bl'\n          ] : [\n            'tr-tl',\n            'br-bl',\n            'tl-tr',\n            'bl-br'\n          ]);\n          menu.moveRel(self.getEl(), rel);\n          menu.rel = rel;\n          rel = 'menu-sub-' + rel;\n          menu.classes.remove(menu._lastRel).add(rel);\n          menu._lastRel = rel;\n          self.classes.add('selected');\n          self.aria('expanded', true);\n        }\n      },\n      hideMenu: function () {\n        var self = this;\n        if (self.menu) {\n          self.menu.items().each(function (item) {\n            if (item.hideMenu) {\n              item.hideMenu();\n            }\n          });\n          self.menu.hide();\n          self.aria('expanded', false);\n        }\n        return self;\n      },\n      renderHtml: function () {\n        var self = this;\n        var id = self._id;\n        var settings = self.settings;\n        var prefix = self.classPrefix;\n        var text = self.state.get('text');\n        var icon = self.settings.icon, image = '', shortcut = settings.shortcut;\n        var url = self.encode(settings.url), iconHtml = '';\n        function convertShortcut(shortcut) {\n          var i, value, replace = {};\n          if (global$8.mac) {\n            replace = {\n              alt: '&#x2325;',\n              ctrl: '&#x2318;',\n              shift: '&#x21E7;',\n              meta: '&#x2318;'\n            };\n          } else {\n            replace = { meta: 'Ctrl' };\n          }\n          shortcut = shortcut.split('+');\n          for (i = 0; i < shortcut.length; i++) {\n            value = replace[shortcut[i].toLowerCase()];\n            if (value) {\n              shortcut[i] = value;\n            }\n          }\n          return shortcut.join('+');\n        }\n        function escapeRegExp(str) {\n          return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n        }\n        function markMatches(text) {\n          var match = settings.match || '';\n          return match ? text.replace(new RegExp(escapeRegExp(match), 'gi'), function (match) {\n            return '!mce~match[' + match + ']mce~match!';\n          }) : text;\n        }\n        function boldMatches(text) {\n          return text.replace(new RegExp(escapeRegExp('!mce~match['), 'g'), '<b>').replace(new RegExp(escapeRegExp(']mce~match!'), 'g'), '</b>');\n        }\n        if (icon) {\n          self.parent().classes.add('menu-has-icons');\n        }\n        if (settings.image) {\n          image = ' style=\"background-image: url(\\'' + settings.image + '\\')\"';\n        }\n        if (shortcut) {\n          shortcut = convertShortcut(shortcut);\n        }\n        icon = prefix + 'ico ' + prefix + 'i-' + (self.settings.icon || 'none');\n        iconHtml = text !== '-' ? '<i class=\"' + icon + '\"' + image + '></i>\\xA0' : '';\n        text = boldMatches(self.encode(markMatches(text)));\n        url = boldMatches(self.encode(markMatches(url)));\n        return '<div id=\"' + id + '\" class=\"' + self.classes + '\" tabindex=\"-1\">' + iconHtml + (text !== '-' ? '<span id=\"' + id + '-text\" class=\"' + prefix + 'text\">' + text + '</span>' : '') + (shortcut ? '<div id=\"' + id + '-shortcut\" class=\"' + prefix + 'menu-shortcut\">' + shortcut + '</div>' : '') + (settings.menu ? '<div class=\"' + prefix + 'caret\"></div>' : '') + (url ? '<div class=\"' + prefix + 'menu-item-link\">' + url + '</div>' : '') + '</div>';\n      },\n      postRender: function () {\n        var self = this, settings = self.settings;\n        var textStyle = settings.textStyle;\n        if (typeof textStyle === 'function') {\n          textStyle = textStyle.call(this);\n        }\n        if (textStyle) {\n          var textElm = self.getEl('text');\n          if (textElm) {\n            textElm.setAttribute('style', textStyle);\n            self._textStyle = textStyle;\n          }\n        }\n        self.on('mouseenter click', function (e) {\n          if (e.control === self) {\n            if (!settings.menu && e.type === 'click') {\n              self.fire('select');\n              global$7.requestAnimationFrame(function () {\n                self.parent().hideAll();\n              });\n            } else {\n              self.showMenu();\n              if (e.aria) {\n                self.menu.focus(true);\n              }\n            }\n          }\n        });\n        self._super();\n        return self;\n      },\n      hover: function () {\n        var self = this;\n        self.parent().items().each(function (ctrl) {\n          ctrl.classes.remove('selected');\n        });\n        self.classes.toggle('selected', true);\n        return self;\n      },\n      active: function (state) {\n        toggleTextStyle(this, state);\n        if (typeof state !== 'undefined') {\n          this.aria('checked', state);\n        }\n        return this._super(state);\n      },\n      remove: function () {\n        this._super();\n        if (this.menu) {\n          this.menu.remove();\n        }\n      }\n    });\n\n    var Radio = Checkbox.extend({\n      Defaults: {\n        classes: 'radio',\n        role: 'radio'\n      }\n    });\n\n    var ResizeHandle = Widget.extend({\n      renderHtml: function () {\n        var self = this, prefix = self.classPrefix;\n        self.classes.add('resizehandle');\n        if (self.settings.direction === 'both') {\n          self.classes.add('resizehandle-both');\n        }\n        self.canFocus = false;\n        return '<div id=\"' + self._id + '\" class=\"' + self.classes + '\">' + '<i class=\"' + prefix + 'ico ' + prefix + 'i-resize\"></i>' + '</div>';\n      },\n      postRender: function () {\n        var self = this;\n        self._super();\n        self.resizeDragHelper = new DragHelper(this._id, {\n          start: function () {\n            self.fire('ResizeStart');\n          },\n          drag: function (e) {\n            if (self.settings.direction !== 'both') {\n              e.deltaX = 0;\n            }\n            self.fire('Resize', e);\n          },\n          stop: function () {\n            self.fire('ResizeEnd');\n          }\n        });\n      },\n      remove: function () {\n        if (this.resizeDragHelper) {\n          this.resizeDragHelper.destroy();\n        }\n        return this._super();\n      }\n    });\n\n    function createOptions(options) {\n      var strOptions = '';\n      if (options) {\n        for (var i = 0; i < options.length; i++) {\n          strOptions += '<option value=\"' + options[i] + '\">' + options[i] + '</option>';\n        }\n      }\n      return strOptions;\n    }\n    var SelectBox = Widget.extend({\n      Defaults: {\n        classes: 'selectbox',\n        role: 'selectbox',\n        options: []\n      },\n      init: function (settings) {\n        var self = this;\n        self._super(settings);\n        if (self.settings.size) {\n          self.size = self.settings.size;\n        }\n        if (self.settings.options) {\n          self._options = self.settings.options;\n        }\n        self.on('keydown', function (e) {\n          var rootControl;\n          if (e.keyCode === 13) {\n            e.preventDefault();\n            self.parents().reverse().each(function (ctrl) {\n              if (ctrl.toJSON) {\n                rootControl = ctrl;\n                return false;\n              }\n            });\n            self.fire('submit', { data: rootControl.toJSON() });\n          }\n        });\n      },\n      options: function (state) {\n        if (!arguments.length) {\n          return this.state.get('options');\n        }\n        this.state.set('options', state);\n        return this;\n      },\n      renderHtml: function () {\n        var self = this;\n        var options, size = '';\n        options = createOptions(self._options);\n        if (self.size) {\n          size = ' size = \"' + self.size + '\"';\n        }\n        return '<select id=\"' + self._id + '\" class=\"' + self.classes + '\"' + size + '>' + options + '</select>';\n      },\n      bindStates: function () {\n        var self = this;\n        self.state.on('change:options', function (e) {\n          self.getEl().innerHTML = createOptions(e.value);\n        });\n        return self._super();\n      }\n    });\n\n    function constrain(value, minVal, maxVal) {\n      if (value < minVal) {\n        value = minVal;\n      }\n      if (value > maxVal) {\n        value = maxVal;\n      }\n      return value;\n    }\n    function setAriaProp(el, name, value) {\n      el.setAttribute('aria-' + name, value);\n    }\n    function updateSliderHandle(ctrl, value) {\n      var maxHandlePos, shortSizeName, sizeName, stylePosName, styleValue, handleEl;\n      if (ctrl.settings.orientation === 'v') {\n        stylePosName = 'top';\n        sizeName = 'height';\n        shortSizeName = 'h';\n      } else {\n        stylePosName = 'left';\n        sizeName = 'width';\n        shortSizeName = 'w';\n      }\n      handleEl = ctrl.getEl('handle');\n      maxHandlePos = (ctrl.layoutRect()[shortSizeName] || 100) - funcs.getSize(handleEl)[sizeName];\n      styleValue = maxHandlePos * ((value - ctrl._minValue) / (ctrl._maxValue - ctrl._minValue)) + 'px';\n      handleEl.style[stylePosName] = styleValue;\n      handleEl.style.height = ctrl.layoutRect().h + 'px';\n      setAriaProp(handleEl, 'valuenow', value);\n      setAriaProp(handleEl, 'valuetext', '' + ctrl.settings.previewFilter(value));\n      setAriaProp(handleEl, 'valuemin', ctrl._minValue);\n      setAriaProp(handleEl, 'valuemax', ctrl._maxValue);\n    }\n    var Slider = Widget.extend({\n      init: function (settings) {\n        var self = this;\n        if (!settings.previewFilter) {\n          settings.previewFilter = function (value) {\n            return Math.round(value * 100) / 100;\n          };\n        }\n        self._super(settings);\n        self.classes.add('slider');\n        if (settings.orientation === 'v') {\n          self.classes.add('vertical');\n        }\n        self._minValue = isNumber(settings.minValue) ? settings.minValue : 0;\n        self._maxValue = isNumber(settings.maxValue) ? settings.maxValue : 100;\n        self._initValue = self.state.get('value');\n      },\n      renderHtml: function () {\n        var self = this, id = self._id, prefix = self.classPrefix;\n        return '<div id=\"' + id + '\" class=\"' + self.classes + '\">' + '<div id=\"' + id + '-handle\" class=\"' + prefix + 'slider-handle\" role=\"slider\" tabindex=\"-1\"></div>' + '</div>';\n      },\n      reset: function () {\n        this.value(this._initValue).repaint();\n      },\n      postRender: function () {\n        var self = this;\n        var minValue, maxValue, screenCordName, stylePosName, sizeName, shortSizeName;\n        function toFraction(min, max, val) {\n          return (val + min) / (max - min);\n        }\n        function fromFraction(min, max, val) {\n          return val * (max - min) - min;\n        }\n        function handleKeyboard(minValue, maxValue) {\n          function alter(delta) {\n            var value;\n            value = self.value();\n            value = fromFraction(minValue, maxValue, toFraction(minValue, maxValue, value) + delta * 0.05);\n            value = constrain(value, minValue, maxValue);\n            self.value(value);\n            self.fire('dragstart', { value: value });\n            self.fire('drag', { value: value });\n            self.fire('dragend', { value: value });\n          }\n          self.on('keydown', function (e) {\n            switch (e.keyCode) {\n            case 37:\n            case 38:\n              alter(-1);\n              break;\n            case 39:\n            case 40:\n              alter(1);\n              break;\n            }\n          });\n        }\n        function handleDrag(minValue, maxValue, handleEl) {\n          var startPos, startHandlePos, maxHandlePos, handlePos, value;\n          self._dragHelper = new DragHelper(self._id, {\n            handle: self._id + '-handle',\n            start: function (e) {\n              startPos = e[screenCordName];\n              startHandlePos = parseInt(self.getEl('handle').style[stylePosName], 10);\n              maxHandlePos = (self.layoutRect()[shortSizeName] || 100) - funcs.getSize(handleEl)[sizeName];\n              self.fire('dragstart', { value: value });\n            },\n            drag: function (e) {\n              var delta = e[screenCordName] - startPos;\n              handlePos = constrain(startHandlePos + delta, 0, maxHandlePos);\n              handleEl.style[stylePosName] = handlePos + 'px';\n              value = minValue + handlePos / maxHandlePos * (maxValue - minValue);\n              self.value(value);\n              self.tooltip().text('' + self.settings.previewFilter(value)).show().moveRel(handleEl, 'bc tc');\n              self.fire('drag', { value: value });\n            },\n            stop: function () {\n              self.tooltip().hide();\n              self.fire('dragend', { value: value });\n            }\n          });\n        }\n        minValue = self._minValue;\n        maxValue = self._maxValue;\n        if (self.settings.orientation === 'v') {\n          screenCordName = 'screenY';\n          stylePosName = 'top';\n          sizeName = 'height';\n          shortSizeName = 'h';\n        } else {\n          screenCordName = 'screenX';\n          stylePosName = 'left';\n          sizeName = 'width';\n          shortSizeName = 'w';\n        }\n        self._super();\n        handleKeyboard(minValue, maxValue);\n        handleDrag(minValue, maxValue, self.getEl('handle'));\n      },\n      repaint: function () {\n        this._super();\n        updateSliderHandle(this, this.value());\n      },\n      bindStates: function () {\n        var self = this;\n        self.state.on('change:value', function (e) {\n          updateSliderHandle(self, e.value);\n        });\n        return self._super();\n      }\n    });\n\n    var Spacer = Widget.extend({\n      renderHtml: function () {\n        var self = this;\n        self.classes.add('spacer');\n        self.canFocus = false;\n        return '<div id=\"' + self._id + '\" class=\"' + self.classes + '\"></div>';\n      }\n    });\n\n    var SplitButton = MenuButton.extend({\n      Defaults: {\n        classes: 'widget btn splitbtn',\n        role: 'button'\n      },\n      repaint: function () {\n        var self = this;\n        var elm = self.getEl();\n        var rect = self.layoutRect();\n        var mainButtonElm, menuButtonElm;\n        self._super();\n        mainButtonElm = elm.firstChild;\n        menuButtonElm = elm.lastChild;\n        global$9(mainButtonElm).css({\n          width: rect.w - funcs.getSize(menuButtonElm).width,\n          height: rect.h - 2\n        });\n        global$9(menuButtonElm).css({ height: rect.h - 2 });\n        return self;\n      },\n      activeMenu: function (state) {\n        var self = this;\n        global$9(self.getEl().lastChild).toggleClass(self.classPrefix + 'active', state);\n      },\n      renderHtml: function () {\n        var self = this;\n        var id = self._id;\n        var prefix = self.classPrefix;\n        var image;\n        var icon = self.state.get('icon');\n        var text = self.state.get('text');\n        var settings = self.settings;\n        var textHtml = '', ariaPressed;\n        image = settings.image;\n        if (image) {\n          icon = 'none';\n          if (typeof image !== 'string') {\n            image = domGlobals.window.getSelection ? image[0] : image[1];\n          }\n          image = ' style=\"background-image: url(\\'' + image + '\\')\"';\n        } else {\n          image = '';\n        }\n        icon = settings.icon ? prefix + 'ico ' + prefix + 'i-' + icon : '';\n        if (text) {\n          self.classes.add('btn-has-text');\n          textHtml = '<span class=\"' + prefix + 'txt\">' + self.encode(text) + '</span>';\n        }\n        ariaPressed = typeof settings.active === 'boolean' ? ' aria-pressed=\"' + settings.active + '\"' : '';\n        return '<div id=\"' + id + '\" class=\"' + self.classes + '\" role=\"button\"' + ariaPressed + ' tabindex=\"-1\">' + '<button type=\"button\" hidefocus=\"1\" tabindex=\"-1\">' + (icon ? '<i class=\"' + icon + '\"' + image + '></i>' : '') + textHtml + '</button>' + '<button type=\"button\" class=\"' + prefix + 'open\" hidefocus=\"1\" tabindex=\"-1\">' + (self._menuBtnText ? (icon ? '\\xA0' : '') + self._menuBtnText : '') + ' <i class=\"' + prefix + 'caret\"></i>' + '</button>' + '</div>';\n      },\n      postRender: function () {\n        var self = this, onClickHandler = self.settings.onclick;\n        self.on('click', function (e) {\n          var node = e.target;\n          if (e.control === this) {\n            while (node) {\n              if (e.aria && e.aria.key !== 'down' || node.nodeName === 'BUTTON' && node.className.indexOf('open') === -1) {\n                e.stopImmediatePropagation();\n                if (onClickHandler) {\n                  onClickHandler.call(this, e);\n                }\n                return;\n              }\n              node = node.parentNode;\n            }\n          }\n        });\n        delete self.settings.onclick;\n        return self._super();\n      }\n    });\n\n    var StackLayout = FlowLayout.extend({\n      Defaults: {\n        containerClass: 'stack-layout',\n        controlClass: 'stack-layout-item',\n        endClass: 'break'\n      },\n      isNative: function () {\n        return true;\n      }\n    });\n\n    var TabPanel = Panel.extend({\n      Defaults: {\n        layout: 'absolute',\n        defaults: { type: 'panel' }\n      },\n      activateTab: function (idx) {\n        var activeTabElm;\n        if (this.activeTabId) {\n          activeTabElm = this.getEl(this.activeTabId);\n          global$9(activeTabElm).removeClass(this.classPrefix + 'active');\n          activeTabElm.setAttribute('aria-selected', 'false');\n        }\n        this.activeTabId = 't' + idx;\n        activeTabElm = this.getEl('t' + idx);\n        activeTabElm.setAttribute('aria-selected', 'true');\n        global$9(activeTabElm).addClass(this.classPrefix + 'active');\n        this.items()[idx].show().fire('showtab');\n        this.reflow();\n        this.items().each(function (item, i) {\n          if (idx !== i) {\n            item.hide();\n          }\n        });\n      },\n      renderHtml: function () {\n        var self = this;\n        var layout = self._layout;\n        var tabsHtml = '';\n        var prefix = self.classPrefix;\n        self.preRender();\n        layout.preRender(self);\n        self.items().each(function (ctrl, i) {\n          var id = self._id + '-t' + i;\n          ctrl.aria('role', 'tabpanel');\n          ctrl.aria('labelledby', id);\n          tabsHtml += '<div id=\"' + id + '\" class=\"' + prefix + 'tab\" ' + 'unselectable=\"on\" role=\"tab\" aria-controls=\"' + ctrl._id + '\" aria-selected=\"false\" tabIndex=\"-1\">' + self.encode(ctrl.settings.title) + '</div>';\n        });\n        return '<div id=\"' + self._id + '\" class=\"' + self.classes + '\" hidefocus=\"1\" tabindex=\"-1\">' + '<div id=\"' + self._id + '-head\" class=\"' + prefix + 'tabs\" role=\"tablist\">' + tabsHtml + '</div>' + '<div id=\"' + self._id + '-body\" class=\"' + self.bodyClasses + '\">' + layout.renderHtml(self) + '</div>' + '</div>';\n      },\n      postRender: function () {\n        var self = this;\n        self._super();\n        self.settings.activeTab = self.settings.activeTab || 0;\n        self.activateTab(self.settings.activeTab);\n        this.on('click', function (e) {\n          var targetParent = e.target.parentNode;\n          if (targetParent && targetParent.id === self._id + '-head') {\n            var i = targetParent.childNodes.length;\n            while (i--) {\n              if (targetParent.childNodes[i] === e.target) {\n                self.activateTab(i);\n              }\n            }\n          }\n        });\n      },\n      initLayoutRect: function () {\n        var self = this;\n        var rect, minW, minH;\n        minW = funcs.getSize(self.getEl('head')).width;\n        minW = minW < 0 ? 0 : minW;\n        minH = 0;\n        self.items().each(function (item) {\n          minW = Math.max(minW, item.layoutRect().minW);\n          minH = Math.max(minH, item.layoutRect().minH);\n        });\n        self.items().each(function (ctrl) {\n          ctrl.settings.x = 0;\n          ctrl.settings.y = 0;\n          ctrl.settings.w = minW;\n          ctrl.settings.h = minH;\n          ctrl.layoutRect({\n            x: 0,\n            y: 0,\n            w: minW,\n            h: minH\n          });\n        });\n        var headH = funcs.getSize(self.getEl('head')).height;\n        self.settings.minWidth = minW;\n        self.settings.minHeight = minH + headH;\n        rect = self._super();\n        rect.deltaH += headH;\n        rect.innerH = rect.h - rect.deltaH;\n        return rect;\n      }\n    });\n\n    var TextBox = Widget.extend({\n      init: function (settings) {\n        var self = this;\n        self._super(settings);\n        self.classes.add('textbox');\n        if (settings.multiline) {\n          self.classes.add('multiline');\n        } else {\n          self.on('keydown', function (e) {\n            var rootControl;\n            if (e.keyCode === 13) {\n              e.preventDefault();\n              self.parents().reverse().each(function (ctrl) {\n                if (ctrl.toJSON) {\n                  rootControl = ctrl;\n                  return false;\n                }\n              });\n              self.fire('submit', { data: rootControl.toJSON() });\n            }\n          });\n          self.on('keyup', function (e) {\n            self.state.set('value', e.target.value);\n          });\n        }\n      },\n      repaint: function () {\n        var self = this;\n        var style, rect, borderBox, borderW, borderH = 0, lastRepaintRect;\n        style = self.getEl().style;\n        rect = self._layoutRect;\n        lastRepaintRect = self._lastRepaintRect || {};\n        var doc = domGlobals.document;\n        if (!self.settings.multiline && doc.all && (!doc.documentMode || doc.documentMode <= 8)) {\n          style.lineHeight = rect.h - borderH + 'px';\n        }\n        borderBox = self.borderBox;\n        borderW = borderBox.left + borderBox.right + 8;\n        borderH = borderBox.top + borderBox.bottom + (self.settings.multiline ? 8 : 0);\n        if (rect.x !== lastRepaintRect.x) {\n          style.left = rect.x + 'px';\n          lastRepaintRect.x = rect.x;\n        }\n        if (rect.y !== lastRepaintRect.y) {\n          style.top = rect.y + 'px';\n          lastRepaintRect.y = rect.y;\n        }\n        if (rect.w !== lastRepaintRect.w) {\n          style.width = rect.w - borderW + 'px';\n          lastRepaintRect.w = rect.w;\n        }\n        if (rect.h !== lastRepaintRect.h) {\n          style.height = rect.h - borderH + 'px';\n          lastRepaintRect.h = rect.h;\n        }\n        self._lastRepaintRect = lastRepaintRect;\n        self.fire('repaint', {}, false);\n        return self;\n      },\n      renderHtml: function () {\n        var self = this;\n        var settings = self.settings;\n        var attrs, elm;\n        attrs = {\n          id: self._id,\n          hidefocus: '1'\n        };\n        global$2.each([\n          'rows',\n          'spellcheck',\n          'maxLength',\n          'size',\n          'readonly',\n          'min',\n          'max',\n          'step',\n          'list',\n          'pattern',\n          'placeholder',\n          'required',\n          'multiple'\n        ], function (name) {\n          attrs[name] = settings[name];\n        });\n        if (self.disabled()) {\n          attrs.disabled = 'disabled';\n        }\n        if (settings.subtype) {\n          attrs.type = settings.subtype;\n        }\n        elm = funcs.create(settings.multiline ? 'textarea' : 'input', attrs);\n        elm.value = self.state.get('value');\n        elm.className = self.classes.toString();\n        return elm.outerHTML;\n      },\n      value: function (value) {\n        if (arguments.length) {\n          this.state.set('value', value);\n          return this;\n        }\n        if (this.state.get('rendered')) {\n          this.state.set('value', this.getEl().value);\n        }\n        return this.state.get('value');\n      },\n      postRender: function () {\n        var self = this;\n        self.getEl().value = self.state.get('value');\n        self._super();\n        self.$el.on('change', function (e) {\n          self.state.set('value', e.target.value);\n          self.fire('change', e);\n        });\n      },\n      bindStates: function () {\n        var self = this;\n        self.state.on('change:value', function (e) {\n          if (self.getEl().value !== e.value) {\n            self.getEl().value = e.value;\n          }\n        });\n        self.state.on('change:disabled', function (e) {\n          self.getEl().disabled = e.value;\n        });\n        return self._super();\n      },\n      remove: function () {\n        this.$el.off();\n        this._super();\n      }\n    });\n\n    var getApi = function () {\n      return {\n        Selector: Selector,\n        Collection: Collection$2,\n        ReflowQueue: ReflowQueue,\n        Control: Control$1,\n        Factory: global$4,\n        KeyboardNavigation: KeyboardNavigation,\n        Container: Container,\n        DragHelper: DragHelper,\n        Scrollable: Scrollable,\n        Panel: Panel,\n        Movable: Movable,\n        Resizable: Resizable,\n        FloatPanel: FloatPanel,\n        Window: Window,\n        MessageBox: MessageBox,\n        Tooltip: Tooltip,\n        Widget: Widget,\n        Progress: Progress,\n        Notification: Notification,\n        Layout: Layout,\n        AbsoluteLayout: AbsoluteLayout,\n        Button: Button,\n        ButtonGroup: ButtonGroup,\n        Checkbox: Checkbox,\n        ComboBox: ComboBox,\n        ColorBox: ColorBox,\n        PanelButton: PanelButton,\n        ColorButton: ColorButton,\n        ColorPicker: ColorPicker,\n        Path: Path,\n        ElementPath: ElementPath,\n        FormItem: FormItem,\n        Form: Form,\n        FieldSet: FieldSet,\n        FilePicker: FilePicker,\n        FitLayout: FitLayout,\n        FlexLayout: FlexLayout,\n        FlowLayout: FlowLayout,\n        FormatControls: FormatControls,\n        GridLayout: GridLayout,\n        Iframe: Iframe$1,\n        InfoBox: InfoBox,\n        Label: Label,\n        Toolbar: Toolbar$1,\n        MenuBar: MenuBar,\n        MenuButton: MenuButton,\n        MenuItem: MenuItem,\n        Throbber: Throbber,\n        Menu: Menu,\n        ListBox: ListBox,\n        Radio: Radio,\n        ResizeHandle: ResizeHandle,\n        SelectBox: SelectBox,\n        Slider: Slider,\n        Spacer: Spacer,\n        SplitButton: SplitButton,\n        StackLayout: StackLayout,\n        TabPanel: TabPanel,\n        TextBox: TextBox,\n        DropZone: DropZone,\n        BrowseButton: BrowseButton\n      };\n    };\n    var appendTo = function (target) {\n      if (target.ui) {\n        global$2.each(getApi(), function (ref, key) {\n          target.ui[key] = ref;\n        });\n      } else {\n        target.ui = getApi();\n      }\n    };\n    var registerToFactory = function () {\n      global$2.each(getApi(), function (ref, key) {\n        global$4.add(key, ref);\n      });\n    };\n    var Api = {\n      appendTo: appendTo,\n      registerToFactory: registerToFactory\n    };\n\n    Api.registerToFactory();\n    Api.appendTo(window.tinymce ? window.tinymce : {});\n    global.add('modern', function (editor) {\n      FormatControls.setup(editor);\n      return ThemeApi.get(editor);\n    });\n    function Theme () {\n    }\n\n    return Theme;\n\n}(window));\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tinymce/themes/modern/theme.js\n// module id = o5MN\n// module chunks = 45"],"sourceRoot":""}