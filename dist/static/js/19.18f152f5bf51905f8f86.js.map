{"version":3,"sources":["webpack:///static/js/19.18f152f5bf51905f8f86.js","webpack:///./~/tinymce/plugins/media/index.js","webpack:///./~/tinymce/plugins/media/plugin.js"],"names":["webpackJsonp","XUqK","module","exports","__webpack_require__","jUW6","Plugin","global","tinymce","util","Tools","resolve","global$1","global$2","getScripts","editor","getParam","getAudioTemplateCallback","getVideoTemplateCallback","hasLiveEmbeds","shouldFilterHtml","getUrlResolver","hasAltSource","hasPoster","hasDimensions","Settings","Cell","initial","value","get","set","v","clone","noop","constant","never","always","none","NONE","eq","o","isNone","call","thunk","id","n","me","fold","s","is","isSome","getOr","getOrThunk","getOrDie","msg","Error","getOrNull","getOrUndefined","undefined","or","orThunk","map","each","bind","exists","forall","filter","equals","equals_","toArray","toString","Object","freeze","some","a","constant_a","self","f","elementEq","b","from","Option","hasOwnProperty","obj","key","has","global$3","global$4","getVideoScriptMatch","prefixes","src","i","length","indexOf","VideoScript","DOM","trimPx","replace","getEphoxEmbedData","attrs","style","styles","parseStyle","type","source1","source2","poster","width","height","htmlToData","html","isEphoxEmbed","data","validate","allow_conditional_comments","special","start","name","movie","extend","videoScript","parse","HtmlToData","global$5","guess","url","mimes","mp3","wav","mp4","webm","ogg","swf","fileEnd","toLowerCase","split","pop","mime","Mime","global$6","global$7","DOM$1","addPx","test","setAttributes","updatedAttrs","attr","splice","push","updateEphoxEmbed","styleMap","serializeStyle","updateHtml","updateAll","hasImage","writer","sourceCount","comment","text","cdata","raw","empty","end","index","imgAttrs","getContent","UpdateHtml","urlPatterns","regex","w","h","allowFullscreen","getUrl","pattern","match","exec","newUrl","matchPattern","getIframeHtml","getFlashHtml","getAudioHtml","audioTemplateCallback","source2mime","getVideoHtml","videoTemplateCallback","source1mime","getScriptHtml","dataToHtml","dataIn","embed","convertURL","dom","encode","DataToHtml","cache","embedPromise","handler","res","rej","wrappedResolve","response","defaultPromise","loadedData","getEmbedHtml","embedHandler","isCached","Service","trimPx$1","addPx$1","getSize","elm","setSize","Size","getMaxWidth","getMaxHeight","setMaxWidth","setMaxHeight","doSyncSize","widthCtrl","heightCtrl","state","doSizeControls","win","find","constrained","checked","doUpdateSize","isContrained","oldWidth","oldHeight","newWidth","newHeight","Math","round","isNaN","syncSize","updateSize","createUi","onChange","recalcSize","label","layout","align","spacing","items","maxLength","size","onchange","ariaLabel","SizeManager","embedChange","ie","handleError","error","errorMessage","notificationManager","open","getData","element","selection","getNode","dataEmbed","getAttribute","serializer","serialize","getSource","addEmbedHtml","fromJSON","selectPlaceholder","beforeObjects","y","afterObjects","select","handleInsert","insertContent","nodeChanged","submitForm","toJSON","then","catch","populateMeta","meta","showDialog","generalFormItems","filetype","autofocus","onpaste","setTimeout","e","onbeforecall","advancedFormItems","reserialise","update","control","embedTextBox","flex","multiline","rows","updateValueOnChange","this","parent","body","title","direction","padding","forId","windowManager","bodyType","onSubmit","Dialog","get$1","Api","register","addCommand","Commands","global$8","sanitize","blocked","attrName","Sanitize","createPlaceholderNode","node","placeHolder","shortEnded","retainAttributesAndInnerHtml","transparentSrc","createPreviewIframeNode","previewWrapper","previewNode","shimNode","allowfullscreen","class","frameborder","append","sourceNode","targetNode","attrValue","attribs","ai","innerHtml","attributes","firstChild","escape","isWithinEphoxEmbed","placeHolderConverter","nodes","ceFalse","Nodes","setup","on","specialElements","schema","getSpecialElements","RegExp","boolAttrs","getBoolAttrs","parser","addNodeFilter","addAttributeFilter","realElm","innerNode","realElmName","className","substr","unescape","$","$elm","FilterContent","setup$1","target","nodeType","ResolveName","setup$2","selectedNode","hasClass","getAttrib","setAttribute","objectType","preventDefault","Selection","register$1","addButton","tooltip","cmd","stateSelector","addMenuItem","icon","context","prependToContext","Buttons","add"],"mappings":"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","file":"static/js/19.18f152f5bf51905f8f86.js","sourcesContent":["webpackJsonp([19],{\n\n/***/ \"XUqK\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// Exports the \"media\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/media')\n//   ES2015:\n//     import 'tinymce/plugins/media'\n__webpack_require__(\"jUW6\");\n\n/***/ }),\n\n/***/ \"jUW6\":\n/***/ (function(module, exports) {\n\n(function () {\nvar media = (function () {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var getScripts = function (editor) {\n      return editor.getParam('media_scripts');\n    };\n    var getAudioTemplateCallback = function (editor) {\n      return editor.getParam('audio_template_callback');\n    };\n    var getVideoTemplateCallback = function (editor) {\n      return editor.getParam('video_template_callback');\n    };\n    var hasLiveEmbeds = function (editor) {\n      return editor.getParam('media_live_embeds', true);\n    };\n    var shouldFilterHtml = function (editor) {\n      return editor.getParam('media_filter_html', true);\n    };\n    var getUrlResolver = function (editor) {\n      return editor.getParam('media_url_resolver');\n    };\n    var hasAltSource = function (editor) {\n      return editor.getParam('media_alt_source', true);\n    };\n    var hasPoster = function (editor) {\n      return editor.getParam('media_poster', true);\n    };\n    var hasDimensions = function (editor) {\n      return editor.getParam('media_dimensions', true);\n    };\n    var Settings = {\n      getScripts: getScripts,\n      getAudioTemplateCallback: getAudioTemplateCallback,\n      getVideoTemplateCallback: getVideoTemplateCallback,\n      hasLiveEmbeds: hasLiveEmbeds,\n      shouldFilterHtml: shouldFilterHtml,\n      getUrlResolver: getUrlResolver,\n      hasAltSource: hasAltSource,\n      hasPoster: hasPoster,\n      hasDimensions: hasDimensions\n    };\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      var clone = function () {\n        return Cell(get());\n      };\n      return {\n        get: get,\n        set: set,\n        clone: clone\n      };\n    };\n\n    var noop = function () {\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var none = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var eq = function (o) {\n        return o.isNone();\n      };\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = function (n) {\n        return n;\n      };\n      var me = {\n        fold: function (n, s) {\n          return n();\n        },\n        is: never,\n        isSome: never,\n        isNone: always,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: constant(null),\n        getOrUndefined: constant(undefined),\n        or: id,\n        orThunk: call,\n        map: none,\n        each: noop,\n        bind: none,\n        exists: never,\n        forall: always,\n        filter: none,\n        equals: eq,\n        equals_: eq,\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      if (Object.freeze) {\n        Object.freeze(me);\n      }\n      return me;\n    }();\n    var some = function (a) {\n      var constant_a = constant(a);\n      var self = function () {\n        return me;\n      };\n      var bind = function (f) {\n        return f(a);\n      };\n      var me = {\n        fold: function (n, s) {\n          return s(a);\n        },\n        is: function (v) {\n          return a === v;\n        },\n        isSome: always,\n        isNone: never,\n        getOr: constant_a,\n        getOrThunk: constant_a,\n        getOrDie: constant_a,\n        getOrNull: constant_a,\n        getOrUndefined: constant_a,\n        or: self,\n        orThunk: self,\n        map: function (f) {\n          return some(f(a));\n        },\n        each: function (f) {\n          f(a);\n        },\n        bind: bind,\n        exists: bind,\n        forall: bind,\n        filter: function (f) {\n          return f(a) ? me : NONE;\n        },\n        toArray: function () {\n          return [a];\n        },\n        toString: function () {\n          return 'some(' + a + ')';\n        },\n        equals: function (o) {\n          return o.is(a);\n        },\n        equals_: function (o, elementEq) {\n          return o.fold(never, function (b) {\n            return elementEq(a, b);\n          });\n        }\n      };\n      return me;\n    };\n    var from = function (value) {\n      return value === null || value === undefined ? NONE : some(value);\n    };\n    var Option = {\n      some: some,\n      none: none,\n      from: from\n    };\n\n    var hasOwnProperty = Object.hasOwnProperty;\n    var get = function (obj, key) {\n      return has(obj, key) ? Option.from(obj[key]) : Option.none();\n    };\n    var has = function (obj, key) {\n      return hasOwnProperty.call(obj, key);\n    };\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.html.SaxParser');\n\n    var getVideoScriptMatch = function (prefixes, src) {\n      if (prefixes) {\n        for (var i = 0; i < prefixes.length; i++) {\n          if (src.indexOf(prefixes[i].filter) !== -1) {\n            return prefixes[i];\n          }\n        }\n      }\n    };\n    var VideoScript = { getVideoScriptMatch: getVideoScriptMatch };\n\n    var DOM = global$3.DOM;\n    var trimPx = function (value) {\n      return value.replace(/px$/, '');\n    };\n    var getEphoxEmbedData = function (attrs) {\n      var style = attrs.map.style;\n      var styles = style ? DOM.parseStyle(style) : {};\n      return {\n        type: 'ephox-embed-iri',\n        source1: attrs.map['data-ephox-embed-iri'],\n        source2: '',\n        poster: '',\n        width: get(styles, 'max-width').map(trimPx).getOr(''),\n        height: get(styles, 'max-height').map(trimPx).getOr('')\n      };\n    };\n    var htmlToData = function (prefixes, html) {\n      var isEphoxEmbed = Cell(false);\n      var data = {};\n      global$4({\n        validate: false,\n        allow_conditional_comments: true,\n        special: 'script,noscript',\n        start: function (name, attrs) {\n          if (isEphoxEmbed.get()) ; else if (has(attrs.map, 'data-ephox-embed-iri')) {\n            isEphoxEmbed.set(true);\n            data = getEphoxEmbedData(attrs);\n          } else {\n            if (!data.source1 && name === 'param') {\n              data.source1 = attrs.map.movie;\n            }\n            if (name === 'iframe' || name === 'object' || name === 'embed' || name === 'video' || name === 'audio') {\n              if (!data.type) {\n                data.type = name;\n              }\n              data = global$2.extend(attrs.map, data);\n            }\n            if (name === 'script') {\n              var videoScript = VideoScript.getVideoScriptMatch(prefixes, attrs.map.src);\n              if (!videoScript) {\n                return;\n              }\n              data = {\n                type: 'script',\n                source1: attrs.map.src,\n                width: videoScript.width,\n                height: videoScript.height\n              };\n            }\n            if (name === 'source') {\n              if (!data.source1) {\n                data.source1 = attrs.map.src;\n              } else if (!data.source2) {\n                data.source2 = attrs.map.src;\n              }\n            }\n            if (name === 'img' && !data.poster) {\n              data.poster = attrs.map.src;\n            }\n          }\n        }\n      }).parse(html);\n      data.source1 = data.source1 || data.src || data.data;\n      data.source2 = data.source2 || '';\n      data.poster = data.poster || '';\n      return data;\n    };\n    var HtmlToData = { htmlToData: htmlToData };\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.util.Promise');\n\n    var guess = function (url) {\n      var mimes = {\n        mp3: 'audio/mpeg',\n        wav: 'audio/wav',\n        mp4: 'video/mp4',\n        webm: 'video/webm',\n        ogg: 'video/ogg',\n        swf: 'application/x-shockwave-flash'\n      };\n      var fileEnd = url.toLowerCase().split('.').pop();\n      var mime = mimes[fileEnd];\n      return mime ? mime : '';\n    };\n    var Mime = { guess: guess };\n\n    var global$6 = tinymce.util.Tools.resolve('tinymce.html.Schema');\n\n    var global$7 = tinymce.util.Tools.resolve('tinymce.html.Writer');\n\n    var DOM$1 = global$3.DOM;\n    var addPx = function (value) {\n      return /^[0-9.]+$/.test(value) ? value + 'px' : value;\n    };\n    var setAttributes = function (attrs, updatedAttrs) {\n      for (var name in updatedAttrs) {\n        var value = '' + updatedAttrs[name];\n        if (attrs.map[name]) {\n          var i = attrs.length;\n          while (i--) {\n            var attr = attrs[i];\n            if (attr.name === name) {\n              if (value) {\n                attrs.map[name] = value;\n                attr.value = value;\n              } else {\n                delete attrs.map[name];\n                attrs.splice(i, 1);\n              }\n            }\n          }\n        } else if (value) {\n          attrs.push({\n            name: name,\n            value: value\n          });\n          attrs.map[name] = value;\n        }\n      }\n    };\n    var updateEphoxEmbed = function (data, attrs) {\n      var style = attrs.map.style;\n      var styleMap = style ? DOM$1.parseStyle(style) : {};\n      styleMap['max-width'] = addPx(data.width);\n      styleMap['max-height'] = addPx(data.height);\n      setAttributes(attrs, { style: DOM$1.serializeStyle(styleMap) });\n    };\n    var updateHtml = function (html, data, updateAll) {\n      var writer = global$7();\n      var isEphoxEmbed = Cell(false);\n      var sourceCount = 0;\n      var hasImage;\n      global$4({\n        validate: false,\n        allow_conditional_comments: true,\n        special: 'script,noscript',\n        comment: function (text) {\n          writer.comment(text);\n        },\n        cdata: function (text) {\n          writer.cdata(text);\n        },\n        text: function (text, raw) {\n          writer.text(text, raw);\n        },\n        start: function (name, attrs, empty) {\n          if (isEphoxEmbed.get()) ; else if (has(attrs.map, 'data-ephox-embed-iri')) {\n            isEphoxEmbed.set(true);\n            updateEphoxEmbed(data, attrs);\n          } else {\n            switch (name) {\n            case 'video':\n            case 'object':\n            case 'embed':\n            case 'img':\n            case 'iframe':\n              if (data.height !== undefined && data.width !== undefined) {\n                setAttributes(attrs, {\n                  width: data.width,\n                  height: data.height\n                });\n              }\n              break;\n            }\n            if (updateAll) {\n              switch (name) {\n              case 'video':\n                setAttributes(attrs, {\n                  poster: data.poster,\n                  src: ''\n                });\n                if (data.source2) {\n                  setAttributes(attrs, { src: '' });\n                }\n                break;\n              case 'iframe':\n                setAttributes(attrs, { src: data.source1 });\n                break;\n              case 'source':\n                sourceCount++;\n                if (sourceCount <= 2) {\n                  setAttributes(attrs, {\n                    src: data['source' + sourceCount],\n                    type: data['source' + sourceCount + 'mime']\n                  });\n                  if (!data['source' + sourceCount]) {\n                    return;\n                  }\n                }\n                break;\n              case 'img':\n                if (!data.poster) {\n                  return;\n                }\n                hasImage = true;\n                break;\n              }\n            }\n          }\n          writer.start(name, attrs, empty);\n        },\n        end: function (name) {\n          if (!isEphoxEmbed.get()) {\n            if (name === 'video' && updateAll) {\n              for (var index = 1; index <= 2; index++) {\n                if (data['source' + index]) {\n                  var attrs = [];\n                  attrs.map = {};\n                  if (sourceCount < index) {\n                    setAttributes(attrs, {\n                      src: data['source' + index],\n                      type: data['source' + index + 'mime']\n                    });\n                    writer.start('source', attrs, true);\n                  }\n                }\n              }\n            }\n            if (data.poster && name === 'object' && updateAll && !hasImage) {\n              var imgAttrs = [];\n              imgAttrs.map = {};\n              setAttributes(imgAttrs, {\n                src: data.poster,\n                width: data.width,\n                height: data.height\n              });\n              writer.start('img', imgAttrs, true);\n            }\n          }\n          writer.end(name);\n        }\n      }, global$6({})).parse(html);\n      return writer.getContent();\n    };\n    var UpdateHtml = { updateHtml: updateHtml };\n\n    var urlPatterns = [\n      {\n        regex: /youtu\\.be\\/([\\w\\-_\\?&=.]+)/i,\n        type: 'iframe',\n        w: 560,\n        h: 314,\n        url: '//www.youtube.com/embed/$1',\n        allowFullscreen: true\n      },\n      {\n        regex: /youtube\\.com(.+)v=([^&]+)(&([a-z0-9&=\\-_]+))?/i,\n        type: 'iframe',\n        w: 560,\n        h: 314,\n        url: '//www.youtube.com/embed/$2?$4',\n        allowFullscreen: true\n      },\n      {\n        regex: /youtube.com\\/embed\\/([a-z0-9\\?&=\\-_]+)/i,\n        type: 'iframe',\n        w: 560,\n        h: 314,\n        url: '//www.youtube.com/embed/$1',\n        allowFullscreen: true\n      },\n      {\n        regex: /vimeo\\.com\\/([0-9]+)/,\n        type: 'iframe',\n        w: 425,\n        h: 350,\n        url: '//player.vimeo.com/video/$1?title=0&byline=0&portrait=0&color=8dc7dc',\n        allowFullscreen: true\n      },\n      {\n        regex: /vimeo\\.com\\/(.*)\\/([0-9]+)/,\n        type: 'iframe',\n        w: 425,\n        h: 350,\n        url: '//player.vimeo.com/video/$2?title=0&amp;byline=0',\n        allowFullscreen: true\n      },\n      {\n        regex: /maps\\.google\\.([a-z]{2,3})\\/maps\\/(.+)msid=(.+)/,\n        type: 'iframe',\n        w: 425,\n        h: 350,\n        url: '//maps.google.com/maps/ms?msid=$2&output=embed\"',\n        allowFullscreen: false\n      },\n      {\n        regex: /dailymotion\\.com\\/video\\/([^_]+)/,\n        type: 'iframe',\n        w: 480,\n        h: 270,\n        url: '//www.dailymotion.com/embed/video/$1',\n        allowFullscreen: true\n      },\n      {\n        regex: /dai\\.ly\\/([^_]+)/,\n        type: 'iframe',\n        w: 480,\n        h: 270,\n        url: '//www.dailymotion.com/embed/video/$1',\n        allowFullscreen: true\n      }\n    ];\n    var getUrl = function (pattern, url) {\n      var match = pattern.regex.exec(url);\n      var newUrl = pattern.url;\n      var _loop_1 = function (i) {\n        newUrl = newUrl.replace('$' + i, function () {\n          return match[i] ? match[i] : '';\n        });\n      };\n      for (var i = 0; i < match.length; i++) {\n        _loop_1(i);\n      }\n      return newUrl.replace(/\\?$/, '');\n    };\n    var matchPattern = function (url) {\n      var pattern = urlPatterns.filter(function (pattern) {\n        return pattern.regex.test(url);\n      });\n      if (pattern.length > 0) {\n        return global$2.extend({}, pattern[0], { url: getUrl(pattern[0], url) });\n      } else {\n        return null;\n      }\n    };\n\n    var getIframeHtml = function (data) {\n      var allowFullscreen = data.allowFullscreen ? ' allowFullscreen=\"1\"' : '';\n      return '<iframe src=\"' + data.source1 + '\" width=\"' + data.width + '\" height=\"' + data.height + '\"' + allowFullscreen + '></iframe>';\n    };\n    var getFlashHtml = function (data) {\n      var html = '<object data=\"' + data.source1 + '\" width=\"' + data.width + '\" height=\"' + data.height + '\" type=\"application/x-shockwave-flash\">';\n      if (data.poster) {\n        html += '<img src=\"' + data.poster + '\" width=\"' + data.width + '\" height=\"' + data.height + '\" />';\n      }\n      html += '</object>';\n      return html;\n    };\n    var getAudioHtml = function (data, audioTemplateCallback) {\n      if (audioTemplateCallback) {\n        return audioTemplateCallback(data);\n      } else {\n        return '<audio controls=\"controls\" src=\"' + data.source1 + '\">' + (data.source2 ? '\\n<source src=\"' + data.source2 + '\"' + (data.source2mime ? ' type=\"' + data.source2mime + '\"' : '') + ' />\\n' : '') + '</audio>';\n      }\n    };\n    var getVideoHtml = function (data, videoTemplateCallback) {\n      if (videoTemplateCallback) {\n        return videoTemplateCallback(data);\n      } else {\n        return '<video width=\"' + data.width + '\" height=\"' + data.height + '\"' + (data.poster ? ' poster=\"' + data.poster + '\"' : '') + ' controls=\"controls\">\\n' + '<source src=\"' + data.source1 + '\"' + (data.source1mime ? ' type=\"' + data.source1mime + '\"' : '') + ' />\\n' + (data.source2 ? '<source src=\"' + data.source2 + '\"' + (data.source2mime ? ' type=\"' + data.source2mime + '\"' : '') + ' />\\n' : '') + '</video>';\n      }\n    };\n    var getScriptHtml = function (data) {\n      return '<script src=\"' + data.source1 + '\"></script>';\n    };\n    var dataToHtml = function (editor, dataIn) {\n      var data = global$2.extend({}, dataIn);\n      if (!data.source1) {\n        global$2.extend(data, HtmlToData.htmlToData(Settings.getScripts(editor), data.embed));\n        if (!data.source1) {\n          return '';\n        }\n      }\n      if (!data.source2) {\n        data.source2 = '';\n      }\n      if (!data.poster) {\n        data.poster = '';\n      }\n      data.source1 = editor.convertURL(data.source1, 'source');\n      data.source2 = editor.convertURL(data.source2, 'source');\n      data.source1mime = Mime.guess(data.source1);\n      data.source2mime = Mime.guess(data.source2);\n      data.poster = editor.convertURL(data.poster, 'poster');\n      var pattern = matchPattern(data.source1);\n      if (pattern) {\n        data.source1 = pattern.url;\n        data.type = pattern.type;\n        data.allowFullscreen = pattern.allowFullscreen;\n        data.width = data.width || pattern.w;\n        data.height = data.height || pattern.h;\n      }\n      if (data.embed) {\n        return UpdateHtml.updateHtml(data.embed, data, true);\n      } else {\n        var videoScript = VideoScript.getVideoScriptMatch(Settings.getScripts(editor), data.source1);\n        if (videoScript) {\n          data.type = 'script';\n          data.width = videoScript.width;\n          data.height = videoScript.height;\n        }\n        var audioTemplateCallback = Settings.getAudioTemplateCallback(editor);\n        var videoTemplateCallback = Settings.getVideoTemplateCallback(editor);\n        data.width = data.width || 300;\n        data.height = data.height || 150;\n        global$2.each(data, function (value, key) {\n          data[key] = editor.dom.encode(value);\n        });\n        if (data.type === 'iframe') {\n          return getIframeHtml(data);\n        } else if (data.source1mime === 'application/x-shockwave-flash') {\n          return getFlashHtml(data);\n        } else if (data.source1mime.indexOf('audio') !== -1) {\n          return getAudioHtml(data, audioTemplateCallback);\n        } else if (data.type === 'script') {\n          return getScriptHtml(data);\n        } else {\n          return getVideoHtml(data, videoTemplateCallback);\n        }\n      }\n    };\n    var DataToHtml = { dataToHtml: dataToHtml };\n\n    var cache = {};\n    var embedPromise = function (data, dataToHtml, handler) {\n      return new global$5(function (res, rej) {\n        var wrappedResolve = function (response) {\n          if (response.html) {\n            cache[data.source1] = response;\n          }\n          return res({\n            url: data.source1,\n            html: response.html ? response.html : dataToHtml(data)\n          });\n        };\n        if (cache[data.source1]) {\n          wrappedResolve(cache[data.source1]);\n        } else {\n          handler({ url: data.source1 }, wrappedResolve, rej);\n        }\n      });\n    };\n    var defaultPromise = function (data, dataToHtml) {\n      return new global$5(function (res) {\n        res({\n          html: dataToHtml(data),\n          url: data.source1\n        });\n      });\n    };\n    var loadedData = function (editor) {\n      return function (data) {\n        return DataToHtml.dataToHtml(editor, data);\n      };\n    };\n    var getEmbedHtml = function (editor, data) {\n      var embedHandler = Settings.getUrlResolver(editor);\n      return embedHandler ? embedPromise(data, loadedData(editor), embedHandler) : defaultPromise(data, loadedData(editor));\n    };\n    var isCached = function (url) {\n      return cache.hasOwnProperty(url);\n    };\n    var Service = {\n      getEmbedHtml: getEmbedHtml,\n      isCached: isCached\n    };\n\n    var trimPx$1 = function (value) {\n      return value.replace(/px$/, '');\n    };\n    var addPx$1 = function (value) {\n      return /^[0-9.]+$/.test(value) ? value + 'px' : value;\n    };\n    var getSize = function (name) {\n      return function (elm) {\n        return elm ? trimPx$1(elm.style[name]) : '';\n      };\n    };\n    var setSize = function (name) {\n      return function (elm, value) {\n        if (elm) {\n          elm.style[name] = addPx$1(value);\n        }\n      };\n    };\n    var Size = {\n      getMaxWidth: getSize('maxWidth'),\n      getMaxHeight: getSize('maxHeight'),\n      setMaxWidth: setSize('maxWidth'),\n      setMaxHeight: setSize('maxHeight')\n    };\n\n    var doSyncSize = function (widthCtrl, heightCtrl) {\n      widthCtrl.state.set('oldVal', widthCtrl.value());\n      heightCtrl.state.set('oldVal', heightCtrl.value());\n    };\n    var doSizeControls = function (win, f) {\n      var widthCtrl = win.find('#width')[0];\n      var heightCtrl = win.find('#height')[0];\n      var constrained = win.find('#constrain')[0];\n      if (widthCtrl && heightCtrl && constrained) {\n        f(widthCtrl, heightCtrl, constrained.checked());\n      }\n    };\n    var doUpdateSize = function (widthCtrl, heightCtrl, isContrained) {\n      var oldWidth = widthCtrl.state.get('oldVal');\n      var oldHeight = heightCtrl.state.get('oldVal');\n      var newWidth = widthCtrl.value();\n      var newHeight = heightCtrl.value();\n      if (isContrained && oldWidth && oldHeight && newWidth && newHeight) {\n        if (newWidth !== oldWidth) {\n          newHeight = Math.round(newWidth / oldWidth * newHeight);\n          if (!isNaN(newHeight)) {\n            heightCtrl.value(newHeight);\n          }\n        } else {\n          newWidth = Math.round(newHeight / oldHeight * newWidth);\n          if (!isNaN(newWidth)) {\n            widthCtrl.value(newWidth);\n          }\n        }\n      }\n      doSyncSize(widthCtrl, heightCtrl);\n    };\n    var syncSize = function (win) {\n      doSizeControls(win, doSyncSize);\n    };\n    var updateSize = function (win) {\n      doSizeControls(win, doUpdateSize);\n    };\n    var createUi = function (onChange) {\n      var recalcSize = function () {\n        onChange(function (win) {\n          updateSize(win);\n        });\n      };\n      return {\n        type: 'container',\n        label: 'Dimensions',\n        layout: 'flex',\n        align: 'center',\n        spacing: 5,\n        items: [\n          {\n            name: 'width',\n            type: 'textbox',\n            maxLength: 5,\n            size: 5,\n            onchange: recalcSize,\n            ariaLabel: 'Width'\n          },\n          {\n            type: 'label',\n            text: 'x'\n          },\n          {\n            name: 'height',\n            type: 'textbox',\n            maxLength: 5,\n            size: 5,\n            onchange: recalcSize,\n            ariaLabel: 'Height'\n          },\n          {\n            name: 'constrain',\n            type: 'checkbox',\n            checked: true,\n            text: 'Constrain proportions'\n          }\n        ]\n      };\n    };\n    var SizeManager = {\n      createUi: createUi,\n      syncSize: syncSize,\n      updateSize: updateSize\n    };\n\n    var embedChange = global$1.ie && global$1.ie <= 8 ? 'onChange' : 'onInput';\n    var handleError = function (editor) {\n      return function (error) {\n        var errorMessage = error && error.msg ? 'Media embed handler error: ' + error.msg : 'Media embed handler threw unknown error.';\n        editor.notificationManager.open({\n          type: 'error',\n          text: errorMessage\n        });\n      };\n    };\n    var getData = function (editor) {\n      var element = editor.selection.getNode();\n      var dataEmbed = element.getAttribute('data-ephox-embed-iri');\n      if (dataEmbed) {\n        return {\n          'source1': dataEmbed,\n          'data-ephox-embed-iri': dataEmbed,\n          'width': Size.getMaxWidth(element),\n          'height': Size.getMaxHeight(element)\n        };\n      }\n      return element.getAttribute('data-mce-object') ? HtmlToData.htmlToData(Settings.getScripts(editor), editor.serializer.serialize(element, { selection: true })) : {};\n    };\n    var getSource = function (editor) {\n      var elm = editor.selection.getNode();\n      if (elm.getAttribute('data-mce-object') || elm.getAttribute('data-ephox-embed-iri')) {\n        return editor.selection.getContent();\n      }\n    };\n    var addEmbedHtml = function (win, editor) {\n      return function (response) {\n        var html = response.html;\n        var embed = win.find('#embed')[0];\n        var data = global$2.extend(HtmlToData.htmlToData(Settings.getScripts(editor), html), { source1: response.url });\n        win.fromJSON(data);\n        if (embed) {\n          embed.value(html);\n          SizeManager.updateSize(win);\n        }\n      };\n    };\n    var selectPlaceholder = function (editor, beforeObjects) {\n      var i;\n      var y;\n      var afterObjects = editor.dom.select('img[data-mce-object]');\n      for (i = 0; i < beforeObjects.length; i++) {\n        for (y = afterObjects.length - 1; y >= 0; y--) {\n          if (beforeObjects[i] === afterObjects[y]) {\n            afterObjects.splice(y, 1);\n          }\n        }\n      }\n      editor.selection.select(afterObjects[0]);\n    };\n    var handleInsert = function (editor, html) {\n      var beforeObjects = editor.dom.select('img[data-mce-object]');\n      editor.insertContent(html);\n      selectPlaceholder(editor, beforeObjects);\n      editor.nodeChanged();\n    };\n    var submitForm = function (win, editor) {\n      var data = win.toJSON();\n      data.embed = UpdateHtml.updateHtml(data.embed, data);\n      if (data.embed && Service.isCached(data.source1)) {\n        handleInsert(editor, data.embed);\n      } else {\n        Service.getEmbedHtml(editor, data).then(function (response) {\n          handleInsert(editor, response.html);\n        }).catch(handleError(editor));\n      }\n    };\n    var populateMeta = function (win, meta) {\n      global$2.each(meta, function (value, key) {\n        win.find('#' + key).value(value);\n      });\n    };\n    var showDialog = function (editor) {\n      var win;\n      var data;\n      var generalFormItems = [{\n          name: 'source1',\n          type: 'filepicker',\n          filetype: 'media',\n          size: 40,\n          autofocus: true,\n          label: 'Source',\n          onpaste: function () {\n            setTimeout(function () {\n              Service.getEmbedHtml(editor, win.toJSON()).then(addEmbedHtml(win, editor)).catch(handleError(editor));\n            }, 1);\n          },\n          onchange: function (e) {\n            Service.getEmbedHtml(editor, win.toJSON()).then(addEmbedHtml(win, editor)).catch(handleError(editor));\n            populateMeta(win, e.meta);\n          },\n          onbeforecall: function (e) {\n            e.meta = win.toJSON();\n          }\n        }];\n      var advancedFormItems = [];\n      var reserialise = function (update) {\n        update(win);\n        data = win.toJSON();\n        win.find('#embed').value(UpdateHtml.updateHtml(data.embed, data));\n      };\n      if (Settings.hasAltSource(editor)) {\n        advancedFormItems.push({\n          name: 'source2',\n          type: 'filepicker',\n          filetype: 'media',\n          size: 40,\n          label: 'Alternative source'\n        });\n      }\n      if (Settings.hasPoster(editor)) {\n        advancedFormItems.push({\n          name: 'poster',\n          type: 'filepicker',\n          filetype: 'image',\n          size: 40,\n          label: 'Poster'\n        });\n      }\n      if (Settings.hasDimensions(editor)) {\n        var control = SizeManager.createUi(reserialise);\n        generalFormItems.push(control);\n      }\n      data = getData(editor);\n      var embedTextBox = {\n        id: 'mcemediasource',\n        type: 'textbox',\n        flex: 1,\n        name: 'embed',\n        value: getSource(editor),\n        multiline: true,\n        rows: 5,\n        label: 'Source'\n      };\n      var updateValueOnChange = function () {\n        data = global$2.extend({}, HtmlToData.htmlToData(Settings.getScripts(editor), this.value()));\n        this.parent().parent().fromJSON(data);\n      };\n      embedTextBox[embedChange] = updateValueOnChange;\n      var body = [\n        {\n          title: 'General',\n          type: 'form',\n          items: generalFormItems\n        },\n        {\n          title: 'Embed',\n          type: 'container',\n          layout: 'flex',\n          direction: 'column',\n          align: 'stretch',\n          padding: 10,\n          spacing: 10,\n          items: [\n            {\n              type: 'label',\n              text: 'Paste your embed code below:',\n              forId: 'mcemediasource'\n            },\n            embedTextBox\n          ]\n        }\n      ];\n      if (advancedFormItems.length > 0) {\n        body.push({\n          title: 'Advanced',\n          type: 'form',\n          items: advancedFormItems\n        });\n      }\n      win = editor.windowManager.open({\n        title: 'Insert/edit media',\n        data: data,\n        bodyType: 'tabpanel',\n        body: body,\n        onSubmit: function () {\n          SizeManager.updateSize(win);\n          submitForm(win, editor);\n        }\n      });\n      SizeManager.syncSize(win);\n    };\n    var Dialog = { showDialog: showDialog };\n\n    var get$1 = function (editor) {\n      var showDialog = function () {\n        Dialog.showDialog(editor);\n      };\n      return { showDialog: showDialog };\n    };\n    var Api = { get: get$1 };\n\n    var register = function (editor) {\n      var showDialog = function () {\n        Dialog.showDialog(editor);\n      };\n      editor.addCommand('mceMedia', showDialog);\n    };\n    var Commands = { register: register };\n\n    var global$8 = tinymce.util.Tools.resolve('tinymce.html.Node');\n\n    var sanitize = function (editor, html) {\n      if (Settings.shouldFilterHtml(editor) === false) {\n        return html;\n      }\n      var writer = global$7();\n      var blocked;\n      global$4({\n        validate: false,\n        allow_conditional_comments: false,\n        special: 'script,noscript',\n        comment: function (text) {\n          writer.comment(text);\n        },\n        cdata: function (text) {\n          writer.cdata(text);\n        },\n        text: function (text, raw) {\n          writer.text(text, raw);\n        },\n        start: function (name, attrs, empty) {\n          blocked = true;\n          if (name === 'script' || name === 'noscript' || name === 'svg') {\n            return;\n          }\n          for (var i = attrs.length - 1; i >= 0; i--) {\n            var attrName = attrs[i].name;\n            if (attrName.indexOf('on') === 0) {\n              delete attrs.map[attrName];\n              attrs.splice(i, 1);\n            }\n            if (attrName === 'style') {\n              attrs[i].value = editor.dom.serializeStyle(editor.dom.parseStyle(attrs[i].value), name);\n            }\n          }\n          writer.start(name, attrs, empty);\n          blocked = false;\n        },\n        end: function (name) {\n          if (blocked) {\n            return;\n          }\n          writer.end(name);\n        }\n      }, global$6({})).parse(html);\n      return writer.getContent();\n    };\n    var Sanitize = { sanitize: sanitize };\n\n    var createPlaceholderNode = function (editor, node) {\n      var placeHolder;\n      var name = node.name;\n      placeHolder = new global$8('img', 1);\n      placeHolder.shortEnded = true;\n      retainAttributesAndInnerHtml(editor, node, placeHolder);\n      placeHolder.attr({\n        'width': node.attr('width') || '300',\n        'height': node.attr('height') || (name === 'audio' ? '30' : '150'),\n        'style': node.attr('style'),\n        'src': global$1.transparentSrc,\n        'data-mce-object': name,\n        'class': 'mce-object mce-object-' + name\n      });\n      return placeHolder;\n    };\n    var createPreviewIframeNode = function (editor, node) {\n      var previewWrapper;\n      var previewNode;\n      var shimNode;\n      var name = node.name;\n      previewWrapper = new global$8('span', 1);\n      previewWrapper.attr({\n        'contentEditable': 'false',\n        'style': node.attr('style'),\n        'data-mce-object': name,\n        'class': 'mce-preview-object mce-object-' + name\n      });\n      retainAttributesAndInnerHtml(editor, node, previewWrapper);\n      previewNode = new global$8(name, 1);\n      previewNode.attr({\n        src: node.attr('src'),\n        allowfullscreen: node.attr('allowfullscreen'),\n        style: node.attr('style'),\n        class: node.attr('class'),\n        width: node.attr('width'),\n        height: node.attr('height'),\n        frameborder: '0'\n      });\n      shimNode = new global$8('span', 1);\n      shimNode.attr('class', 'mce-shim');\n      previewWrapper.append(previewNode);\n      previewWrapper.append(shimNode);\n      return previewWrapper;\n    };\n    var retainAttributesAndInnerHtml = function (editor, sourceNode, targetNode) {\n      var attrName;\n      var attrValue;\n      var attribs;\n      var ai;\n      var innerHtml;\n      attribs = sourceNode.attributes;\n      ai = attribs.length;\n      while (ai--) {\n        attrName = attribs[ai].name;\n        attrValue = attribs[ai].value;\n        if (attrName !== 'width' && attrName !== 'height' && attrName !== 'style') {\n          if (attrName === 'data' || attrName === 'src') {\n            attrValue = editor.convertURL(attrValue, attrName);\n          }\n          targetNode.attr('data-mce-p-' + attrName, attrValue);\n        }\n      }\n      innerHtml = sourceNode.firstChild && sourceNode.firstChild.value;\n      if (innerHtml) {\n        targetNode.attr('data-mce-html', escape(Sanitize.sanitize(editor, innerHtml)));\n        targetNode.firstChild = null;\n      }\n    };\n    var isWithinEphoxEmbed = function (node) {\n      while (node = node.parent) {\n        if (node.attr('data-ephox-embed-iri')) {\n          return true;\n        }\n      }\n      return false;\n    };\n    var placeHolderConverter = function (editor) {\n      return function (nodes) {\n        var i = nodes.length;\n        var node;\n        var videoScript;\n        while (i--) {\n          node = nodes[i];\n          if (!node.parent) {\n            continue;\n          }\n          if (node.parent.attr('data-mce-object')) {\n            continue;\n          }\n          if (node.name === 'script') {\n            videoScript = VideoScript.getVideoScriptMatch(Settings.getScripts(editor), node.attr('src'));\n            if (!videoScript) {\n              continue;\n            }\n          }\n          if (videoScript) {\n            if (videoScript.width) {\n              node.attr('width', videoScript.width.toString());\n            }\n            if (videoScript.height) {\n              node.attr('height', videoScript.height.toString());\n            }\n          }\n          if (node.name === 'iframe' && Settings.hasLiveEmbeds(editor) && global$1.ceFalse) {\n            if (!isWithinEphoxEmbed(node)) {\n              node.replace(createPreviewIframeNode(editor, node));\n            }\n          } else {\n            if (!isWithinEphoxEmbed(node)) {\n              node.replace(createPlaceholderNode(editor, node));\n            }\n          }\n        }\n      };\n    };\n    var Nodes = {\n      createPreviewIframeNode: createPreviewIframeNode,\n      createPlaceholderNode: createPlaceholderNode,\n      placeHolderConverter: placeHolderConverter\n    };\n\n    var setup = function (editor) {\n      editor.on('preInit', function () {\n        var specialElements = editor.schema.getSpecialElements();\n        global$2.each('video audio iframe object'.split(' '), function (name) {\n          specialElements[name] = new RegExp('</' + name + '[^>]*>', 'gi');\n        });\n        var boolAttrs = editor.schema.getBoolAttrs();\n        global$2.each('webkitallowfullscreen mozallowfullscreen allowfullscreen'.split(' '), function (name) {\n          boolAttrs[name] = {};\n        });\n        editor.parser.addNodeFilter('iframe,video,audio,object,embed,script', Nodes.placeHolderConverter(editor));\n        editor.serializer.addAttributeFilter('data-mce-object', function (nodes, name) {\n          var i = nodes.length;\n          var node;\n          var realElm;\n          var ai;\n          var attribs;\n          var innerHtml;\n          var innerNode;\n          var realElmName;\n          var className;\n          while (i--) {\n            node = nodes[i];\n            if (!node.parent) {\n              continue;\n            }\n            realElmName = node.attr(name);\n            realElm = new global$8(realElmName, 1);\n            if (realElmName !== 'audio' && realElmName !== 'script') {\n              className = node.attr('class');\n              if (className && className.indexOf('mce-preview-object') !== -1) {\n                realElm.attr({\n                  width: node.firstChild.attr('width'),\n                  height: node.firstChild.attr('height')\n                });\n              } else {\n                realElm.attr({\n                  width: node.attr('width'),\n                  height: node.attr('height')\n                });\n              }\n            }\n            realElm.attr({ style: node.attr('style') });\n            attribs = node.attributes;\n            ai = attribs.length;\n            while (ai--) {\n              var attrName = attribs[ai].name;\n              if (attrName.indexOf('data-mce-p-') === 0) {\n                realElm.attr(attrName.substr(11), attribs[ai].value);\n              }\n            }\n            if (realElmName === 'script') {\n              realElm.attr('type', 'text/javascript');\n            }\n            innerHtml = node.attr('data-mce-html');\n            if (innerHtml) {\n              innerNode = new global$8('#text', 3);\n              innerNode.raw = true;\n              innerNode.value = Sanitize.sanitize(editor, unescape(innerHtml));\n              realElm.append(innerNode);\n            }\n            node.replace(realElm);\n          }\n        });\n      });\n      editor.on('setContent', function () {\n        editor.$('span.mce-preview-object').each(function (index, elm) {\n          var $elm = editor.$(elm);\n          if ($elm.find('span.mce-shim', elm).length === 0) {\n            $elm.append('<span class=\"mce-shim\"></span>');\n          }\n        });\n      });\n    };\n    var FilterContent = { setup: setup };\n\n    var setup$1 = function (editor) {\n      editor.on('ResolveName', function (e) {\n        var name;\n        if (e.target.nodeType === 1 && (name = e.target.getAttribute('data-mce-object'))) {\n          e.name = name;\n        }\n      });\n    };\n    var ResolveName = { setup: setup$1 };\n\n    var setup$2 = function (editor) {\n      editor.on('click keyup', function () {\n        var selectedNode = editor.selection.getNode();\n        if (selectedNode && editor.dom.hasClass(selectedNode, 'mce-preview-object')) {\n          if (editor.dom.getAttrib(selectedNode, 'data-mce-selected')) {\n            selectedNode.setAttribute('data-mce-selected', '2');\n          }\n        }\n      });\n      editor.on('ObjectSelected', function (e) {\n        var objectType = e.target.getAttribute('data-mce-object');\n        if (objectType === 'audio' || objectType === 'script') {\n          e.preventDefault();\n        }\n      });\n      editor.on('objectResized', function (e) {\n        var target = e.target;\n        var html;\n        if (target.getAttribute('data-mce-object')) {\n          html = target.getAttribute('data-mce-html');\n          if (html) {\n            html = unescape(html);\n            target.setAttribute('data-mce-html', escape(UpdateHtml.updateHtml(html, {\n              width: e.width,\n              height: e.height\n            })));\n          }\n        }\n      });\n    };\n    var Selection = { setup: setup$2 };\n\n    var register$1 = function (editor) {\n      editor.addButton('media', {\n        tooltip: 'Insert/edit media',\n        cmd: 'mceMedia',\n        stateSelector: [\n          'img[data-mce-object]',\n          'span[data-mce-object]',\n          'div[data-ephox-embed-iri]'\n        ]\n      });\n      editor.addMenuItem('media', {\n        icon: 'media',\n        text: 'Media',\n        cmd: 'mceMedia',\n        context: 'insert',\n        prependToContext: true\n      });\n    };\n    var Buttons = { register: register$1 };\n\n    global.add('media', function (editor) {\n      Commands.register(editor);\n      Buttons.register(editor);\n      ResolveName.setup(editor);\n      FilterContent.setup(editor);\n      Selection.setup(editor);\n      return Api.get(editor);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}());\n})();\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/19.18f152f5bf51905f8f86.js","// Exports the \"media\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/media')\n//   ES2015:\n//     import 'tinymce/plugins/media'\nrequire('./plugin.js');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tinymce/plugins/media/index.js\n// module id = XUqK\n// module chunks = 19","(function () {\nvar media = (function () {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var getScripts = function (editor) {\n      return editor.getParam('media_scripts');\n    };\n    var getAudioTemplateCallback = function (editor) {\n      return editor.getParam('audio_template_callback');\n    };\n    var getVideoTemplateCallback = function (editor) {\n      return editor.getParam('video_template_callback');\n    };\n    var hasLiveEmbeds = function (editor) {\n      return editor.getParam('media_live_embeds', true);\n    };\n    var shouldFilterHtml = function (editor) {\n      return editor.getParam('media_filter_html', true);\n    };\n    var getUrlResolver = function (editor) {\n      return editor.getParam('media_url_resolver');\n    };\n    var hasAltSource = function (editor) {\n      return editor.getParam('media_alt_source', true);\n    };\n    var hasPoster = function (editor) {\n      return editor.getParam('media_poster', true);\n    };\n    var hasDimensions = function (editor) {\n      return editor.getParam('media_dimensions', true);\n    };\n    var Settings = {\n      getScripts: getScripts,\n      getAudioTemplateCallback: getAudioTemplateCallback,\n      getVideoTemplateCallback: getVideoTemplateCallback,\n      hasLiveEmbeds: hasLiveEmbeds,\n      shouldFilterHtml: shouldFilterHtml,\n      getUrlResolver: getUrlResolver,\n      hasAltSource: hasAltSource,\n      hasPoster: hasPoster,\n      hasDimensions: hasDimensions\n    };\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      var clone = function () {\n        return Cell(get());\n      };\n      return {\n        get: get,\n        set: set,\n        clone: clone\n      };\n    };\n\n    var noop = function () {\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var none = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var eq = function (o) {\n        return o.isNone();\n      };\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = function (n) {\n        return n;\n      };\n      var me = {\n        fold: function (n, s) {\n          return n();\n        },\n        is: never,\n        isSome: never,\n        isNone: always,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: constant(null),\n        getOrUndefined: constant(undefined),\n        or: id,\n        orThunk: call,\n        map: none,\n        each: noop,\n        bind: none,\n        exists: never,\n        forall: always,\n        filter: none,\n        equals: eq,\n        equals_: eq,\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      if (Object.freeze) {\n        Object.freeze(me);\n      }\n      return me;\n    }();\n    var some = function (a) {\n      var constant_a = constant(a);\n      var self = function () {\n        return me;\n      };\n      var bind = function (f) {\n        return f(a);\n      };\n      var me = {\n        fold: function (n, s) {\n          return s(a);\n        },\n        is: function (v) {\n          return a === v;\n        },\n        isSome: always,\n        isNone: never,\n        getOr: constant_a,\n        getOrThunk: constant_a,\n        getOrDie: constant_a,\n        getOrNull: constant_a,\n        getOrUndefined: constant_a,\n        or: self,\n        orThunk: self,\n        map: function (f) {\n          return some(f(a));\n        },\n        each: function (f) {\n          f(a);\n        },\n        bind: bind,\n        exists: bind,\n        forall: bind,\n        filter: function (f) {\n          return f(a) ? me : NONE;\n        },\n        toArray: function () {\n          return [a];\n        },\n        toString: function () {\n          return 'some(' + a + ')';\n        },\n        equals: function (o) {\n          return o.is(a);\n        },\n        equals_: function (o, elementEq) {\n          return o.fold(never, function (b) {\n            return elementEq(a, b);\n          });\n        }\n      };\n      return me;\n    };\n    var from = function (value) {\n      return value === null || value === undefined ? NONE : some(value);\n    };\n    var Option = {\n      some: some,\n      none: none,\n      from: from\n    };\n\n    var hasOwnProperty = Object.hasOwnProperty;\n    var get = function (obj, key) {\n      return has(obj, key) ? Option.from(obj[key]) : Option.none();\n    };\n    var has = function (obj, key) {\n      return hasOwnProperty.call(obj, key);\n    };\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.html.SaxParser');\n\n    var getVideoScriptMatch = function (prefixes, src) {\n      if (prefixes) {\n        for (var i = 0; i < prefixes.length; i++) {\n          if (src.indexOf(prefixes[i].filter) !== -1) {\n            return prefixes[i];\n          }\n        }\n      }\n    };\n    var VideoScript = { getVideoScriptMatch: getVideoScriptMatch };\n\n    var DOM = global$3.DOM;\n    var trimPx = function (value) {\n      return value.replace(/px$/, '');\n    };\n    var getEphoxEmbedData = function (attrs) {\n      var style = attrs.map.style;\n      var styles = style ? DOM.parseStyle(style) : {};\n      return {\n        type: 'ephox-embed-iri',\n        source1: attrs.map['data-ephox-embed-iri'],\n        source2: '',\n        poster: '',\n        width: get(styles, 'max-width').map(trimPx).getOr(''),\n        height: get(styles, 'max-height').map(trimPx).getOr('')\n      };\n    };\n    var htmlToData = function (prefixes, html) {\n      var isEphoxEmbed = Cell(false);\n      var data = {};\n      global$4({\n        validate: false,\n        allow_conditional_comments: true,\n        special: 'script,noscript',\n        start: function (name, attrs) {\n          if (isEphoxEmbed.get()) ; else if (has(attrs.map, 'data-ephox-embed-iri')) {\n            isEphoxEmbed.set(true);\n            data = getEphoxEmbedData(attrs);\n          } else {\n            if (!data.source1 && name === 'param') {\n              data.source1 = attrs.map.movie;\n            }\n            if (name === 'iframe' || name === 'object' || name === 'embed' || name === 'video' || name === 'audio') {\n              if (!data.type) {\n                data.type = name;\n              }\n              data = global$2.extend(attrs.map, data);\n            }\n            if (name === 'script') {\n              var videoScript = VideoScript.getVideoScriptMatch(prefixes, attrs.map.src);\n              if (!videoScript) {\n                return;\n              }\n              data = {\n                type: 'script',\n                source1: attrs.map.src,\n                width: videoScript.width,\n                height: videoScript.height\n              };\n            }\n            if (name === 'source') {\n              if (!data.source1) {\n                data.source1 = attrs.map.src;\n              } else if (!data.source2) {\n                data.source2 = attrs.map.src;\n              }\n            }\n            if (name === 'img' && !data.poster) {\n              data.poster = attrs.map.src;\n            }\n          }\n        }\n      }).parse(html);\n      data.source1 = data.source1 || data.src || data.data;\n      data.source2 = data.source2 || '';\n      data.poster = data.poster || '';\n      return data;\n    };\n    var HtmlToData = { htmlToData: htmlToData };\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.util.Promise');\n\n    var guess = function (url) {\n      var mimes = {\n        mp3: 'audio/mpeg',\n        wav: 'audio/wav',\n        mp4: 'video/mp4',\n        webm: 'video/webm',\n        ogg: 'video/ogg',\n        swf: 'application/x-shockwave-flash'\n      };\n      var fileEnd = url.toLowerCase().split('.').pop();\n      var mime = mimes[fileEnd];\n      return mime ? mime : '';\n    };\n    var Mime = { guess: guess };\n\n    var global$6 = tinymce.util.Tools.resolve('tinymce.html.Schema');\n\n    var global$7 = tinymce.util.Tools.resolve('tinymce.html.Writer');\n\n    var DOM$1 = global$3.DOM;\n    var addPx = function (value) {\n      return /^[0-9.]+$/.test(value) ? value + 'px' : value;\n    };\n    var setAttributes = function (attrs, updatedAttrs) {\n      for (var name in updatedAttrs) {\n        var value = '' + updatedAttrs[name];\n        if (attrs.map[name]) {\n          var i = attrs.length;\n          while (i--) {\n            var attr = attrs[i];\n            if (attr.name === name) {\n              if (value) {\n                attrs.map[name] = value;\n                attr.value = value;\n              } else {\n                delete attrs.map[name];\n                attrs.splice(i, 1);\n              }\n            }\n          }\n        } else if (value) {\n          attrs.push({\n            name: name,\n            value: value\n          });\n          attrs.map[name] = value;\n        }\n      }\n    };\n    var updateEphoxEmbed = function (data, attrs) {\n      var style = attrs.map.style;\n      var styleMap = style ? DOM$1.parseStyle(style) : {};\n      styleMap['max-width'] = addPx(data.width);\n      styleMap['max-height'] = addPx(data.height);\n      setAttributes(attrs, { style: DOM$1.serializeStyle(styleMap) });\n    };\n    var updateHtml = function (html, data, updateAll) {\n      var writer = global$7();\n      var isEphoxEmbed = Cell(false);\n      var sourceCount = 0;\n      var hasImage;\n      global$4({\n        validate: false,\n        allow_conditional_comments: true,\n        special: 'script,noscript',\n        comment: function (text) {\n          writer.comment(text);\n        },\n        cdata: function (text) {\n          writer.cdata(text);\n        },\n        text: function (text, raw) {\n          writer.text(text, raw);\n        },\n        start: function (name, attrs, empty) {\n          if (isEphoxEmbed.get()) ; else if (has(attrs.map, 'data-ephox-embed-iri')) {\n            isEphoxEmbed.set(true);\n            updateEphoxEmbed(data, attrs);\n          } else {\n            switch (name) {\n            case 'video':\n            case 'object':\n            case 'embed':\n            case 'img':\n            case 'iframe':\n              if (data.height !== undefined && data.width !== undefined) {\n                setAttributes(attrs, {\n                  width: data.width,\n                  height: data.height\n                });\n              }\n              break;\n            }\n            if (updateAll) {\n              switch (name) {\n              case 'video':\n                setAttributes(attrs, {\n                  poster: data.poster,\n                  src: ''\n                });\n                if (data.source2) {\n                  setAttributes(attrs, { src: '' });\n                }\n                break;\n              case 'iframe':\n                setAttributes(attrs, { src: data.source1 });\n                break;\n              case 'source':\n                sourceCount++;\n                if (sourceCount <= 2) {\n                  setAttributes(attrs, {\n                    src: data['source' + sourceCount],\n                    type: data['source' + sourceCount + 'mime']\n                  });\n                  if (!data['source' + sourceCount]) {\n                    return;\n                  }\n                }\n                break;\n              case 'img':\n                if (!data.poster) {\n                  return;\n                }\n                hasImage = true;\n                break;\n              }\n            }\n          }\n          writer.start(name, attrs, empty);\n        },\n        end: function (name) {\n          if (!isEphoxEmbed.get()) {\n            if (name === 'video' && updateAll) {\n              for (var index = 1; index <= 2; index++) {\n                if (data['source' + index]) {\n                  var attrs = [];\n                  attrs.map = {};\n                  if (sourceCount < index) {\n                    setAttributes(attrs, {\n                      src: data['source' + index],\n                      type: data['source' + index + 'mime']\n                    });\n                    writer.start('source', attrs, true);\n                  }\n                }\n              }\n            }\n            if (data.poster && name === 'object' && updateAll && !hasImage) {\n              var imgAttrs = [];\n              imgAttrs.map = {};\n              setAttributes(imgAttrs, {\n                src: data.poster,\n                width: data.width,\n                height: data.height\n              });\n              writer.start('img', imgAttrs, true);\n            }\n          }\n          writer.end(name);\n        }\n      }, global$6({})).parse(html);\n      return writer.getContent();\n    };\n    var UpdateHtml = { updateHtml: updateHtml };\n\n    var urlPatterns = [\n      {\n        regex: /youtu\\.be\\/([\\w\\-_\\?&=.]+)/i,\n        type: 'iframe',\n        w: 560,\n        h: 314,\n        url: '//www.youtube.com/embed/$1',\n        allowFullscreen: true\n      },\n      {\n        regex: /youtube\\.com(.+)v=([^&]+)(&([a-z0-9&=\\-_]+))?/i,\n        type: 'iframe',\n        w: 560,\n        h: 314,\n        url: '//www.youtube.com/embed/$2?$4',\n        allowFullscreen: true\n      },\n      {\n        regex: /youtube.com\\/embed\\/([a-z0-9\\?&=\\-_]+)/i,\n        type: 'iframe',\n        w: 560,\n        h: 314,\n        url: '//www.youtube.com/embed/$1',\n        allowFullscreen: true\n      },\n      {\n        regex: /vimeo\\.com\\/([0-9]+)/,\n        type: 'iframe',\n        w: 425,\n        h: 350,\n        url: '//player.vimeo.com/video/$1?title=0&byline=0&portrait=0&color=8dc7dc',\n        allowFullscreen: true\n      },\n      {\n        regex: /vimeo\\.com\\/(.*)\\/([0-9]+)/,\n        type: 'iframe',\n        w: 425,\n        h: 350,\n        url: '//player.vimeo.com/video/$2?title=0&amp;byline=0',\n        allowFullscreen: true\n      },\n      {\n        regex: /maps\\.google\\.([a-z]{2,3})\\/maps\\/(.+)msid=(.+)/,\n        type: 'iframe',\n        w: 425,\n        h: 350,\n        url: '//maps.google.com/maps/ms?msid=$2&output=embed\"',\n        allowFullscreen: false\n      },\n      {\n        regex: /dailymotion\\.com\\/video\\/([^_]+)/,\n        type: 'iframe',\n        w: 480,\n        h: 270,\n        url: '//www.dailymotion.com/embed/video/$1',\n        allowFullscreen: true\n      },\n      {\n        regex: /dai\\.ly\\/([^_]+)/,\n        type: 'iframe',\n        w: 480,\n        h: 270,\n        url: '//www.dailymotion.com/embed/video/$1',\n        allowFullscreen: true\n      }\n    ];\n    var getUrl = function (pattern, url) {\n      var match = pattern.regex.exec(url);\n      var newUrl = pattern.url;\n      var _loop_1 = function (i) {\n        newUrl = newUrl.replace('$' + i, function () {\n          return match[i] ? match[i] : '';\n        });\n      };\n      for (var i = 0; i < match.length; i++) {\n        _loop_1(i);\n      }\n      return newUrl.replace(/\\?$/, '');\n    };\n    var matchPattern = function (url) {\n      var pattern = urlPatterns.filter(function (pattern) {\n        return pattern.regex.test(url);\n      });\n      if (pattern.length > 0) {\n        return global$2.extend({}, pattern[0], { url: getUrl(pattern[0], url) });\n      } else {\n        return null;\n      }\n    };\n\n    var getIframeHtml = function (data) {\n      var allowFullscreen = data.allowFullscreen ? ' allowFullscreen=\"1\"' : '';\n      return '<iframe src=\"' + data.source1 + '\" width=\"' + data.width + '\" height=\"' + data.height + '\"' + allowFullscreen + '></iframe>';\n    };\n    var getFlashHtml = function (data) {\n      var html = '<object data=\"' + data.source1 + '\" width=\"' + data.width + '\" height=\"' + data.height + '\" type=\"application/x-shockwave-flash\">';\n      if (data.poster) {\n        html += '<img src=\"' + data.poster + '\" width=\"' + data.width + '\" height=\"' + data.height + '\" />';\n      }\n      html += '</object>';\n      return html;\n    };\n    var getAudioHtml = function (data, audioTemplateCallback) {\n      if (audioTemplateCallback) {\n        return audioTemplateCallback(data);\n      } else {\n        return '<audio controls=\"controls\" src=\"' + data.source1 + '\">' + (data.source2 ? '\\n<source src=\"' + data.source2 + '\"' + (data.source2mime ? ' type=\"' + data.source2mime + '\"' : '') + ' />\\n' : '') + '</audio>';\n      }\n    };\n    var getVideoHtml = function (data, videoTemplateCallback) {\n      if (videoTemplateCallback) {\n        return videoTemplateCallback(data);\n      } else {\n        return '<video width=\"' + data.width + '\" height=\"' + data.height + '\"' + (data.poster ? ' poster=\"' + data.poster + '\"' : '') + ' controls=\"controls\">\\n' + '<source src=\"' + data.source1 + '\"' + (data.source1mime ? ' type=\"' + data.source1mime + '\"' : '') + ' />\\n' + (data.source2 ? '<source src=\"' + data.source2 + '\"' + (data.source2mime ? ' type=\"' + data.source2mime + '\"' : '') + ' />\\n' : '') + '</video>';\n      }\n    };\n    var getScriptHtml = function (data) {\n      return '<script src=\"' + data.source1 + '\"></script>';\n    };\n    var dataToHtml = function (editor, dataIn) {\n      var data = global$2.extend({}, dataIn);\n      if (!data.source1) {\n        global$2.extend(data, HtmlToData.htmlToData(Settings.getScripts(editor), data.embed));\n        if (!data.source1) {\n          return '';\n        }\n      }\n      if (!data.source2) {\n        data.source2 = '';\n      }\n      if (!data.poster) {\n        data.poster = '';\n      }\n      data.source1 = editor.convertURL(data.source1, 'source');\n      data.source2 = editor.convertURL(data.source2, 'source');\n      data.source1mime = Mime.guess(data.source1);\n      data.source2mime = Mime.guess(data.source2);\n      data.poster = editor.convertURL(data.poster, 'poster');\n      var pattern = matchPattern(data.source1);\n      if (pattern) {\n        data.source1 = pattern.url;\n        data.type = pattern.type;\n        data.allowFullscreen = pattern.allowFullscreen;\n        data.width = data.width || pattern.w;\n        data.height = data.height || pattern.h;\n      }\n      if (data.embed) {\n        return UpdateHtml.updateHtml(data.embed, data, true);\n      } else {\n        var videoScript = VideoScript.getVideoScriptMatch(Settings.getScripts(editor), data.source1);\n        if (videoScript) {\n          data.type = 'script';\n          data.width = videoScript.width;\n          data.height = videoScript.height;\n        }\n        var audioTemplateCallback = Settings.getAudioTemplateCallback(editor);\n        var videoTemplateCallback = Settings.getVideoTemplateCallback(editor);\n        data.width = data.width || 300;\n        data.height = data.height || 150;\n        global$2.each(data, function (value, key) {\n          data[key] = editor.dom.encode(value);\n        });\n        if (data.type === 'iframe') {\n          return getIframeHtml(data);\n        } else if (data.source1mime === 'application/x-shockwave-flash') {\n          return getFlashHtml(data);\n        } else if (data.source1mime.indexOf('audio') !== -1) {\n          return getAudioHtml(data, audioTemplateCallback);\n        } else if (data.type === 'script') {\n          return getScriptHtml(data);\n        } else {\n          return getVideoHtml(data, videoTemplateCallback);\n        }\n      }\n    };\n    var DataToHtml = { dataToHtml: dataToHtml };\n\n    var cache = {};\n    var embedPromise = function (data, dataToHtml, handler) {\n      return new global$5(function (res, rej) {\n        var wrappedResolve = function (response) {\n          if (response.html) {\n            cache[data.source1] = response;\n          }\n          return res({\n            url: data.source1,\n            html: response.html ? response.html : dataToHtml(data)\n          });\n        };\n        if (cache[data.source1]) {\n          wrappedResolve(cache[data.source1]);\n        } else {\n          handler({ url: data.source1 }, wrappedResolve, rej);\n        }\n      });\n    };\n    var defaultPromise = function (data, dataToHtml) {\n      return new global$5(function (res) {\n        res({\n          html: dataToHtml(data),\n          url: data.source1\n        });\n      });\n    };\n    var loadedData = function (editor) {\n      return function (data) {\n        return DataToHtml.dataToHtml(editor, data);\n      };\n    };\n    var getEmbedHtml = function (editor, data) {\n      var embedHandler = Settings.getUrlResolver(editor);\n      return embedHandler ? embedPromise(data, loadedData(editor), embedHandler) : defaultPromise(data, loadedData(editor));\n    };\n    var isCached = function (url) {\n      return cache.hasOwnProperty(url);\n    };\n    var Service = {\n      getEmbedHtml: getEmbedHtml,\n      isCached: isCached\n    };\n\n    var trimPx$1 = function (value) {\n      return value.replace(/px$/, '');\n    };\n    var addPx$1 = function (value) {\n      return /^[0-9.]+$/.test(value) ? value + 'px' : value;\n    };\n    var getSize = function (name) {\n      return function (elm) {\n        return elm ? trimPx$1(elm.style[name]) : '';\n      };\n    };\n    var setSize = function (name) {\n      return function (elm, value) {\n        if (elm) {\n          elm.style[name] = addPx$1(value);\n        }\n      };\n    };\n    var Size = {\n      getMaxWidth: getSize('maxWidth'),\n      getMaxHeight: getSize('maxHeight'),\n      setMaxWidth: setSize('maxWidth'),\n      setMaxHeight: setSize('maxHeight')\n    };\n\n    var doSyncSize = function (widthCtrl, heightCtrl) {\n      widthCtrl.state.set('oldVal', widthCtrl.value());\n      heightCtrl.state.set('oldVal', heightCtrl.value());\n    };\n    var doSizeControls = function (win, f) {\n      var widthCtrl = win.find('#width')[0];\n      var heightCtrl = win.find('#height')[0];\n      var constrained = win.find('#constrain')[0];\n      if (widthCtrl && heightCtrl && constrained) {\n        f(widthCtrl, heightCtrl, constrained.checked());\n      }\n    };\n    var doUpdateSize = function (widthCtrl, heightCtrl, isContrained) {\n      var oldWidth = widthCtrl.state.get('oldVal');\n      var oldHeight = heightCtrl.state.get('oldVal');\n      var newWidth = widthCtrl.value();\n      var newHeight = heightCtrl.value();\n      if (isContrained && oldWidth && oldHeight && newWidth && newHeight) {\n        if (newWidth !== oldWidth) {\n          newHeight = Math.round(newWidth / oldWidth * newHeight);\n          if (!isNaN(newHeight)) {\n            heightCtrl.value(newHeight);\n          }\n        } else {\n          newWidth = Math.round(newHeight / oldHeight * newWidth);\n          if (!isNaN(newWidth)) {\n            widthCtrl.value(newWidth);\n          }\n        }\n      }\n      doSyncSize(widthCtrl, heightCtrl);\n    };\n    var syncSize = function (win) {\n      doSizeControls(win, doSyncSize);\n    };\n    var updateSize = function (win) {\n      doSizeControls(win, doUpdateSize);\n    };\n    var createUi = function (onChange) {\n      var recalcSize = function () {\n        onChange(function (win) {\n          updateSize(win);\n        });\n      };\n      return {\n        type: 'container',\n        label: 'Dimensions',\n        layout: 'flex',\n        align: 'center',\n        spacing: 5,\n        items: [\n          {\n            name: 'width',\n            type: 'textbox',\n            maxLength: 5,\n            size: 5,\n            onchange: recalcSize,\n            ariaLabel: 'Width'\n          },\n          {\n            type: 'label',\n            text: 'x'\n          },\n          {\n            name: 'height',\n            type: 'textbox',\n            maxLength: 5,\n            size: 5,\n            onchange: recalcSize,\n            ariaLabel: 'Height'\n          },\n          {\n            name: 'constrain',\n            type: 'checkbox',\n            checked: true,\n            text: 'Constrain proportions'\n          }\n        ]\n      };\n    };\n    var SizeManager = {\n      createUi: createUi,\n      syncSize: syncSize,\n      updateSize: updateSize\n    };\n\n    var embedChange = global$1.ie && global$1.ie <= 8 ? 'onChange' : 'onInput';\n    var handleError = function (editor) {\n      return function (error) {\n        var errorMessage = error && error.msg ? 'Media embed handler error: ' + error.msg : 'Media embed handler threw unknown error.';\n        editor.notificationManager.open({\n          type: 'error',\n          text: errorMessage\n        });\n      };\n    };\n    var getData = function (editor) {\n      var element = editor.selection.getNode();\n      var dataEmbed = element.getAttribute('data-ephox-embed-iri');\n      if (dataEmbed) {\n        return {\n          'source1': dataEmbed,\n          'data-ephox-embed-iri': dataEmbed,\n          'width': Size.getMaxWidth(element),\n          'height': Size.getMaxHeight(element)\n        };\n      }\n      return element.getAttribute('data-mce-object') ? HtmlToData.htmlToData(Settings.getScripts(editor), editor.serializer.serialize(element, { selection: true })) : {};\n    };\n    var getSource = function (editor) {\n      var elm = editor.selection.getNode();\n      if (elm.getAttribute('data-mce-object') || elm.getAttribute('data-ephox-embed-iri')) {\n        return editor.selection.getContent();\n      }\n    };\n    var addEmbedHtml = function (win, editor) {\n      return function (response) {\n        var html = response.html;\n        var embed = win.find('#embed')[0];\n        var data = global$2.extend(HtmlToData.htmlToData(Settings.getScripts(editor), html), { source1: response.url });\n        win.fromJSON(data);\n        if (embed) {\n          embed.value(html);\n          SizeManager.updateSize(win);\n        }\n      };\n    };\n    var selectPlaceholder = function (editor, beforeObjects) {\n      var i;\n      var y;\n      var afterObjects = editor.dom.select('img[data-mce-object]');\n      for (i = 0; i < beforeObjects.length; i++) {\n        for (y = afterObjects.length - 1; y >= 0; y--) {\n          if (beforeObjects[i] === afterObjects[y]) {\n            afterObjects.splice(y, 1);\n          }\n        }\n      }\n      editor.selection.select(afterObjects[0]);\n    };\n    var handleInsert = function (editor, html) {\n      var beforeObjects = editor.dom.select('img[data-mce-object]');\n      editor.insertContent(html);\n      selectPlaceholder(editor, beforeObjects);\n      editor.nodeChanged();\n    };\n    var submitForm = function (win, editor) {\n      var data = win.toJSON();\n      data.embed = UpdateHtml.updateHtml(data.embed, data);\n      if (data.embed && Service.isCached(data.source1)) {\n        handleInsert(editor, data.embed);\n      } else {\n        Service.getEmbedHtml(editor, data).then(function (response) {\n          handleInsert(editor, response.html);\n        }).catch(handleError(editor));\n      }\n    };\n    var populateMeta = function (win, meta) {\n      global$2.each(meta, function (value, key) {\n        win.find('#' + key).value(value);\n      });\n    };\n    var showDialog = function (editor) {\n      var win;\n      var data;\n      var generalFormItems = [{\n          name: 'source1',\n          type: 'filepicker',\n          filetype: 'media',\n          size: 40,\n          autofocus: true,\n          label: 'Source',\n          onpaste: function () {\n            setTimeout(function () {\n              Service.getEmbedHtml(editor, win.toJSON()).then(addEmbedHtml(win, editor)).catch(handleError(editor));\n            }, 1);\n          },\n          onchange: function (e) {\n            Service.getEmbedHtml(editor, win.toJSON()).then(addEmbedHtml(win, editor)).catch(handleError(editor));\n            populateMeta(win, e.meta);\n          },\n          onbeforecall: function (e) {\n            e.meta = win.toJSON();\n          }\n        }];\n      var advancedFormItems = [];\n      var reserialise = function (update) {\n        update(win);\n        data = win.toJSON();\n        win.find('#embed').value(UpdateHtml.updateHtml(data.embed, data));\n      };\n      if (Settings.hasAltSource(editor)) {\n        advancedFormItems.push({\n          name: 'source2',\n          type: 'filepicker',\n          filetype: 'media',\n          size: 40,\n          label: 'Alternative source'\n        });\n      }\n      if (Settings.hasPoster(editor)) {\n        advancedFormItems.push({\n          name: 'poster',\n          type: 'filepicker',\n          filetype: 'image',\n          size: 40,\n          label: 'Poster'\n        });\n      }\n      if (Settings.hasDimensions(editor)) {\n        var control = SizeManager.createUi(reserialise);\n        generalFormItems.push(control);\n      }\n      data = getData(editor);\n      var embedTextBox = {\n        id: 'mcemediasource',\n        type: 'textbox',\n        flex: 1,\n        name: 'embed',\n        value: getSource(editor),\n        multiline: true,\n        rows: 5,\n        label: 'Source'\n      };\n      var updateValueOnChange = function () {\n        data = global$2.extend({}, HtmlToData.htmlToData(Settings.getScripts(editor), this.value()));\n        this.parent().parent().fromJSON(data);\n      };\n      embedTextBox[embedChange] = updateValueOnChange;\n      var body = [\n        {\n          title: 'General',\n          type: 'form',\n          items: generalFormItems\n        },\n        {\n          title: 'Embed',\n          type: 'container',\n          layout: 'flex',\n          direction: 'column',\n          align: 'stretch',\n          padding: 10,\n          spacing: 10,\n          items: [\n            {\n              type: 'label',\n              text: 'Paste your embed code below:',\n              forId: 'mcemediasource'\n            },\n            embedTextBox\n          ]\n        }\n      ];\n      if (advancedFormItems.length > 0) {\n        body.push({\n          title: 'Advanced',\n          type: 'form',\n          items: advancedFormItems\n        });\n      }\n      win = editor.windowManager.open({\n        title: 'Insert/edit media',\n        data: data,\n        bodyType: 'tabpanel',\n        body: body,\n        onSubmit: function () {\n          SizeManager.updateSize(win);\n          submitForm(win, editor);\n        }\n      });\n      SizeManager.syncSize(win);\n    };\n    var Dialog = { showDialog: showDialog };\n\n    var get$1 = function (editor) {\n      var showDialog = function () {\n        Dialog.showDialog(editor);\n      };\n      return { showDialog: showDialog };\n    };\n    var Api = { get: get$1 };\n\n    var register = function (editor) {\n      var showDialog = function () {\n        Dialog.showDialog(editor);\n      };\n      editor.addCommand('mceMedia', showDialog);\n    };\n    var Commands = { register: register };\n\n    var global$8 = tinymce.util.Tools.resolve('tinymce.html.Node');\n\n    var sanitize = function (editor, html) {\n      if (Settings.shouldFilterHtml(editor) === false) {\n        return html;\n      }\n      var writer = global$7();\n      var blocked;\n      global$4({\n        validate: false,\n        allow_conditional_comments: false,\n        special: 'script,noscript',\n        comment: function (text) {\n          writer.comment(text);\n        },\n        cdata: function (text) {\n          writer.cdata(text);\n        },\n        text: function (text, raw) {\n          writer.text(text, raw);\n        },\n        start: function (name, attrs, empty) {\n          blocked = true;\n          if (name === 'script' || name === 'noscript' || name === 'svg') {\n            return;\n          }\n          for (var i = attrs.length - 1; i >= 0; i--) {\n            var attrName = attrs[i].name;\n            if (attrName.indexOf('on') === 0) {\n              delete attrs.map[attrName];\n              attrs.splice(i, 1);\n            }\n            if (attrName === 'style') {\n              attrs[i].value = editor.dom.serializeStyle(editor.dom.parseStyle(attrs[i].value), name);\n            }\n          }\n          writer.start(name, attrs, empty);\n          blocked = false;\n        },\n        end: function (name) {\n          if (blocked) {\n            return;\n          }\n          writer.end(name);\n        }\n      }, global$6({})).parse(html);\n      return writer.getContent();\n    };\n    var Sanitize = { sanitize: sanitize };\n\n    var createPlaceholderNode = function (editor, node) {\n      var placeHolder;\n      var name = node.name;\n      placeHolder = new global$8('img', 1);\n      placeHolder.shortEnded = true;\n      retainAttributesAndInnerHtml(editor, node, placeHolder);\n      placeHolder.attr({\n        'width': node.attr('width') || '300',\n        'height': node.attr('height') || (name === 'audio' ? '30' : '150'),\n        'style': node.attr('style'),\n        'src': global$1.transparentSrc,\n        'data-mce-object': name,\n        'class': 'mce-object mce-object-' + name\n      });\n      return placeHolder;\n    };\n    var createPreviewIframeNode = function (editor, node) {\n      var previewWrapper;\n      var previewNode;\n      var shimNode;\n      var name = node.name;\n      previewWrapper = new global$8('span', 1);\n      previewWrapper.attr({\n        'contentEditable': 'false',\n        'style': node.attr('style'),\n        'data-mce-object': name,\n        'class': 'mce-preview-object mce-object-' + name\n      });\n      retainAttributesAndInnerHtml(editor, node, previewWrapper);\n      previewNode = new global$8(name, 1);\n      previewNode.attr({\n        src: node.attr('src'),\n        allowfullscreen: node.attr('allowfullscreen'),\n        style: node.attr('style'),\n        class: node.attr('class'),\n        width: node.attr('width'),\n        height: node.attr('height'),\n        frameborder: '0'\n      });\n      shimNode = new global$8('span', 1);\n      shimNode.attr('class', 'mce-shim');\n      previewWrapper.append(previewNode);\n      previewWrapper.append(shimNode);\n      return previewWrapper;\n    };\n    var retainAttributesAndInnerHtml = function (editor, sourceNode, targetNode) {\n      var attrName;\n      var attrValue;\n      var attribs;\n      var ai;\n      var innerHtml;\n      attribs = sourceNode.attributes;\n      ai = attribs.length;\n      while (ai--) {\n        attrName = attribs[ai].name;\n        attrValue = attribs[ai].value;\n        if (attrName !== 'width' && attrName !== 'height' && attrName !== 'style') {\n          if (attrName === 'data' || attrName === 'src') {\n            attrValue = editor.convertURL(attrValue, attrName);\n          }\n          targetNode.attr('data-mce-p-' + attrName, attrValue);\n        }\n      }\n      innerHtml = sourceNode.firstChild && sourceNode.firstChild.value;\n      if (innerHtml) {\n        targetNode.attr('data-mce-html', escape(Sanitize.sanitize(editor, innerHtml)));\n        targetNode.firstChild = null;\n      }\n    };\n    var isWithinEphoxEmbed = function (node) {\n      while (node = node.parent) {\n        if (node.attr('data-ephox-embed-iri')) {\n          return true;\n        }\n      }\n      return false;\n    };\n    var placeHolderConverter = function (editor) {\n      return function (nodes) {\n        var i = nodes.length;\n        var node;\n        var videoScript;\n        while (i--) {\n          node = nodes[i];\n          if (!node.parent) {\n            continue;\n          }\n          if (node.parent.attr('data-mce-object')) {\n            continue;\n          }\n          if (node.name === 'script') {\n            videoScript = VideoScript.getVideoScriptMatch(Settings.getScripts(editor), node.attr('src'));\n            if (!videoScript) {\n              continue;\n            }\n          }\n          if (videoScript) {\n            if (videoScript.width) {\n              node.attr('width', videoScript.width.toString());\n            }\n            if (videoScript.height) {\n              node.attr('height', videoScript.height.toString());\n            }\n          }\n          if (node.name === 'iframe' && Settings.hasLiveEmbeds(editor) && global$1.ceFalse) {\n            if (!isWithinEphoxEmbed(node)) {\n              node.replace(createPreviewIframeNode(editor, node));\n            }\n          } else {\n            if (!isWithinEphoxEmbed(node)) {\n              node.replace(createPlaceholderNode(editor, node));\n            }\n          }\n        }\n      };\n    };\n    var Nodes = {\n      createPreviewIframeNode: createPreviewIframeNode,\n      createPlaceholderNode: createPlaceholderNode,\n      placeHolderConverter: placeHolderConverter\n    };\n\n    var setup = function (editor) {\n      editor.on('preInit', function () {\n        var specialElements = editor.schema.getSpecialElements();\n        global$2.each('video audio iframe object'.split(' '), function (name) {\n          specialElements[name] = new RegExp('</' + name + '[^>]*>', 'gi');\n        });\n        var boolAttrs = editor.schema.getBoolAttrs();\n        global$2.each('webkitallowfullscreen mozallowfullscreen allowfullscreen'.split(' '), function (name) {\n          boolAttrs[name] = {};\n        });\n        editor.parser.addNodeFilter('iframe,video,audio,object,embed,script', Nodes.placeHolderConverter(editor));\n        editor.serializer.addAttributeFilter('data-mce-object', function (nodes, name) {\n          var i = nodes.length;\n          var node;\n          var realElm;\n          var ai;\n          var attribs;\n          var innerHtml;\n          var innerNode;\n          var realElmName;\n          var className;\n          while (i--) {\n            node = nodes[i];\n            if (!node.parent) {\n              continue;\n            }\n            realElmName = node.attr(name);\n            realElm = new global$8(realElmName, 1);\n            if (realElmName !== 'audio' && realElmName !== 'script') {\n              className = node.attr('class');\n              if (className && className.indexOf('mce-preview-object') !== -1) {\n                realElm.attr({\n                  width: node.firstChild.attr('width'),\n                  height: node.firstChild.attr('height')\n                });\n              } else {\n                realElm.attr({\n                  width: node.attr('width'),\n                  height: node.attr('height')\n                });\n              }\n            }\n            realElm.attr({ style: node.attr('style') });\n            attribs = node.attributes;\n            ai = attribs.length;\n            while (ai--) {\n              var attrName = attribs[ai].name;\n              if (attrName.indexOf('data-mce-p-') === 0) {\n                realElm.attr(attrName.substr(11), attribs[ai].value);\n              }\n            }\n            if (realElmName === 'script') {\n              realElm.attr('type', 'text/javascript');\n            }\n            innerHtml = node.attr('data-mce-html');\n            if (innerHtml) {\n              innerNode = new global$8('#text', 3);\n              innerNode.raw = true;\n              innerNode.value = Sanitize.sanitize(editor, unescape(innerHtml));\n              realElm.append(innerNode);\n            }\n            node.replace(realElm);\n          }\n        });\n      });\n      editor.on('setContent', function () {\n        editor.$('span.mce-preview-object').each(function (index, elm) {\n          var $elm = editor.$(elm);\n          if ($elm.find('span.mce-shim', elm).length === 0) {\n            $elm.append('<span class=\"mce-shim\"></span>');\n          }\n        });\n      });\n    };\n    var FilterContent = { setup: setup };\n\n    var setup$1 = function (editor) {\n      editor.on('ResolveName', function (e) {\n        var name;\n        if (e.target.nodeType === 1 && (name = e.target.getAttribute('data-mce-object'))) {\n          e.name = name;\n        }\n      });\n    };\n    var ResolveName = { setup: setup$1 };\n\n    var setup$2 = function (editor) {\n      editor.on('click keyup', function () {\n        var selectedNode = editor.selection.getNode();\n        if (selectedNode && editor.dom.hasClass(selectedNode, 'mce-preview-object')) {\n          if (editor.dom.getAttrib(selectedNode, 'data-mce-selected')) {\n            selectedNode.setAttribute('data-mce-selected', '2');\n          }\n        }\n      });\n      editor.on('ObjectSelected', function (e) {\n        var objectType = e.target.getAttribute('data-mce-object');\n        if (objectType === 'audio' || objectType === 'script') {\n          e.preventDefault();\n        }\n      });\n      editor.on('objectResized', function (e) {\n        var target = e.target;\n        var html;\n        if (target.getAttribute('data-mce-object')) {\n          html = target.getAttribute('data-mce-html');\n          if (html) {\n            html = unescape(html);\n            target.setAttribute('data-mce-html', escape(UpdateHtml.updateHtml(html, {\n              width: e.width,\n              height: e.height\n            })));\n          }\n        }\n      });\n    };\n    var Selection = { setup: setup$2 };\n\n    var register$1 = function (editor) {\n      editor.addButton('media', {\n        tooltip: 'Insert/edit media',\n        cmd: 'mceMedia',\n        stateSelector: [\n          'img[data-mce-object]',\n          'span[data-mce-object]',\n          'div[data-ephox-embed-iri]'\n        ]\n      });\n      editor.addMenuItem('media', {\n        icon: 'media',\n        text: 'Media',\n        cmd: 'mceMedia',\n        context: 'insert',\n        prependToContext: true\n      });\n    };\n    var Buttons = { register: register$1 };\n\n    global.add('media', function (editor) {\n      Commands.register(editor);\n      Buttons.register(editor);\n      ResolveName.setup(editor);\n      FilterContent.setup(editor);\n      Selection.setup(editor);\n      return Api.get(editor);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}());\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tinymce/plugins/media/plugin.js\n// module id = jUW6\n// module chunks = 19"],"sourceRoot":""}