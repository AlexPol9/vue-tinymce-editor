{"version":3,"sources":["webpack:///static/js/21.7ee9970be0cfd087f7f3.js","webpack:///./~/tinymce/plugins/link/index.js","webpack:///./~/tinymce/plugins/link/plugin.js"],"names":["webpackJsonp","NBEC","module","exports","__webpack_require__","m/OW","domGlobals","Plugin","global","tinymce","util","Tools","resolve","global$1","assumeExternalTargets","editorSettings","link_assume_external_targets","hasContextToolbar","link_context_toolbar","getLinkList","link_list","hasDefaultLinkTarget","default_link_target","getDefaultLinkTarget","getTargetList","target_list","setTargetList","editor","list","settings","shouldShowTargetList","getRelList","rel_list","hasRelList","undefined","getLinkClassList","link_class_list","hasLinkClassList","shouldShowLinkTitle","link_title","allowUnsafeLinkTarget","allow_unsafe_link_target","Settings","global$2","global$3","appendClickRemove","link","evt","document","body","appendChild","dispatchEvent","removeChild","open","url","ie","createElement","target","href","rel","createEvent","initMouseEvent","window","win","opener","doc","write","DOM","encode","close","OpenUrl","global$4","toggleTargetRules","isUnsafe","rules","newRel","split","removeTargetRules","filter","val","inArray","length","concat","trim","sort","join","trimCaretContainers","text","replace","getAnchorElement","selectedElm","selection","getNode","isImageFigure","dom","select","getParent","getAnchorText","anchorElm","innerText","textContent","getContent","format","isLink","elm","nodeName","hasLinks","elements","grep","isOnlyTextSelected","html","test","indexOf","node","className","attachState","data","undoManager","transact","linkAttrs","class","title","attach","focus","hasOwnProperty","setAttribs","add","linkImageFigure","insertContent","createHTML","execCommand","unlink","unlinkImageFigure","fig","a","img","getParents","parentNode","insertBefore","remove","attrs","create","Utils","global$5","global$6","createLinkList","callback","linkList","send","success","JSON","parse","buildListItems","inputList","itemCallback","startItems","appendItems","values","output","each","item","menuItem","menu","value","push","delayedConfirm","message","rng","getRng","setEditorTimeout","windowManager","confirm","state","setRng","showDialog","initialText","onlyText","textListCtrl","linkListCtrl","relListCtrl","targetListCtrl","classListCtrl","linkTitleCtrl","linkListChangeHandler","e","textCtrl","find","lastControl","control","updateText","this","parent","urlChange","meta","convertURL","key","inp","call","onBeforeCall","toJSON","getAttrib","name","type","size","label","onchange","onselect","onPostRender","textStyle","formatter","getCssText","inline","classes","filetype","autofocus","onkeyup","onpaste","onbeforecall","anchorList","anchor","id","selected","unshift","onSubmit","insertLink","removeLink","resultData","extend","open$1","Dialog","getLink","getSelectedLink","getStart","getHref","getAttribute","isContextMenuVisible","contextmenu","plugins","hasOnlyAltModifier","altKey","shiftKey","ctrlKey","metaKey","gotoLink","targetEl","$","scrollIntoView","openDialog","gotoSelectedLink","leftClickedOnAHref","sel","startContainer","nodeType","isCollapsed","startOffset","setupGotoLinks","on","metaKeyPressed","preventDefault","keyCode","toggleActiveState","self","active","readonly","element","toggleViewLinkState","toggleVisibility","parents","show","hide","off","Actions","register","addCommand","Commands","setup","addShortcut","Keyboard","setupButtons","addButton","icon","tooltip","onclick","onpostrender","addContextToolbar","setupMenuItems","addMenuItem","prependToContext","shortcut","stateSelector","context","setupContextToolbars","Controls"],"mappings":"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","file":"static/js/21.7ee9970be0cfd087f7f3.js","sourcesContent":["webpackJsonp([21],{\n\n/***/ \"NBEC\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// Exports the \"link\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/link')\n//   ES2015:\n//     import 'tinymce/plugins/link'\n__webpack_require__(\"m/OW\");\n\n/***/ }),\n\n/***/ \"m/OW\":\n/***/ (function(module, exports) {\n\n(function () {\nvar link = (function (domGlobals) {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n    var assumeExternalTargets = function (editorSettings) {\n      return typeof editorSettings.link_assume_external_targets === 'boolean' ? editorSettings.link_assume_external_targets : false;\n    };\n    var hasContextToolbar = function (editorSettings) {\n      return typeof editorSettings.link_context_toolbar === 'boolean' ? editorSettings.link_context_toolbar : false;\n    };\n    var getLinkList = function (editorSettings) {\n      return editorSettings.link_list;\n    };\n    var hasDefaultLinkTarget = function (editorSettings) {\n      return typeof editorSettings.default_link_target === 'string';\n    };\n    var getDefaultLinkTarget = function (editorSettings) {\n      return editorSettings.default_link_target;\n    };\n    var getTargetList = function (editorSettings) {\n      return editorSettings.target_list;\n    };\n    var setTargetList = function (editor, list) {\n      editor.settings.target_list = list;\n    };\n    var shouldShowTargetList = function (editorSettings) {\n      return getTargetList(editorSettings) !== false;\n    };\n    var getRelList = function (editorSettings) {\n      return editorSettings.rel_list;\n    };\n    var hasRelList = function (editorSettings) {\n      return getRelList(editorSettings) !== undefined;\n    };\n    var getLinkClassList = function (editorSettings) {\n      return editorSettings.link_class_list;\n    };\n    var hasLinkClassList = function (editorSettings) {\n      return getLinkClassList(editorSettings) !== undefined;\n    };\n    var shouldShowLinkTitle = function (editorSettings) {\n      return editorSettings.link_title !== false;\n    };\n    var allowUnsafeLinkTarget = function (editorSettings) {\n      return typeof editorSettings.allow_unsafe_link_target === 'boolean' ? editorSettings.allow_unsafe_link_target : false;\n    };\n    var Settings = {\n      assumeExternalTargets: assumeExternalTargets,\n      hasContextToolbar: hasContextToolbar,\n      getLinkList: getLinkList,\n      hasDefaultLinkTarget: hasDefaultLinkTarget,\n      getDefaultLinkTarget: getDefaultLinkTarget,\n      getTargetList: getTargetList,\n      setTargetList: setTargetList,\n      shouldShowTargetList: shouldShowTargetList,\n      getRelList: getRelList,\n      hasRelList: hasRelList,\n      getLinkClassList: getLinkClassList,\n      hasLinkClassList: hasLinkClassList,\n      shouldShowLinkTitle: shouldShowLinkTitle,\n      allowUnsafeLinkTarget: allowUnsafeLinkTarget\n    };\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var appendClickRemove = function (link, evt) {\n      domGlobals.document.body.appendChild(link);\n      link.dispatchEvent(evt);\n      domGlobals.document.body.removeChild(link);\n    };\n    var open = function (url) {\n      if (!global$3.ie || global$3.ie > 10) {\n        var link = domGlobals.document.createElement('a');\n        link.target = '_blank';\n        link.href = url;\n        link.rel = 'noreferrer noopener';\n        var evt = domGlobals.document.createEvent('MouseEvents');\n        evt.initMouseEvent('click', true, true, domGlobals.window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n        appendClickRemove(link, evt);\n      } else {\n        var win = domGlobals.window.open('', '_blank');\n        if (win) {\n          win.opener = null;\n          var doc = win.document;\n          doc.open();\n          doc.write('<meta http-equiv=\"refresh\" content=\"0; url=' + global$2.DOM.encode(url) + '\">');\n          doc.close();\n        }\n      }\n    };\n    var OpenUrl = { open: open };\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var toggleTargetRules = function (rel, isUnsafe) {\n      var rules = ['noopener'];\n      var newRel = rel ? rel.split(/\\s+/) : [];\n      var toString = function (rel) {\n        return global$4.trim(rel.sort().join(' '));\n      };\n      var addTargetRules = function (rel) {\n        rel = removeTargetRules(rel);\n        return rel.length ? rel.concat(rules) : rules;\n      };\n      var removeTargetRules = function (rel) {\n        return rel.filter(function (val) {\n          return global$4.inArray(rules, val) === -1;\n        });\n      };\n      newRel = isUnsafe ? addTargetRules(newRel) : removeTargetRules(newRel);\n      return newRel.length ? toString(newRel) : null;\n    };\n    var trimCaretContainers = function (text) {\n      return text.replace(/\\uFEFF/g, '');\n    };\n    var getAnchorElement = function (editor, selectedElm) {\n      selectedElm = selectedElm || editor.selection.getNode();\n      if (isImageFigure(selectedElm)) {\n        return editor.dom.select('a[href]', selectedElm)[0];\n      } else {\n        return editor.dom.getParent(selectedElm, 'a[href]');\n      }\n    };\n    var getAnchorText = function (selection, anchorElm) {\n      var text = anchorElm ? anchorElm.innerText || anchorElm.textContent : selection.getContent({ format: 'text' });\n      return trimCaretContainers(text);\n    };\n    var isLink = function (elm) {\n      return elm && elm.nodeName === 'A' && elm.href;\n    };\n    var hasLinks = function (elements) {\n      return global$4.grep(elements, isLink).length > 0;\n    };\n    var isOnlyTextSelected = function (html) {\n      if (/</.test(html) && (!/^<a [^>]+>[^<]+<\\/a>$/.test(html) || html.indexOf('href=') === -1)) {\n        return false;\n      }\n      return true;\n    };\n    var isImageFigure = function (node) {\n      return node && node.nodeName === 'FIGURE' && /\\bimage\\b/i.test(node.className);\n    };\n    var link = function (editor, attachState) {\n      return function (data) {\n        editor.undoManager.transact(function () {\n          var selectedElm = editor.selection.getNode();\n          var anchorElm = getAnchorElement(editor, selectedElm);\n          var linkAttrs = {\n            href: data.href,\n            target: data.target ? data.target : null,\n            rel: data.rel ? data.rel : null,\n            class: data.class ? data.class : null,\n            title: data.title ? data.title : null\n          };\n          if (!Settings.hasRelList(editor.settings) && Settings.allowUnsafeLinkTarget(editor.settings) === false) {\n            linkAttrs.rel = toggleTargetRules(linkAttrs.rel, linkAttrs.target === '_blank');\n          }\n          if (data.href === attachState.href) {\n            attachState.attach();\n            attachState = {};\n          }\n          if (anchorElm) {\n            editor.focus();\n            if (data.hasOwnProperty('text')) {\n              if ('innerText' in anchorElm) {\n                anchorElm.innerText = data.text;\n              } else {\n                anchorElm.textContent = data.text;\n              }\n            }\n            editor.dom.setAttribs(anchorElm, linkAttrs);\n            editor.selection.select(anchorElm);\n            editor.undoManager.add();\n          } else {\n            if (isImageFigure(selectedElm)) {\n              linkImageFigure(editor, selectedElm, linkAttrs);\n            } else if (data.hasOwnProperty('text')) {\n              editor.insertContent(editor.dom.createHTML('a', linkAttrs, editor.dom.encode(data.text)));\n            } else {\n              editor.execCommand('mceInsertLink', false, linkAttrs);\n            }\n          }\n        });\n      };\n    };\n    var unlink = function (editor) {\n      return function () {\n        editor.undoManager.transact(function () {\n          var node = editor.selection.getNode();\n          if (isImageFigure(node)) {\n            unlinkImageFigure(editor, node);\n          } else {\n            editor.execCommand('unlink');\n          }\n        });\n      };\n    };\n    var unlinkImageFigure = function (editor, fig) {\n      var a, img;\n      img = editor.dom.select('img', fig)[0];\n      if (img) {\n        a = editor.dom.getParents(img, 'a[href]', fig)[0];\n        if (a) {\n          a.parentNode.insertBefore(img, a);\n          editor.dom.remove(a);\n        }\n      }\n    };\n    var linkImageFigure = function (editor, fig, attrs) {\n      var a, img;\n      img = editor.dom.select('img', fig)[0];\n      if (img) {\n        a = editor.dom.create('a', attrs);\n        img.parentNode.insertBefore(a, img);\n        a.appendChild(img);\n      }\n    };\n    var Utils = {\n      link: link,\n      unlink: unlink,\n      isLink: isLink,\n      hasLinks: hasLinks,\n      isOnlyTextSelected: isOnlyTextSelected,\n      getAnchorElement: getAnchorElement,\n      getAnchorText: getAnchorText,\n      toggleTargetRules: toggleTargetRules\n    };\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n    var global$6 = tinymce.util.Tools.resolve('tinymce.util.XHR');\n\n    var attachState = {};\n    var createLinkList = function (editor, callback) {\n      var linkList = Settings.getLinkList(editor.settings);\n      if (typeof linkList === 'string') {\n        global$6.send({\n          url: linkList,\n          success: function (text) {\n            callback(editor, JSON.parse(text));\n          }\n        });\n      } else if (typeof linkList === 'function') {\n        linkList(function (list) {\n          callback(editor, list);\n        });\n      } else {\n        callback(editor, linkList);\n      }\n    };\n    var buildListItems = function (inputList, itemCallback, startItems) {\n      var appendItems = function (values, output) {\n        output = output || [];\n        global$4.each(values, function (item) {\n          var menuItem = { text: item.text || item.title };\n          if (item.menu) {\n            menuItem.menu = appendItems(item.menu);\n          } else {\n            menuItem.value = item.value;\n            if (itemCallback) {\n              itemCallback(menuItem);\n            }\n          }\n          output.push(menuItem);\n        });\n        return output;\n      };\n      return appendItems(inputList, startItems || []);\n    };\n    var delayedConfirm = function (editor, message, callback) {\n      var rng = editor.selection.getRng();\n      global$5.setEditorTimeout(editor, function () {\n        editor.windowManager.confirm(message, function (state) {\n          editor.selection.setRng(rng);\n          callback(state);\n        });\n      });\n    };\n    var showDialog = function (editor, linkList) {\n      var data = {};\n      var selection = editor.selection;\n      var dom = editor.dom;\n      var anchorElm, initialText;\n      var win, onlyText, textListCtrl, linkListCtrl, relListCtrl, targetListCtrl, classListCtrl, linkTitleCtrl, value;\n      var linkListChangeHandler = function (e) {\n        var textCtrl = win.find('#text');\n        if (!textCtrl.value() || e.lastControl && textCtrl.value() === e.lastControl.text()) {\n          textCtrl.value(e.control.text());\n        }\n        win.find('#href').value(e.control.value());\n      };\n      var buildAnchorListControl = function (url) {\n        var anchorList = [];\n        global$4.each(editor.dom.select('a:not([href])'), function (anchor) {\n          var id = anchor.name || anchor.id;\n          if (id) {\n            anchorList.push({\n              text: id,\n              value: '#' + id,\n              selected: url.indexOf('#' + id) !== -1\n            });\n          }\n        });\n        if (anchorList.length) {\n          anchorList.unshift({\n            text: 'None',\n            value: ''\n          });\n          return {\n            name: 'anchor',\n            type: 'listbox',\n            label: 'Anchors',\n            values: anchorList,\n            onselect: linkListChangeHandler\n          };\n        }\n      };\n      var updateText = function () {\n        if (!initialText && onlyText && !data.text) {\n          this.parent().parent().find('#text')[0].value(this.value());\n        }\n      };\n      var urlChange = function (e) {\n        var meta = e.meta || {};\n        if (linkListCtrl) {\n          linkListCtrl.value(editor.convertURL(this.value(), 'href'));\n        }\n        global$4.each(e.meta, function (value, key) {\n          var inp = win.find('#' + key);\n          if (key === 'text') {\n            if (initialText.length === 0) {\n              inp.value(value);\n              data.text = value;\n            }\n          } else {\n            inp.value(value);\n          }\n        });\n        if (meta.attach) {\n          attachState = {\n            href: this.value(),\n            attach: meta.attach\n          };\n        }\n        if (!meta.text) {\n          updateText.call(this);\n        }\n      };\n      var onBeforeCall = function (e) {\n        e.meta = win.toJSON();\n      };\n      onlyText = Utils.isOnlyTextSelected(selection.getContent());\n      anchorElm = Utils.getAnchorElement(editor);\n      data.text = initialText = Utils.getAnchorText(editor.selection, anchorElm);\n      data.href = anchorElm ? dom.getAttrib(anchorElm, 'href') : '';\n      if (anchorElm) {\n        data.target = dom.getAttrib(anchorElm, 'target');\n      } else if (Settings.hasDefaultLinkTarget(editor.settings)) {\n        data.target = Settings.getDefaultLinkTarget(editor.settings);\n      }\n      if (value = dom.getAttrib(anchorElm, 'rel')) {\n        data.rel = value;\n      }\n      if (value = dom.getAttrib(anchorElm, 'class')) {\n        data.class = value;\n      }\n      if (value = dom.getAttrib(anchorElm, 'title')) {\n        data.title = value;\n      }\n      if (onlyText) {\n        textListCtrl = {\n          name: 'text',\n          type: 'textbox',\n          size: 40,\n          label: 'Text to display',\n          onchange: function () {\n            data.text = this.value();\n          }\n        };\n      }\n      if (linkList) {\n        linkListCtrl = {\n          type: 'listbox',\n          label: 'Link list',\n          values: buildListItems(linkList, function (item) {\n            item.value = editor.convertURL(item.value || item.url, 'href');\n          }, [{\n              text: 'None',\n              value: ''\n            }]),\n          onselect: linkListChangeHandler,\n          value: editor.convertURL(data.href, 'href'),\n          onPostRender: function () {\n            linkListCtrl = this;\n          }\n        };\n      }\n      if (Settings.shouldShowTargetList(editor.settings)) {\n        if (Settings.getTargetList(editor.settings) === undefined) {\n          Settings.setTargetList(editor, [\n            {\n              text: 'None',\n              value: ''\n            },\n            {\n              text: 'New window',\n              value: '_blank'\n            }\n          ]);\n        }\n        targetListCtrl = {\n          name: 'target',\n          type: 'listbox',\n          label: 'Target',\n          values: buildListItems(Settings.getTargetList(editor.settings))\n        };\n      }\n      if (Settings.hasRelList(editor.settings)) {\n        relListCtrl = {\n          name: 'rel',\n          type: 'listbox',\n          label: 'Rel',\n          values: buildListItems(Settings.getRelList(editor.settings), function (item) {\n            if (Settings.allowUnsafeLinkTarget(editor.settings) === false) {\n              item.value = Utils.toggleTargetRules(item.value, data.target === '_blank');\n            }\n          })\n        };\n      }\n      if (Settings.hasLinkClassList(editor.settings)) {\n        classListCtrl = {\n          name: 'class',\n          type: 'listbox',\n          label: 'Class',\n          values: buildListItems(Settings.getLinkClassList(editor.settings), function (item) {\n            if (item.value) {\n              item.textStyle = function () {\n                return editor.formatter.getCssText({\n                  inline: 'a',\n                  classes: [item.value]\n                });\n              };\n            }\n          })\n        };\n      }\n      if (Settings.shouldShowLinkTitle(editor.settings)) {\n        linkTitleCtrl = {\n          name: 'title',\n          type: 'textbox',\n          label: 'Title',\n          value: data.title\n        };\n      }\n      win = editor.windowManager.open({\n        title: 'Insert link',\n        data: data,\n        body: [\n          {\n            name: 'href',\n            type: 'filepicker',\n            filetype: 'file',\n            size: 40,\n            autofocus: true,\n            label: 'Url',\n            onchange: urlChange,\n            onkeyup: updateText,\n            onpaste: updateText,\n            onbeforecall: onBeforeCall\n          },\n          textListCtrl,\n          linkTitleCtrl,\n          buildAnchorListControl(data.href),\n          linkListCtrl,\n          relListCtrl,\n          targetListCtrl,\n          classListCtrl\n        ],\n        onSubmit: function (e) {\n          var assumeExternalTargets = Settings.assumeExternalTargets(editor.settings);\n          var insertLink = Utils.link(editor, attachState);\n          var removeLink = Utils.unlink(editor);\n          var resultData = global$4.extend({}, data, e.data);\n          var href = resultData.href;\n          if (!href) {\n            removeLink();\n            return;\n          }\n          if (!onlyText || resultData.text === initialText) {\n            delete resultData.text;\n          }\n          if (href.indexOf('@') > 0 && href.indexOf('//') === -1 && href.indexOf('mailto:') === -1) {\n            delayedConfirm(editor, 'The URL you entered seems to be an email address. Do you want to add the required mailto: prefix?', function (state) {\n              if (state) {\n                resultData.href = 'mailto:' + href;\n              }\n              insertLink(resultData);\n            });\n            return;\n          }\n          if (assumeExternalTargets === true && !/^\\w+:/i.test(href) || assumeExternalTargets === false && /^\\s*www[\\.|\\d\\.]/i.test(href)) {\n            delayedConfirm(editor, 'The URL you entered seems to be an external link. Do you want to add the required http:// prefix?', function (state) {\n              if (state) {\n                resultData.href = 'http://' + href;\n              }\n              insertLink(resultData);\n            });\n            return;\n          }\n          insertLink(resultData);\n        }\n      });\n    };\n    var open$1 = function (editor) {\n      createLinkList(editor, showDialog);\n    };\n    var Dialog = { open: open$1 };\n\n    var getLink = function (editor, elm) {\n      return editor.dom.getParent(elm, 'a[href]');\n    };\n    var getSelectedLink = function (editor) {\n      return getLink(editor, editor.selection.getStart());\n    };\n    var getHref = function (elm) {\n      var href = elm.getAttribute('data-mce-href');\n      return href ? href : elm.getAttribute('href');\n    };\n    var isContextMenuVisible = function (editor) {\n      var contextmenu = editor.plugins.contextmenu;\n      return contextmenu ? contextmenu.isContextMenuVisible() : false;\n    };\n    var hasOnlyAltModifier = function (e) {\n      return e.altKey === true && e.shiftKey === false && e.ctrlKey === false && e.metaKey === false;\n    };\n    var gotoLink = function (editor, a) {\n      if (a) {\n        var href = getHref(a);\n        if (/^#/.test(href)) {\n          var targetEl = editor.$(href);\n          if (targetEl.length) {\n            editor.selection.scrollIntoView(targetEl[0], true);\n          }\n        } else {\n          OpenUrl.open(a.href);\n        }\n      }\n    };\n    var openDialog = function (editor) {\n      return function () {\n        Dialog.open(editor);\n      };\n    };\n    var gotoSelectedLink = function (editor) {\n      return function () {\n        gotoLink(editor, getSelectedLink(editor));\n      };\n    };\n    var leftClickedOnAHref = function (editor) {\n      return function (elm) {\n        var sel, rng, node;\n        if (Settings.hasContextToolbar(editor.settings) && !isContextMenuVisible(editor) && Utils.isLink(elm)) {\n          sel = editor.selection;\n          rng = sel.getRng();\n          node = rng.startContainer;\n          if (node.nodeType === 3 && sel.isCollapsed() && rng.startOffset > 0 && rng.startOffset < node.data.length) {\n            return true;\n          }\n        }\n        return false;\n      };\n    };\n    var setupGotoLinks = function (editor) {\n      editor.on('click', function (e) {\n        var link = getLink(editor, e.target);\n        if (link && global$1.metaKeyPressed(e)) {\n          e.preventDefault();\n          gotoLink(editor, link);\n        }\n      });\n      editor.on('keydown', function (e) {\n        var link = getSelectedLink(editor);\n        if (link && e.keyCode === 13 && hasOnlyAltModifier(e)) {\n          e.preventDefault();\n          gotoLink(editor, link);\n        }\n      });\n    };\n    var toggleActiveState = function (editor) {\n      return function () {\n        var self = this;\n        editor.on('nodechange', function (e) {\n          self.active(!editor.readonly && !!Utils.getAnchorElement(editor, e.element));\n        });\n      };\n    };\n    var toggleViewLinkState = function (editor) {\n      return function () {\n        var self = this;\n        var toggleVisibility = function (e) {\n          if (Utils.hasLinks(e.parents)) {\n            self.show();\n          } else {\n            self.hide();\n          }\n        };\n        if (!Utils.hasLinks(editor.dom.getParents(editor.selection.getStart()))) {\n          self.hide();\n        }\n        editor.on('nodechange', toggleVisibility);\n        self.on('remove', function () {\n          editor.off('nodechange', toggleVisibility);\n        });\n      };\n    };\n    var Actions = {\n      openDialog: openDialog,\n      gotoSelectedLink: gotoSelectedLink,\n      leftClickedOnAHref: leftClickedOnAHref,\n      setupGotoLinks: setupGotoLinks,\n      toggleActiveState: toggleActiveState,\n      toggleViewLinkState: toggleViewLinkState\n    };\n\n    var register = function (editor) {\n      editor.addCommand('mceLink', Actions.openDialog(editor));\n    };\n    var Commands = { register: register };\n\n    var setup = function (editor) {\n      editor.addShortcut('Meta+K', '', Actions.openDialog(editor));\n    };\n    var Keyboard = { setup: setup };\n\n    var setupButtons = function (editor) {\n      editor.addButton('link', {\n        active: false,\n        icon: 'link',\n        tooltip: 'Insert/edit link',\n        onclick: Actions.openDialog(editor),\n        onpostrender: Actions.toggleActiveState(editor)\n      });\n      editor.addButton('unlink', {\n        active: false,\n        icon: 'unlink',\n        tooltip: 'Remove link',\n        onclick: Utils.unlink(editor),\n        onpostrender: Actions.toggleActiveState(editor)\n      });\n      if (editor.addContextToolbar) {\n        editor.addButton('openlink', {\n          icon: 'newtab',\n          tooltip: 'Open link',\n          onclick: Actions.gotoSelectedLink(editor)\n        });\n      }\n    };\n    var setupMenuItems = function (editor) {\n      editor.addMenuItem('openlink', {\n        text: 'Open link',\n        icon: 'newtab',\n        onclick: Actions.gotoSelectedLink(editor),\n        onPostRender: Actions.toggleViewLinkState(editor),\n        prependToContext: true\n      });\n      editor.addMenuItem('link', {\n        icon: 'link',\n        text: 'Link',\n        shortcut: 'Meta+K',\n        onclick: Actions.openDialog(editor),\n        stateSelector: 'a[href]',\n        context: 'insert',\n        prependToContext: true\n      });\n      editor.addMenuItem('unlink', {\n        icon: 'unlink',\n        text: 'Remove link',\n        onclick: Utils.unlink(editor),\n        stateSelector: 'a[href]'\n      });\n    };\n    var setupContextToolbars = function (editor) {\n      if (editor.addContextToolbar) {\n        editor.addContextToolbar(Actions.leftClickedOnAHref(editor), 'openlink | link unlink');\n      }\n    };\n    var Controls = {\n      setupButtons: setupButtons,\n      setupMenuItems: setupMenuItems,\n      setupContextToolbars: setupContextToolbars\n    };\n\n    global.add('link', function (editor) {\n      Controls.setupButtons(editor);\n      Controls.setupMenuItems(editor);\n      Controls.setupContextToolbars(editor);\n      Actions.setupGotoLinks(editor);\n      Commands.register(editor);\n      Keyboard.setup(editor);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}(window));\n})();\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/21.7ee9970be0cfd087f7f3.js","// Exports the \"link\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/link')\n//   ES2015:\n//     import 'tinymce/plugins/link'\nrequire('./plugin.js');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tinymce/plugins/link/index.js\n// module id = NBEC\n// module chunks = 21","(function () {\nvar link = (function (domGlobals) {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n    var assumeExternalTargets = function (editorSettings) {\n      return typeof editorSettings.link_assume_external_targets === 'boolean' ? editorSettings.link_assume_external_targets : false;\n    };\n    var hasContextToolbar = function (editorSettings) {\n      return typeof editorSettings.link_context_toolbar === 'boolean' ? editorSettings.link_context_toolbar : false;\n    };\n    var getLinkList = function (editorSettings) {\n      return editorSettings.link_list;\n    };\n    var hasDefaultLinkTarget = function (editorSettings) {\n      return typeof editorSettings.default_link_target === 'string';\n    };\n    var getDefaultLinkTarget = function (editorSettings) {\n      return editorSettings.default_link_target;\n    };\n    var getTargetList = function (editorSettings) {\n      return editorSettings.target_list;\n    };\n    var setTargetList = function (editor, list) {\n      editor.settings.target_list = list;\n    };\n    var shouldShowTargetList = function (editorSettings) {\n      return getTargetList(editorSettings) !== false;\n    };\n    var getRelList = function (editorSettings) {\n      return editorSettings.rel_list;\n    };\n    var hasRelList = function (editorSettings) {\n      return getRelList(editorSettings) !== undefined;\n    };\n    var getLinkClassList = function (editorSettings) {\n      return editorSettings.link_class_list;\n    };\n    var hasLinkClassList = function (editorSettings) {\n      return getLinkClassList(editorSettings) !== undefined;\n    };\n    var shouldShowLinkTitle = function (editorSettings) {\n      return editorSettings.link_title !== false;\n    };\n    var allowUnsafeLinkTarget = function (editorSettings) {\n      return typeof editorSettings.allow_unsafe_link_target === 'boolean' ? editorSettings.allow_unsafe_link_target : false;\n    };\n    var Settings = {\n      assumeExternalTargets: assumeExternalTargets,\n      hasContextToolbar: hasContextToolbar,\n      getLinkList: getLinkList,\n      hasDefaultLinkTarget: hasDefaultLinkTarget,\n      getDefaultLinkTarget: getDefaultLinkTarget,\n      getTargetList: getTargetList,\n      setTargetList: setTargetList,\n      shouldShowTargetList: shouldShowTargetList,\n      getRelList: getRelList,\n      hasRelList: hasRelList,\n      getLinkClassList: getLinkClassList,\n      hasLinkClassList: hasLinkClassList,\n      shouldShowLinkTitle: shouldShowLinkTitle,\n      allowUnsafeLinkTarget: allowUnsafeLinkTarget\n    };\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var appendClickRemove = function (link, evt) {\n      domGlobals.document.body.appendChild(link);\n      link.dispatchEvent(evt);\n      domGlobals.document.body.removeChild(link);\n    };\n    var open = function (url) {\n      if (!global$3.ie || global$3.ie > 10) {\n        var link = domGlobals.document.createElement('a');\n        link.target = '_blank';\n        link.href = url;\n        link.rel = 'noreferrer noopener';\n        var evt = domGlobals.document.createEvent('MouseEvents');\n        evt.initMouseEvent('click', true, true, domGlobals.window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n        appendClickRemove(link, evt);\n      } else {\n        var win = domGlobals.window.open('', '_blank');\n        if (win) {\n          win.opener = null;\n          var doc = win.document;\n          doc.open();\n          doc.write('<meta http-equiv=\"refresh\" content=\"0; url=' + global$2.DOM.encode(url) + '\">');\n          doc.close();\n        }\n      }\n    };\n    var OpenUrl = { open: open };\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var toggleTargetRules = function (rel, isUnsafe) {\n      var rules = ['noopener'];\n      var newRel = rel ? rel.split(/\\s+/) : [];\n      var toString = function (rel) {\n        return global$4.trim(rel.sort().join(' '));\n      };\n      var addTargetRules = function (rel) {\n        rel = removeTargetRules(rel);\n        return rel.length ? rel.concat(rules) : rules;\n      };\n      var removeTargetRules = function (rel) {\n        return rel.filter(function (val) {\n          return global$4.inArray(rules, val) === -1;\n        });\n      };\n      newRel = isUnsafe ? addTargetRules(newRel) : removeTargetRules(newRel);\n      return newRel.length ? toString(newRel) : null;\n    };\n    var trimCaretContainers = function (text) {\n      return text.replace(/\\uFEFF/g, '');\n    };\n    var getAnchorElement = function (editor, selectedElm) {\n      selectedElm = selectedElm || editor.selection.getNode();\n      if (isImageFigure(selectedElm)) {\n        return editor.dom.select('a[href]', selectedElm)[0];\n      } else {\n        return editor.dom.getParent(selectedElm, 'a[href]');\n      }\n    };\n    var getAnchorText = function (selection, anchorElm) {\n      var text = anchorElm ? anchorElm.innerText || anchorElm.textContent : selection.getContent({ format: 'text' });\n      return trimCaretContainers(text);\n    };\n    var isLink = function (elm) {\n      return elm && elm.nodeName === 'A' && elm.href;\n    };\n    var hasLinks = function (elements) {\n      return global$4.grep(elements, isLink).length > 0;\n    };\n    var isOnlyTextSelected = function (html) {\n      if (/</.test(html) && (!/^<a [^>]+>[^<]+<\\/a>$/.test(html) || html.indexOf('href=') === -1)) {\n        return false;\n      }\n      return true;\n    };\n    var isImageFigure = function (node) {\n      return node && node.nodeName === 'FIGURE' && /\\bimage\\b/i.test(node.className);\n    };\n    var link = function (editor, attachState) {\n      return function (data) {\n        editor.undoManager.transact(function () {\n          var selectedElm = editor.selection.getNode();\n          var anchorElm = getAnchorElement(editor, selectedElm);\n          var linkAttrs = {\n            href: data.href,\n            target: data.target ? data.target : null,\n            rel: data.rel ? data.rel : null,\n            class: data.class ? data.class : null,\n            title: data.title ? data.title : null\n          };\n          if (!Settings.hasRelList(editor.settings) && Settings.allowUnsafeLinkTarget(editor.settings) === false) {\n            linkAttrs.rel = toggleTargetRules(linkAttrs.rel, linkAttrs.target === '_blank');\n          }\n          if (data.href === attachState.href) {\n            attachState.attach();\n            attachState = {};\n          }\n          if (anchorElm) {\n            editor.focus();\n            if (data.hasOwnProperty('text')) {\n              if ('innerText' in anchorElm) {\n                anchorElm.innerText = data.text;\n              } else {\n                anchorElm.textContent = data.text;\n              }\n            }\n            editor.dom.setAttribs(anchorElm, linkAttrs);\n            editor.selection.select(anchorElm);\n            editor.undoManager.add();\n          } else {\n            if (isImageFigure(selectedElm)) {\n              linkImageFigure(editor, selectedElm, linkAttrs);\n            } else if (data.hasOwnProperty('text')) {\n              editor.insertContent(editor.dom.createHTML('a', linkAttrs, editor.dom.encode(data.text)));\n            } else {\n              editor.execCommand('mceInsertLink', false, linkAttrs);\n            }\n          }\n        });\n      };\n    };\n    var unlink = function (editor) {\n      return function () {\n        editor.undoManager.transact(function () {\n          var node = editor.selection.getNode();\n          if (isImageFigure(node)) {\n            unlinkImageFigure(editor, node);\n          } else {\n            editor.execCommand('unlink');\n          }\n        });\n      };\n    };\n    var unlinkImageFigure = function (editor, fig) {\n      var a, img;\n      img = editor.dom.select('img', fig)[0];\n      if (img) {\n        a = editor.dom.getParents(img, 'a[href]', fig)[0];\n        if (a) {\n          a.parentNode.insertBefore(img, a);\n          editor.dom.remove(a);\n        }\n      }\n    };\n    var linkImageFigure = function (editor, fig, attrs) {\n      var a, img;\n      img = editor.dom.select('img', fig)[0];\n      if (img) {\n        a = editor.dom.create('a', attrs);\n        img.parentNode.insertBefore(a, img);\n        a.appendChild(img);\n      }\n    };\n    var Utils = {\n      link: link,\n      unlink: unlink,\n      isLink: isLink,\n      hasLinks: hasLinks,\n      isOnlyTextSelected: isOnlyTextSelected,\n      getAnchorElement: getAnchorElement,\n      getAnchorText: getAnchorText,\n      toggleTargetRules: toggleTargetRules\n    };\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n    var global$6 = tinymce.util.Tools.resolve('tinymce.util.XHR');\n\n    var attachState = {};\n    var createLinkList = function (editor, callback) {\n      var linkList = Settings.getLinkList(editor.settings);\n      if (typeof linkList === 'string') {\n        global$6.send({\n          url: linkList,\n          success: function (text) {\n            callback(editor, JSON.parse(text));\n          }\n        });\n      } else if (typeof linkList === 'function') {\n        linkList(function (list) {\n          callback(editor, list);\n        });\n      } else {\n        callback(editor, linkList);\n      }\n    };\n    var buildListItems = function (inputList, itemCallback, startItems) {\n      var appendItems = function (values, output) {\n        output = output || [];\n        global$4.each(values, function (item) {\n          var menuItem = { text: item.text || item.title };\n          if (item.menu) {\n            menuItem.menu = appendItems(item.menu);\n          } else {\n            menuItem.value = item.value;\n            if (itemCallback) {\n              itemCallback(menuItem);\n            }\n          }\n          output.push(menuItem);\n        });\n        return output;\n      };\n      return appendItems(inputList, startItems || []);\n    };\n    var delayedConfirm = function (editor, message, callback) {\n      var rng = editor.selection.getRng();\n      global$5.setEditorTimeout(editor, function () {\n        editor.windowManager.confirm(message, function (state) {\n          editor.selection.setRng(rng);\n          callback(state);\n        });\n      });\n    };\n    var showDialog = function (editor, linkList) {\n      var data = {};\n      var selection = editor.selection;\n      var dom = editor.dom;\n      var anchorElm, initialText;\n      var win, onlyText, textListCtrl, linkListCtrl, relListCtrl, targetListCtrl, classListCtrl, linkTitleCtrl, value;\n      var linkListChangeHandler = function (e) {\n        var textCtrl = win.find('#text');\n        if (!textCtrl.value() || e.lastControl && textCtrl.value() === e.lastControl.text()) {\n          textCtrl.value(e.control.text());\n        }\n        win.find('#href').value(e.control.value());\n      };\n      var buildAnchorListControl = function (url) {\n        var anchorList = [];\n        global$4.each(editor.dom.select('a:not([href])'), function (anchor) {\n          var id = anchor.name || anchor.id;\n          if (id) {\n            anchorList.push({\n              text: id,\n              value: '#' + id,\n              selected: url.indexOf('#' + id) !== -1\n            });\n          }\n        });\n        if (anchorList.length) {\n          anchorList.unshift({\n            text: 'None',\n            value: ''\n          });\n          return {\n            name: 'anchor',\n            type: 'listbox',\n            label: 'Anchors',\n            values: anchorList,\n            onselect: linkListChangeHandler\n          };\n        }\n      };\n      var updateText = function () {\n        if (!initialText && onlyText && !data.text) {\n          this.parent().parent().find('#text')[0].value(this.value());\n        }\n      };\n      var urlChange = function (e) {\n        var meta = e.meta || {};\n        if (linkListCtrl) {\n          linkListCtrl.value(editor.convertURL(this.value(), 'href'));\n        }\n        global$4.each(e.meta, function (value, key) {\n          var inp = win.find('#' + key);\n          if (key === 'text') {\n            if (initialText.length === 0) {\n              inp.value(value);\n              data.text = value;\n            }\n          } else {\n            inp.value(value);\n          }\n        });\n        if (meta.attach) {\n          attachState = {\n            href: this.value(),\n            attach: meta.attach\n          };\n        }\n        if (!meta.text) {\n          updateText.call(this);\n        }\n      };\n      var onBeforeCall = function (e) {\n        e.meta = win.toJSON();\n      };\n      onlyText = Utils.isOnlyTextSelected(selection.getContent());\n      anchorElm = Utils.getAnchorElement(editor);\n      data.text = initialText = Utils.getAnchorText(editor.selection, anchorElm);\n      data.href = anchorElm ? dom.getAttrib(anchorElm, 'href') : '';\n      if (anchorElm) {\n        data.target = dom.getAttrib(anchorElm, 'target');\n      } else if (Settings.hasDefaultLinkTarget(editor.settings)) {\n        data.target = Settings.getDefaultLinkTarget(editor.settings);\n      }\n      if (value = dom.getAttrib(anchorElm, 'rel')) {\n        data.rel = value;\n      }\n      if (value = dom.getAttrib(anchorElm, 'class')) {\n        data.class = value;\n      }\n      if (value = dom.getAttrib(anchorElm, 'title')) {\n        data.title = value;\n      }\n      if (onlyText) {\n        textListCtrl = {\n          name: 'text',\n          type: 'textbox',\n          size: 40,\n          label: 'Text to display',\n          onchange: function () {\n            data.text = this.value();\n          }\n        };\n      }\n      if (linkList) {\n        linkListCtrl = {\n          type: 'listbox',\n          label: 'Link list',\n          values: buildListItems(linkList, function (item) {\n            item.value = editor.convertURL(item.value || item.url, 'href');\n          }, [{\n              text: 'None',\n              value: ''\n            }]),\n          onselect: linkListChangeHandler,\n          value: editor.convertURL(data.href, 'href'),\n          onPostRender: function () {\n            linkListCtrl = this;\n          }\n        };\n      }\n      if (Settings.shouldShowTargetList(editor.settings)) {\n        if (Settings.getTargetList(editor.settings) === undefined) {\n          Settings.setTargetList(editor, [\n            {\n              text: 'None',\n              value: ''\n            },\n            {\n              text: 'New window',\n              value: '_blank'\n            }\n          ]);\n        }\n        targetListCtrl = {\n          name: 'target',\n          type: 'listbox',\n          label: 'Target',\n          values: buildListItems(Settings.getTargetList(editor.settings))\n        };\n      }\n      if (Settings.hasRelList(editor.settings)) {\n        relListCtrl = {\n          name: 'rel',\n          type: 'listbox',\n          label: 'Rel',\n          values: buildListItems(Settings.getRelList(editor.settings), function (item) {\n            if (Settings.allowUnsafeLinkTarget(editor.settings) === false) {\n              item.value = Utils.toggleTargetRules(item.value, data.target === '_blank');\n            }\n          })\n        };\n      }\n      if (Settings.hasLinkClassList(editor.settings)) {\n        classListCtrl = {\n          name: 'class',\n          type: 'listbox',\n          label: 'Class',\n          values: buildListItems(Settings.getLinkClassList(editor.settings), function (item) {\n            if (item.value) {\n              item.textStyle = function () {\n                return editor.formatter.getCssText({\n                  inline: 'a',\n                  classes: [item.value]\n                });\n              };\n            }\n          })\n        };\n      }\n      if (Settings.shouldShowLinkTitle(editor.settings)) {\n        linkTitleCtrl = {\n          name: 'title',\n          type: 'textbox',\n          label: 'Title',\n          value: data.title\n        };\n      }\n      win = editor.windowManager.open({\n        title: 'Insert link',\n        data: data,\n        body: [\n          {\n            name: 'href',\n            type: 'filepicker',\n            filetype: 'file',\n            size: 40,\n            autofocus: true,\n            label: 'Url',\n            onchange: urlChange,\n            onkeyup: updateText,\n            onpaste: updateText,\n            onbeforecall: onBeforeCall\n          },\n          textListCtrl,\n          linkTitleCtrl,\n          buildAnchorListControl(data.href),\n          linkListCtrl,\n          relListCtrl,\n          targetListCtrl,\n          classListCtrl\n        ],\n        onSubmit: function (e) {\n          var assumeExternalTargets = Settings.assumeExternalTargets(editor.settings);\n          var insertLink = Utils.link(editor, attachState);\n          var removeLink = Utils.unlink(editor);\n          var resultData = global$4.extend({}, data, e.data);\n          var href = resultData.href;\n          if (!href) {\n            removeLink();\n            return;\n          }\n          if (!onlyText || resultData.text === initialText) {\n            delete resultData.text;\n          }\n          if (href.indexOf('@') > 0 && href.indexOf('//') === -1 && href.indexOf('mailto:') === -1) {\n            delayedConfirm(editor, 'The URL you entered seems to be an email address. Do you want to add the required mailto: prefix?', function (state) {\n              if (state) {\n                resultData.href = 'mailto:' + href;\n              }\n              insertLink(resultData);\n            });\n            return;\n          }\n          if (assumeExternalTargets === true && !/^\\w+:/i.test(href) || assumeExternalTargets === false && /^\\s*www[\\.|\\d\\.]/i.test(href)) {\n            delayedConfirm(editor, 'The URL you entered seems to be an external link. Do you want to add the required http:// prefix?', function (state) {\n              if (state) {\n                resultData.href = 'http://' + href;\n              }\n              insertLink(resultData);\n            });\n            return;\n          }\n          insertLink(resultData);\n        }\n      });\n    };\n    var open$1 = function (editor) {\n      createLinkList(editor, showDialog);\n    };\n    var Dialog = { open: open$1 };\n\n    var getLink = function (editor, elm) {\n      return editor.dom.getParent(elm, 'a[href]');\n    };\n    var getSelectedLink = function (editor) {\n      return getLink(editor, editor.selection.getStart());\n    };\n    var getHref = function (elm) {\n      var href = elm.getAttribute('data-mce-href');\n      return href ? href : elm.getAttribute('href');\n    };\n    var isContextMenuVisible = function (editor) {\n      var contextmenu = editor.plugins.contextmenu;\n      return contextmenu ? contextmenu.isContextMenuVisible() : false;\n    };\n    var hasOnlyAltModifier = function (e) {\n      return e.altKey === true && e.shiftKey === false && e.ctrlKey === false && e.metaKey === false;\n    };\n    var gotoLink = function (editor, a) {\n      if (a) {\n        var href = getHref(a);\n        if (/^#/.test(href)) {\n          var targetEl = editor.$(href);\n          if (targetEl.length) {\n            editor.selection.scrollIntoView(targetEl[0], true);\n          }\n        } else {\n          OpenUrl.open(a.href);\n        }\n      }\n    };\n    var openDialog = function (editor) {\n      return function () {\n        Dialog.open(editor);\n      };\n    };\n    var gotoSelectedLink = function (editor) {\n      return function () {\n        gotoLink(editor, getSelectedLink(editor));\n      };\n    };\n    var leftClickedOnAHref = function (editor) {\n      return function (elm) {\n        var sel, rng, node;\n        if (Settings.hasContextToolbar(editor.settings) && !isContextMenuVisible(editor) && Utils.isLink(elm)) {\n          sel = editor.selection;\n          rng = sel.getRng();\n          node = rng.startContainer;\n          if (node.nodeType === 3 && sel.isCollapsed() && rng.startOffset > 0 && rng.startOffset < node.data.length) {\n            return true;\n          }\n        }\n        return false;\n      };\n    };\n    var setupGotoLinks = function (editor) {\n      editor.on('click', function (e) {\n        var link = getLink(editor, e.target);\n        if (link && global$1.metaKeyPressed(e)) {\n          e.preventDefault();\n          gotoLink(editor, link);\n        }\n      });\n      editor.on('keydown', function (e) {\n        var link = getSelectedLink(editor);\n        if (link && e.keyCode === 13 && hasOnlyAltModifier(e)) {\n          e.preventDefault();\n          gotoLink(editor, link);\n        }\n      });\n    };\n    var toggleActiveState = function (editor) {\n      return function () {\n        var self = this;\n        editor.on('nodechange', function (e) {\n          self.active(!editor.readonly && !!Utils.getAnchorElement(editor, e.element));\n        });\n      };\n    };\n    var toggleViewLinkState = function (editor) {\n      return function () {\n        var self = this;\n        var toggleVisibility = function (e) {\n          if (Utils.hasLinks(e.parents)) {\n            self.show();\n          } else {\n            self.hide();\n          }\n        };\n        if (!Utils.hasLinks(editor.dom.getParents(editor.selection.getStart()))) {\n          self.hide();\n        }\n        editor.on('nodechange', toggleVisibility);\n        self.on('remove', function () {\n          editor.off('nodechange', toggleVisibility);\n        });\n      };\n    };\n    var Actions = {\n      openDialog: openDialog,\n      gotoSelectedLink: gotoSelectedLink,\n      leftClickedOnAHref: leftClickedOnAHref,\n      setupGotoLinks: setupGotoLinks,\n      toggleActiveState: toggleActiveState,\n      toggleViewLinkState: toggleViewLinkState\n    };\n\n    var register = function (editor) {\n      editor.addCommand('mceLink', Actions.openDialog(editor));\n    };\n    var Commands = { register: register };\n\n    var setup = function (editor) {\n      editor.addShortcut('Meta+K', '', Actions.openDialog(editor));\n    };\n    var Keyboard = { setup: setup };\n\n    var setupButtons = function (editor) {\n      editor.addButton('link', {\n        active: false,\n        icon: 'link',\n        tooltip: 'Insert/edit link',\n        onclick: Actions.openDialog(editor),\n        onpostrender: Actions.toggleActiveState(editor)\n      });\n      editor.addButton('unlink', {\n        active: false,\n        icon: 'unlink',\n        tooltip: 'Remove link',\n        onclick: Utils.unlink(editor),\n        onpostrender: Actions.toggleActiveState(editor)\n      });\n      if (editor.addContextToolbar) {\n        editor.addButton('openlink', {\n          icon: 'newtab',\n          tooltip: 'Open link',\n          onclick: Actions.gotoSelectedLink(editor)\n        });\n      }\n    };\n    var setupMenuItems = function (editor) {\n      editor.addMenuItem('openlink', {\n        text: 'Open link',\n        icon: 'newtab',\n        onclick: Actions.gotoSelectedLink(editor),\n        onPostRender: Actions.toggleViewLinkState(editor),\n        prependToContext: true\n      });\n      editor.addMenuItem('link', {\n        icon: 'link',\n        text: 'Link',\n        shortcut: 'Meta+K',\n        onclick: Actions.openDialog(editor),\n        stateSelector: 'a[href]',\n        context: 'insert',\n        prependToContext: true\n      });\n      editor.addMenuItem('unlink', {\n        icon: 'unlink',\n        text: 'Remove link',\n        onclick: Utils.unlink(editor),\n        stateSelector: 'a[href]'\n      });\n    };\n    var setupContextToolbars = function (editor) {\n      if (editor.addContextToolbar) {\n        editor.addContextToolbar(Actions.leftClickedOnAHref(editor), 'openlink | link unlink');\n      }\n    };\n    var Controls = {\n      setupButtons: setupButtons,\n      setupMenuItems: setupMenuItems,\n      setupContextToolbars: setupContextToolbars\n    };\n\n    global.add('link', function (editor) {\n      Controls.setupButtons(editor);\n      Controls.setupMenuItems(editor);\n      Controls.setupContextToolbars(editor);\n      Actions.setupGotoLinks(editor);\n      Commands.register(editor);\n      Keyboard.setup(editor);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}(window));\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tinymce/plugins/link/plugin.js\n// module id = m/OW\n// module chunks = 21"],"sourceRoot":""}