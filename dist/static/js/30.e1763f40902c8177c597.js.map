{"version":3,"sources":["webpack:///static/js/30.e1763f40902c8177c597.js","webpack:///./~/tinymce/plugins/fullpage/plugin.js","webpack:///./~/tinymce/plugins/fullpage/index.js"],"names":["webpackJsonp","7McU","module","exports","Plugin","Cell","initial","value","get","set","v","clone","global","tinymce","util","Tools","resolve","global$1","global$2","global$3","global$4","shouldHideInSourceView","editor","getParam","getDefaultXmlPi","getDefaultEncoding","getDefaultFontFamily","getDefaultFontSize","getDefaultTextColor","getDefaultTitle","getDefaultDocType","Settings","parseHeader","head","validate","root_name","parse","htmlToData","getAttr","elm","name","attr","matches","headerFragment","data","fontface","fontsize","firstChild","type","xml_pi","exec","docencoding","getAll","doctype","title","each","meta","httpEquiv","toLowerCase","langcode","stylesheets","link","push","langdir","style","visited_color","link_color","active_color","dataToHtml","setAttr","undefined","addHeadNode","node","headElement","insert","append","html","dom","remove","substring","length","shortEnded","empty","split","i","nodes","currentStyleSheetsMap","stylesheet","rel","text","href","setAttribs","getBody","dir","vLink","aLink","indent","apply_source_formatting","indent_before","indent_after","serialize","indexOf","Parser","open","headState","windowManager","defaults","size","body","label","onSubmit","e","headHtml","extend","Dialog","register","addCommand","Commands","protectHtml","protect","pattern","replace","str","escape","unprotectHtml","a","m","unescape","Protect","low","s","handleSetContent","footState","evt","startPos","endPos","content","styles","selection","settings","format","source_view","trim","getDefaultHeader","headElm","getDoc","getElementsByTagName","add","id","styleSheet","cssText","getAttribute","parentNode","removeChild","header","piEncoding","handleGetContent","foot","setup","on","FilterContent","register$1","addButton","cmd","addMenuItem","context","Buttons","UWKq","__webpack_require__"],"mappings":"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","file":"static/js/30.e1763f40902c8177c597.js","sourcesContent":["webpackJsonp([30],{\n\n/***/ \"7McU\":\n/***/ (function(module, exports) {\n\n(function () {\nvar fullpage = (function () {\n    'use strict';\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      var clone = function () {\n        return Cell(get());\n      };\n      return {\n        get: get,\n        set: set,\n        clone: clone\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.html.DomParser');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.html.Node');\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.html.Serializer');\n\n    var shouldHideInSourceView = function (editor) {\n      return editor.getParam('fullpage_hide_in_source_view');\n    };\n    var getDefaultXmlPi = function (editor) {\n      return editor.getParam('fullpage_default_xml_pi');\n    };\n    var getDefaultEncoding = function (editor) {\n      return editor.getParam('fullpage_default_encoding');\n    };\n    var getDefaultFontFamily = function (editor) {\n      return editor.getParam('fullpage_default_font_family');\n    };\n    var getDefaultFontSize = function (editor) {\n      return editor.getParam('fullpage_default_font_size');\n    };\n    var getDefaultTextColor = function (editor) {\n      return editor.getParam('fullpage_default_text_color');\n    };\n    var getDefaultTitle = function (editor) {\n      return editor.getParam('fullpage_default_title');\n    };\n    var getDefaultDocType = function (editor) {\n      return editor.getParam('fullpage_default_doctype', '<!DOCTYPE html>');\n    };\n    var Settings = {\n      shouldHideInSourceView: shouldHideInSourceView,\n      getDefaultXmlPi: getDefaultXmlPi,\n      getDefaultEncoding: getDefaultEncoding,\n      getDefaultFontFamily: getDefaultFontFamily,\n      getDefaultFontSize: getDefaultFontSize,\n      getDefaultTextColor: getDefaultTextColor,\n      getDefaultTitle: getDefaultTitle,\n      getDefaultDocType: getDefaultDocType\n    };\n\n    var parseHeader = function (head) {\n      return global$2({\n        validate: false,\n        root_name: '#document'\n      }).parse(head);\n    };\n    var htmlToData = function (editor, head) {\n      var headerFragment = parseHeader(head);\n      var data = {};\n      var elm, matches;\n      function getAttr(elm, name) {\n        var value = elm.attr(name);\n        return value || '';\n      }\n      data.fontface = Settings.getDefaultFontFamily(editor);\n      data.fontsize = Settings.getDefaultFontSize(editor);\n      elm = headerFragment.firstChild;\n      if (elm.type === 7) {\n        data.xml_pi = true;\n        matches = /encoding=\"([^\"]+)\"/.exec(elm.value);\n        if (matches) {\n          data.docencoding = matches[1];\n        }\n      }\n      elm = headerFragment.getAll('#doctype')[0];\n      if (elm) {\n        data.doctype = '<!DOCTYPE' + elm.value + '>';\n      }\n      elm = headerFragment.getAll('title')[0];\n      if (elm && elm.firstChild) {\n        data.title = elm.firstChild.value;\n      }\n      global$1.each(headerFragment.getAll('meta'), function (meta) {\n        var name = meta.attr('name');\n        var httpEquiv = meta.attr('http-equiv');\n        var matches;\n        if (name) {\n          data[name.toLowerCase()] = meta.attr('content');\n        } else if (httpEquiv === 'Content-Type') {\n          matches = /charset\\s*=\\s*(.*)\\s*/gi.exec(meta.attr('content'));\n          if (matches) {\n            data.docencoding = matches[1];\n          }\n        }\n      });\n      elm = headerFragment.getAll('html')[0];\n      if (elm) {\n        data.langcode = getAttr(elm, 'lang') || getAttr(elm, 'xml:lang');\n      }\n      data.stylesheets = [];\n      global$1.each(headerFragment.getAll('link'), function (link) {\n        if (link.attr('rel') === 'stylesheet') {\n          data.stylesheets.push(link.attr('href'));\n        }\n      });\n      elm = headerFragment.getAll('body')[0];\n      if (elm) {\n        data.langdir = getAttr(elm, 'dir');\n        data.style = getAttr(elm, 'style');\n        data.visited_color = getAttr(elm, 'vlink');\n        data.link_color = getAttr(elm, 'link');\n        data.active_color = getAttr(elm, 'alink');\n      }\n      return data;\n    };\n    var dataToHtml = function (editor, data, head) {\n      var headerFragment, headElement, html, elm, value;\n      var dom = editor.dom;\n      function setAttr(elm, name, value) {\n        elm.attr(name, value ? value : undefined);\n      }\n      function addHeadNode(node) {\n        if (headElement.firstChild) {\n          headElement.insert(node, headElement.firstChild);\n        } else {\n          headElement.append(node);\n        }\n      }\n      headerFragment = parseHeader(head);\n      headElement = headerFragment.getAll('head')[0];\n      if (!headElement) {\n        elm = headerFragment.getAll('html')[0];\n        headElement = new global$3('head', 1);\n        if (elm.firstChild) {\n          elm.insert(headElement, elm.firstChild, true);\n        } else {\n          elm.append(headElement);\n        }\n      }\n      elm = headerFragment.firstChild;\n      if (data.xml_pi) {\n        value = 'version=\"1.0\"';\n        if (data.docencoding) {\n          value += ' encoding=\"' + data.docencoding + '\"';\n        }\n        if (elm.type !== 7) {\n          elm = new global$3('xml', 7);\n          headerFragment.insert(elm, headerFragment.firstChild, true);\n        }\n        elm.value = value;\n      } else if (elm && elm.type === 7) {\n        elm.remove();\n      }\n      elm = headerFragment.getAll('#doctype')[0];\n      if (data.doctype) {\n        if (!elm) {\n          elm = new global$3('#doctype', 10);\n          if (data.xml_pi) {\n            headerFragment.insert(elm, headerFragment.firstChild);\n          } else {\n            addHeadNode(elm);\n          }\n        }\n        elm.value = data.doctype.substring(9, data.doctype.length - 1);\n      } else if (elm) {\n        elm.remove();\n      }\n      elm = null;\n      global$1.each(headerFragment.getAll('meta'), function (meta) {\n        if (meta.attr('http-equiv') === 'Content-Type') {\n          elm = meta;\n        }\n      });\n      if (data.docencoding) {\n        if (!elm) {\n          elm = new global$3('meta', 1);\n          elm.attr('http-equiv', 'Content-Type');\n          elm.shortEnded = true;\n          addHeadNode(elm);\n        }\n        elm.attr('content', 'text/html; charset=' + data.docencoding);\n      } else if (elm) {\n        elm.remove();\n      }\n      elm = headerFragment.getAll('title')[0];\n      if (data.title) {\n        if (!elm) {\n          elm = new global$3('title', 1);\n          addHeadNode(elm);\n        } else {\n          elm.empty();\n        }\n        elm.append(new global$3('#text', 3)).value = data.title;\n      } else if (elm) {\n        elm.remove();\n      }\n      global$1.each('keywords,description,author,copyright,robots'.split(','), function (name) {\n        var nodes = headerFragment.getAll('meta');\n        var i, meta;\n        var value = data[name];\n        for (i = 0; i < nodes.length; i++) {\n          meta = nodes[i];\n          if (meta.attr('name') === name) {\n            if (value) {\n              meta.attr('content', value);\n            } else {\n              meta.remove();\n            }\n            return;\n          }\n        }\n        if (value) {\n          elm = new global$3('meta', 1);\n          elm.attr('name', name);\n          elm.attr('content', value);\n          elm.shortEnded = true;\n          addHeadNode(elm);\n        }\n      });\n      var currentStyleSheetsMap = {};\n      global$1.each(headerFragment.getAll('link'), function (stylesheet) {\n        if (stylesheet.attr('rel') === 'stylesheet') {\n          currentStyleSheetsMap[stylesheet.attr('href')] = stylesheet;\n        }\n      });\n      global$1.each(data.stylesheets, function (stylesheet) {\n        if (!currentStyleSheetsMap[stylesheet]) {\n          elm = new global$3('link', 1);\n          elm.attr({\n            rel: 'stylesheet',\n            text: 'text/css',\n            href: stylesheet\n          });\n          elm.shortEnded = true;\n          addHeadNode(elm);\n        }\n        delete currentStyleSheetsMap[stylesheet];\n      });\n      global$1.each(currentStyleSheetsMap, function (stylesheet) {\n        stylesheet.remove();\n      });\n      elm = headerFragment.getAll('body')[0];\n      if (elm) {\n        setAttr(elm, 'dir', data.langdir);\n        setAttr(elm, 'style', data.style);\n        setAttr(elm, 'vlink', data.visited_color);\n        setAttr(elm, 'link', data.link_color);\n        setAttr(elm, 'alink', data.active_color);\n        dom.setAttribs(editor.getBody(), {\n          style: data.style,\n          dir: data.dir,\n          vLink: data.visited_color,\n          link: data.link_color,\n          aLink: data.active_color\n        });\n      }\n      elm = headerFragment.getAll('html')[0];\n      if (elm) {\n        setAttr(elm, 'lang', data.langcode);\n        setAttr(elm, 'xml:lang', data.langcode);\n      }\n      if (!headElement.firstChild) {\n        headElement.remove();\n      }\n      html = global$4({\n        validate: false,\n        indent: true,\n        apply_source_formatting: true,\n        indent_before: 'head,html,body,meta,title,script,link,style',\n        indent_after: 'head,html,body,meta,title,script,link,style'\n      }).serialize(headerFragment);\n      return html.substring(0, html.indexOf('</body>'));\n    };\n    var Parser = {\n      parseHeader: parseHeader,\n      htmlToData: htmlToData,\n      dataToHtml: dataToHtml\n    };\n\n    var open = function (editor, headState) {\n      var data = Parser.htmlToData(editor, headState.get());\n      editor.windowManager.open({\n        title: 'Document properties',\n        data: data,\n        defaults: {\n          type: 'textbox',\n          size: 40\n        },\n        body: [\n          {\n            name: 'title',\n            label: 'Title'\n          },\n          {\n            name: 'keywords',\n            label: 'Keywords'\n          },\n          {\n            name: 'description',\n            label: 'Description'\n          },\n          {\n            name: 'robots',\n            label: 'Robots'\n          },\n          {\n            name: 'author',\n            label: 'Author'\n          },\n          {\n            name: 'docencoding',\n            label: 'Encoding'\n          }\n        ],\n        onSubmit: function (e) {\n          var headHtml = Parser.dataToHtml(editor, global$1.extend(data, e.data), headState.get());\n          headState.set(headHtml);\n        }\n      });\n    };\n    var Dialog = { open: open };\n\n    var register = function (editor, headState) {\n      editor.addCommand('mceFullPageProperties', function () {\n        Dialog.open(editor, headState);\n      });\n    };\n    var Commands = { register: register };\n\n    var protectHtml = function (protect, html) {\n      global$1.each(protect, function (pattern) {\n        html = html.replace(pattern, function (str) {\n          return '<!--mce:protected ' + escape(str) + '-->';\n        });\n      });\n      return html;\n    };\n    var unprotectHtml = function (html) {\n      return html.replace(/<!--mce:protected ([\\s\\S]*?)-->/g, function (a, m) {\n        return unescape(m);\n      });\n    };\n    var Protect = {\n      protectHtml: protectHtml,\n      unprotectHtml: unprotectHtml\n    };\n\n    var each = global$1.each;\n    var low = function (s) {\n      return s.replace(/<\\/?[A-Z]+/g, function (a) {\n        return a.toLowerCase();\n      });\n    };\n    var handleSetContent = function (editor, headState, footState, evt) {\n      var startPos, endPos, content, headerFragment, styles = '';\n      var dom = editor.dom;\n      var elm;\n      if (evt.selection) {\n        return;\n      }\n      content = Protect.protectHtml(editor.settings.protect, evt.content);\n      if (evt.format === 'raw' && headState.get()) {\n        return;\n      }\n      if (evt.source_view && Settings.shouldHideInSourceView(editor)) {\n        return;\n      }\n      if (content.length === 0 && !evt.source_view) {\n        content = global$1.trim(headState.get()) + '\\n' + global$1.trim(content) + '\\n' + global$1.trim(footState.get());\n      }\n      content = content.replace(/<(\\/?)BODY/gi, '<$1body');\n      startPos = content.indexOf('<body');\n      if (startPos !== -1) {\n        startPos = content.indexOf('>', startPos);\n        headState.set(low(content.substring(0, startPos + 1)));\n        endPos = content.indexOf('</body', startPos);\n        if (endPos === -1) {\n          endPos = content.length;\n        }\n        evt.content = global$1.trim(content.substring(startPos + 1, endPos));\n        footState.set(low(content.substring(endPos)));\n      } else {\n        headState.set(getDefaultHeader(editor));\n        footState.set('\\n</body>\\n</html>');\n      }\n      headerFragment = Parser.parseHeader(headState.get());\n      each(headerFragment.getAll('style'), function (node) {\n        if (node.firstChild) {\n          styles += node.firstChild.value;\n        }\n      });\n      elm = headerFragment.getAll('body')[0];\n      if (elm) {\n        dom.setAttribs(editor.getBody(), {\n          style: elm.attr('style') || '',\n          dir: elm.attr('dir') || '',\n          vLink: elm.attr('vlink') || '',\n          link: elm.attr('link') || '',\n          aLink: elm.attr('alink') || ''\n        });\n      }\n      dom.remove('fullpage_styles');\n      var headElm = editor.getDoc().getElementsByTagName('head')[0];\n      if (styles) {\n        dom.add(headElm, 'style', { id: 'fullpage_styles' }, styles);\n        elm = dom.get('fullpage_styles');\n        if (elm.styleSheet) {\n          elm.styleSheet.cssText = styles;\n        }\n      }\n      var currentStyleSheetsMap = {};\n      global$1.each(headElm.getElementsByTagName('link'), function (stylesheet) {\n        if (stylesheet.rel === 'stylesheet' && stylesheet.getAttribute('data-mce-fullpage')) {\n          currentStyleSheetsMap[stylesheet.href] = stylesheet;\n        }\n      });\n      global$1.each(headerFragment.getAll('link'), function (stylesheet) {\n        var href = stylesheet.attr('href');\n        if (!href) {\n          return true;\n        }\n        if (!currentStyleSheetsMap[href] && stylesheet.attr('rel') === 'stylesheet') {\n          dom.add(headElm, 'link', {\n            'rel': 'stylesheet',\n            'text': 'text/css',\n            'href': href,\n            'data-mce-fullpage': '1'\n          });\n        }\n        delete currentStyleSheetsMap[href];\n      });\n      global$1.each(currentStyleSheetsMap, function (stylesheet) {\n        stylesheet.parentNode.removeChild(stylesheet);\n      });\n    };\n    var getDefaultHeader = function (editor) {\n      var header = '', value, styles = '';\n      if (Settings.getDefaultXmlPi(editor)) {\n        var piEncoding = Settings.getDefaultEncoding(editor);\n        header += '<?xml version=\"1.0\" encoding=\"' + (piEncoding ? piEncoding : 'ISO-8859-1') + '\" ?>\\n';\n      }\n      header += Settings.getDefaultDocType(editor);\n      header += '\\n<html>\\n<head>\\n';\n      if (value = Settings.getDefaultTitle(editor)) {\n        header += '<title>' + value + '</title>\\n';\n      }\n      if (value = Settings.getDefaultEncoding(editor)) {\n        header += '<meta http-equiv=\"Content-Type\" content=\"text/html; charset=' + value + '\" />\\n';\n      }\n      if (value = Settings.getDefaultFontFamily(editor)) {\n        styles += 'font-family: ' + value + ';';\n      }\n      if (value = Settings.getDefaultFontSize(editor)) {\n        styles += 'font-size: ' + value + ';';\n      }\n      if (value = Settings.getDefaultTextColor(editor)) {\n        styles += 'color: ' + value + ';';\n      }\n      header += '</head>\\n<body' + (styles ? ' style=\"' + styles + '\"' : '') + '>\\n';\n      return header;\n    };\n    var handleGetContent = function (editor, head, foot, evt) {\n      if (!evt.selection && (!evt.source_view || !Settings.shouldHideInSourceView(editor))) {\n        evt.content = Protect.unprotectHtml(global$1.trim(head) + '\\n' + global$1.trim(evt.content) + '\\n' + global$1.trim(foot));\n      }\n    };\n    var setup = function (editor, headState, footState) {\n      editor.on('BeforeSetContent', function (evt) {\n        handleSetContent(editor, headState, footState, evt);\n      });\n      editor.on('GetContent', function (evt) {\n        handleGetContent(editor, headState.get(), footState.get(), evt);\n      });\n    };\n    var FilterContent = { setup: setup };\n\n    var register$1 = function (editor) {\n      editor.addButton('fullpage', {\n        title: 'Document properties',\n        cmd: 'mceFullPageProperties'\n      });\n      editor.addMenuItem('fullpage', {\n        text: 'Document properties',\n        cmd: 'mceFullPageProperties',\n        context: 'file'\n      });\n    };\n    var Buttons = { register: register$1 };\n\n    global.add('fullpage', function (editor) {\n      var headState = Cell(''), footState = Cell('');\n      Commands.register(editor, headState);\n      Buttons.register(editor);\n      FilterContent.setup(editor, headState, footState);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}());\n})();\n\n\n/***/ }),\n\n/***/ \"UWKq\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// Exports the \"fullpage\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/fullpage')\n//   ES2015:\n//     import 'tinymce/plugins/fullpage'\n__webpack_require__(\"7McU\");\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/30.e1763f40902c8177c597.js","(function () {\nvar fullpage = (function () {\n    'use strict';\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      var clone = function () {\n        return Cell(get());\n      };\n      return {\n        get: get,\n        set: set,\n        clone: clone\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.html.DomParser');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.html.Node');\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.html.Serializer');\n\n    var shouldHideInSourceView = function (editor) {\n      return editor.getParam('fullpage_hide_in_source_view');\n    };\n    var getDefaultXmlPi = function (editor) {\n      return editor.getParam('fullpage_default_xml_pi');\n    };\n    var getDefaultEncoding = function (editor) {\n      return editor.getParam('fullpage_default_encoding');\n    };\n    var getDefaultFontFamily = function (editor) {\n      return editor.getParam('fullpage_default_font_family');\n    };\n    var getDefaultFontSize = function (editor) {\n      return editor.getParam('fullpage_default_font_size');\n    };\n    var getDefaultTextColor = function (editor) {\n      return editor.getParam('fullpage_default_text_color');\n    };\n    var getDefaultTitle = function (editor) {\n      return editor.getParam('fullpage_default_title');\n    };\n    var getDefaultDocType = function (editor) {\n      return editor.getParam('fullpage_default_doctype', '<!DOCTYPE html>');\n    };\n    var Settings = {\n      shouldHideInSourceView: shouldHideInSourceView,\n      getDefaultXmlPi: getDefaultXmlPi,\n      getDefaultEncoding: getDefaultEncoding,\n      getDefaultFontFamily: getDefaultFontFamily,\n      getDefaultFontSize: getDefaultFontSize,\n      getDefaultTextColor: getDefaultTextColor,\n      getDefaultTitle: getDefaultTitle,\n      getDefaultDocType: getDefaultDocType\n    };\n\n    var parseHeader = function (head) {\n      return global$2({\n        validate: false,\n        root_name: '#document'\n      }).parse(head);\n    };\n    var htmlToData = function (editor, head) {\n      var headerFragment = parseHeader(head);\n      var data = {};\n      var elm, matches;\n      function getAttr(elm, name) {\n        var value = elm.attr(name);\n        return value || '';\n      }\n      data.fontface = Settings.getDefaultFontFamily(editor);\n      data.fontsize = Settings.getDefaultFontSize(editor);\n      elm = headerFragment.firstChild;\n      if (elm.type === 7) {\n        data.xml_pi = true;\n        matches = /encoding=\"([^\"]+)\"/.exec(elm.value);\n        if (matches) {\n          data.docencoding = matches[1];\n        }\n      }\n      elm = headerFragment.getAll('#doctype')[0];\n      if (elm) {\n        data.doctype = '<!DOCTYPE' + elm.value + '>';\n      }\n      elm = headerFragment.getAll('title')[0];\n      if (elm && elm.firstChild) {\n        data.title = elm.firstChild.value;\n      }\n      global$1.each(headerFragment.getAll('meta'), function (meta) {\n        var name = meta.attr('name');\n        var httpEquiv = meta.attr('http-equiv');\n        var matches;\n        if (name) {\n          data[name.toLowerCase()] = meta.attr('content');\n        } else if (httpEquiv === 'Content-Type') {\n          matches = /charset\\s*=\\s*(.*)\\s*/gi.exec(meta.attr('content'));\n          if (matches) {\n            data.docencoding = matches[1];\n          }\n        }\n      });\n      elm = headerFragment.getAll('html')[0];\n      if (elm) {\n        data.langcode = getAttr(elm, 'lang') || getAttr(elm, 'xml:lang');\n      }\n      data.stylesheets = [];\n      global$1.each(headerFragment.getAll('link'), function (link) {\n        if (link.attr('rel') === 'stylesheet') {\n          data.stylesheets.push(link.attr('href'));\n        }\n      });\n      elm = headerFragment.getAll('body')[0];\n      if (elm) {\n        data.langdir = getAttr(elm, 'dir');\n        data.style = getAttr(elm, 'style');\n        data.visited_color = getAttr(elm, 'vlink');\n        data.link_color = getAttr(elm, 'link');\n        data.active_color = getAttr(elm, 'alink');\n      }\n      return data;\n    };\n    var dataToHtml = function (editor, data, head) {\n      var headerFragment, headElement, html, elm, value;\n      var dom = editor.dom;\n      function setAttr(elm, name, value) {\n        elm.attr(name, value ? value : undefined);\n      }\n      function addHeadNode(node) {\n        if (headElement.firstChild) {\n          headElement.insert(node, headElement.firstChild);\n        } else {\n          headElement.append(node);\n        }\n      }\n      headerFragment = parseHeader(head);\n      headElement = headerFragment.getAll('head')[0];\n      if (!headElement) {\n        elm = headerFragment.getAll('html')[0];\n        headElement = new global$3('head', 1);\n        if (elm.firstChild) {\n          elm.insert(headElement, elm.firstChild, true);\n        } else {\n          elm.append(headElement);\n        }\n      }\n      elm = headerFragment.firstChild;\n      if (data.xml_pi) {\n        value = 'version=\"1.0\"';\n        if (data.docencoding) {\n          value += ' encoding=\"' + data.docencoding + '\"';\n        }\n        if (elm.type !== 7) {\n          elm = new global$3('xml', 7);\n          headerFragment.insert(elm, headerFragment.firstChild, true);\n        }\n        elm.value = value;\n      } else if (elm && elm.type === 7) {\n        elm.remove();\n      }\n      elm = headerFragment.getAll('#doctype')[0];\n      if (data.doctype) {\n        if (!elm) {\n          elm = new global$3('#doctype', 10);\n          if (data.xml_pi) {\n            headerFragment.insert(elm, headerFragment.firstChild);\n          } else {\n            addHeadNode(elm);\n          }\n        }\n        elm.value = data.doctype.substring(9, data.doctype.length - 1);\n      } else if (elm) {\n        elm.remove();\n      }\n      elm = null;\n      global$1.each(headerFragment.getAll('meta'), function (meta) {\n        if (meta.attr('http-equiv') === 'Content-Type') {\n          elm = meta;\n        }\n      });\n      if (data.docencoding) {\n        if (!elm) {\n          elm = new global$3('meta', 1);\n          elm.attr('http-equiv', 'Content-Type');\n          elm.shortEnded = true;\n          addHeadNode(elm);\n        }\n        elm.attr('content', 'text/html; charset=' + data.docencoding);\n      } else if (elm) {\n        elm.remove();\n      }\n      elm = headerFragment.getAll('title')[0];\n      if (data.title) {\n        if (!elm) {\n          elm = new global$3('title', 1);\n          addHeadNode(elm);\n        } else {\n          elm.empty();\n        }\n        elm.append(new global$3('#text', 3)).value = data.title;\n      } else if (elm) {\n        elm.remove();\n      }\n      global$1.each('keywords,description,author,copyright,robots'.split(','), function (name) {\n        var nodes = headerFragment.getAll('meta');\n        var i, meta;\n        var value = data[name];\n        for (i = 0; i < nodes.length; i++) {\n          meta = nodes[i];\n          if (meta.attr('name') === name) {\n            if (value) {\n              meta.attr('content', value);\n            } else {\n              meta.remove();\n            }\n            return;\n          }\n        }\n        if (value) {\n          elm = new global$3('meta', 1);\n          elm.attr('name', name);\n          elm.attr('content', value);\n          elm.shortEnded = true;\n          addHeadNode(elm);\n        }\n      });\n      var currentStyleSheetsMap = {};\n      global$1.each(headerFragment.getAll('link'), function (stylesheet) {\n        if (stylesheet.attr('rel') === 'stylesheet') {\n          currentStyleSheetsMap[stylesheet.attr('href')] = stylesheet;\n        }\n      });\n      global$1.each(data.stylesheets, function (stylesheet) {\n        if (!currentStyleSheetsMap[stylesheet]) {\n          elm = new global$3('link', 1);\n          elm.attr({\n            rel: 'stylesheet',\n            text: 'text/css',\n            href: stylesheet\n          });\n          elm.shortEnded = true;\n          addHeadNode(elm);\n        }\n        delete currentStyleSheetsMap[stylesheet];\n      });\n      global$1.each(currentStyleSheetsMap, function (stylesheet) {\n        stylesheet.remove();\n      });\n      elm = headerFragment.getAll('body')[0];\n      if (elm) {\n        setAttr(elm, 'dir', data.langdir);\n        setAttr(elm, 'style', data.style);\n        setAttr(elm, 'vlink', data.visited_color);\n        setAttr(elm, 'link', data.link_color);\n        setAttr(elm, 'alink', data.active_color);\n        dom.setAttribs(editor.getBody(), {\n          style: data.style,\n          dir: data.dir,\n          vLink: data.visited_color,\n          link: data.link_color,\n          aLink: data.active_color\n        });\n      }\n      elm = headerFragment.getAll('html')[0];\n      if (elm) {\n        setAttr(elm, 'lang', data.langcode);\n        setAttr(elm, 'xml:lang', data.langcode);\n      }\n      if (!headElement.firstChild) {\n        headElement.remove();\n      }\n      html = global$4({\n        validate: false,\n        indent: true,\n        apply_source_formatting: true,\n        indent_before: 'head,html,body,meta,title,script,link,style',\n        indent_after: 'head,html,body,meta,title,script,link,style'\n      }).serialize(headerFragment);\n      return html.substring(0, html.indexOf('</body>'));\n    };\n    var Parser = {\n      parseHeader: parseHeader,\n      htmlToData: htmlToData,\n      dataToHtml: dataToHtml\n    };\n\n    var open = function (editor, headState) {\n      var data = Parser.htmlToData(editor, headState.get());\n      editor.windowManager.open({\n        title: 'Document properties',\n        data: data,\n        defaults: {\n          type: 'textbox',\n          size: 40\n        },\n        body: [\n          {\n            name: 'title',\n            label: 'Title'\n          },\n          {\n            name: 'keywords',\n            label: 'Keywords'\n          },\n          {\n            name: 'description',\n            label: 'Description'\n          },\n          {\n            name: 'robots',\n            label: 'Robots'\n          },\n          {\n            name: 'author',\n            label: 'Author'\n          },\n          {\n            name: 'docencoding',\n            label: 'Encoding'\n          }\n        ],\n        onSubmit: function (e) {\n          var headHtml = Parser.dataToHtml(editor, global$1.extend(data, e.data), headState.get());\n          headState.set(headHtml);\n        }\n      });\n    };\n    var Dialog = { open: open };\n\n    var register = function (editor, headState) {\n      editor.addCommand('mceFullPageProperties', function () {\n        Dialog.open(editor, headState);\n      });\n    };\n    var Commands = { register: register };\n\n    var protectHtml = function (protect, html) {\n      global$1.each(protect, function (pattern) {\n        html = html.replace(pattern, function (str) {\n          return '<!--mce:protected ' + escape(str) + '-->';\n        });\n      });\n      return html;\n    };\n    var unprotectHtml = function (html) {\n      return html.replace(/<!--mce:protected ([\\s\\S]*?)-->/g, function (a, m) {\n        return unescape(m);\n      });\n    };\n    var Protect = {\n      protectHtml: protectHtml,\n      unprotectHtml: unprotectHtml\n    };\n\n    var each = global$1.each;\n    var low = function (s) {\n      return s.replace(/<\\/?[A-Z]+/g, function (a) {\n        return a.toLowerCase();\n      });\n    };\n    var handleSetContent = function (editor, headState, footState, evt) {\n      var startPos, endPos, content, headerFragment, styles = '';\n      var dom = editor.dom;\n      var elm;\n      if (evt.selection) {\n        return;\n      }\n      content = Protect.protectHtml(editor.settings.protect, evt.content);\n      if (evt.format === 'raw' && headState.get()) {\n        return;\n      }\n      if (evt.source_view && Settings.shouldHideInSourceView(editor)) {\n        return;\n      }\n      if (content.length === 0 && !evt.source_view) {\n        content = global$1.trim(headState.get()) + '\\n' + global$1.trim(content) + '\\n' + global$1.trim(footState.get());\n      }\n      content = content.replace(/<(\\/?)BODY/gi, '<$1body');\n      startPos = content.indexOf('<body');\n      if (startPos !== -1) {\n        startPos = content.indexOf('>', startPos);\n        headState.set(low(content.substring(0, startPos + 1)));\n        endPos = content.indexOf('</body', startPos);\n        if (endPos === -1) {\n          endPos = content.length;\n        }\n        evt.content = global$1.trim(content.substring(startPos + 1, endPos));\n        footState.set(low(content.substring(endPos)));\n      } else {\n        headState.set(getDefaultHeader(editor));\n        footState.set('\\n</body>\\n</html>');\n      }\n      headerFragment = Parser.parseHeader(headState.get());\n      each(headerFragment.getAll('style'), function (node) {\n        if (node.firstChild) {\n          styles += node.firstChild.value;\n        }\n      });\n      elm = headerFragment.getAll('body')[0];\n      if (elm) {\n        dom.setAttribs(editor.getBody(), {\n          style: elm.attr('style') || '',\n          dir: elm.attr('dir') || '',\n          vLink: elm.attr('vlink') || '',\n          link: elm.attr('link') || '',\n          aLink: elm.attr('alink') || ''\n        });\n      }\n      dom.remove('fullpage_styles');\n      var headElm = editor.getDoc().getElementsByTagName('head')[0];\n      if (styles) {\n        dom.add(headElm, 'style', { id: 'fullpage_styles' }, styles);\n        elm = dom.get('fullpage_styles');\n        if (elm.styleSheet) {\n          elm.styleSheet.cssText = styles;\n        }\n      }\n      var currentStyleSheetsMap = {};\n      global$1.each(headElm.getElementsByTagName('link'), function (stylesheet) {\n        if (stylesheet.rel === 'stylesheet' && stylesheet.getAttribute('data-mce-fullpage')) {\n          currentStyleSheetsMap[stylesheet.href] = stylesheet;\n        }\n      });\n      global$1.each(headerFragment.getAll('link'), function (stylesheet) {\n        var href = stylesheet.attr('href');\n        if (!href) {\n          return true;\n        }\n        if (!currentStyleSheetsMap[href] && stylesheet.attr('rel') === 'stylesheet') {\n          dom.add(headElm, 'link', {\n            'rel': 'stylesheet',\n            'text': 'text/css',\n            'href': href,\n            'data-mce-fullpage': '1'\n          });\n        }\n        delete currentStyleSheetsMap[href];\n      });\n      global$1.each(currentStyleSheetsMap, function (stylesheet) {\n        stylesheet.parentNode.removeChild(stylesheet);\n      });\n    };\n    var getDefaultHeader = function (editor) {\n      var header = '', value, styles = '';\n      if (Settings.getDefaultXmlPi(editor)) {\n        var piEncoding = Settings.getDefaultEncoding(editor);\n        header += '<?xml version=\"1.0\" encoding=\"' + (piEncoding ? piEncoding : 'ISO-8859-1') + '\" ?>\\n';\n      }\n      header += Settings.getDefaultDocType(editor);\n      header += '\\n<html>\\n<head>\\n';\n      if (value = Settings.getDefaultTitle(editor)) {\n        header += '<title>' + value + '</title>\\n';\n      }\n      if (value = Settings.getDefaultEncoding(editor)) {\n        header += '<meta http-equiv=\"Content-Type\" content=\"text/html; charset=' + value + '\" />\\n';\n      }\n      if (value = Settings.getDefaultFontFamily(editor)) {\n        styles += 'font-family: ' + value + ';';\n      }\n      if (value = Settings.getDefaultFontSize(editor)) {\n        styles += 'font-size: ' + value + ';';\n      }\n      if (value = Settings.getDefaultTextColor(editor)) {\n        styles += 'color: ' + value + ';';\n      }\n      header += '</head>\\n<body' + (styles ? ' style=\"' + styles + '\"' : '') + '>\\n';\n      return header;\n    };\n    var handleGetContent = function (editor, head, foot, evt) {\n      if (!evt.selection && (!evt.source_view || !Settings.shouldHideInSourceView(editor))) {\n        evt.content = Protect.unprotectHtml(global$1.trim(head) + '\\n' + global$1.trim(evt.content) + '\\n' + global$1.trim(foot));\n      }\n    };\n    var setup = function (editor, headState, footState) {\n      editor.on('BeforeSetContent', function (evt) {\n        handleSetContent(editor, headState, footState, evt);\n      });\n      editor.on('GetContent', function (evt) {\n        handleGetContent(editor, headState.get(), footState.get(), evt);\n      });\n    };\n    var FilterContent = { setup: setup };\n\n    var register$1 = function (editor) {\n      editor.addButton('fullpage', {\n        title: 'Document properties',\n        cmd: 'mceFullPageProperties'\n      });\n      editor.addMenuItem('fullpage', {\n        text: 'Document properties',\n        cmd: 'mceFullPageProperties',\n        context: 'file'\n      });\n    };\n    var Buttons = { register: register$1 };\n\n    global.add('fullpage', function (editor) {\n      var headState = Cell(''), footState = Cell('');\n      Commands.register(editor, headState);\n      Buttons.register(editor);\n      FilterContent.setup(editor, headState, footState);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}());\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tinymce/plugins/fullpage/plugin.js\n// module id = 7McU\n// module chunks = 30","// Exports the \"fullpage\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/fullpage')\n//   ES2015:\n//     import 'tinymce/plugins/fullpage'\nrequire('./plugin.js');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tinymce/plugins/fullpage/index.js\n// module id = UWKq\n// module chunks = 30"],"sourceRoot":""}