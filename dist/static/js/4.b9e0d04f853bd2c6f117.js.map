{"version":3,"sources":["webpack:///static/js/4.b9e0d04f853bd2c6f117.js","webpack:///./~/tinymce/plugins/toc/plugin.js","webpack:///./~/tinymce/plugins/toc/index.js"],"names":["webpackJsonp","UyWB","module","exports","Plugin","global","tinymce","util","Tools","resolve","global$1","global$2","global$3","getTocClass","editor","getParam","getTocHeader","tagName","test","getTocDepth","depth","parseInt","Settings","create","prefix","counter","guid","Date","getTime","toString","Guid","tocId","generateSelector","i","selector","push","join","hasHeaders","readHeaders","length","tocClass","headerTag","headers","$","filter","el","dom","hasClass","parentNode","map","h","id","level","nodeName","replace","title","text","element","getMinLevel","minLevel","generateTitle","tag","openTag","closeTag","DOM","encode","generateTocHtml","html","generateTocContentHtml","ii","nextLevel","prevLevel","translate","isEmptyOrOffscren","nodes","getParents","insertToc","$tocElm","insertContent","updateToc","undoManager","transact","Toc","register","addCommand","Commands","setup","on","e","node","removeAttr","find","attr","children","FilterContent","toggleState","ctrl","control","disabled","readonly","isToc","elm","is","getBody","contains","register$1","addButton","tooltip","cmd","icon","onPostRender","addMenuItem","context","addContextToolbar","Buttons","add","loUf","__webpack_require__"],"mappings":"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","file":"static/js/4.b9e0d04f853bd2c6f117.js","sourcesContent":["webpackJsonp([4],{\n\n/***/ \"UyWB\":\n/***/ (function(module, exports) {\n\n(function () {\nvar toc = (function () {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.I18n');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var getTocClass = function (editor) {\n      return editor.getParam('toc_class', 'mce-toc');\n    };\n    var getTocHeader = function (editor) {\n      var tagName = editor.getParam('toc_header', 'h2');\n      return /^h[1-6]$/.test(tagName) ? tagName : 'h2';\n    };\n    var getTocDepth = function (editor) {\n      var depth = parseInt(editor.getParam('toc_depth', '3'), 10);\n      return depth >= 1 && depth <= 9 ? depth : 3;\n    };\n    var Settings = {\n      getTocClass: getTocClass,\n      getTocHeader: getTocHeader,\n      getTocDepth: getTocDepth\n    };\n\n    var create = function (prefix) {\n      var counter = 0;\n      return function () {\n        var guid = new Date().getTime().toString(32);\n        return prefix + guid + (counter++).toString(32);\n      };\n    };\n    var Guid = { create: create };\n\n    var tocId = Guid.create('mcetoc_');\n    var generateSelector = function generateSelector(depth) {\n      var i;\n      var selector = [];\n      for (i = 1; i <= depth; i++) {\n        selector.push('h' + i);\n      }\n      return selector.join(',');\n    };\n    var hasHeaders = function (editor) {\n      return readHeaders(editor).length > 0;\n    };\n    var readHeaders = function (editor) {\n      var tocClass = Settings.getTocClass(editor);\n      var headerTag = Settings.getTocHeader(editor);\n      var selector = generateSelector(Settings.getTocDepth(editor));\n      var headers = editor.$(selector);\n      if (headers.length && /^h[1-9]$/i.test(headerTag)) {\n        headers = headers.filter(function (i, el) {\n          return !editor.dom.hasClass(el.parentNode, tocClass);\n        });\n      }\n      return global$3.map(headers, function (h) {\n        return {\n          id: h.id ? h.id : tocId(),\n          level: parseInt(h.nodeName.replace(/^H/i, ''), 10),\n          title: editor.$.text(h),\n          element: h\n        };\n      });\n    };\n    var getMinLevel = function (headers) {\n      var i, minLevel = 9;\n      for (i = 0; i < headers.length; i++) {\n        if (headers[i].level < minLevel) {\n          minLevel = headers[i].level;\n        }\n        if (minLevel === 1) {\n          return minLevel;\n        }\n      }\n      return minLevel;\n    };\n    var generateTitle = function (tag, title) {\n      var openTag = '<' + tag + ' contenteditable=\"true\">';\n      var closeTag = '</' + tag + '>';\n      return openTag + global$1.DOM.encode(title) + closeTag;\n    };\n    var generateTocHtml = function (editor) {\n      var html = generateTocContentHtml(editor);\n      return '<div class=\"' + editor.dom.encode(Settings.getTocClass(editor)) + '\" contenteditable=\"false\">' + html + '</div>';\n    };\n    var generateTocContentHtml = function (editor) {\n      var html = '';\n      var headers = readHeaders(editor);\n      var prevLevel = getMinLevel(headers) - 1;\n      var i, ii, h, nextLevel;\n      if (!headers.length) {\n        return '';\n      }\n      html += generateTitle(Settings.getTocHeader(editor), global$2.translate('Table of Contents'));\n      for (i = 0; i < headers.length; i++) {\n        h = headers[i];\n        h.element.id = h.id;\n        nextLevel = headers[i + 1] && headers[i + 1].level;\n        if (prevLevel === h.level) {\n          html += '<li>';\n        } else {\n          for (ii = prevLevel; ii < h.level; ii++) {\n            html += '<ul><li>';\n          }\n        }\n        html += '<a href=\"#' + h.id + '\">' + h.title + '</a>';\n        if (nextLevel === h.level || !nextLevel) {\n          html += '</li>';\n          if (!nextLevel) {\n            html += '</ul>';\n          }\n        } else {\n          for (ii = h.level; ii > nextLevel; ii--) {\n            html += '</li></ul><li>';\n          }\n        }\n        prevLevel = h.level;\n      }\n      return html;\n    };\n    var isEmptyOrOffscren = function (editor, nodes) {\n      return !nodes.length || editor.dom.getParents(nodes[0], '.mce-offscreen-selection').length > 0;\n    };\n    var insertToc = function (editor) {\n      var tocClass = Settings.getTocClass(editor);\n      var $tocElm = editor.$('.' + tocClass);\n      if (isEmptyOrOffscren(editor, $tocElm)) {\n        editor.insertContent(generateTocHtml(editor));\n      } else {\n        updateToc(editor);\n      }\n    };\n    var updateToc = function (editor) {\n      var tocClass = Settings.getTocClass(editor);\n      var $tocElm = editor.$('.' + tocClass);\n      if ($tocElm.length) {\n        editor.undoManager.transact(function () {\n          $tocElm.html(generateTocContentHtml(editor));\n        });\n      }\n    };\n    var Toc = {\n      hasHeaders: hasHeaders,\n      insertToc: insertToc,\n      updateToc: updateToc\n    };\n\n    var register = function (editor) {\n      editor.addCommand('mceInsertToc', function () {\n        Toc.insertToc(editor);\n      });\n      editor.addCommand('mceUpdateToc', function () {\n        Toc.updateToc(editor);\n      });\n    };\n    var Commands = { register: register };\n\n    var setup = function (editor) {\n      var $ = editor.$, tocClass = Settings.getTocClass(editor);\n      editor.on('PreProcess', function (e) {\n        var $tocElm = $('.' + tocClass, e.node);\n        if ($tocElm.length) {\n          $tocElm.removeAttr('contentEditable');\n          $tocElm.find('[contenteditable]').removeAttr('contentEditable');\n        }\n      });\n      editor.on('SetContent', function () {\n        var $tocElm = $('.' + tocClass);\n        if ($tocElm.length) {\n          $tocElm.attr('contentEditable', false);\n          $tocElm.children(':first-child').attr('contentEditable', true);\n        }\n      });\n    };\n    var FilterContent = { setup: setup };\n\n    var toggleState = function (editor) {\n      return function (e) {\n        var ctrl = e.control;\n        editor.on('LoadContent SetContent change', function () {\n          ctrl.disabled(editor.readonly || !Toc.hasHeaders(editor));\n        });\n      };\n    };\n    var isToc = function (editor) {\n      return function (elm) {\n        return elm && editor.dom.is(elm, '.' + Settings.getTocClass(editor)) && editor.getBody().contains(elm);\n      };\n    };\n    var register$1 = function (editor) {\n      editor.addButton('toc', {\n        tooltip: 'Table of Contents',\n        cmd: 'mceInsertToc',\n        icon: 'toc',\n        onPostRender: toggleState(editor)\n      });\n      editor.addButton('tocupdate', {\n        tooltip: 'Update',\n        cmd: 'mceUpdateToc',\n        icon: 'reload'\n      });\n      editor.addMenuItem('toc', {\n        text: 'Table of Contents',\n        context: 'insert',\n        cmd: 'mceInsertToc',\n        onPostRender: toggleState(editor)\n      });\n      editor.addContextToolbar(isToc(editor), 'tocupdate');\n    };\n    var Buttons = { register: register$1 };\n\n    global.add('toc', function (editor) {\n      Commands.register(editor);\n      Buttons.register(editor);\n      FilterContent.setup(editor);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}());\n})();\n\n\n/***/ }),\n\n/***/ \"loUf\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// Exports the \"toc\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/toc')\n//   ES2015:\n//     import 'tinymce/plugins/toc'\n__webpack_require__(\"UyWB\");\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/4.b9e0d04f853bd2c6f117.js","(function () {\nvar toc = (function () {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.I18n');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var getTocClass = function (editor) {\n      return editor.getParam('toc_class', 'mce-toc');\n    };\n    var getTocHeader = function (editor) {\n      var tagName = editor.getParam('toc_header', 'h2');\n      return /^h[1-6]$/.test(tagName) ? tagName : 'h2';\n    };\n    var getTocDepth = function (editor) {\n      var depth = parseInt(editor.getParam('toc_depth', '3'), 10);\n      return depth >= 1 && depth <= 9 ? depth : 3;\n    };\n    var Settings = {\n      getTocClass: getTocClass,\n      getTocHeader: getTocHeader,\n      getTocDepth: getTocDepth\n    };\n\n    var create = function (prefix) {\n      var counter = 0;\n      return function () {\n        var guid = new Date().getTime().toString(32);\n        return prefix + guid + (counter++).toString(32);\n      };\n    };\n    var Guid = { create: create };\n\n    var tocId = Guid.create('mcetoc_');\n    var generateSelector = function generateSelector(depth) {\n      var i;\n      var selector = [];\n      for (i = 1; i <= depth; i++) {\n        selector.push('h' + i);\n      }\n      return selector.join(',');\n    };\n    var hasHeaders = function (editor) {\n      return readHeaders(editor).length > 0;\n    };\n    var readHeaders = function (editor) {\n      var tocClass = Settings.getTocClass(editor);\n      var headerTag = Settings.getTocHeader(editor);\n      var selector = generateSelector(Settings.getTocDepth(editor));\n      var headers = editor.$(selector);\n      if (headers.length && /^h[1-9]$/i.test(headerTag)) {\n        headers = headers.filter(function (i, el) {\n          return !editor.dom.hasClass(el.parentNode, tocClass);\n        });\n      }\n      return global$3.map(headers, function (h) {\n        return {\n          id: h.id ? h.id : tocId(),\n          level: parseInt(h.nodeName.replace(/^H/i, ''), 10),\n          title: editor.$.text(h),\n          element: h\n        };\n      });\n    };\n    var getMinLevel = function (headers) {\n      var i, minLevel = 9;\n      for (i = 0; i < headers.length; i++) {\n        if (headers[i].level < minLevel) {\n          minLevel = headers[i].level;\n        }\n        if (minLevel === 1) {\n          return minLevel;\n        }\n      }\n      return minLevel;\n    };\n    var generateTitle = function (tag, title) {\n      var openTag = '<' + tag + ' contenteditable=\"true\">';\n      var closeTag = '</' + tag + '>';\n      return openTag + global$1.DOM.encode(title) + closeTag;\n    };\n    var generateTocHtml = function (editor) {\n      var html = generateTocContentHtml(editor);\n      return '<div class=\"' + editor.dom.encode(Settings.getTocClass(editor)) + '\" contenteditable=\"false\">' + html + '</div>';\n    };\n    var generateTocContentHtml = function (editor) {\n      var html = '';\n      var headers = readHeaders(editor);\n      var prevLevel = getMinLevel(headers) - 1;\n      var i, ii, h, nextLevel;\n      if (!headers.length) {\n        return '';\n      }\n      html += generateTitle(Settings.getTocHeader(editor), global$2.translate('Table of Contents'));\n      for (i = 0; i < headers.length; i++) {\n        h = headers[i];\n        h.element.id = h.id;\n        nextLevel = headers[i + 1] && headers[i + 1].level;\n        if (prevLevel === h.level) {\n          html += '<li>';\n        } else {\n          for (ii = prevLevel; ii < h.level; ii++) {\n            html += '<ul><li>';\n          }\n        }\n        html += '<a href=\"#' + h.id + '\">' + h.title + '</a>';\n        if (nextLevel === h.level || !nextLevel) {\n          html += '</li>';\n          if (!nextLevel) {\n            html += '</ul>';\n          }\n        } else {\n          for (ii = h.level; ii > nextLevel; ii--) {\n            html += '</li></ul><li>';\n          }\n        }\n        prevLevel = h.level;\n      }\n      return html;\n    };\n    var isEmptyOrOffscren = function (editor, nodes) {\n      return !nodes.length || editor.dom.getParents(nodes[0], '.mce-offscreen-selection').length > 0;\n    };\n    var insertToc = function (editor) {\n      var tocClass = Settings.getTocClass(editor);\n      var $tocElm = editor.$('.' + tocClass);\n      if (isEmptyOrOffscren(editor, $tocElm)) {\n        editor.insertContent(generateTocHtml(editor));\n      } else {\n        updateToc(editor);\n      }\n    };\n    var updateToc = function (editor) {\n      var tocClass = Settings.getTocClass(editor);\n      var $tocElm = editor.$('.' + tocClass);\n      if ($tocElm.length) {\n        editor.undoManager.transact(function () {\n          $tocElm.html(generateTocContentHtml(editor));\n        });\n      }\n    };\n    var Toc = {\n      hasHeaders: hasHeaders,\n      insertToc: insertToc,\n      updateToc: updateToc\n    };\n\n    var register = function (editor) {\n      editor.addCommand('mceInsertToc', function () {\n        Toc.insertToc(editor);\n      });\n      editor.addCommand('mceUpdateToc', function () {\n        Toc.updateToc(editor);\n      });\n    };\n    var Commands = { register: register };\n\n    var setup = function (editor) {\n      var $ = editor.$, tocClass = Settings.getTocClass(editor);\n      editor.on('PreProcess', function (e) {\n        var $tocElm = $('.' + tocClass, e.node);\n        if ($tocElm.length) {\n          $tocElm.removeAttr('contentEditable');\n          $tocElm.find('[contenteditable]').removeAttr('contentEditable');\n        }\n      });\n      editor.on('SetContent', function () {\n        var $tocElm = $('.' + tocClass);\n        if ($tocElm.length) {\n          $tocElm.attr('contentEditable', false);\n          $tocElm.children(':first-child').attr('contentEditable', true);\n        }\n      });\n    };\n    var FilterContent = { setup: setup };\n\n    var toggleState = function (editor) {\n      return function (e) {\n        var ctrl = e.control;\n        editor.on('LoadContent SetContent change', function () {\n          ctrl.disabled(editor.readonly || !Toc.hasHeaders(editor));\n        });\n      };\n    };\n    var isToc = function (editor) {\n      return function (elm) {\n        return elm && editor.dom.is(elm, '.' + Settings.getTocClass(editor)) && editor.getBody().contains(elm);\n      };\n    };\n    var register$1 = function (editor) {\n      editor.addButton('toc', {\n        tooltip: 'Table of Contents',\n        cmd: 'mceInsertToc',\n        icon: 'toc',\n        onPostRender: toggleState(editor)\n      });\n      editor.addButton('tocupdate', {\n        tooltip: 'Update',\n        cmd: 'mceUpdateToc',\n        icon: 'reload'\n      });\n      editor.addMenuItem('toc', {\n        text: 'Table of Contents',\n        context: 'insert',\n        cmd: 'mceInsertToc',\n        onPostRender: toggleState(editor)\n      });\n      editor.addContextToolbar(isToc(editor), 'tocupdate');\n    };\n    var Buttons = { register: register$1 };\n\n    global.add('toc', function (editor) {\n      Commands.register(editor);\n      Buttons.register(editor);\n      FilterContent.setup(editor);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}());\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tinymce/plugins/toc/plugin.js\n// module id = UyWB\n// module chunks = 4","// Exports the \"toc\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/toc')\n//   ES2015:\n//     import 'tinymce/plugins/toc'\nrequire('./plugin.js');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tinymce/plugins/toc/index.js\n// module id = loUf\n// module chunks = 4"],"sourceRoot":""}