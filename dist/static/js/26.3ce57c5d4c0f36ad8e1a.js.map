{"version":3,"sources":["webpack:///static/js/26.3ce57c5d4c0f36ad8e1a.js","webpack:///./~/tinymce/plugins/image/index.js","webpack:///./~/tinymce/plugins/image/plugin.js"],"names":["webpackJsonp","HaK5","module","exports","__webpack_require__","I7le","domGlobals","FileReader","Global$1","getOrDie","XMLHttpRequest","Uploader","settings","defaultHandler","blobInfo","success","failure","progress","xhr","formData","open","url","withCredentials","credentials","upload","onprogress","e","loaded","total","onerror","status","onload","json","JSON","parse","responseText","location","pathJoin","basePath","FormData","append","blob","filename","send","uploadBlob","handler","global$1","resolve","reject","noop","ex","message","isDefaultHandler","global$2","extend","curry","fn","initialArgs","_i","arguments","length","restArgs","all","concat","apply","Dialog","editor","showDialog","imageList","win","imageListCtrl","data","readImageDataFromSelection","type","label","name","values","Utils","buildListItems","item","value","convertURL","text","src","onselect","altCtrl","find","lastControl","control","fire","onPostRender","this","Settings","hasAdvTab","hasUploadUrl","hasUploadHandler","body","MainTab","makeTab","push","AdvTab","UploadTab","windowManager","title","bodyType","onSubmit","submitForm","getGeneralItems","SizeManager","syncSize","createImageList","Plugin","global","tinymce","util","Tools","hasDimensions","image_dimensions","image_advtab","getPrependUrl","getParam","getClassList","hasDescription","image_description","hasImageTitle","image_title","hasImageCaption","image_caption","getImageList","getUploadUrl","getUploadHandler","getUploadBasePath","getUploadCredentials","Global","window","Function","path","parts","scope","o","undefined","i","p","split","unsafe","actual","Error","global$3","parseIntAndGetMax","val1","val2","Math","max","parseInt","getImageSize","callback","done","width","height","img","parentNode","removeChild","document","createElement","clientWidth","clientHeight","style","visibility","position","bottom","left","appendChild","inputList","itemCallback","startItems","appendItems","output","each","menuItem","menu","removePixelSuffix","replace","addPixelSuffix","test","mergeMargins","css","margin","splitMargin","waitLoadImage","imgElm","selectImage","selection","select","nodeChanged","dom","setAttribs","blobToDataUri","reader","result","error","readAsDataURL","global$4","hasOwnProperty","Object","prototype","shallow","old","nu","merge","merger","objects","Array","ret","j","curObject","key","call","DOM","getHspace","image","marginLeft","marginRight","getVspace","marginTop","marginBottom","getBorder","borderWidth","getAttrib","hasAttribute","getAttribute","getStyle","hasCaption","nodeName","setAttrib","setAttribute","wrapInFigure","figureElm","create","class","insertAfter","contentEditable","removeFigure","remove","toggleCaption","normalizeStyle","normalizeCss","attrValue","removeAttribute","setSize","getSize","setHspace","pxValue","setVspace","setBorder","setBorderStyle","borderStyle","getBorderStyle","isFigure","elm","defaultData","alt","caption","hspace","vspace","border","getStyleValue","write","figure","read","updateProp","oldData","newData","set","normalized","_name","_value","cssText","styles","mergedCss","compressed","serialize","getSelectedImage","getNode","getParent","splitTextBlock","textBlock","node","schema","getTextBlockElements","getBody","insertImageAtCaret","focus","setContent","outerHTML","insertedElm","syncSrcAttr","deleteImage","is","isEmpty","setCursorLocation","writeImageDataToSelection","insertOrUpdateImage","updateVSpaceHSpaceBorder","evt","rootControl","toJSON","parseStyle","serializeStyle","updateStyle","ctrl","pack","items","onchange","layout","packV","columns","padding","defaults","maxWidth","doSyncSize","widthCtrl","heightCtrl","state","doSizeControls","f","constrained","checked","doUpdateSize","isContrained","oldWidth","get","oldHeight","newWidth","newHeight","round","isNaN","updateSize","createUi","recalcSize","align","spacing","maxLength","size","ariaLabel","onSrcChange","srcURL","prependURL","absoluteURLPattern","meta","RegExp","substring","documentBaseURI","toAbsolute","onBeforeCall","generalFormItems","filetype","autofocus","onbeforecall","textStyle","formatter","getCssText","inline","classes","makeTab$1","createObjectURL","revokeObjectURL","u","URL","global$5","path1","path2","onFileInput","Throbber","throbber","getEl","file","blobUri","uploader","finalize","hide","show","then","dataUrl","editorUpload","blobCache","base64","activateTab","catch","err","alert","makeTab$2","direction","accept","getRoot","undoManager","transact","uploadImagesAuto","register","addCommand","Commands","hasImageClass","className","attr","toggleContentEditableState","nodes","toggleContentEditable","getAll","setup","on","parser","addNodeFilter","serializer","FilterContent","register$1","addButton","icon","tooltip","onclick","stateSelector","addMenuItem","context","prependToContext","Buttons","add"],"mappings":"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","file":"static/js/26.3ce57c5d4c0f36ad8e1a.js","sourcesContent":["webpackJsonp([26],{\n\n/***/ \"HaK5\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// Exports the \"image\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/image')\n//   ES2015:\n//     import 'tinymce/plugins/image'\n__webpack_require__(\"I7le\");\n\n/***/ }),\n\n/***/ \"I7le\":\n/***/ (function(module, exports) {\n\n(function () {\nvar image = (function (domGlobals) {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var hasDimensions = function (editor) {\n      return editor.settings.image_dimensions === false ? false : true;\n    };\n    var hasAdvTab = function (editor) {\n      return editor.settings.image_advtab === true ? true : false;\n    };\n    var getPrependUrl = function (editor) {\n      return editor.getParam('image_prepend_url', '');\n    };\n    var getClassList = function (editor) {\n      return editor.getParam('image_class_list');\n    };\n    var hasDescription = function (editor) {\n      return editor.settings.image_description === false ? false : true;\n    };\n    var hasImageTitle = function (editor) {\n      return editor.settings.image_title === true ? true : false;\n    };\n    var hasImageCaption = function (editor) {\n      return editor.settings.image_caption === true ? true : false;\n    };\n    var getImageList = function (editor) {\n      return editor.getParam('image_list', false);\n    };\n    var hasUploadUrl = function (editor) {\n      return editor.getParam('images_upload_url', false);\n    };\n    var hasUploadHandler = function (editor) {\n      return editor.getParam('images_upload_handler', false);\n    };\n    var getUploadUrl = function (editor) {\n      return editor.getParam('images_upload_url');\n    };\n    var getUploadHandler = function (editor) {\n      return editor.getParam('images_upload_handler');\n    };\n    var getUploadBasePath = function (editor) {\n      return editor.getParam('images_upload_base_path');\n    };\n    var getUploadCredentials = function (editor) {\n      return editor.getParam('images_upload_credentials');\n    };\n    var Settings = {\n      hasDimensions: hasDimensions,\n      hasAdvTab: hasAdvTab,\n      getPrependUrl: getPrependUrl,\n      getClassList: getClassList,\n      hasDescription: hasDescription,\n      hasImageTitle: hasImageTitle,\n      hasImageCaption: hasImageCaption,\n      getImageList: getImageList,\n      hasUploadUrl: hasUploadUrl,\n      hasUploadHandler: hasUploadHandler,\n      getUploadUrl: getUploadUrl,\n      getUploadHandler: getUploadHandler,\n      getUploadBasePath: getUploadBasePath,\n      getUploadCredentials: getUploadCredentials\n    };\n\n    var Global = typeof domGlobals.window !== 'undefined' ? domGlobals.window : Function('return this;')();\n\n    var path = function (parts, scope) {\n      var o = scope !== undefined && scope !== null ? scope : Global;\n      for (var i = 0; i < parts.length && o !== undefined && o !== null; ++i) {\n        o = o[parts[i]];\n      }\n      return o;\n    };\n    var resolve = function (p, scope) {\n      var parts = p.split('.');\n      return path(parts, scope);\n    };\n\n    var unsafe = function (name, scope) {\n      return resolve(name, scope);\n    };\n    var getOrDie = function (name, scope) {\n      var actual = unsafe(name, scope);\n      if (actual === undefined || actual === null) {\n        throw new Error(name + ' not available on this browser');\n      }\n      return actual;\n    };\n    var Global$1 = { getOrDie: getOrDie };\n\n    function FileReader () {\n      var f = Global$1.getOrDie('FileReader');\n      return new f();\n    }\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Promise');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.util.XHR');\n\n    var parseIntAndGetMax = function (val1, val2) {\n      return Math.max(parseInt(val1, 10), parseInt(val2, 10));\n    };\n    var getImageSize = function (url, callback) {\n      var img = domGlobals.document.createElement('img');\n      function done(width, height) {\n        if (img.parentNode) {\n          img.parentNode.removeChild(img);\n        }\n        callback({\n          width: width,\n          height: height\n        });\n      }\n      img.onload = function () {\n        var width = parseIntAndGetMax(img.width, img.clientWidth);\n        var height = parseIntAndGetMax(img.height, img.clientHeight);\n        done(width, height);\n      };\n      img.onerror = function () {\n        done(0, 0);\n      };\n      var style = img.style;\n      style.visibility = 'hidden';\n      style.position = 'fixed';\n      style.bottom = style.left = '0px';\n      style.width = style.height = 'auto';\n      domGlobals.document.body.appendChild(img);\n      img.src = url;\n    };\n    var buildListItems = function (inputList, itemCallback, startItems) {\n      function appendItems(values, output) {\n        output = output || [];\n        global$2.each(values, function (item) {\n          var menuItem = { text: item.text || item.title };\n          if (item.menu) {\n            menuItem.menu = appendItems(item.menu);\n          } else {\n            menuItem.value = item.value;\n            itemCallback(menuItem);\n          }\n          output.push(menuItem);\n        });\n        return output;\n      }\n      return appendItems(inputList, startItems || []);\n    };\n    var removePixelSuffix = function (value) {\n      if (value) {\n        value = value.replace(/px$/, '');\n      }\n      return value;\n    };\n    var addPixelSuffix = function (value) {\n      if (value.length > 0 && /^[0-9]+$/.test(value)) {\n        value += 'px';\n      }\n      return value;\n    };\n    var mergeMargins = function (css) {\n      if (css.margin) {\n        var splitMargin = css.margin.split(' ');\n        switch (splitMargin.length) {\n        case 1:\n          css['margin-top'] = css['margin-top'] || splitMargin[0];\n          css['margin-right'] = css['margin-right'] || splitMargin[0];\n          css['margin-bottom'] = css['margin-bottom'] || splitMargin[0];\n          css['margin-left'] = css['margin-left'] || splitMargin[0];\n          break;\n        case 2:\n          css['margin-top'] = css['margin-top'] || splitMargin[0];\n          css['margin-right'] = css['margin-right'] || splitMargin[1];\n          css['margin-bottom'] = css['margin-bottom'] || splitMargin[0];\n          css['margin-left'] = css['margin-left'] || splitMargin[1];\n          break;\n        case 3:\n          css['margin-top'] = css['margin-top'] || splitMargin[0];\n          css['margin-right'] = css['margin-right'] || splitMargin[1];\n          css['margin-bottom'] = css['margin-bottom'] || splitMargin[2];\n          css['margin-left'] = css['margin-left'] || splitMargin[1];\n          break;\n        case 4:\n          css['margin-top'] = css['margin-top'] || splitMargin[0];\n          css['margin-right'] = css['margin-right'] || splitMargin[1];\n          css['margin-bottom'] = css['margin-bottom'] || splitMargin[2];\n          css['margin-left'] = css['margin-left'] || splitMargin[3];\n        }\n        delete css.margin;\n      }\n      return css;\n    };\n    var createImageList = function (editor, callback) {\n      var imageList = Settings.getImageList(editor);\n      if (typeof imageList === 'string') {\n        global$3.send({\n          url: imageList,\n          success: function (text) {\n            callback(JSON.parse(text));\n          }\n        });\n      } else if (typeof imageList === 'function') {\n        imageList(callback);\n      } else {\n        callback(imageList);\n      }\n    };\n    var waitLoadImage = function (editor, data, imgElm) {\n      function selectImage() {\n        imgElm.onload = imgElm.onerror = null;\n        if (editor.selection) {\n          editor.selection.select(imgElm);\n          editor.nodeChanged();\n        }\n      }\n      imgElm.onload = function () {\n        if (!data.width && !data.height && Settings.hasDimensions(editor)) {\n          editor.dom.setAttribs(imgElm, {\n            width: imgElm.clientWidth,\n            height: imgElm.clientHeight\n          });\n        }\n        selectImage();\n      };\n      imgElm.onerror = selectImage;\n    };\n    var blobToDataUri = function (blob) {\n      return new global$1(function (resolve, reject) {\n        var reader = FileReader();\n        reader.onload = function () {\n          resolve(reader.result);\n        };\n        reader.onerror = function () {\n          reject(reader.error.message);\n        };\n        reader.readAsDataURL(blob);\n      });\n    };\n    var Utils = {\n      getImageSize: getImageSize,\n      buildListItems: buildListItems,\n      removePixelSuffix: removePixelSuffix,\n      addPixelSuffix: addPixelSuffix,\n      mergeMargins: mergeMargins,\n      createImageList: createImageList,\n      waitLoadImage: waitLoadImage,\n      blobToDataUri: blobToDataUri\n    };\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var shallow = function (old, nu) {\n      return nu;\n    };\n    var baseMerge = function (merger) {\n      return function () {\n        var objects = new Array(arguments.length);\n        for (var i = 0; i < objects.length; i++) {\n          objects[i] = arguments[i];\n        }\n        if (objects.length === 0) {\n          throw new Error('Can\\'t merge zero objects');\n        }\n        var ret = {};\n        for (var j = 0; j < objects.length; j++) {\n          var curObject = objects[j];\n          for (var key in curObject) {\n            if (hasOwnProperty.call(curObject, key)) {\n              ret[key] = merger(ret[key], curObject[key]);\n            }\n          }\n        }\n        return ret;\n      };\n    };\n    var merge = baseMerge(shallow);\n\n    var DOM = global$4.DOM;\n    var getHspace = function (image) {\n      if (image.style.marginLeft && image.style.marginRight && image.style.marginLeft === image.style.marginRight) {\n        return Utils.removePixelSuffix(image.style.marginLeft);\n      } else {\n        return '';\n      }\n    };\n    var getVspace = function (image) {\n      if (image.style.marginTop && image.style.marginBottom && image.style.marginTop === image.style.marginBottom) {\n        return Utils.removePixelSuffix(image.style.marginTop);\n      } else {\n        return '';\n      }\n    };\n    var getBorder = function (image) {\n      if (image.style.borderWidth) {\n        return Utils.removePixelSuffix(image.style.borderWidth);\n      } else {\n        return '';\n      }\n    };\n    var getAttrib = function (image, name) {\n      if (image.hasAttribute(name)) {\n        return image.getAttribute(name);\n      } else {\n        return '';\n      }\n    };\n    var getStyle = function (image, name) {\n      return image.style[name] ? image.style[name] : '';\n    };\n    var hasCaption = function (image) {\n      return image.parentNode !== null && image.parentNode.nodeName === 'FIGURE';\n    };\n    var setAttrib = function (image, name, value) {\n      image.setAttribute(name, value);\n    };\n    var wrapInFigure = function (image) {\n      var figureElm = DOM.create('figure', { class: 'image' });\n      DOM.insertAfter(figureElm, image);\n      figureElm.appendChild(image);\n      figureElm.appendChild(DOM.create('figcaption', { contentEditable: true }, 'Caption'));\n      figureElm.contentEditable = 'false';\n    };\n    var removeFigure = function (image) {\n      var figureElm = image.parentNode;\n      DOM.insertAfter(image, figureElm);\n      DOM.remove(figureElm);\n    };\n    var toggleCaption = function (image) {\n      if (hasCaption(image)) {\n        removeFigure(image);\n      } else {\n        wrapInFigure(image);\n      }\n    };\n    var normalizeStyle = function (image, normalizeCss) {\n      var attrValue = image.getAttribute('style');\n      var value = normalizeCss(attrValue !== null ? attrValue : '');\n      if (value.length > 0) {\n        image.setAttribute('style', value);\n        image.setAttribute('data-mce-style', value);\n      } else {\n        image.removeAttribute('style');\n      }\n    };\n    var setSize = function (name, normalizeCss) {\n      return function (image, name, value) {\n        if (image.style[name]) {\n          image.style[name] = Utils.addPixelSuffix(value);\n          normalizeStyle(image, normalizeCss);\n        } else {\n          setAttrib(image, name, value);\n        }\n      };\n    };\n    var getSize = function (image, name) {\n      if (image.style[name]) {\n        return Utils.removePixelSuffix(image.style[name]);\n      } else {\n        return getAttrib(image, name);\n      }\n    };\n    var setHspace = function (image, value) {\n      var pxValue = Utils.addPixelSuffix(value);\n      image.style.marginLeft = pxValue;\n      image.style.marginRight = pxValue;\n    };\n    var setVspace = function (image, value) {\n      var pxValue = Utils.addPixelSuffix(value);\n      image.style.marginTop = pxValue;\n      image.style.marginBottom = pxValue;\n    };\n    var setBorder = function (image, value) {\n      var pxValue = Utils.addPixelSuffix(value);\n      image.style.borderWidth = pxValue;\n    };\n    var setBorderStyle = function (image, value) {\n      image.style.borderStyle = value;\n    };\n    var getBorderStyle = function (image) {\n      return getStyle(image, 'borderStyle');\n    };\n    var isFigure = function (elm) {\n      return elm.nodeName === 'FIGURE';\n    };\n    var defaultData = function () {\n      return {\n        src: '',\n        alt: '',\n        title: '',\n        width: '',\n        height: '',\n        class: '',\n        style: '',\n        caption: false,\n        hspace: '',\n        vspace: '',\n        border: '',\n        borderStyle: ''\n      };\n    };\n    var getStyleValue = function (normalizeCss, data) {\n      var image = domGlobals.document.createElement('img');\n      setAttrib(image, 'style', data.style);\n      if (getHspace(image) || data.hspace !== '') {\n        setHspace(image, data.hspace);\n      }\n      if (getVspace(image) || data.vspace !== '') {\n        setVspace(image, data.vspace);\n      }\n      if (getBorder(image) || data.border !== '') {\n        setBorder(image, data.border);\n      }\n      if (getBorderStyle(image) || data.borderStyle !== '') {\n        setBorderStyle(image, data.borderStyle);\n      }\n      return normalizeCss(image.getAttribute('style'));\n    };\n    var create = function (normalizeCss, data) {\n      var image = domGlobals.document.createElement('img');\n      write(normalizeCss, merge(data, { caption: false }), image);\n      setAttrib(image, 'alt', data.alt);\n      if (data.caption) {\n        var figure = DOM.create('figure', { class: 'image' });\n        figure.appendChild(image);\n        figure.appendChild(DOM.create('figcaption', { contentEditable: true }, 'Caption'));\n        figure.contentEditable = 'false';\n        return figure;\n      } else {\n        return image;\n      }\n    };\n    var read = function (normalizeCss, image) {\n      return {\n        src: getAttrib(image, 'src'),\n        alt: getAttrib(image, 'alt'),\n        title: getAttrib(image, 'title'),\n        width: getSize(image, 'width'),\n        height: getSize(image, 'height'),\n        class: getAttrib(image, 'class'),\n        style: normalizeCss(getAttrib(image, 'style')),\n        caption: hasCaption(image),\n        hspace: getHspace(image),\n        vspace: getVspace(image),\n        border: getBorder(image),\n        borderStyle: getStyle(image, 'borderStyle')\n      };\n    };\n    var updateProp = function (image, oldData, newData, name, set) {\n      if (newData[name] !== oldData[name]) {\n        set(image, name, newData[name]);\n      }\n    };\n    var normalized = function (set, normalizeCss) {\n      return function (image, name, value) {\n        set(image, value);\n        normalizeStyle(image, normalizeCss);\n      };\n    };\n    var write = function (normalizeCss, newData, image) {\n      var oldData = read(normalizeCss, image);\n      updateProp(image, oldData, newData, 'caption', function (image, _name, _value) {\n        return toggleCaption(image);\n      });\n      updateProp(image, oldData, newData, 'src', setAttrib);\n      updateProp(image, oldData, newData, 'alt', setAttrib);\n      updateProp(image, oldData, newData, 'title', setAttrib);\n      updateProp(image, oldData, newData, 'width', setSize('width', normalizeCss));\n      updateProp(image, oldData, newData, 'height', setSize('height', normalizeCss));\n      updateProp(image, oldData, newData, 'class', setAttrib);\n      updateProp(image, oldData, newData, 'style', normalized(function (image, value) {\n        return setAttrib(image, 'style', value);\n      }, normalizeCss));\n      updateProp(image, oldData, newData, 'hspace', normalized(setHspace, normalizeCss));\n      updateProp(image, oldData, newData, 'vspace', normalized(setVspace, normalizeCss));\n      updateProp(image, oldData, newData, 'border', normalized(setBorder, normalizeCss));\n      updateProp(image, oldData, newData, 'borderStyle', normalized(setBorderStyle, normalizeCss));\n    };\n\n    var normalizeCss = function (editor, cssText) {\n      var css = editor.dom.styles.parse(cssText);\n      var mergedCss = Utils.mergeMargins(css);\n      var compressed = editor.dom.styles.parse(editor.dom.styles.serialize(mergedCss));\n      return editor.dom.styles.serialize(compressed);\n    };\n    var getSelectedImage = function (editor) {\n      var imgElm = editor.selection.getNode();\n      var figureElm = editor.dom.getParent(imgElm, 'figure.image');\n      if (figureElm) {\n        return editor.dom.select('img', figureElm)[0];\n      }\n      if (imgElm && (imgElm.nodeName !== 'IMG' || imgElm.getAttribute('data-mce-object') || imgElm.getAttribute('data-mce-placeholder'))) {\n        return null;\n      }\n      return imgElm;\n    };\n    var splitTextBlock = function (editor, figure) {\n      var dom = editor.dom;\n      var textBlock = dom.getParent(figure.parentNode, function (node) {\n        return editor.schema.getTextBlockElements()[node.nodeName];\n      }, editor.getBody());\n      if (textBlock) {\n        return dom.split(textBlock, figure);\n      } else {\n        return figure;\n      }\n    };\n    var readImageDataFromSelection = function (editor) {\n      var image = getSelectedImage(editor);\n      return image ? read(function (css) {\n        return normalizeCss(editor, css);\n      }, image) : defaultData();\n    };\n    var insertImageAtCaret = function (editor, data) {\n      var elm = create(function (css) {\n        return normalizeCss(editor, css);\n      }, data);\n      editor.dom.setAttrib(elm, 'data-mce-id', '__mcenew');\n      editor.focus();\n      editor.selection.setContent(elm.outerHTML);\n      var insertedElm = editor.dom.select('*[data-mce-id=\"__mcenew\"]')[0];\n      editor.dom.setAttrib(insertedElm, 'data-mce-id', null);\n      if (isFigure(insertedElm)) {\n        var figure = splitTextBlock(editor, insertedElm);\n        editor.selection.select(figure);\n      } else {\n        editor.selection.select(insertedElm);\n      }\n    };\n    var syncSrcAttr = function (editor, image) {\n      editor.dom.setAttrib(image, 'src', image.getAttribute('src'));\n    };\n    var deleteImage = function (editor, image) {\n      if (image) {\n        var elm = editor.dom.is(image.parentNode, 'figure.image') ? image.parentNode : image;\n        editor.dom.remove(elm);\n        editor.focus();\n        editor.nodeChanged();\n        if (editor.dom.isEmpty(editor.getBody())) {\n          editor.setContent('');\n          editor.selection.setCursorLocation();\n        }\n      }\n    };\n    var writeImageDataToSelection = function (editor, data) {\n      var image = getSelectedImage(editor);\n      write(function (css) {\n        return normalizeCss(editor, css);\n      }, data, image);\n      syncSrcAttr(editor, image);\n      if (isFigure(image.parentNode)) {\n        var figure = image.parentNode;\n        splitTextBlock(editor, figure);\n        editor.selection.select(image.parentNode);\n      } else {\n        editor.selection.select(image);\n        Utils.waitLoadImage(editor, data, image);\n      }\n    };\n    var insertOrUpdateImage = function (editor, data) {\n      var image = getSelectedImage(editor);\n      if (image) {\n        if (data.src) {\n          writeImageDataToSelection(editor, data);\n        } else {\n          deleteImage(editor, image);\n        }\n      } else if (data.src) {\n        insertImageAtCaret(editor, data);\n      }\n    };\n\n    var updateVSpaceHSpaceBorder = function (editor) {\n      return function (evt) {\n        var dom = editor.dom;\n        var rootControl = evt.control.rootControl;\n        if (!Settings.hasAdvTab(editor)) {\n          return;\n        }\n        var data = rootControl.toJSON();\n        var css = dom.parseStyle(data.style);\n        rootControl.find('#vspace').value('');\n        rootControl.find('#hspace').value('');\n        css = Utils.mergeMargins(css);\n        if (css['margin-top'] && css['margin-bottom'] || css['margin-right'] && css['margin-left']) {\n          if (css['margin-top'] === css['margin-bottom']) {\n            rootControl.find('#vspace').value(Utils.removePixelSuffix(css['margin-top']));\n          } else {\n            rootControl.find('#vspace').value('');\n          }\n          if (css['margin-right'] === css['margin-left']) {\n            rootControl.find('#hspace').value(Utils.removePixelSuffix(css['margin-right']));\n          } else {\n            rootControl.find('#hspace').value('');\n          }\n        }\n        if (css['border-width']) {\n          rootControl.find('#border').value(Utils.removePixelSuffix(css['border-width']));\n        } else {\n          rootControl.find('#border').value('');\n        }\n        if (css['border-style']) {\n          rootControl.find('#borderStyle').value(css['border-style']);\n        } else {\n          rootControl.find('#borderStyle').value('');\n        }\n        rootControl.find('#style').value(dom.serializeStyle(dom.parseStyle(dom.serializeStyle(css))));\n      };\n    };\n    var updateStyle = function (editor, win) {\n      win.find('#style').each(function (ctrl) {\n        var value = getStyleValue(function (css) {\n          return normalizeCss(editor, css);\n        }, merge(defaultData(), win.toJSON()));\n        ctrl.value(value);\n      });\n    };\n    var makeTab = function (editor) {\n      return {\n        title: 'Advanced',\n        type: 'form',\n        pack: 'start',\n        items: [\n          {\n            label: 'Style',\n            name: 'style',\n            type: 'textbox',\n            onchange: updateVSpaceHSpaceBorder(editor)\n          },\n          {\n            type: 'form',\n            layout: 'grid',\n            packV: 'start',\n            columns: 2,\n            padding: 0,\n            defaults: {\n              type: 'textbox',\n              maxWidth: 50,\n              onchange: function (evt) {\n                updateStyle(editor, evt.control.rootControl);\n              }\n            },\n            items: [\n              {\n                label: 'Vertical space',\n                name: 'vspace'\n              },\n              {\n                label: 'Border width',\n                name: 'border'\n              },\n              {\n                label: 'Horizontal space',\n                name: 'hspace'\n              },\n              {\n                label: 'Border style',\n                type: 'listbox',\n                name: 'borderStyle',\n                width: 90,\n                maxWidth: 90,\n                onselect: function (evt) {\n                  updateStyle(editor, evt.control.rootControl);\n                },\n                values: [\n                  {\n                    text: 'Select...',\n                    value: ''\n                  },\n                  {\n                    text: 'Solid',\n                    value: 'solid'\n                  },\n                  {\n                    text: 'Dotted',\n                    value: 'dotted'\n                  },\n                  {\n                    text: 'Dashed',\n                    value: 'dashed'\n                  },\n                  {\n                    text: 'Double',\n                    value: 'double'\n                  },\n                  {\n                    text: 'Groove',\n                    value: 'groove'\n                  },\n                  {\n                    text: 'Ridge',\n                    value: 'ridge'\n                  },\n                  {\n                    text: 'Inset',\n                    value: 'inset'\n                  },\n                  {\n                    text: 'Outset',\n                    value: 'outset'\n                  },\n                  {\n                    text: 'None',\n                    value: 'none'\n                  },\n                  {\n                    text: 'Hidden',\n                    value: 'hidden'\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      };\n    };\n    var AdvTab = { makeTab: makeTab };\n\n    var doSyncSize = function (widthCtrl, heightCtrl) {\n      widthCtrl.state.set('oldVal', widthCtrl.value());\n      heightCtrl.state.set('oldVal', heightCtrl.value());\n    };\n    var doSizeControls = function (win, f) {\n      var widthCtrl = win.find('#width')[0];\n      var heightCtrl = win.find('#height')[0];\n      var constrained = win.find('#constrain')[0];\n      if (widthCtrl && heightCtrl && constrained) {\n        f(widthCtrl, heightCtrl, constrained.checked());\n      }\n    };\n    var doUpdateSize = function (widthCtrl, heightCtrl, isContrained) {\n      var oldWidth = widthCtrl.state.get('oldVal');\n      var oldHeight = heightCtrl.state.get('oldVal');\n      var newWidth = widthCtrl.value();\n      var newHeight = heightCtrl.value();\n      if (isContrained && oldWidth && oldHeight && newWidth && newHeight) {\n        if (newWidth !== oldWidth) {\n          newHeight = Math.round(newWidth / oldWidth * newHeight);\n          if (!isNaN(newHeight)) {\n            heightCtrl.value(newHeight);\n          }\n        } else {\n          newWidth = Math.round(newHeight / oldHeight * newWidth);\n          if (!isNaN(newWidth)) {\n            widthCtrl.value(newWidth);\n          }\n        }\n      }\n      doSyncSize(widthCtrl, heightCtrl);\n    };\n    var syncSize = function (win) {\n      doSizeControls(win, doSyncSize);\n    };\n    var updateSize = function (win) {\n      doSizeControls(win, doUpdateSize);\n    };\n    var createUi = function () {\n      var recalcSize = function (evt) {\n        updateSize(evt.control.rootControl);\n      };\n      return {\n        type: 'container',\n        label: 'Dimensions',\n        layout: 'flex',\n        align: 'center',\n        spacing: 5,\n        items: [\n          {\n            name: 'width',\n            type: 'textbox',\n            maxLength: 5,\n            size: 5,\n            onchange: recalcSize,\n            ariaLabel: 'Width'\n          },\n          {\n            type: 'label',\n            text: 'x'\n          },\n          {\n            name: 'height',\n            type: 'textbox',\n            maxLength: 5,\n            size: 5,\n            onchange: recalcSize,\n            ariaLabel: 'Height'\n          },\n          {\n            name: 'constrain',\n            type: 'checkbox',\n            checked: true,\n            text: 'Constrain proportions'\n          }\n        ]\n      };\n    };\n    var SizeManager = {\n      createUi: createUi,\n      syncSize: syncSize,\n      updateSize: updateSize\n    };\n\n    var onSrcChange = function (evt, editor) {\n      var srcURL, prependURL, absoluteURLPattern;\n      var meta = evt.meta || {};\n      var control = evt.control;\n      var rootControl = control.rootControl;\n      var imageListCtrl = rootControl.find('#image-list')[0];\n      if (imageListCtrl) {\n        imageListCtrl.value(editor.convertURL(control.value(), 'src'));\n      }\n      global$2.each(meta, function (value, key) {\n        rootControl.find('#' + key).value(value);\n      });\n      if (!meta.width && !meta.height) {\n        srcURL = editor.convertURL(control.value(), 'src');\n        prependURL = Settings.getPrependUrl(editor);\n        absoluteURLPattern = new RegExp('^(?:[a-z]+:)?//', 'i');\n        if (prependURL && !absoluteURLPattern.test(srcURL) && srcURL.substring(0, prependURL.length) !== prependURL) {\n          srcURL = prependURL + srcURL;\n        }\n        control.value(srcURL);\n        Utils.getImageSize(editor.documentBaseURI.toAbsolute(control.value()), function (data) {\n          if (data.width && data.height && Settings.hasDimensions(editor)) {\n            rootControl.find('#width').value(data.width);\n            rootControl.find('#height').value(data.height);\n            SizeManager.syncSize(rootControl);\n          }\n        });\n      }\n    };\n    var onBeforeCall = function (evt) {\n      evt.meta = evt.control.rootControl.toJSON();\n    };\n    var getGeneralItems = function (editor, imageListCtrl) {\n      var generalFormItems = [\n        {\n          name: 'src',\n          type: 'filepicker',\n          filetype: 'image',\n          label: 'Source',\n          autofocus: true,\n          onchange: function (evt) {\n            onSrcChange(evt, editor);\n          },\n          onbeforecall: onBeforeCall\n        },\n        imageListCtrl\n      ];\n      if (Settings.hasDescription(editor)) {\n        generalFormItems.push({\n          name: 'alt',\n          type: 'textbox',\n          label: 'Image description'\n        });\n      }\n      if (Settings.hasImageTitle(editor)) {\n        generalFormItems.push({\n          name: 'title',\n          type: 'textbox',\n          label: 'Image Title'\n        });\n      }\n      if (Settings.hasDimensions(editor)) {\n        generalFormItems.push(SizeManager.createUi());\n      }\n      if (Settings.getClassList(editor)) {\n        generalFormItems.push({\n          name: 'class',\n          type: 'listbox',\n          label: 'Class',\n          values: Utils.buildListItems(Settings.getClassList(editor), function (item) {\n            if (item.value) {\n              item.textStyle = function () {\n                return editor.formatter.getCssText({\n                  inline: 'img',\n                  classes: [item.value]\n                });\n              };\n            }\n          })\n        });\n      }\n      if (Settings.hasImageCaption(editor)) {\n        generalFormItems.push({\n          name: 'caption',\n          type: 'checkbox',\n          label: 'Caption'\n        });\n      }\n      return generalFormItems;\n    };\n    var makeTab$1 = function (editor, imageListCtrl) {\n      return {\n        title: 'General',\n        type: 'form',\n        items: getGeneralItems(editor, imageListCtrl)\n      };\n    };\n    var MainTab = {\n      makeTab: makeTab$1,\n      getGeneralItems: getGeneralItems\n    };\n\n    var url = function () {\n      return Global$1.getOrDie('URL');\n    };\n    var createObjectURL = function (blob) {\n      return url().createObjectURL(blob);\n    };\n    var revokeObjectURL = function (u) {\n      url().revokeObjectURL(u);\n    };\n    var URL = {\n      createObjectURL: createObjectURL,\n      revokeObjectURL: revokeObjectURL\n    };\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.ui.Factory');\n\n    function XMLHttpRequest () {\n      var f = Global$1.getOrDie('XMLHttpRequest');\n      return new f();\n    }\n\n    var noop = function () {\n    };\n    var pathJoin = function (path1, path2) {\n      if (path1) {\n        return path1.replace(/\\/$/, '') + '/' + path2.replace(/^\\//, '');\n      }\n      return path2;\n    };\n    function Uploader (settings) {\n      var defaultHandler = function (blobInfo, success, failure, progress) {\n        var xhr, formData;\n        xhr = XMLHttpRequest();\n        xhr.open('POST', settings.url);\n        xhr.withCredentials = settings.credentials;\n        xhr.upload.onprogress = function (e) {\n          progress(e.loaded / e.total * 100);\n        };\n        xhr.onerror = function () {\n          failure('Image upload failed due to a XHR Transport error. Code: ' + xhr.status);\n        };\n        xhr.onload = function () {\n          var json;\n          if (xhr.status < 200 || xhr.status >= 300) {\n            failure('HTTP Error: ' + xhr.status);\n            return;\n          }\n          json = JSON.parse(xhr.responseText);\n          if (!json || typeof json.location !== 'string') {\n            failure('Invalid JSON: ' + xhr.responseText);\n            return;\n          }\n          success(pathJoin(settings.basePath, json.location));\n        };\n        formData = new domGlobals.FormData();\n        formData.append('file', blobInfo.blob(), blobInfo.filename());\n        xhr.send(formData);\n      };\n      var uploadBlob = function (blobInfo, handler) {\n        return new global$1(function (resolve, reject) {\n          try {\n            handler(blobInfo, resolve, reject, noop);\n          } catch (ex) {\n            reject(ex.message);\n          }\n        });\n      };\n      var isDefaultHandler = function (handler) {\n        return handler === defaultHandler;\n      };\n      var upload = function (blobInfo) {\n        return !settings.url && isDefaultHandler(settings.handler) ? global$1.reject('Upload url missing from the settings.') : uploadBlob(blobInfo, settings.handler);\n      };\n      settings = global$2.extend({\n        credentials: false,\n        handler: defaultHandler\n      }, settings);\n      return { upload: upload };\n    }\n\n    var onFileInput = function (editor) {\n      return function (evt) {\n        var Throbber = global$5.get('Throbber');\n        var rootControl = evt.control.rootControl;\n        var throbber = new Throbber(rootControl.getEl());\n        var file = evt.control.value();\n        var blobUri = URL.createObjectURL(file);\n        var uploader = Uploader({\n          url: Settings.getUploadUrl(editor),\n          basePath: Settings.getUploadBasePath(editor),\n          credentials: Settings.getUploadCredentials(editor),\n          handler: Settings.getUploadHandler(editor)\n        });\n        var finalize = function () {\n          throbber.hide();\n          URL.revokeObjectURL(blobUri);\n        };\n        throbber.show();\n        return Utils.blobToDataUri(file).then(function (dataUrl) {\n          var blobInfo = editor.editorUpload.blobCache.create({\n            blob: file,\n            blobUri: blobUri,\n            name: file.name ? file.name.replace(/\\.[^\\.]+$/, '') : null,\n            base64: dataUrl.split(',')[1]\n          });\n          return uploader.upload(blobInfo).then(function (url) {\n            var src = rootControl.find('#src');\n            src.value(url);\n            rootControl.find('tabpanel')[0].activateTab(0);\n            src.fire('change');\n            finalize();\n            return url;\n          });\n        }).catch(function (err) {\n          editor.windowManager.alert(err);\n          finalize();\n        });\n      };\n    };\n    var acceptExts = '.jpg,.jpeg,.png,.gif';\n    var makeTab$2 = function (editor) {\n      return {\n        title: 'Upload',\n        type: 'form',\n        layout: 'flex',\n        direction: 'column',\n        align: 'stretch',\n        padding: '20 20 20 20',\n        items: [\n          {\n            type: 'container',\n            layout: 'flex',\n            direction: 'column',\n            align: 'center',\n            spacing: 10,\n            items: [\n              {\n                text: 'Browse for an image',\n                type: 'browsebutton',\n                accept: acceptExts,\n                onchange: onFileInput(editor)\n              },\n              {\n                text: 'OR',\n                type: 'label'\n              }\n            ]\n          },\n          {\n            text: 'Drop an image here',\n            type: 'dropzone',\n            accept: acceptExts,\n            height: 100,\n            onchange: onFileInput(editor)\n          }\n        ]\n      };\n    };\n    var UploadTab = { makeTab: makeTab$2 };\n\n    function curry(fn) {\n      var initialArgs = [];\n      for (var _i = 1; _i < arguments.length; _i++) {\n        initialArgs[_i - 1] = arguments[_i];\n      }\n      return function () {\n        var restArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          restArgs[_i] = arguments[_i];\n        }\n        var all = initialArgs.concat(restArgs);\n        return fn.apply(null, all);\n      };\n    }\n\n    var submitForm = function (editor, evt) {\n      var win = evt.control.getRoot();\n      SizeManager.updateSize(win);\n      editor.undoManager.transact(function () {\n        var data = merge(readImageDataFromSelection(editor), win.toJSON());\n        insertOrUpdateImage(editor, data);\n      });\n      editor.editorUpload.uploadImagesAuto();\n    };\n    function Dialog (editor) {\n      function showDialog(imageList) {\n        var data = readImageDataFromSelection(editor);\n        var win, imageListCtrl;\n        if (imageList) {\n          imageListCtrl = {\n            type: 'listbox',\n            label: 'Image list',\n            name: 'image-list',\n            values: Utils.buildListItems(imageList, function (item) {\n              item.value = editor.convertURL(item.value || item.url, 'src');\n            }, [{\n                text: 'None',\n                value: ''\n              }]),\n            value: data.src && editor.convertURL(data.src, 'src'),\n            onselect: function (e) {\n              var altCtrl = win.find('#alt');\n              if (!altCtrl.value() || e.lastControl && altCtrl.value() === e.lastControl.text()) {\n                altCtrl.value(e.control.text());\n              }\n              win.find('#src').value(e.control.value()).fire('change');\n            },\n            onPostRender: function () {\n              imageListCtrl = this;\n            }\n          };\n        }\n        if (Settings.hasAdvTab(editor) || Settings.hasUploadUrl(editor) || Settings.hasUploadHandler(editor)) {\n          var body = [MainTab.makeTab(editor, imageListCtrl)];\n          if (Settings.hasAdvTab(editor)) {\n            body.push(AdvTab.makeTab(editor));\n          }\n          if (Settings.hasUploadUrl(editor) || Settings.hasUploadHandler(editor)) {\n            body.push(UploadTab.makeTab(editor));\n          }\n          win = editor.windowManager.open({\n            title: 'Insert/edit image',\n            data: data,\n            bodyType: 'tabpanel',\n            body: body,\n            onSubmit: curry(submitForm, editor)\n          });\n        } else {\n          win = editor.windowManager.open({\n            title: 'Insert/edit image',\n            data: data,\n            body: MainTab.getGeneralItems(editor, imageListCtrl),\n            onSubmit: curry(submitForm, editor)\n          });\n        }\n        SizeManager.syncSize(win);\n      }\n      function open() {\n        Utils.createImageList(editor, showDialog);\n      }\n      return { open: open };\n    }\n\n    var register = function (editor) {\n      editor.addCommand('mceImage', Dialog(editor).open);\n    };\n    var Commands = { register: register };\n\n    var hasImageClass = function (node) {\n      var className = node.attr('class');\n      return className && /\\bimage\\b/.test(className);\n    };\n    var toggleContentEditableState = function (state) {\n      return function (nodes) {\n        var i = nodes.length, node;\n        var toggleContentEditable = function (node) {\n          node.attr('contenteditable', state ? 'true' : null);\n        };\n        while (i--) {\n          node = nodes[i];\n          if (hasImageClass(node)) {\n            node.attr('contenteditable', state ? 'false' : null);\n            global$2.each(node.getAll('figcaption'), toggleContentEditable);\n          }\n        }\n      };\n    };\n    var setup = function (editor) {\n      editor.on('preInit', function () {\n        editor.parser.addNodeFilter('figure', toggleContentEditableState(true));\n        editor.serializer.addNodeFilter('figure', toggleContentEditableState(false));\n      });\n    };\n    var FilterContent = { setup: setup };\n\n    var register$1 = function (editor) {\n      editor.addButton('image', {\n        icon: 'image',\n        tooltip: 'Insert/edit image',\n        onclick: Dialog(editor).open,\n        stateSelector: 'img:not([data-mce-object],[data-mce-placeholder]),figure.image'\n      });\n      editor.addMenuItem('image', {\n        icon: 'image',\n        text: 'Image',\n        onclick: Dialog(editor).open,\n        context: 'insert',\n        prependToContext: true\n      });\n    };\n    var Buttons = { register: register$1 };\n\n    global.add('image', function (editor) {\n      FilterContent.setup(editor);\n      Buttons.register(editor);\n      Commands.register(editor);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}(window));\n})();\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/26.3ce57c5d4c0f36ad8e1a.js","// Exports the \"image\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/image')\n//   ES2015:\n//     import 'tinymce/plugins/image'\nrequire('./plugin.js');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tinymce/plugins/image/index.js\n// module id = HaK5\n// module chunks = 26","(function () {\nvar image = (function (domGlobals) {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var hasDimensions = function (editor) {\n      return editor.settings.image_dimensions === false ? false : true;\n    };\n    var hasAdvTab = function (editor) {\n      return editor.settings.image_advtab === true ? true : false;\n    };\n    var getPrependUrl = function (editor) {\n      return editor.getParam('image_prepend_url', '');\n    };\n    var getClassList = function (editor) {\n      return editor.getParam('image_class_list');\n    };\n    var hasDescription = function (editor) {\n      return editor.settings.image_description === false ? false : true;\n    };\n    var hasImageTitle = function (editor) {\n      return editor.settings.image_title === true ? true : false;\n    };\n    var hasImageCaption = function (editor) {\n      return editor.settings.image_caption === true ? true : false;\n    };\n    var getImageList = function (editor) {\n      return editor.getParam('image_list', false);\n    };\n    var hasUploadUrl = function (editor) {\n      return editor.getParam('images_upload_url', false);\n    };\n    var hasUploadHandler = function (editor) {\n      return editor.getParam('images_upload_handler', false);\n    };\n    var getUploadUrl = function (editor) {\n      return editor.getParam('images_upload_url');\n    };\n    var getUploadHandler = function (editor) {\n      return editor.getParam('images_upload_handler');\n    };\n    var getUploadBasePath = function (editor) {\n      return editor.getParam('images_upload_base_path');\n    };\n    var getUploadCredentials = function (editor) {\n      return editor.getParam('images_upload_credentials');\n    };\n    var Settings = {\n      hasDimensions: hasDimensions,\n      hasAdvTab: hasAdvTab,\n      getPrependUrl: getPrependUrl,\n      getClassList: getClassList,\n      hasDescription: hasDescription,\n      hasImageTitle: hasImageTitle,\n      hasImageCaption: hasImageCaption,\n      getImageList: getImageList,\n      hasUploadUrl: hasUploadUrl,\n      hasUploadHandler: hasUploadHandler,\n      getUploadUrl: getUploadUrl,\n      getUploadHandler: getUploadHandler,\n      getUploadBasePath: getUploadBasePath,\n      getUploadCredentials: getUploadCredentials\n    };\n\n    var Global = typeof domGlobals.window !== 'undefined' ? domGlobals.window : Function('return this;')();\n\n    var path = function (parts, scope) {\n      var o = scope !== undefined && scope !== null ? scope : Global;\n      for (var i = 0; i < parts.length && o !== undefined && o !== null; ++i) {\n        o = o[parts[i]];\n      }\n      return o;\n    };\n    var resolve = function (p, scope) {\n      var parts = p.split('.');\n      return path(parts, scope);\n    };\n\n    var unsafe = function (name, scope) {\n      return resolve(name, scope);\n    };\n    var getOrDie = function (name, scope) {\n      var actual = unsafe(name, scope);\n      if (actual === undefined || actual === null) {\n        throw new Error(name + ' not available on this browser');\n      }\n      return actual;\n    };\n    var Global$1 = { getOrDie: getOrDie };\n\n    function FileReader () {\n      var f = Global$1.getOrDie('FileReader');\n      return new f();\n    }\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Promise');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.util.XHR');\n\n    var parseIntAndGetMax = function (val1, val2) {\n      return Math.max(parseInt(val1, 10), parseInt(val2, 10));\n    };\n    var getImageSize = function (url, callback) {\n      var img = domGlobals.document.createElement('img');\n      function done(width, height) {\n        if (img.parentNode) {\n          img.parentNode.removeChild(img);\n        }\n        callback({\n          width: width,\n          height: height\n        });\n      }\n      img.onload = function () {\n        var width = parseIntAndGetMax(img.width, img.clientWidth);\n        var height = parseIntAndGetMax(img.height, img.clientHeight);\n        done(width, height);\n      };\n      img.onerror = function () {\n        done(0, 0);\n      };\n      var style = img.style;\n      style.visibility = 'hidden';\n      style.position = 'fixed';\n      style.bottom = style.left = '0px';\n      style.width = style.height = 'auto';\n      domGlobals.document.body.appendChild(img);\n      img.src = url;\n    };\n    var buildListItems = function (inputList, itemCallback, startItems) {\n      function appendItems(values, output) {\n        output = output || [];\n        global$2.each(values, function (item) {\n          var menuItem = { text: item.text || item.title };\n          if (item.menu) {\n            menuItem.menu = appendItems(item.menu);\n          } else {\n            menuItem.value = item.value;\n            itemCallback(menuItem);\n          }\n          output.push(menuItem);\n        });\n        return output;\n      }\n      return appendItems(inputList, startItems || []);\n    };\n    var removePixelSuffix = function (value) {\n      if (value) {\n        value = value.replace(/px$/, '');\n      }\n      return value;\n    };\n    var addPixelSuffix = function (value) {\n      if (value.length > 0 && /^[0-9]+$/.test(value)) {\n        value += 'px';\n      }\n      return value;\n    };\n    var mergeMargins = function (css) {\n      if (css.margin) {\n        var splitMargin = css.margin.split(' ');\n        switch (splitMargin.length) {\n        case 1:\n          css['margin-top'] = css['margin-top'] || splitMargin[0];\n          css['margin-right'] = css['margin-right'] || splitMargin[0];\n          css['margin-bottom'] = css['margin-bottom'] || splitMargin[0];\n          css['margin-left'] = css['margin-left'] || splitMargin[0];\n          break;\n        case 2:\n          css['margin-top'] = css['margin-top'] || splitMargin[0];\n          css['margin-right'] = css['margin-right'] || splitMargin[1];\n          css['margin-bottom'] = css['margin-bottom'] || splitMargin[0];\n          css['margin-left'] = css['margin-left'] || splitMargin[1];\n          break;\n        case 3:\n          css['margin-top'] = css['margin-top'] || splitMargin[0];\n          css['margin-right'] = css['margin-right'] || splitMargin[1];\n          css['margin-bottom'] = css['margin-bottom'] || splitMargin[2];\n          css['margin-left'] = css['margin-left'] || splitMargin[1];\n          break;\n        case 4:\n          css['margin-top'] = css['margin-top'] || splitMargin[0];\n          css['margin-right'] = css['margin-right'] || splitMargin[1];\n          css['margin-bottom'] = css['margin-bottom'] || splitMargin[2];\n          css['margin-left'] = css['margin-left'] || splitMargin[3];\n        }\n        delete css.margin;\n      }\n      return css;\n    };\n    var createImageList = function (editor, callback) {\n      var imageList = Settings.getImageList(editor);\n      if (typeof imageList === 'string') {\n        global$3.send({\n          url: imageList,\n          success: function (text) {\n            callback(JSON.parse(text));\n          }\n        });\n      } else if (typeof imageList === 'function') {\n        imageList(callback);\n      } else {\n        callback(imageList);\n      }\n    };\n    var waitLoadImage = function (editor, data, imgElm) {\n      function selectImage() {\n        imgElm.onload = imgElm.onerror = null;\n        if (editor.selection) {\n          editor.selection.select(imgElm);\n          editor.nodeChanged();\n        }\n      }\n      imgElm.onload = function () {\n        if (!data.width && !data.height && Settings.hasDimensions(editor)) {\n          editor.dom.setAttribs(imgElm, {\n            width: imgElm.clientWidth,\n            height: imgElm.clientHeight\n          });\n        }\n        selectImage();\n      };\n      imgElm.onerror = selectImage;\n    };\n    var blobToDataUri = function (blob) {\n      return new global$1(function (resolve, reject) {\n        var reader = FileReader();\n        reader.onload = function () {\n          resolve(reader.result);\n        };\n        reader.onerror = function () {\n          reject(reader.error.message);\n        };\n        reader.readAsDataURL(blob);\n      });\n    };\n    var Utils = {\n      getImageSize: getImageSize,\n      buildListItems: buildListItems,\n      removePixelSuffix: removePixelSuffix,\n      addPixelSuffix: addPixelSuffix,\n      mergeMargins: mergeMargins,\n      createImageList: createImageList,\n      waitLoadImage: waitLoadImage,\n      blobToDataUri: blobToDataUri\n    };\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var shallow = function (old, nu) {\n      return nu;\n    };\n    var baseMerge = function (merger) {\n      return function () {\n        var objects = new Array(arguments.length);\n        for (var i = 0; i < objects.length; i++) {\n          objects[i] = arguments[i];\n        }\n        if (objects.length === 0) {\n          throw new Error('Can\\'t merge zero objects');\n        }\n        var ret = {};\n        for (var j = 0; j < objects.length; j++) {\n          var curObject = objects[j];\n          for (var key in curObject) {\n            if (hasOwnProperty.call(curObject, key)) {\n              ret[key] = merger(ret[key], curObject[key]);\n            }\n          }\n        }\n        return ret;\n      };\n    };\n    var merge = baseMerge(shallow);\n\n    var DOM = global$4.DOM;\n    var getHspace = function (image) {\n      if (image.style.marginLeft && image.style.marginRight && image.style.marginLeft === image.style.marginRight) {\n        return Utils.removePixelSuffix(image.style.marginLeft);\n      } else {\n        return '';\n      }\n    };\n    var getVspace = function (image) {\n      if (image.style.marginTop && image.style.marginBottom && image.style.marginTop === image.style.marginBottom) {\n        return Utils.removePixelSuffix(image.style.marginTop);\n      } else {\n        return '';\n      }\n    };\n    var getBorder = function (image) {\n      if (image.style.borderWidth) {\n        return Utils.removePixelSuffix(image.style.borderWidth);\n      } else {\n        return '';\n      }\n    };\n    var getAttrib = function (image, name) {\n      if (image.hasAttribute(name)) {\n        return image.getAttribute(name);\n      } else {\n        return '';\n      }\n    };\n    var getStyle = function (image, name) {\n      return image.style[name] ? image.style[name] : '';\n    };\n    var hasCaption = function (image) {\n      return image.parentNode !== null && image.parentNode.nodeName === 'FIGURE';\n    };\n    var setAttrib = function (image, name, value) {\n      image.setAttribute(name, value);\n    };\n    var wrapInFigure = function (image) {\n      var figureElm = DOM.create('figure', { class: 'image' });\n      DOM.insertAfter(figureElm, image);\n      figureElm.appendChild(image);\n      figureElm.appendChild(DOM.create('figcaption', { contentEditable: true }, 'Caption'));\n      figureElm.contentEditable = 'false';\n    };\n    var removeFigure = function (image) {\n      var figureElm = image.parentNode;\n      DOM.insertAfter(image, figureElm);\n      DOM.remove(figureElm);\n    };\n    var toggleCaption = function (image) {\n      if (hasCaption(image)) {\n        removeFigure(image);\n      } else {\n        wrapInFigure(image);\n      }\n    };\n    var normalizeStyle = function (image, normalizeCss) {\n      var attrValue = image.getAttribute('style');\n      var value = normalizeCss(attrValue !== null ? attrValue : '');\n      if (value.length > 0) {\n        image.setAttribute('style', value);\n        image.setAttribute('data-mce-style', value);\n      } else {\n        image.removeAttribute('style');\n      }\n    };\n    var setSize = function (name, normalizeCss) {\n      return function (image, name, value) {\n        if (image.style[name]) {\n          image.style[name] = Utils.addPixelSuffix(value);\n          normalizeStyle(image, normalizeCss);\n        } else {\n          setAttrib(image, name, value);\n        }\n      };\n    };\n    var getSize = function (image, name) {\n      if (image.style[name]) {\n        return Utils.removePixelSuffix(image.style[name]);\n      } else {\n        return getAttrib(image, name);\n      }\n    };\n    var setHspace = function (image, value) {\n      var pxValue = Utils.addPixelSuffix(value);\n      image.style.marginLeft = pxValue;\n      image.style.marginRight = pxValue;\n    };\n    var setVspace = function (image, value) {\n      var pxValue = Utils.addPixelSuffix(value);\n      image.style.marginTop = pxValue;\n      image.style.marginBottom = pxValue;\n    };\n    var setBorder = function (image, value) {\n      var pxValue = Utils.addPixelSuffix(value);\n      image.style.borderWidth = pxValue;\n    };\n    var setBorderStyle = function (image, value) {\n      image.style.borderStyle = value;\n    };\n    var getBorderStyle = function (image) {\n      return getStyle(image, 'borderStyle');\n    };\n    var isFigure = function (elm) {\n      return elm.nodeName === 'FIGURE';\n    };\n    var defaultData = function () {\n      return {\n        src: '',\n        alt: '',\n        title: '',\n        width: '',\n        height: '',\n        class: '',\n        style: '',\n        caption: false,\n        hspace: '',\n        vspace: '',\n        border: '',\n        borderStyle: ''\n      };\n    };\n    var getStyleValue = function (normalizeCss, data) {\n      var image = domGlobals.document.createElement('img');\n      setAttrib(image, 'style', data.style);\n      if (getHspace(image) || data.hspace !== '') {\n        setHspace(image, data.hspace);\n      }\n      if (getVspace(image) || data.vspace !== '') {\n        setVspace(image, data.vspace);\n      }\n      if (getBorder(image) || data.border !== '') {\n        setBorder(image, data.border);\n      }\n      if (getBorderStyle(image) || data.borderStyle !== '') {\n        setBorderStyle(image, data.borderStyle);\n      }\n      return normalizeCss(image.getAttribute('style'));\n    };\n    var create = function (normalizeCss, data) {\n      var image = domGlobals.document.createElement('img');\n      write(normalizeCss, merge(data, { caption: false }), image);\n      setAttrib(image, 'alt', data.alt);\n      if (data.caption) {\n        var figure = DOM.create('figure', { class: 'image' });\n        figure.appendChild(image);\n        figure.appendChild(DOM.create('figcaption', { contentEditable: true }, 'Caption'));\n        figure.contentEditable = 'false';\n        return figure;\n      } else {\n        return image;\n      }\n    };\n    var read = function (normalizeCss, image) {\n      return {\n        src: getAttrib(image, 'src'),\n        alt: getAttrib(image, 'alt'),\n        title: getAttrib(image, 'title'),\n        width: getSize(image, 'width'),\n        height: getSize(image, 'height'),\n        class: getAttrib(image, 'class'),\n        style: normalizeCss(getAttrib(image, 'style')),\n        caption: hasCaption(image),\n        hspace: getHspace(image),\n        vspace: getVspace(image),\n        border: getBorder(image),\n        borderStyle: getStyle(image, 'borderStyle')\n      };\n    };\n    var updateProp = function (image, oldData, newData, name, set) {\n      if (newData[name] !== oldData[name]) {\n        set(image, name, newData[name]);\n      }\n    };\n    var normalized = function (set, normalizeCss) {\n      return function (image, name, value) {\n        set(image, value);\n        normalizeStyle(image, normalizeCss);\n      };\n    };\n    var write = function (normalizeCss, newData, image) {\n      var oldData = read(normalizeCss, image);\n      updateProp(image, oldData, newData, 'caption', function (image, _name, _value) {\n        return toggleCaption(image);\n      });\n      updateProp(image, oldData, newData, 'src', setAttrib);\n      updateProp(image, oldData, newData, 'alt', setAttrib);\n      updateProp(image, oldData, newData, 'title', setAttrib);\n      updateProp(image, oldData, newData, 'width', setSize('width', normalizeCss));\n      updateProp(image, oldData, newData, 'height', setSize('height', normalizeCss));\n      updateProp(image, oldData, newData, 'class', setAttrib);\n      updateProp(image, oldData, newData, 'style', normalized(function (image, value) {\n        return setAttrib(image, 'style', value);\n      }, normalizeCss));\n      updateProp(image, oldData, newData, 'hspace', normalized(setHspace, normalizeCss));\n      updateProp(image, oldData, newData, 'vspace', normalized(setVspace, normalizeCss));\n      updateProp(image, oldData, newData, 'border', normalized(setBorder, normalizeCss));\n      updateProp(image, oldData, newData, 'borderStyle', normalized(setBorderStyle, normalizeCss));\n    };\n\n    var normalizeCss = function (editor, cssText) {\n      var css = editor.dom.styles.parse(cssText);\n      var mergedCss = Utils.mergeMargins(css);\n      var compressed = editor.dom.styles.parse(editor.dom.styles.serialize(mergedCss));\n      return editor.dom.styles.serialize(compressed);\n    };\n    var getSelectedImage = function (editor) {\n      var imgElm = editor.selection.getNode();\n      var figureElm = editor.dom.getParent(imgElm, 'figure.image');\n      if (figureElm) {\n        return editor.dom.select('img', figureElm)[0];\n      }\n      if (imgElm && (imgElm.nodeName !== 'IMG' || imgElm.getAttribute('data-mce-object') || imgElm.getAttribute('data-mce-placeholder'))) {\n        return null;\n      }\n      return imgElm;\n    };\n    var splitTextBlock = function (editor, figure) {\n      var dom = editor.dom;\n      var textBlock = dom.getParent(figure.parentNode, function (node) {\n        return editor.schema.getTextBlockElements()[node.nodeName];\n      }, editor.getBody());\n      if (textBlock) {\n        return dom.split(textBlock, figure);\n      } else {\n        return figure;\n      }\n    };\n    var readImageDataFromSelection = function (editor) {\n      var image = getSelectedImage(editor);\n      return image ? read(function (css) {\n        return normalizeCss(editor, css);\n      }, image) : defaultData();\n    };\n    var insertImageAtCaret = function (editor, data) {\n      var elm = create(function (css) {\n        return normalizeCss(editor, css);\n      }, data);\n      editor.dom.setAttrib(elm, 'data-mce-id', '__mcenew');\n      editor.focus();\n      editor.selection.setContent(elm.outerHTML);\n      var insertedElm = editor.dom.select('*[data-mce-id=\"__mcenew\"]')[0];\n      editor.dom.setAttrib(insertedElm, 'data-mce-id', null);\n      if (isFigure(insertedElm)) {\n        var figure = splitTextBlock(editor, insertedElm);\n        editor.selection.select(figure);\n      } else {\n        editor.selection.select(insertedElm);\n      }\n    };\n    var syncSrcAttr = function (editor, image) {\n      editor.dom.setAttrib(image, 'src', image.getAttribute('src'));\n    };\n    var deleteImage = function (editor, image) {\n      if (image) {\n        var elm = editor.dom.is(image.parentNode, 'figure.image') ? image.parentNode : image;\n        editor.dom.remove(elm);\n        editor.focus();\n        editor.nodeChanged();\n        if (editor.dom.isEmpty(editor.getBody())) {\n          editor.setContent('');\n          editor.selection.setCursorLocation();\n        }\n      }\n    };\n    var writeImageDataToSelection = function (editor, data) {\n      var image = getSelectedImage(editor);\n      write(function (css) {\n        return normalizeCss(editor, css);\n      }, data, image);\n      syncSrcAttr(editor, image);\n      if (isFigure(image.parentNode)) {\n        var figure = image.parentNode;\n        splitTextBlock(editor, figure);\n        editor.selection.select(image.parentNode);\n      } else {\n        editor.selection.select(image);\n        Utils.waitLoadImage(editor, data, image);\n      }\n    };\n    var insertOrUpdateImage = function (editor, data) {\n      var image = getSelectedImage(editor);\n      if (image) {\n        if (data.src) {\n          writeImageDataToSelection(editor, data);\n        } else {\n          deleteImage(editor, image);\n        }\n      } else if (data.src) {\n        insertImageAtCaret(editor, data);\n      }\n    };\n\n    var updateVSpaceHSpaceBorder = function (editor) {\n      return function (evt) {\n        var dom = editor.dom;\n        var rootControl = evt.control.rootControl;\n        if (!Settings.hasAdvTab(editor)) {\n          return;\n        }\n        var data = rootControl.toJSON();\n        var css = dom.parseStyle(data.style);\n        rootControl.find('#vspace').value('');\n        rootControl.find('#hspace').value('');\n        css = Utils.mergeMargins(css);\n        if (css['margin-top'] && css['margin-bottom'] || css['margin-right'] && css['margin-left']) {\n          if (css['margin-top'] === css['margin-bottom']) {\n            rootControl.find('#vspace').value(Utils.removePixelSuffix(css['margin-top']));\n          } else {\n            rootControl.find('#vspace').value('');\n          }\n          if (css['margin-right'] === css['margin-left']) {\n            rootControl.find('#hspace').value(Utils.removePixelSuffix(css['margin-right']));\n          } else {\n            rootControl.find('#hspace').value('');\n          }\n        }\n        if (css['border-width']) {\n          rootControl.find('#border').value(Utils.removePixelSuffix(css['border-width']));\n        } else {\n          rootControl.find('#border').value('');\n        }\n        if (css['border-style']) {\n          rootControl.find('#borderStyle').value(css['border-style']);\n        } else {\n          rootControl.find('#borderStyle').value('');\n        }\n        rootControl.find('#style').value(dom.serializeStyle(dom.parseStyle(dom.serializeStyle(css))));\n      };\n    };\n    var updateStyle = function (editor, win) {\n      win.find('#style').each(function (ctrl) {\n        var value = getStyleValue(function (css) {\n          return normalizeCss(editor, css);\n        }, merge(defaultData(), win.toJSON()));\n        ctrl.value(value);\n      });\n    };\n    var makeTab = function (editor) {\n      return {\n        title: 'Advanced',\n        type: 'form',\n        pack: 'start',\n        items: [\n          {\n            label: 'Style',\n            name: 'style',\n            type: 'textbox',\n            onchange: updateVSpaceHSpaceBorder(editor)\n          },\n          {\n            type: 'form',\n            layout: 'grid',\n            packV: 'start',\n            columns: 2,\n            padding: 0,\n            defaults: {\n              type: 'textbox',\n              maxWidth: 50,\n              onchange: function (evt) {\n                updateStyle(editor, evt.control.rootControl);\n              }\n            },\n            items: [\n              {\n                label: 'Vertical space',\n                name: 'vspace'\n              },\n              {\n                label: 'Border width',\n                name: 'border'\n              },\n              {\n                label: 'Horizontal space',\n                name: 'hspace'\n              },\n              {\n                label: 'Border style',\n                type: 'listbox',\n                name: 'borderStyle',\n                width: 90,\n                maxWidth: 90,\n                onselect: function (evt) {\n                  updateStyle(editor, evt.control.rootControl);\n                },\n                values: [\n                  {\n                    text: 'Select...',\n                    value: ''\n                  },\n                  {\n                    text: 'Solid',\n                    value: 'solid'\n                  },\n                  {\n                    text: 'Dotted',\n                    value: 'dotted'\n                  },\n                  {\n                    text: 'Dashed',\n                    value: 'dashed'\n                  },\n                  {\n                    text: 'Double',\n                    value: 'double'\n                  },\n                  {\n                    text: 'Groove',\n                    value: 'groove'\n                  },\n                  {\n                    text: 'Ridge',\n                    value: 'ridge'\n                  },\n                  {\n                    text: 'Inset',\n                    value: 'inset'\n                  },\n                  {\n                    text: 'Outset',\n                    value: 'outset'\n                  },\n                  {\n                    text: 'None',\n                    value: 'none'\n                  },\n                  {\n                    text: 'Hidden',\n                    value: 'hidden'\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      };\n    };\n    var AdvTab = { makeTab: makeTab };\n\n    var doSyncSize = function (widthCtrl, heightCtrl) {\n      widthCtrl.state.set('oldVal', widthCtrl.value());\n      heightCtrl.state.set('oldVal', heightCtrl.value());\n    };\n    var doSizeControls = function (win, f) {\n      var widthCtrl = win.find('#width')[0];\n      var heightCtrl = win.find('#height')[0];\n      var constrained = win.find('#constrain')[0];\n      if (widthCtrl && heightCtrl && constrained) {\n        f(widthCtrl, heightCtrl, constrained.checked());\n      }\n    };\n    var doUpdateSize = function (widthCtrl, heightCtrl, isContrained) {\n      var oldWidth = widthCtrl.state.get('oldVal');\n      var oldHeight = heightCtrl.state.get('oldVal');\n      var newWidth = widthCtrl.value();\n      var newHeight = heightCtrl.value();\n      if (isContrained && oldWidth && oldHeight && newWidth && newHeight) {\n        if (newWidth !== oldWidth) {\n          newHeight = Math.round(newWidth / oldWidth * newHeight);\n          if (!isNaN(newHeight)) {\n            heightCtrl.value(newHeight);\n          }\n        } else {\n          newWidth = Math.round(newHeight / oldHeight * newWidth);\n          if (!isNaN(newWidth)) {\n            widthCtrl.value(newWidth);\n          }\n        }\n      }\n      doSyncSize(widthCtrl, heightCtrl);\n    };\n    var syncSize = function (win) {\n      doSizeControls(win, doSyncSize);\n    };\n    var updateSize = function (win) {\n      doSizeControls(win, doUpdateSize);\n    };\n    var createUi = function () {\n      var recalcSize = function (evt) {\n        updateSize(evt.control.rootControl);\n      };\n      return {\n        type: 'container',\n        label: 'Dimensions',\n        layout: 'flex',\n        align: 'center',\n        spacing: 5,\n        items: [\n          {\n            name: 'width',\n            type: 'textbox',\n            maxLength: 5,\n            size: 5,\n            onchange: recalcSize,\n            ariaLabel: 'Width'\n          },\n          {\n            type: 'label',\n            text: 'x'\n          },\n          {\n            name: 'height',\n            type: 'textbox',\n            maxLength: 5,\n            size: 5,\n            onchange: recalcSize,\n            ariaLabel: 'Height'\n          },\n          {\n            name: 'constrain',\n            type: 'checkbox',\n            checked: true,\n            text: 'Constrain proportions'\n          }\n        ]\n      };\n    };\n    var SizeManager = {\n      createUi: createUi,\n      syncSize: syncSize,\n      updateSize: updateSize\n    };\n\n    var onSrcChange = function (evt, editor) {\n      var srcURL, prependURL, absoluteURLPattern;\n      var meta = evt.meta || {};\n      var control = evt.control;\n      var rootControl = control.rootControl;\n      var imageListCtrl = rootControl.find('#image-list')[0];\n      if (imageListCtrl) {\n        imageListCtrl.value(editor.convertURL(control.value(), 'src'));\n      }\n      global$2.each(meta, function (value, key) {\n        rootControl.find('#' + key).value(value);\n      });\n      if (!meta.width && !meta.height) {\n        srcURL = editor.convertURL(control.value(), 'src');\n        prependURL = Settings.getPrependUrl(editor);\n        absoluteURLPattern = new RegExp('^(?:[a-z]+:)?//', 'i');\n        if (prependURL && !absoluteURLPattern.test(srcURL) && srcURL.substring(0, prependURL.length) !== prependURL) {\n          srcURL = prependURL + srcURL;\n        }\n        control.value(srcURL);\n        Utils.getImageSize(editor.documentBaseURI.toAbsolute(control.value()), function (data) {\n          if (data.width && data.height && Settings.hasDimensions(editor)) {\n            rootControl.find('#width').value(data.width);\n            rootControl.find('#height').value(data.height);\n            SizeManager.syncSize(rootControl);\n          }\n        });\n      }\n    };\n    var onBeforeCall = function (evt) {\n      evt.meta = evt.control.rootControl.toJSON();\n    };\n    var getGeneralItems = function (editor, imageListCtrl) {\n      var generalFormItems = [\n        {\n          name: 'src',\n          type: 'filepicker',\n          filetype: 'image',\n          label: 'Source',\n          autofocus: true,\n          onchange: function (evt) {\n            onSrcChange(evt, editor);\n          },\n          onbeforecall: onBeforeCall\n        },\n        imageListCtrl\n      ];\n      if (Settings.hasDescription(editor)) {\n        generalFormItems.push({\n          name: 'alt',\n          type: 'textbox',\n          label: 'Image description'\n        });\n      }\n      if (Settings.hasImageTitle(editor)) {\n        generalFormItems.push({\n          name: 'title',\n          type: 'textbox',\n          label: 'Image Title'\n        });\n      }\n      if (Settings.hasDimensions(editor)) {\n        generalFormItems.push(SizeManager.createUi());\n      }\n      if (Settings.getClassList(editor)) {\n        generalFormItems.push({\n          name: 'class',\n          type: 'listbox',\n          label: 'Class',\n          values: Utils.buildListItems(Settings.getClassList(editor), function (item) {\n            if (item.value) {\n              item.textStyle = function () {\n                return editor.formatter.getCssText({\n                  inline: 'img',\n                  classes: [item.value]\n                });\n              };\n            }\n          })\n        });\n      }\n      if (Settings.hasImageCaption(editor)) {\n        generalFormItems.push({\n          name: 'caption',\n          type: 'checkbox',\n          label: 'Caption'\n        });\n      }\n      return generalFormItems;\n    };\n    var makeTab$1 = function (editor, imageListCtrl) {\n      return {\n        title: 'General',\n        type: 'form',\n        items: getGeneralItems(editor, imageListCtrl)\n      };\n    };\n    var MainTab = {\n      makeTab: makeTab$1,\n      getGeneralItems: getGeneralItems\n    };\n\n    var url = function () {\n      return Global$1.getOrDie('URL');\n    };\n    var createObjectURL = function (blob) {\n      return url().createObjectURL(blob);\n    };\n    var revokeObjectURL = function (u) {\n      url().revokeObjectURL(u);\n    };\n    var URL = {\n      createObjectURL: createObjectURL,\n      revokeObjectURL: revokeObjectURL\n    };\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.ui.Factory');\n\n    function XMLHttpRequest () {\n      var f = Global$1.getOrDie('XMLHttpRequest');\n      return new f();\n    }\n\n    var noop = function () {\n    };\n    var pathJoin = function (path1, path2) {\n      if (path1) {\n        return path1.replace(/\\/$/, '') + '/' + path2.replace(/^\\//, '');\n      }\n      return path2;\n    };\n    function Uploader (settings) {\n      var defaultHandler = function (blobInfo, success, failure, progress) {\n        var xhr, formData;\n        xhr = XMLHttpRequest();\n        xhr.open('POST', settings.url);\n        xhr.withCredentials = settings.credentials;\n        xhr.upload.onprogress = function (e) {\n          progress(e.loaded / e.total * 100);\n        };\n        xhr.onerror = function () {\n          failure('Image upload failed due to a XHR Transport error. Code: ' + xhr.status);\n        };\n        xhr.onload = function () {\n          var json;\n          if (xhr.status < 200 || xhr.status >= 300) {\n            failure('HTTP Error: ' + xhr.status);\n            return;\n          }\n          json = JSON.parse(xhr.responseText);\n          if (!json || typeof json.location !== 'string') {\n            failure('Invalid JSON: ' + xhr.responseText);\n            return;\n          }\n          success(pathJoin(settings.basePath, json.location));\n        };\n        formData = new domGlobals.FormData();\n        formData.append('file', blobInfo.blob(), blobInfo.filename());\n        xhr.send(formData);\n      };\n      var uploadBlob = function (blobInfo, handler) {\n        return new global$1(function (resolve, reject) {\n          try {\n            handler(blobInfo, resolve, reject, noop);\n          } catch (ex) {\n            reject(ex.message);\n          }\n        });\n      };\n      var isDefaultHandler = function (handler) {\n        return handler === defaultHandler;\n      };\n      var upload = function (blobInfo) {\n        return !settings.url && isDefaultHandler(settings.handler) ? global$1.reject('Upload url missing from the settings.') : uploadBlob(blobInfo, settings.handler);\n      };\n      settings = global$2.extend({\n        credentials: false,\n        handler: defaultHandler\n      }, settings);\n      return { upload: upload };\n    }\n\n    var onFileInput = function (editor) {\n      return function (evt) {\n        var Throbber = global$5.get('Throbber');\n        var rootControl = evt.control.rootControl;\n        var throbber = new Throbber(rootControl.getEl());\n        var file = evt.control.value();\n        var blobUri = URL.createObjectURL(file);\n        var uploader = Uploader({\n          url: Settings.getUploadUrl(editor),\n          basePath: Settings.getUploadBasePath(editor),\n          credentials: Settings.getUploadCredentials(editor),\n          handler: Settings.getUploadHandler(editor)\n        });\n        var finalize = function () {\n          throbber.hide();\n          URL.revokeObjectURL(blobUri);\n        };\n        throbber.show();\n        return Utils.blobToDataUri(file).then(function (dataUrl) {\n          var blobInfo = editor.editorUpload.blobCache.create({\n            blob: file,\n            blobUri: blobUri,\n            name: file.name ? file.name.replace(/\\.[^\\.]+$/, '') : null,\n            base64: dataUrl.split(',')[1]\n          });\n          return uploader.upload(blobInfo).then(function (url) {\n            var src = rootControl.find('#src');\n            src.value(url);\n            rootControl.find('tabpanel')[0].activateTab(0);\n            src.fire('change');\n            finalize();\n            return url;\n          });\n        }).catch(function (err) {\n          editor.windowManager.alert(err);\n          finalize();\n        });\n      };\n    };\n    var acceptExts = '.jpg,.jpeg,.png,.gif';\n    var makeTab$2 = function (editor) {\n      return {\n        title: 'Upload',\n        type: 'form',\n        layout: 'flex',\n        direction: 'column',\n        align: 'stretch',\n        padding: '20 20 20 20',\n        items: [\n          {\n            type: 'container',\n            layout: 'flex',\n            direction: 'column',\n            align: 'center',\n            spacing: 10,\n            items: [\n              {\n                text: 'Browse for an image',\n                type: 'browsebutton',\n                accept: acceptExts,\n                onchange: onFileInput(editor)\n              },\n              {\n                text: 'OR',\n                type: 'label'\n              }\n            ]\n          },\n          {\n            text: 'Drop an image here',\n            type: 'dropzone',\n            accept: acceptExts,\n            height: 100,\n            onchange: onFileInput(editor)\n          }\n        ]\n      };\n    };\n    var UploadTab = { makeTab: makeTab$2 };\n\n    function curry(fn) {\n      var initialArgs = [];\n      for (var _i = 1; _i < arguments.length; _i++) {\n        initialArgs[_i - 1] = arguments[_i];\n      }\n      return function () {\n        var restArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          restArgs[_i] = arguments[_i];\n        }\n        var all = initialArgs.concat(restArgs);\n        return fn.apply(null, all);\n      };\n    }\n\n    var submitForm = function (editor, evt) {\n      var win = evt.control.getRoot();\n      SizeManager.updateSize(win);\n      editor.undoManager.transact(function () {\n        var data = merge(readImageDataFromSelection(editor), win.toJSON());\n        insertOrUpdateImage(editor, data);\n      });\n      editor.editorUpload.uploadImagesAuto();\n    };\n    function Dialog (editor) {\n      function showDialog(imageList) {\n        var data = readImageDataFromSelection(editor);\n        var win, imageListCtrl;\n        if (imageList) {\n          imageListCtrl = {\n            type: 'listbox',\n            label: 'Image list',\n            name: 'image-list',\n            values: Utils.buildListItems(imageList, function (item) {\n              item.value = editor.convertURL(item.value || item.url, 'src');\n            }, [{\n                text: 'None',\n                value: ''\n              }]),\n            value: data.src && editor.convertURL(data.src, 'src'),\n            onselect: function (e) {\n              var altCtrl = win.find('#alt');\n              if (!altCtrl.value() || e.lastControl && altCtrl.value() === e.lastControl.text()) {\n                altCtrl.value(e.control.text());\n              }\n              win.find('#src').value(e.control.value()).fire('change');\n            },\n            onPostRender: function () {\n              imageListCtrl = this;\n            }\n          };\n        }\n        if (Settings.hasAdvTab(editor) || Settings.hasUploadUrl(editor) || Settings.hasUploadHandler(editor)) {\n          var body = [MainTab.makeTab(editor, imageListCtrl)];\n          if (Settings.hasAdvTab(editor)) {\n            body.push(AdvTab.makeTab(editor));\n          }\n          if (Settings.hasUploadUrl(editor) || Settings.hasUploadHandler(editor)) {\n            body.push(UploadTab.makeTab(editor));\n          }\n          win = editor.windowManager.open({\n            title: 'Insert/edit image',\n            data: data,\n            bodyType: 'tabpanel',\n            body: body,\n            onSubmit: curry(submitForm, editor)\n          });\n        } else {\n          win = editor.windowManager.open({\n            title: 'Insert/edit image',\n            data: data,\n            body: MainTab.getGeneralItems(editor, imageListCtrl),\n            onSubmit: curry(submitForm, editor)\n          });\n        }\n        SizeManager.syncSize(win);\n      }\n      function open() {\n        Utils.createImageList(editor, showDialog);\n      }\n      return { open: open };\n    }\n\n    var register = function (editor) {\n      editor.addCommand('mceImage', Dialog(editor).open);\n    };\n    var Commands = { register: register };\n\n    var hasImageClass = function (node) {\n      var className = node.attr('class');\n      return className && /\\bimage\\b/.test(className);\n    };\n    var toggleContentEditableState = function (state) {\n      return function (nodes) {\n        var i = nodes.length, node;\n        var toggleContentEditable = function (node) {\n          node.attr('contenteditable', state ? 'true' : null);\n        };\n        while (i--) {\n          node = nodes[i];\n          if (hasImageClass(node)) {\n            node.attr('contenteditable', state ? 'false' : null);\n            global$2.each(node.getAll('figcaption'), toggleContentEditable);\n          }\n        }\n      };\n    };\n    var setup = function (editor) {\n      editor.on('preInit', function () {\n        editor.parser.addNodeFilter('figure', toggleContentEditableState(true));\n        editor.serializer.addNodeFilter('figure', toggleContentEditableState(false));\n      });\n    };\n    var FilterContent = { setup: setup };\n\n    var register$1 = function (editor) {\n      editor.addButton('image', {\n        icon: 'image',\n        tooltip: 'Insert/edit image',\n        onclick: Dialog(editor).open,\n        stateSelector: 'img:not([data-mce-object],[data-mce-placeholder]),figure.image'\n      });\n      editor.addMenuItem('image', {\n        icon: 'image',\n        text: 'Image',\n        onclick: Dialog(editor).open,\n        context: 'insert',\n        prependToContext: true\n      });\n    };\n    var Buttons = { register: register$1 };\n\n    global.add('image', function (editor) {\n      FilterContent.setup(editor);\n      Buttons.register(editor);\n      Commands.register(editor);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}(window));\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tinymce/plugins/image/plugin.js\n// module id = I7le\n// module chunks = 26"],"sourceRoot":""}