{"version":3,"sources":["webpack:///static/js/2.d6d7ed82b950aa134d25.js","webpack:///./~/tinymce/plugins/visualchars/plugin.js","webpack:///./~/tinymce/plugins/visualchars/index.js"],"names":["webpackJsonp","0qAb","module","exports","domGlobals","Plugin","Cell","initial","value","get","set","v","clone","global","tinymce","util","Tools","resolve","toggleState","isEnabled","Api","fireVisualChars","editor","state","fire","Events","noop","constant","never","always","none","NONE","eq","o","isNone","call","thunk","id","n","me","fold","s","is","isSome","getOr","getOrThunk","getOrDie","msg","Error","getOrNull","getOrUndefined","undefined","or","orThunk","map","each","bind","exists","forall","filter","equals","equals_","toArray","toString","Object","freeze","some","a","constant_a","self","f","elementEq","b","from","Option","typeOf","x","t","Array","prototype","isPrototypeOf","constructor","name","String","isFunction","type","nativeSlice","slice","xs","len","length","r","i","fromHtml","html","scope","doc","document","div","createElement","innerHTML","hasChildNodes","childNodes","console","error","fromDom","fromTag","tag","node","fromText","text","createTextNode","dom","fromPoint","docElm","y","elementFromPoint","Element","TEXT","Node","ATTRIBUTE_NODE","CDATA_SECTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","ELEMENT_NODE","TEXT_NODE","PROCESSING_INSTRUCTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","NOTATION_NODE","window","Function","element","nodeType","nodeValue","isText","charMap","charMapToRegExp","key","regExp","RegExp","charMapToSelector","selector","Data","regExpGlobal","wrapCharWithSpan","Html","isMatch","value$1","test","filterDescendants","predicate","result","children","concat","findParentElm","elm","rootElm","parentNode","replaceWithSpans","replace","Nodes","show","nodeList","withSpans","encode","create","lastChild","insertAfter","remove","hide","body","select","toggle","getBody","bookmark","selection","getBookmark","getNode","moveToBookmark","VisualChars","toggleVisualChars","Actions","register","addCommand","Commands","global$1","setup","debouncedToggle","debounce","settings","forced_root_block","on","e","keyCode","Keyboard","isEnabledByDefault","getParam","Settings","setup$1","valueForToggling","Bindings","toggleActiveState","ctrl","control","active","register$1","addButton","title","cmd","onPostRender","addMenuItem","selectable","context","prependToContext","add","ctVV","__webpack_require__"],"mappings":"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","file":"static/js/2.d6d7ed82b950aa134d25.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ \"0qAb\":\n/***/ (function(module, exports) {\n\n(function () {\nvar visualchars = (function (domGlobals) {\n    'use strict';\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      var clone = function () {\n        return Cell(get());\n      };\n      return {\n        get: get,\n        set: set,\n        clone: clone\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var get = function (toggleState) {\n      var isEnabled = function () {\n        return toggleState.get();\n      };\n      return { isEnabled: isEnabled };\n    };\n    var Api = { get: get };\n\n    var fireVisualChars = function (editor, state) {\n      return editor.fire('VisualChars', { state: state });\n    };\n    var Events = { fireVisualChars: fireVisualChars };\n\n    var noop = function () {\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var none = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var eq = function (o) {\n        return o.isNone();\n      };\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = function (n) {\n        return n;\n      };\n      var me = {\n        fold: function (n, s) {\n          return n();\n        },\n        is: never,\n        isSome: never,\n        isNone: always,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: constant(null),\n        getOrUndefined: constant(undefined),\n        or: id,\n        orThunk: call,\n        map: none,\n        each: noop,\n        bind: none,\n        exists: never,\n        forall: always,\n        filter: none,\n        equals: eq,\n        equals_: eq,\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      if (Object.freeze) {\n        Object.freeze(me);\n      }\n      return me;\n    }();\n    var some = function (a) {\n      var constant_a = constant(a);\n      var self = function () {\n        return me;\n      };\n      var bind = function (f) {\n        return f(a);\n      };\n      var me = {\n        fold: function (n, s) {\n          return s(a);\n        },\n        is: function (v) {\n          return a === v;\n        },\n        isSome: always,\n        isNone: never,\n        getOr: constant_a,\n        getOrThunk: constant_a,\n        getOrDie: constant_a,\n        getOrNull: constant_a,\n        getOrUndefined: constant_a,\n        or: self,\n        orThunk: self,\n        map: function (f) {\n          return some(f(a));\n        },\n        each: function (f) {\n          f(a);\n        },\n        bind: bind,\n        exists: bind,\n        forall: bind,\n        filter: function (f) {\n          return f(a) ? me : NONE;\n        },\n        toArray: function () {\n          return [a];\n        },\n        toString: function () {\n          return 'some(' + a + ')';\n        },\n        equals: function (o) {\n          return o.is(a);\n        },\n        equals_: function (o, elementEq) {\n          return o.fold(never, function (b) {\n            return elementEq(a, b);\n          });\n        }\n      };\n      return me;\n    };\n    var from = function (value) {\n      return value === null || value === undefined ? NONE : some(value);\n    };\n    var Option = {\n      some: some,\n      none: none,\n      from: from\n    };\n\n    var typeOf = function (x) {\n      if (x === null) {\n        return 'null';\n      }\n      var t = typeof x;\n      if (t === 'object' && (Array.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'Array')) {\n        return 'array';\n      }\n      if (t === 'object' && (String.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'String')) {\n        return 'string';\n      }\n      return t;\n    };\n    var isType = function (type) {\n      return function (value) {\n        return typeOf(value) === type;\n      };\n    };\n    var isFunction = isType('function');\n\n    var nativeSlice = Array.prototype.slice;\n    var map = function (xs, f) {\n      var len = xs.length;\n      var r = new Array(len);\n      for (var i = 0; i < len; i++) {\n        var x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    var each = function (xs, f) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        f(x, i);\n      }\n    };\n    var from$1 = isFunction(Array.from) ? Array.from : function (x) {\n      return nativeSlice.call(x);\n    };\n\n    var fromHtml = function (html, scope) {\n      var doc = scope || domGlobals.document;\n      var div = doc.createElement('div');\n      div.innerHTML = html;\n      if (!div.hasChildNodes() || div.childNodes.length > 1) {\n        domGlobals.console.error('HTML does not have a single root node', html);\n        throw new Error('HTML must have a single root node');\n      }\n      return fromDom(div.childNodes[0]);\n    };\n    var fromTag = function (tag, scope) {\n      var doc = scope || domGlobals.document;\n      var node = doc.createElement(tag);\n      return fromDom(node);\n    };\n    var fromText = function (text, scope) {\n      var doc = scope || domGlobals.document;\n      var node = doc.createTextNode(text);\n      return fromDom(node);\n    };\n    var fromDom = function (node) {\n      if (node === null || node === undefined) {\n        throw new Error('Node cannot be null or undefined');\n      }\n      return { dom: constant(node) };\n    };\n    var fromPoint = function (docElm, x, y) {\n      var doc = docElm.dom();\n      return Option.from(doc.elementFromPoint(x, y)).map(fromDom);\n    };\n    var Element = {\n      fromHtml: fromHtml,\n      fromTag: fromTag,\n      fromText: fromText,\n      fromDom: fromDom,\n      fromPoint: fromPoint\n    };\n\n    var ATTRIBUTE = domGlobals.Node.ATTRIBUTE_NODE;\n    var CDATA_SECTION = domGlobals.Node.CDATA_SECTION_NODE;\n    var COMMENT = domGlobals.Node.COMMENT_NODE;\n    var DOCUMENT = domGlobals.Node.DOCUMENT_NODE;\n    var DOCUMENT_TYPE = domGlobals.Node.DOCUMENT_TYPE_NODE;\n    var DOCUMENT_FRAGMENT = domGlobals.Node.DOCUMENT_FRAGMENT_NODE;\n    var ELEMENT = domGlobals.Node.ELEMENT_NODE;\n    var TEXT = domGlobals.Node.TEXT_NODE;\n    var PROCESSING_INSTRUCTION = domGlobals.Node.PROCESSING_INSTRUCTION_NODE;\n    var ENTITY_REFERENCE = domGlobals.Node.ENTITY_REFERENCE_NODE;\n    var ENTITY = domGlobals.Node.ENTITY_NODE;\n    var NOTATION = domGlobals.Node.NOTATION_NODE;\n\n    var Global = typeof domGlobals.window !== 'undefined' ? domGlobals.window : Function('return this;')();\n\n    var type = function (element) {\n      return element.dom().nodeType;\n    };\n    var value = function (element) {\n      return element.dom().nodeValue;\n    };\n    var isType$1 = function (t) {\n      return function (element) {\n        return type(element) === t;\n      };\n    };\n    var isText = isType$1(TEXT);\n\n    var charMap = {\n      '\\xA0': 'nbsp',\n      '\\xAD': 'shy'\n    };\n    var charMapToRegExp = function (charMap, global) {\n      var key, regExp = '';\n      for (key in charMap) {\n        regExp += key;\n      }\n      return new RegExp('[' + regExp + ']', global ? 'g' : '');\n    };\n    var charMapToSelector = function (charMap) {\n      var key, selector = '';\n      for (key in charMap) {\n        if (selector) {\n          selector += ',';\n        }\n        selector += 'span.mce-' + charMap[key];\n      }\n      return selector;\n    };\n    var Data = {\n      charMap: charMap,\n      regExp: charMapToRegExp(charMap),\n      regExpGlobal: charMapToRegExp(charMap, true),\n      selector: charMapToSelector(charMap),\n      charMapToRegExp: charMapToRegExp,\n      charMapToSelector: charMapToSelector\n    };\n\n    var wrapCharWithSpan = function (value) {\n      return '<span data-mce-bogus=\"1\" class=\"mce-' + Data.charMap[value] + '\">' + value + '</span>';\n    };\n    var Html = { wrapCharWithSpan: wrapCharWithSpan };\n\n    var isMatch = function (n) {\n      var value$1 = value(n);\n      return isText(n) && value$1 !== undefined && Data.regExp.test(value$1);\n    };\n    var filterDescendants = function (scope, predicate) {\n      var result = [];\n      var dom = scope.dom();\n      var children = map(dom.childNodes, Element.fromDom);\n      each(children, function (x) {\n        if (predicate(x)) {\n          result = result.concat([x]);\n        }\n        result = result.concat(filterDescendants(x, predicate));\n      });\n      return result;\n    };\n    var findParentElm = function (elm, rootElm) {\n      while (elm.parentNode) {\n        if (elm.parentNode === rootElm) {\n          return elm;\n        }\n        elm = elm.parentNode;\n      }\n    };\n    var replaceWithSpans = function (text) {\n      return text.replace(Data.regExpGlobal, Html.wrapCharWithSpan);\n    };\n    var Nodes = {\n      isMatch: isMatch,\n      filterDescendants: filterDescendants,\n      findParentElm: findParentElm,\n      replaceWithSpans: replaceWithSpans\n    };\n\n    var show = function (editor, rootElm) {\n      var node, div;\n      var nodeList = Nodes.filterDescendants(Element.fromDom(rootElm), Nodes.isMatch);\n      each(nodeList, function (n) {\n        var withSpans = Nodes.replaceWithSpans(editor.dom.encode(value(n)));\n        div = editor.dom.create('div', null, withSpans);\n        while (node = div.lastChild) {\n          editor.dom.insertAfter(node, n.dom());\n        }\n        editor.dom.remove(n.dom());\n      });\n    };\n    var hide = function (editor, body) {\n      var nodeList = editor.dom.select(Data.selector, body);\n      each(nodeList, function (node) {\n        editor.dom.remove(node, 1);\n      });\n    };\n    var toggle = function (editor) {\n      var body = editor.getBody();\n      var bookmark = editor.selection.getBookmark();\n      var parentNode = Nodes.findParentElm(editor.selection.getNode(), body);\n      parentNode = parentNode !== undefined ? parentNode : body;\n      hide(editor, parentNode);\n      show(editor, parentNode);\n      editor.selection.moveToBookmark(bookmark);\n    };\n    var VisualChars = {\n      show: show,\n      hide: hide,\n      toggle: toggle\n    };\n\n    var toggleVisualChars = function (editor, toggleState) {\n      var body = editor.getBody();\n      var selection = editor.selection;\n      var bookmark;\n      toggleState.set(!toggleState.get());\n      Events.fireVisualChars(editor, toggleState.get());\n      bookmark = selection.getBookmark();\n      if (toggleState.get() === true) {\n        VisualChars.show(editor, body);\n      } else {\n        VisualChars.hide(editor, body);\n      }\n      selection.moveToBookmark(bookmark);\n    };\n    var Actions = { toggleVisualChars: toggleVisualChars };\n\n    var register = function (editor, toggleState) {\n      editor.addCommand('mceVisualChars', function () {\n        Actions.toggleVisualChars(editor, toggleState);\n      });\n    };\n    var Commands = { register: register };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n    var setup = function (editor, toggleState) {\n      var debouncedToggle = global$1.debounce(function () {\n        VisualChars.toggle(editor);\n      }, 300);\n      if (editor.settings.forced_root_block !== false) {\n        editor.on('keydown', function (e) {\n          if (toggleState.get() === true) {\n            e.keyCode === 13 ? VisualChars.toggle(editor) : debouncedToggle();\n          }\n        });\n      }\n    };\n    var Keyboard = { setup: setup };\n\n    var isEnabledByDefault = function (editor) {\n      return editor.getParam('visualchars_default_state', false);\n    };\n    var Settings = { isEnabledByDefault: isEnabledByDefault };\n\n    var setup$1 = function (editor, toggleState) {\n      editor.on('init', function () {\n        var valueForToggling = !Settings.isEnabledByDefault(editor);\n        toggleState.set(valueForToggling);\n        Actions.toggleVisualChars(editor, toggleState);\n      });\n    };\n    var Bindings = { setup: setup$1 };\n\n    var toggleActiveState = function (editor) {\n      return function (e) {\n        var ctrl = e.control;\n        editor.on('VisualChars', function (e) {\n          ctrl.active(e.state);\n        });\n      };\n    };\n    var register$1 = function (editor) {\n      editor.addButton('visualchars', {\n        active: false,\n        title: 'Show invisible characters',\n        cmd: 'mceVisualChars',\n        onPostRender: toggleActiveState(editor)\n      });\n      editor.addMenuItem('visualchars', {\n        text: 'Show invisible characters',\n        cmd: 'mceVisualChars',\n        onPostRender: toggleActiveState(editor),\n        selectable: true,\n        context: 'view',\n        prependToContext: true\n      });\n    };\n\n    global.add('visualchars', function (editor) {\n      var toggleState = Cell(false);\n      Commands.register(editor, toggleState);\n      register$1(editor);\n      Keyboard.setup(editor, toggleState);\n      Bindings.setup(editor, toggleState);\n      return Api.get(toggleState);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}(window));\n})();\n\n\n/***/ }),\n\n/***/ \"ctVV\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// Exports the \"visualchars\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/visualchars')\n//   ES2015:\n//     import 'tinymce/plugins/visualchars'\n__webpack_require__(\"0qAb\");\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/2.d6d7ed82b950aa134d25.js","(function () {\nvar visualchars = (function (domGlobals) {\n    'use strict';\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      var clone = function () {\n        return Cell(get());\n      };\n      return {\n        get: get,\n        set: set,\n        clone: clone\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var get = function (toggleState) {\n      var isEnabled = function () {\n        return toggleState.get();\n      };\n      return { isEnabled: isEnabled };\n    };\n    var Api = { get: get };\n\n    var fireVisualChars = function (editor, state) {\n      return editor.fire('VisualChars', { state: state });\n    };\n    var Events = { fireVisualChars: fireVisualChars };\n\n    var noop = function () {\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var none = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var eq = function (o) {\n        return o.isNone();\n      };\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = function (n) {\n        return n;\n      };\n      var me = {\n        fold: function (n, s) {\n          return n();\n        },\n        is: never,\n        isSome: never,\n        isNone: always,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: constant(null),\n        getOrUndefined: constant(undefined),\n        or: id,\n        orThunk: call,\n        map: none,\n        each: noop,\n        bind: none,\n        exists: never,\n        forall: always,\n        filter: none,\n        equals: eq,\n        equals_: eq,\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      if (Object.freeze) {\n        Object.freeze(me);\n      }\n      return me;\n    }();\n    var some = function (a) {\n      var constant_a = constant(a);\n      var self = function () {\n        return me;\n      };\n      var bind = function (f) {\n        return f(a);\n      };\n      var me = {\n        fold: function (n, s) {\n          return s(a);\n        },\n        is: function (v) {\n          return a === v;\n        },\n        isSome: always,\n        isNone: never,\n        getOr: constant_a,\n        getOrThunk: constant_a,\n        getOrDie: constant_a,\n        getOrNull: constant_a,\n        getOrUndefined: constant_a,\n        or: self,\n        orThunk: self,\n        map: function (f) {\n          return some(f(a));\n        },\n        each: function (f) {\n          f(a);\n        },\n        bind: bind,\n        exists: bind,\n        forall: bind,\n        filter: function (f) {\n          return f(a) ? me : NONE;\n        },\n        toArray: function () {\n          return [a];\n        },\n        toString: function () {\n          return 'some(' + a + ')';\n        },\n        equals: function (o) {\n          return o.is(a);\n        },\n        equals_: function (o, elementEq) {\n          return o.fold(never, function (b) {\n            return elementEq(a, b);\n          });\n        }\n      };\n      return me;\n    };\n    var from = function (value) {\n      return value === null || value === undefined ? NONE : some(value);\n    };\n    var Option = {\n      some: some,\n      none: none,\n      from: from\n    };\n\n    var typeOf = function (x) {\n      if (x === null) {\n        return 'null';\n      }\n      var t = typeof x;\n      if (t === 'object' && (Array.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'Array')) {\n        return 'array';\n      }\n      if (t === 'object' && (String.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'String')) {\n        return 'string';\n      }\n      return t;\n    };\n    var isType = function (type) {\n      return function (value) {\n        return typeOf(value) === type;\n      };\n    };\n    var isFunction = isType('function');\n\n    var nativeSlice = Array.prototype.slice;\n    var map = function (xs, f) {\n      var len = xs.length;\n      var r = new Array(len);\n      for (var i = 0; i < len; i++) {\n        var x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    var each = function (xs, f) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        f(x, i);\n      }\n    };\n    var from$1 = isFunction(Array.from) ? Array.from : function (x) {\n      return nativeSlice.call(x);\n    };\n\n    var fromHtml = function (html, scope) {\n      var doc = scope || domGlobals.document;\n      var div = doc.createElement('div');\n      div.innerHTML = html;\n      if (!div.hasChildNodes() || div.childNodes.length > 1) {\n        domGlobals.console.error('HTML does not have a single root node', html);\n        throw new Error('HTML must have a single root node');\n      }\n      return fromDom(div.childNodes[0]);\n    };\n    var fromTag = function (tag, scope) {\n      var doc = scope || domGlobals.document;\n      var node = doc.createElement(tag);\n      return fromDom(node);\n    };\n    var fromText = function (text, scope) {\n      var doc = scope || domGlobals.document;\n      var node = doc.createTextNode(text);\n      return fromDom(node);\n    };\n    var fromDom = function (node) {\n      if (node === null || node === undefined) {\n        throw new Error('Node cannot be null or undefined');\n      }\n      return { dom: constant(node) };\n    };\n    var fromPoint = function (docElm, x, y) {\n      var doc = docElm.dom();\n      return Option.from(doc.elementFromPoint(x, y)).map(fromDom);\n    };\n    var Element = {\n      fromHtml: fromHtml,\n      fromTag: fromTag,\n      fromText: fromText,\n      fromDom: fromDom,\n      fromPoint: fromPoint\n    };\n\n    var ATTRIBUTE = domGlobals.Node.ATTRIBUTE_NODE;\n    var CDATA_SECTION = domGlobals.Node.CDATA_SECTION_NODE;\n    var COMMENT = domGlobals.Node.COMMENT_NODE;\n    var DOCUMENT = domGlobals.Node.DOCUMENT_NODE;\n    var DOCUMENT_TYPE = domGlobals.Node.DOCUMENT_TYPE_NODE;\n    var DOCUMENT_FRAGMENT = domGlobals.Node.DOCUMENT_FRAGMENT_NODE;\n    var ELEMENT = domGlobals.Node.ELEMENT_NODE;\n    var TEXT = domGlobals.Node.TEXT_NODE;\n    var PROCESSING_INSTRUCTION = domGlobals.Node.PROCESSING_INSTRUCTION_NODE;\n    var ENTITY_REFERENCE = domGlobals.Node.ENTITY_REFERENCE_NODE;\n    var ENTITY = domGlobals.Node.ENTITY_NODE;\n    var NOTATION = domGlobals.Node.NOTATION_NODE;\n\n    var Global = typeof domGlobals.window !== 'undefined' ? domGlobals.window : Function('return this;')();\n\n    var type = function (element) {\n      return element.dom().nodeType;\n    };\n    var value = function (element) {\n      return element.dom().nodeValue;\n    };\n    var isType$1 = function (t) {\n      return function (element) {\n        return type(element) === t;\n      };\n    };\n    var isText = isType$1(TEXT);\n\n    var charMap = {\n      '\\xA0': 'nbsp',\n      '\\xAD': 'shy'\n    };\n    var charMapToRegExp = function (charMap, global) {\n      var key, regExp = '';\n      for (key in charMap) {\n        regExp += key;\n      }\n      return new RegExp('[' + regExp + ']', global ? 'g' : '');\n    };\n    var charMapToSelector = function (charMap) {\n      var key, selector = '';\n      for (key in charMap) {\n        if (selector) {\n          selector += ',';\n        }\n        selector += 'span.mce-' + charMap[key];\n      }\n      return selector;\n    };\n    var Data = {\n      charMap: charMap,\n      regExp: charMapToRegExp(charMap),\n      regExpGlobal: charMapToRegExp(charMap, true),\n      selector: charMapToSelector(charMap),\n      charMapToRegExp: charMapToRegExp,\n      charMapToSelector: charMapToSelector\n    };\n\n    var wrapCharWithSpan = function (value) {\n      return '<span data-mce-bogus=\"1\" class=\"mce-' + Data.charMap[value] + '\">' + value + '</span>';\n    };\n    var Html = { wrapCharWithSpan: wrapCharWithSpan };\n\n    var isMatch = function (n) {\n      var value$1 = value(n);\n      return isText(n) && value$1 !== undefined && Data.regExp.test(value$1);\n    };\n    var filterDescendants = function (scope, predicate) {\n      var result = [];\n      var dom = scope.dom();\n      var children = map(dom.childNodes, Element.fromDom);\n      each(children, function (x) {\n        if (predicate(x)) {\n          result = result.concat([x]);\n        }\n        result = result.concat(filterDescendants(x, predicate));\n      });\n      return result;\n    };\n    var findParentElm = function (elm, rootElm) {\n      while (elm.parentNode) {\n        if (elm.parentNode === rootElm) {\n          return elm;\n        }\n        elm = elm.parentNode;\n      }\n    };\n    var replaceWithSpans = function (text) {\n      return text.replace(Data.regExpGlobal, Html.wrapCharWithSpan);\n    };\n    var Nodes = {\n      isMatch: isMatch,\n      filterDescendants: filterDescendants,\n      findParentElm: findParentElm,\n      replaceWithSpans: replaceWithSpans\n    };\n\n    var show = function (editor, rootElm) {\n      var node, div;\n      var nodeList = Nodes.filterDescendants(Element.fromDom(rootElm), Nodes.isMatch);\n      each(nodeList, function (n) {\n        var withSpans = Nodes.replaceWithSpans(editor.dom.encode(value(n)));\n        div = editor.dom.create('div', null, withSpans);\n        while (node = div.lastChild) {\n          editor.dom.insertAfter(node, n.dom());\n        }\n        editor.dom.remove(n.dom());\n      });\n    };\n    var hide = function (editor, body) {\n      var nodeList = editor.dom.select(Data.selector, body);\n      each(nodeList, function (node) {\n        editor.dom.remove(node, 1);\n      });\n    };\n    var toggle = function (editor) {\n      var body = editor.getBody();\n      var bookmark = editor.selection.getBookmark();\n      var parentNode = Nodes.findParentElm(editor.selection.getNode(), body);\n      parentNode = parentNode !== undefined ? parentNode : body;\n      hide(editor, parentNode);\n      show(editor, parentNode);\n      editor.selection.moveToBookmark(bookmark);\n    };\n    var VisualChars = {\n      show: show,\n      hide: hide,\n      toggle: toggle\n    };\n\n    var toggleVisualChars = function (editor, toggleState) {\n      var body = editor.getBody();\n      var selection = editor.selection;\n      var bookmark;\n      toggleState.set(!toggleState.get());\n      Events.fireVisualChars(editor, toggleState.get());\n      bookmark = selection.getBookmark();\n      if (toggleState.get() === true) {\n        VisualChars.show(editor, body);\n      } else {\n        VisualChars.hide(editor, body);\n      }\n      selection.moveToBookmark(bookmark);\n    };\n    var Actions = { toggleVisualChars: toggleVisualChars };\n\n    var register = function (editor, toggleState) {\n      editor.addCommand('mceVisualChars', function () {\n        Actions.toggleVisualChars(editor, toggleState);\n      });\n    };\n    var Commands = { register: register };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n    var setup = function (editor, toggleState) {\n      var debouncedToggle = global$1.debounce(function () {\n        VisualChars.toggle(editor);\n      }, 300);\n      if (editor.settings.forced_root_block !== false) {\n        editor.on('keydown', function (e) {\n          if (toggleState.get() === true) {\n            e.keyCode === 13 ? VisualChars.toggle(editor) : debouncedToggle();\n          }\n        });\n      }\n    };\n    var Keyboard = { setup: setup };\n\n    var isEnabledByDefault = function (editor) {\n      return editor.getParam('visualchars_default_state', false);\n    };\n    var Settings = { isEnabledByDefault: isEnabledByDefault };\n\n    var setup$1 = function (editor, toggleState) {\n      editor.on('init', function () {\n        var valueForToggling = !Settings.isEnabledByDefault(editor);\n        toggleState.set(valueForToggling);\n        Actions.toggleVisualChars(editor, toggleState);\n      });\n    };\n    var Bindings = { setup: setup$1 };\n\n    var toggleActiveState = function (editor) {\n      return function (e) {\n        var ctrl = e.control;\n        editor.on('VisualChars', function (e) {\n          ctrl.active(e.state);\n        });\n      };\n    };\n    var register$1 = function (editor) {\n      editor.addButton('visualchars', {\n        active: false,\n        title: 'Show invisible characters',\n        cmd: 'mceVisualChars',\n        onPostRender: toggleActiveState(editor)\n      });\n      editor.addMenuItem('visualchars', {\n        text: 'Show invisible characters',\n        cmd: 'mceVisualChars',\n        onPostRender: toggleActiveState(editor),\n        selectable: true,\n        context: 'view',\n        prependToContext: true\n      });\n    };\n\n    global.add('visualchars', function (editor) {\n      var toggleState = Cell(false);\n      Commands.register(editor, toggleState);\n      register$1(editor);\n      Keyboard.setup(editor, toggleState);\n      Bindings.setup(editor, toggleState);\n      return Api.get(toggleState);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}(window));\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tinymce/plugins/visualchars/plugin.js\n// module id = 0qAb\n// module chunks = 2","// Exports the \"visualchars\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/visualchars')\n//   ES2015:\n//     import 'tinymce/plugins/visualchars'\nrequire('./plugin.js');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tinymce/plugins/visualchars/index.js\n// module id = ctVV\n// module chunks = 2"],"sourceRoot":""}